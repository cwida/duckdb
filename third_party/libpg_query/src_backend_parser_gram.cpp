/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DEALLOCATE = 363,
     DEC = 364,
     DECIMAL_P = 365,
     DECLARE = 366,
     DEFAULT = 367,
     DEFAULTS = 368,
     DEFERRABLE = 369,
     DEFERRED = 370,
     DEFINER = 371,
     DELETE_P = 372,
     DELIMITER = 373,
     DELIMITERS = 374,
     DEPENDS = 375,
     DESC_P = 376,
     DESCRIBE = 377,
     DETACH = 378,
     DICTIONARY = 379,
     DISABLE_P = 380,
     DISCARD = 381,
     DISTINCT = 382,
     DO = 383,
     DOCUMENT_P = 384,
     DOMAIN_P = 385,
     DOUBLE_P = 386,
     DROP = 387,
     EACH = 388,
     ELSE = 389,
     ENABLE_P = 390,
     ENCODING = 391,
     ENCRYPTED = 392,
     END_P = 393,
     ENUM_P = 394,
     ESCAPE = 395,
     EVENT = 396,
     EXCEPT = 397,
     EXCLUDE = 398,
     EXCLUDING = 399,
     EXCLUSIVE = 400,
     EXECUTE = 401,
     EXISTS = 402,
     EXPLAIN = 403,
     EXPORT_P = 404,
     EXTENSION = 405,
     EXTERNAL = 406,
     EXTRACT = 407,
     FALSE_P = 408,
     FAMILY = 409,
     FETCH = 410,
     FILTER = 411,
     FIRST_P = 412,
     FLOAT_P = 413,
     FOLLOWING = 414,
     FOR = 415,
     FORCE = 416,
     FOREIGN = 417,
     FORWARD = 418,
     FREEZE = 419,
     FROM = 420,
     FULL = 421,
     FUNCTION = 422,
     FUNCTIONS = 423,
     GENERATED = 424,
     GLOB = 425,
     GLOBAL = 426,
     GRANT = 427,
     GRANTED = 428,
     GROUP_P = 429,
     GROUPING = 430,
     HANDLER = 431,
     HAVING = 432,
     HEADER_P = 433,
     HOLD = 434,
     HOUR_P = 435,
     IDENTITY_P = 436,
     IF_P = 437,
     ILIKE = 438,
     IMMEDIATE = 439,
     IMMUTABLE = 440,
     IMPLICIT_P = 441,
     IMPORT_P = 442,
     IN_P = 443,
     INCLUDING = 444,
     INCREMENT = 445,
     INDEX = 446,
     INDEXES = 447,
     INHERIT = 448,
     INHERITS = 449,
     INITIALLY = 450,
     INLINE_P = 451,
     INNER_P = 452,
     INOUT = 453,
     INPUT_P = 454,
     INSENSITIVE = 455,
     INSERT = 456,
     INSTEAD = 457,
     INT_P = 458,
     INTEGER = 459,
     INTERSECT = 460,
     INTERVAL = 461,
     INTO = 462,
     INVOKER = 463,
     IS = 464,
     ISNULL = 465,
     ISOLATION = 466,
     JOIN = 467,
     KEY = 468,
     LABEL = 469,
     LANGUAGE = 470,
     LARGE_P = 471,
     LAST_P = 472,
     LATERAL_P = 473,
     LEADING = 474,
     LEAKPROOF = 475,
     LEFT = 476,
     LEVEL = 477,
     LIKE = 478,
     LIMIT = 479,
     LISTEN = 480,
     LOAD = 481,
     LOCAL = 482,
     LOCALTIME = 483,
     LOCALTIMESTAMP = 484,
     LOCATION = 485,
     LOCK_P = 486,
     LOCKED = 487,
     LOGGED = 488,
     MAPPING = 489,
     MATCH = 490,
     MATERIALIZED = 491,
     MAXVALUE = 492,
     METHOD = 493,
     MINUTE_P = 494,
     MINVALUE = 495,
     MODE = 496,
     MONTH_P = 497,
     MOVE = 498,
     NAME_P = 499,
     NAMES = 500,
     NATIONAL = 501,
     NATURAL = 502,
     NCHAR = 503,
     NEW = 504,
     NEXT = 505,
     NO = 506,
     NONE = 507,
     NOT = 508,
     NOTHING = 509,
     NOTIFY = 510,
     NOTNULL = 511,
     NOWAIT = 512,
     NULL_P = 513,
     NULLIF = 514,
     NULLS_P = 515,
     NUMERIC = 516,
     OBJECT_P = 517,
     OF = 518,
     OFF = 519,
     OFFSET = 520,
     OIDS = 521,
     OLD = 522,
     ON = 523,
     ONLY = 524,
     OPERATOR = 525,
     OPTION = 526,
     OPTIONS = 527,
     OR = 528,
     ORDER = 529,
     ORDINALITY = 530,
     OUT_P = 531,
     OUTER_P = 532,
     OVER = 533,
     OVERLAPS = 534,
     OVERLAY = 535,
     OVERRIDING = 536,
     OWNED = 537,
     OWNER = 538,
     PARALLEL = 539,
     PARSER = 540,
     PARTIAL = 541,
     PARTITION = 542,
     PASSING = 543,
     PASSWORD = 544,
     PLACING = 545,
     PLANS = 546,
     POLICY = 547,
     POSITION = 548,
     PRAGMA_P = 549,
     PRECEDING = 550,
     PRECISION = 551,
     PREPARE = 552,
     PREPARED = 553,
     PRESERVE = 554,
     PRIMARY = 555,
     PRIOR = 556,
     PRIVILEGES = 557,
     PROCEDURAL = 558,
     PROCEDURE = 559,
     PROGRAM = 560,
     PUBLICATION = 561,
     QUOTE = 562,
     RANGE = 563,
     READ_P = 564,
     REAL = 565,
     REASSIGN = 566,
     RECHECK = 567,
     RECURSIVE = 568,
     REF = 569,
     REFERENCES = 570,
     REFERENCING = 571,
     REFRESH = 572,
     REINDEX = 573,
     RELATIVE_P = 574,
     RELEASE = 575,
     RENAME = 576,
     REPEATABLE = 577,
     REPLACE = 578,
     REPLICA = 579,
     RESET = 580,
     RESTART = 581,
     RESTRICT = 582,
     RETURNING = 583,
     RETURNS = 584,
     REVOKE = 585,
     RIGHT = 586,
     ROLE = 587,
     ROLLBACK = 588,
     ROLLUP = 589,
     ROW = 590,
     ROWS = 591,
     RULE = 592,
     SAVEPOINT = 593,
     SCHEMA = 594,
     SCHEMAS = 595,
     SCROLL = 596,
     SEARCH = 597,
     SECOND_P = 598,
     SECURITY = 599,
     SELECT = 600,
     SEQUENCE = 601,
     SEQUENCES = 602,
     SERIALIZABLE = 603,
     SERVER = 604,
     SESSION = 605,
     SESSION_USER = 606,
     SET = 607,
     SETOF = 608,
     SETS = 609,
     SHARE = 610,
     SHOW = 611,
     SIMILAR = 612,
     SIMPLE = 613,
     SKIP = 614,
     SMALLINT = 615,
     SNAPSHOT = 616,
     SOME = 617,
     SQL_P = 618,
     STABLE = 619,
     STANDALONE_P = 620,
     START = 621,
     STATEMENT = 622,
     STATISTICS = 623,
     STDIN = 624,
     STDOUT = 625,
     STORAGE = 626,
     STRICT_P = 627,
     STRIP_P = 628,
     SUBSCRIPTION = 629,
     SUBSTRING = 630,
     SYMMETRIC = 631,
     SYSID = 632,
     SYSTEM_P = 633,
     TABLE = 634,
     TABLES = 635,
     TABLESAMPLE = 636,
     TABLESPACE = 637,
     TEMP = 638,
     TEMPLATE = 639,
     TEMPORARY = 640,
     TEXT_P = 641,
     THEN = 642,
     TIME = 643,
     TIMESTAMP = 644,
     TO = 645,
     TRAILING = 646,
     TRANSACTION = 647,
     TRANSFORM = 648,
     TREAT = 649,
     TRIGGER = 650,
     TRIM = 651,
     TRUE_P = 652,
     TRUNCATE = 653,
     TRUSTED = 654,
     TYPE_P = 655,
     TYPES_P = 656,
     UNBOUNDED = 657,
     UNCOMMITTED = 658,
     UNENCRYPTED = 659,
     UNION = 660,
     UNIQUE = 661,
     UNKNOWN = 662,
     UNLISTEN = 663,
     UNLOGGED = 664,
     UNTIL = 665,
     UPDATE = 666,
     USER = 667,
     USING = 668,
     VACUUM = 669,
     VALID = 670,
     VALIDATE = 671,
     VALIDATOR = 672,
     VALUE_P = 673,
     VALUES = 674,
     VARCHAR = 675,
     VARIADIC = 676,
     VARYING = 677,
     VERBOSE = 678,
     VERSION_P = 679,
     VIEW = 680,
     VIEWS = 681,
     VOLATILE = 682,
     WHEN = 683,
     WHERE = 684,
     WHITESPACE_P = 685,
     WINDOW = 686,
     WITH = 687,
     WITHIN = 688,
     WITHOUT = 689,
     WORK = 690,
     WRAPPER = 691,
     WRITE_P = 692,
     XML_P = 693,
     XMLATTRIBUTES = 694,
     XMLCONCAT = 695,
     XMLELEMENT = 696,
     XMLEXISTS = 697,
     XMLFOREST = 698,
     XMLNAMESPACES = 699,
     XMLPARSE = 700,
     XMLPI = 701,
     XMLROOT = 702,
     XMLSERIALIZE = 703,
     XMLTABLE = 704,
     YEAR_P = 705,
     YES_P = 706,
     ZONE = 707,
     NOT_LA = 708,
     NULLS_LA = 709,
     WITH_LA = 710,
     POSTFIXOP = 711,
     UMINUS = 712
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DEALLOCATE 363
#define DEC 364
#define DECIMAL_P 365
#define DECLARE 366
#define DEFAULT 367
#define DEFAULTS 368
#define DEFERRABLE 369
#define DEFERRED 370
#define DEFINER 371
#define DELETE_P 372
#define DELIMITER 373
#define DELIMITERS 374
#define DEPENDS 375
#define DESC_P 376
#define DESCRIBE 377
#define DETACH 378
#define DICTIONARY 379
#define DISABLE_P 380
#define DISCARD 381
#define DISTINCT 382
#define DO 383
#define DOCUMENT_P 384
#define DOMAIN_P 385
#define DOUBLE_P 386
#define DROP 387
#define EACH 388
#define ELSE 389
#define ENABLE_P 390
#define ENCODING 391
#define ENCRYPTED 392
#define END_P 393
#define ENUM_P 394
#define ESCAPE 395
#define EVENT 396
#define EXCEPT 397
#define EXCLUDE 398
#define EXCLUDING 399
#define EXCLUSIVE 400
#define EXECUTE 401
#define EXISTS 402
#define EXPLAIN 403
#define EXPORT_P 404
#define EXTENSION 405
#define EXTERNAL 406
#define EXTRACT 407
#define FALSE_P 408
#define FAMILY 409
#define FETCH 410
#define FILTER 411
#define FIRST_P 412
#define FLOAT_P 413
#define FOLLOWING 414
#define FOR 415
#define FORCE 416
#define FOREIGN 417
#define FORWARD 418
#define FREEZE 419
#define FROM 420
#define FULL 421
#define FUNCTION 422
#define FUNCTIONS 423
#define GENERATED 424
#define GLOB 425
#define GLOBAL 426
#define GRANT 427
#define GRANTED 428
#define GROUP_P 429
#define GROUPING 430
#define HANDLER 431
#define HAVING 432
#define HEADER_P 433
#define HOLD 434
#define HOUR_P 435
#define IDENTITY_P 436
#define IF_P 437
#define ILIKE 438
#define IMMEDIATE 439
#define IMMUTABLE 440
#define IMPLICIT_P 441
#define IMPORT_P 442
#define IN_P 443
#define INCLUDING 444
#define INCREMENT 445
#define INDEX 446
#define INDEXES 447
#define INHERIT 448
#define INHERITS 449
#define INITIALLY 450
#define INLINE_P 451
#define INNER_P 452
#define INOUT 453
#define INPUT_P 454
#define INSENSITIVE 455
#define INSERT 456
#define INSTEAD 457
#define INT_P 458
#define INTEGER 459
#define INTERSECT 460
#define INTERVAL 461
#define INTO 462
#define INVOKER 463
#define IS 464
#define ISNULL 465
#define ISOLATION 466
#define JOIN 467
#define KEY 468
#define LABEL 469
#define LANGUAGE 470
#define LARGE_P 471
#define LAST_P 472
#define LATERAL_P 473
#define LEADING 474
#define LEAKPROOF 475
#define LEFT 476
#define LEVEL 477
#define LIKE 478
#define LIMIT 479
#define LISTEN 480
#define LOAD 481
#define LOCAL 482
#define LOCALTIME 483
#define LOCALTIMESTAMP 484
#define LOCATION 485
#define LOCK_P 486
#define LOCKED 487
#define LOGGED 488
#define MAPPING 489
#define MATCH 490
#define MATERIALIZED 491
#define MAXVALUE 492
#define METHOD 493
#define MINUTE_P 494
#define MINVALUE 495
#define MODE 496
#define MONTH_P 497
#define MOVE 498
#define NAME_P 499
#define NAMES 500
#define NATIONAL 501
#define NATURAL 502
#define NCHAR 503
#define NEW 504
#define NEXT 505
#define NO 506
#define NONE 507
#define NOT 508
#define NOTHING 509
#define NOTIFY 510
#define NOTNULL 511
#define NOWAIT 512
#define NULL_P 513
#define NULLIF 514
#define NULLS_P 515
#define NUMERIC 516
#define OBJECT_P 517
#define OF 518
#define OFF 519
#define OFFSET 520
#define OIDS 521
#define OLD 522
#define ON 523
#define ONLY 524
#define OPERATOR 525
#define OPTION 526
#define OPTIONS 527
#define OR 528
#define ORDER 529
#define ORDINALITY 530
#define OUT_P 531
#define OUTER_P 532
#define OVER 533
#define OVERLAPS 534
#define OVERLAY 535
#define OVERRIDING 536
#define OWNED 537
#define OWNER 538
#define PARALLEL 539
#define PARSER 540
#define PARTIAL 541
#define PARTITION 542
#define PASSING 543
#define PASSWORD 544
#define PLACING 545
#define PLANS 546
#define POLICY 547
#define POSITION 548
#define PRAGMA_P 549
#define PRECEDING 550
#define PRECISION 551
#define PREPARE 552
#define PREPARED 553
#define PRESERVE 554
#define PRIMARY 555
#define PRIOR 556
#define PRIVILEGES 557
#define PROCEDURAL 558
#define PROCEDURE 559
#define PROGRAM 560
#define PUBLICATION 561
#define QUOTE 562
#define RANGE 563
#define READ_P 564
#define REAL 565
#define REASSIGN 566
#define RECHECK 567
#define RECURSIVE 568
#define REF 569
#define REFERENCES 570
#define REFERENCING 571
#define REFRESH 572
#define REINDEX 573
#define RELATIVE_P 574
#define RELEASE 575
#define RENAME 576
#define REPEATABLE 577
#define REPLACE 578
#define REPLICA 579
#define RESET 580
#define RESTART 581
#define RESTRICT 582
#define RETURNING 583
#define RETURNS 584
#define REVOKE 585
#define RIGHT 586
#define ROLE 587
#define ROLLBACK 588
#define ROLLUP 589
#define ROW 590
#define ROWS 591
#define RULE 592
#define SAVEPOINT 593
#define SCHEMA 594
#define SCHEMAS 595
#define SCROLL 596
#define SEARCH 597
#define SECOND_P 598
#define SECURITY 599
#define SELECT 600
#define SEQUENCE 601
#define SEQUENCES 602
#define SERIALIZABLE 603
#define SERVER 604
#define SESSION 605
#define SESSION_USER 606
#define SET 607
#define SETOF 608
#define SETS 609
#define SHARE 610
#define SHOW 611
#define SIMILAR 612
#define SIMPLE 613
#define SKIP 614
#define SMALLINT 615
#define SNAPSHOT 616
#define SOME 617
#define SQL_P 618
#define STABLE 619
#define STANDALONE_P 620
#define START 621
#define STATEMENT 622
#define STATISTICS 623
#define STDIN 624
#define STDOUT 625
#define STORAGE 626
#define STRICT_P 627
#define STRIP_P 628
#define SUBSCRIPTION 629
#define SUBSTRING 630
#define SYMMETRIC 631
#define SYSID 632
#define SYSTEM_P 633
#define TABLE 634
#define TABLES 635
#define TABLESAMPLE 636
#define TABLESPACE 637
#define TEMP 638
#define TEMPLATE 639
#define TEMPORARY 640
#define TEXT_P 641
#define THEN 642
#define TIME 643
#define TIMESTAMP 644
#define TO 645
#define TRAILING 646
#define TRANSACTION 647
#define TRANSFORM 648
#define TREAT 649
#define TRIGGER 650
#define TRIM 651
#define TRUE_P 652
#define TRUNCATE 653
#define TRUSTED 654
#define TYPE_P 655
#define TYPES_P 656
#define UNBOUNDED 657
#define UNCOMMITTED 658
#define UNENCRYPTED 659
#define UNION 660
#define UNIQUE 661
#define UNKNOWN 662
#define UNLISTEN 663
#define UNLOGGED 664
#define UNTIL 665
#define UPDATE 666
#define USER 667
#define USING 668
#define VACUUM 669
#define VALID 670
#define VALIDATE 671
#define VALIDATOR 672
#define VALUE_P 673
#define VALUES 674
#define VARCHAR 675
#define VARIADIC 676
#define VARYING 677
#define VERBOSE 678
#define VERSION_P 679
#define VIEW 680
#define VIEWS 681
#define VOLATILE 682
#define WHEN 683
#define WHERE 684
#define WHITESPACE_P 685
#define WINDOW 686
#define WITH 687
#define WITHIN 688
#define WITHOUT 689
#define WORK 690
#define WRAPPER 691
#define WRITE_P 692
#define XML_P 693
#define XMLATTRIBUTES 694
#define XMLCONCAT 695
#define XMLELEMENT 696
#define XMLEXISTS 697
#define XMLFOREST 698
#define XMLNAMESPACES 699
#define XMLPARSE 700
#define XMLPI 701
#define XMLROOT 702
#define XMLSERIALIZE 703
#define XMLTABLE 704
#define YEAR_P 705
#define YES_P 706
#define ZONE 707
#define NOT_LA 708
#define NULLS_LA 709
#define WITH_LA 710
#define POSTFIXOP 711
#define UMINUS 712




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1222 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1247 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  550
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   45577

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  476
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  343
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1563
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2608

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   712

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   464,     2,     2,
     469,   470,   462,   460,   473,   461,   471,   463,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   475,   472,
     456,   458,   457,   474,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   467,     2,   468,   465,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   459,   466
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    76,    81,
      88,    93,   100,   105,   112,   117,   124,   126,   129,   133,
     136,   138,   142,   145,   149,   151,   155,   158,   164,   168,
     175,   180,   187,   194,   201,   207,   213,   220,   230,   235,
     241,   249,   256,   261,   270,   275,   278,   283,   287,   294,
     299,   302,   305,   308,   311,   313,   316,   317,   319,   322,
     325,   328,   330,   334,   339,   342,   343,   346,   350,   353,
     357,   364,   371,   380,   387,   396,   403,   412,   419,   428,
     437,   448,   457,   468,   470,   471,   479,   481,   486,   491,
     499,   502,   504,   508,   513,   517,   518,   520,   521,   524,
     528,   534,   543,   549,   550,   556,   562,   570,   573,   574,
     576,   578,   580,   584,   587,   588,   590,   591,   593,   597,
     599,   603,   605,   609,   612,   615,   620,   626,   632,   641,
     643,   644,   648,   658,   671,   675,   676,   681,   688,   690,
     693,   695,   697,   698,   700,   703,   706,   708,   711,   714,
     716,   719,   723,   726,   729,   732,   735,   739,   743,   747,
     749,   753,   755,   756,   758,   761,   764,   767,   770,   773,
     776,   779,   782,   784,   786,   787,   797,   810,   811,   814,
     816,   818,   820,   822,   824,   826,   830,   831,   833,   836,
     838,   840,   843,   846,   850,   852,   854,   857,   860,   862,
     865,   869,   875,   878,   884,   890,   893,   897,   899,   901,
     904,   907,   908,   913,   914,   918,   923,   928,   929,   933,
     936,   937,   941,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   965,   969,   971,   974,   977,   980,   983,
     986,   989,   990,   994,   998,  1002,  1003,  1005,  1008,  1010,
    1013,  1016,  1019,  1022,  1027,  1029,  1033,  1035,  1039,  1041,
    1043,  1045,  1047,  1051,  1053,  1056,  1057,  1059,  1060,  1062,
    1066,  1067,  1070,  1071,  1075,  1079,  1081,  1087,  1091,  1093,
    1097,  1099,  1104,  1110,  1116,  1123,  1127,  1135,  1140,  1152,
    1154,  1158,  1161,  1164,  1167,  1168,  1172,  1174,  1176,  1179,
    1182,  1185,  1188,  1190,  1191,  1193,  1196,  1203,  1208,  1215,
    1220,  1227,  1236,  1238,  1240,  1242,  1245,  1247,  1250,  1252,
    1254,  1256,  1260,  1264,  1268,  1272,  1275,  1278,  1280,  1284,
    1286,  1288,  1290,  1292,  1296,  1298,  1300,  1301,  1303,  1305,
    1307,  1316,  1328,  1338,  1340,  1342,  1346,  1347,  1349,  1353,
    1355,  1356,  1358,  1359,  1361,  1362,  1364,  1368,  1370,  1372,
    1374,  1378,  1379,  1382,  1385,  1386,  1389,  1390,  1392,  1393,
    1395,  1397,  1399,  1403,  1407,  1409,  1411,  1415,  1419,  1423,
    1427,  1432,  1436,  1439,  1441,  1443,  1445,  1447,  1449,  1453,
    1455,  1457,  1461,  1465,  1467,  1470,  1475,  1480,  1483,  1487,
    1493,  1499,  1501,  1503,  1513,  1523,  1525,  1528,  1533,  1538,
    1543,  1546,  1549,  1553,  1555,  1559,  1566,  1569,  1570,  1574,
    1578,  1583,  1588,  1593,  1598,  1602,  1605,  1607,  1609,  1610,
    1612,  1614,  1615,  1617,  1623,  1625,  1626,  1628,  1629,  1633,
    1635,  1639,  1644,  1648,  1650,  1652,  1653,  1656,  1659,  1660,
    1663,  1666,  1668,  1670,  1672,  1673,  1676,  1681,  1687,  1692,
    1695,  1699,  1701,  1703,  1705,  1707,  1710,  1713,  1715,  1717,
    1719,  1721,  1723,  1725,  1729,  1730,  1732,  1736,  1738,  1740,
    1743,  1746,  1747,  1749,  1753,  1755,  1756,  1758,  1761,  1765,
    1768,  1773,  1776,  1780,  1783,  1784,  1786,  1789,  1790,  1795,
    1801,  1804,  1805,  1807,  1811,  1814,  1818,  1821,  1825,  1828,
    1832,  1834,  1839,  1843,  1848,  1854,  1859,  1865,  1870,  1876,
    1879,  1884,  1886,  1888,  1889,  1891,  1896,  1902,  1907,  1908,
    1911,  1914,  1917,  1919,  1921,  1922,  1927,  1930,  1932,  1935,
    1938,  1943,  1950,  1955,  1956,  1959,  1966,  1969,  1971,  1975,
    1980,  1981,  1984,  1985,  1988,  1989,  1991,  1995,  1999,  2002,
    2003,  2006,  2010,  2016,  2023,  2026,  2030,  2034,  2039,  2040,
    2042,  2044,  2046,  2048,  2050,  2053,  2058,  2060,  2062,  2064,
    2066,  2069,  2073,  2077,  2078,  2080,  2082,  2084,  2086,  2088,
    2091,  2094,  2097,  2100,  2103,  2105,  2109,  2110,  2112,  2114,
    2116,  2118,  2124,  2127,  2129,  2131,  2133,  2135,  2140,  2142,
    2145,  2148,  2150,  2154,  2158,  2161,  2163,  2164,  2170,  2173,
    2179,  2182,  2184,  2188,  2192,  2193,  2195,  2197,  2199,  2201,
    2203,  2205,  2209,  2213,  2217,  2221,  2225,  2229,  2233,  2234,
    2236,  2241,  2243,  2247,  2251,  2257,  2260,  2263,  2267,  2271,
    2275,  2279,  2283,  2287,  2291,  2295,  2299,  2303,  2307,  2311,
    2315,  2318,  2321,  2325,  2329,  2332,  2335,  2339,  2343,  2349,
    2354,  2361,  2365,  2371,  2376,  2383,  2388,  2395,  2401,  2409,
    2413,  2416,  2421,  2425,  2428,  2432,  2436,  2441,  2445,  2450,
    2454,  2459,  2465,  2472,  2479,  2487,  2494,  2502,  2509,  2517,
    2521,  2526,  2531,  2538,  2540,  2542,  2546,  2549,  2552,  2556,
    2560,  2564,  2568,  2572,  2576,  2580,  2584,  2588,  2592,  2596,
    2600,  2604,  2607,  2610,  2616,  2623,  2630,  2638,  2640,  2642,
    2645,  2648,  2653,  2655,  2657,  2659,  2662,  2665,  2669,  2675,
    2682,  2691,  2698,  2705,  2710,  2715,  2717,  2719,  2721,  2727,
    2729,  2731,  2736,  2738,  2743,  2745,  2750,  2752,  2757,  2759,
    2761,  2763,  2765,  2767,  2769,  2776,  2781,  2786,  2791,  2796,
    2803,  2809,  2815,  2821,  2826,  2833,  2838,  2844,  2845,  2851,
    2852,  2855,  2856,  2858,  2862,  2866,  2869,  2872,  2873,  2880,
    2882,  2883,  2887,  2888,  2891,  2894,  2895,  2897,  2902,  2905,
    2908,  2911,  2914,  2917,  2922,  2926,  2932,  2934,  2936,  2938,
    2940,  2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,  2958,
    2960,  2962,  2964,  2966,  2968,  2973,  2975,  2980,  2982,  2987,
    2989,  2992,  2994,  2997,  2999,  3002,  3004,  3008,  3010,  3014,
    3016,  3020,  3022,  3026,  3030,  3032,  3036,  3040,  3041,  3043,
    3045,  3047,  3049,  3051,  3053,  3055,  3057,  3062,  3066,  3069,
    3073,  3074,  3078,  3082,  3085,  3088,  3090,  3091,  3094,  3097,
    3101,  3104,  3106,  3108,  3112,  3118,  3120,  3123,  3128,  3131,
    3132,  3134,  3135,  3137,  3140,  3143,  3146,  3150,  3156,  3158,
    3159,  3161,  3164,  3165,  3168,  3170,  3171,  3173,  3174,  3176,
    3180,  3184,  3187,  3189,  3191,  3193,  3197,  3199,  3202,  3204,
    3208,  3210,  3212,  3214,  3217,  3219,  3221,  3223,  3225,  3227,
    3230,  3237,  3240,  3244,  3250,  3257,  3259,  3261,  3263,  3265,
    3267,  3269,  3271,  3273,  3275,  3277,  3279,  3281,  3283,  3285,
    3288,  3291,  3295,  3299,  3300,  3302,  3304,  3306,  3308,  3310,
    3312,  3314,  3316,  3322,  3326,  3327,  3329,  3331,  3333,  3335,
    3340,  3348,  3351,  3352,  3354,  3356,  3358,  3360,  3374,  3391,
    3393,  3396,  3397,  3399,  3400,  3402,  3403,  3406,  3407,  3409,
    3410,  3417,  3426,  3433,  3442,  3449,  3458,  3460,  3465,  3469,
    3472,  3477,  3481,  3487,  3489,  3490,  3492,  3494,  3495,  3497,
    3499,  3501,  3503,  3505,  3507,  3509,  3511,  3513,  3515,  3517,
    3519,  3523,  3525,  3527,  3529,  3531,  3533,  3535,  3538,  3540,
    3542,  3545,  3549,  3553,  3555,  3559,  3563,  3566,  3570,  3574,
    3578,  3582,  3584,  3586,  3588,  3590,  3594,  3600,  3602,  3604,
    3606,  3608,  3612,  3615,  3617,  3622,  3628,  3634,  3639,  3646,
    3648,  3650,  3652,  3654,  3656,  3658,  3659,  3661,  3665,  3667,
    3668,  3676,  3678,  3681,  3685,  3688,  3689,  3692,  3693,  3696,
    3701,  3704,  3706,  3708,  3710,  3713,  3717,  3720,  3724,  3729,
    3732,  3734,  3736,  3738,  3742,  3745,  3755,  3767,  3780,  3795,
    3799,  3804,  3809,  3810,  3818,  3829,  3832,  3836,  3837,  3842,
    3844,  3846,  3848,  3850,  3852,  3854,  3856,  3858,  3860,  3862,
    3864,  3866,  3868,  3870,  3872,  3874,  3876,  3878,  3880,  3882,
    3884,  3886,  3888,  3890,  3892,  3894,  3896,  3898,  3900,  3902,
    3904,  3906,  3908,  3910,  3912,  3914,  3916,  3918,  3920,  3922,
    3924,  3926,  3928,  3930,  3932,  3934,  3936,  3938,  3940,  3942,
    3944,  3946,  3948,  3950,  3952,  3954,  3956,  3958,  3960,  3962,
    3964,  3966,  3968,  3970,  3972,  3974,  3976,  3978,  3980,  3982,
    3984,  3986,  3988,  3990,  3992,  3994,  3996,  3998,  4000,  4002,
    4004,  4006,  4008,  4010,  4012,  4014,  4016,  4018,  4020,  4022,
    4024,  4026,  4028,  4030,  4032,  4034,  4036,  4038,  4040,  4042,
    4044,  4046,  4048,  4050,  4052,  4054,  4056,  4058,  4060,  4062,
    4064,  4066,  4068,  4070,  4072,  4074,  4076,  4078,  4080,  4082,
    4084,  4086,  4088,  4090,  4092,  4094,  4096,  4098,  4100,  4102,
    4104,  4106,  4108,  4110,  4112,  4114,  4116,  4118,  4120,  4122,
    4124,  4126,  4128,  4130,  4132,  4134,  4136,  4138,  4140,  4142,
    4144,  4146,  4148,  4150,  4152,  4154,  4156,  4158,  4160,  4162,
    4164,  4166,  4168,  4170,  4172,  4174,  4176,  4178,  4180,  4182,
    4184,  4186,  4188,  4190,  4192,  4194,  4196,  4198,  4200,  4202,
    4204,  4206,  4208,  4210,  4212,  4214,  4216,  4218,  4220,  4222,
    4224,  4226,  4228,  4230,  4232,  4234,  4236,  4238,  4240,  4242,
    4244,  4246,  4248,  4250,  4252,  4254,  4256,  4258,  4260,  4262,
    4264,  4266,  4268,  4270,  4272,  4274,  4276,  4278,  4280,  4282,
    4284,  4286,  4288,  4290,  4292,  4294,  4296,  4298,  4300,  4302,
    4304,  4306,  4308,  4310,  4312,  4314,  4316,  4318,  4320,  4322,
    4324,  4326,  4328,  4330,  4332,  4334,  4336,  4338,  4340,  4342,
    4344,  4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,  4362,
    4364,  4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,  4382,
    4384,  4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,  4402,
    4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,
    4424,  4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,  4442,
    4444,  4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,  4462,
    4464,  4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,  4482,
    4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,
    4504,  4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,
    4524,  4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,
    4544,  4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,
    4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,  4582,
    4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,  4602,
    4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,  4622,
    4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,  4642,
    4644,  4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,
    4664,  4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,  4682,
    4684,  4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,  4702,
    4704,  4706,  4708,  4710
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     477,     0,    -1,   478,    -1,   478,   472,   479,    -1,   479,
      -1,   770,    -1,   517,    -1,   480,    -1,   802,    -1,   809,
      -1,   771,    -1,   579,    -1,   812,    -1,   760,    -1,   513,
      -1,   526,    -1,   491,    -1,   798,    -1,   572,    -1,   515,
      -1,   774,    -1,   772,    -1,   773,    -1,   763,    -1,   494,
      -1,   791,    -1,   512,    -1,   757,    -1,   492,    -1,   596,
      -1,   524,    -1,   578,    -1,   793,    -1,   803,    -1,   785,
      -1,   806,    -1,   810,    -1,    -1,    28,   379,   649,   488,
      -1,    28,   379,   182,   147,   649,   488,    -1,    28,   191,
     740,   488,    -1,    28,   191,   182,   147,   740,   488,    -1,
      28,   346,   740,   488,    -1,    28,   346,   182,   147,   740,
     488,    -1,    28,   425,   740,   488,    -1,    28,   425,   182,
     147,   740,   488,    -1,   483,    -1,   481,   483,    -1,   352,
     112,   684,    -1,   132,   112,    -1,   326,    -1,   326,   519,
     520,    -1,   352,   521,    -1,   352,   169,   571,    -1,   487,
      -1,   484,   473,   487,    -1,    22,   551,    -1,    22,   182,
     253,   147,   551,    -1,    22,    74,   551,    -1,    22,    74,
     182,   253,   147,   551,    -1,    28,   493,   748,   482,    -1,
      28,   493,   748,   132,   253,   258,    -1,    28,   493,   748,
     352,   253,   258,    -1,    28,   493,   748,   352,   368,   523,
      -1,    28,   493,   748,   352,   539,    -1,    28,   493,   748,
     325,   539,    -1,    28,   493,   748,   352,   371,   748,    -1,
      28,   493,   748,    22,   169,   571,    35,   181,   529,    -1,
      28,   493,   748,   481,    -1,    28,   493,   748,   132,   181,
      -1,    28,   493,   748,   132,   181,   182,   147,    -1,   132,
     493,   182,   147,   748,   576,    -1,   132,   493,   748,   576,
      -1,    28,   493,   748,   490,   400,   661,   660,   486,    -1,
      28,   493,   748,   489,    -1,    22,   541,    -1,    28,    84,
     742,   527,    -1,   416,    84,   742,    -1,   132,    84,   182,
     147,   742,   576,    -1,   132,    84,   742,   576,    -1,   352,
     233,    -1,   352,   409,    -1,   352,   539,    -1,   325,   539,
      -1,   489,    -1,   413,   684,    -1,    -1,   534,    -1,   352,
     534,    -1,    22,   534,    -1,   132,   549,    -1,   485,    -1,
     488,   473,   485,    -1,   272,   469,   484,   470,    -1,   352,
     105,    -1,    -1,   108,   742,    -1,   108,   297,   742,    -1,
     108,    26,    -1,   108,   297,    26,    -1,    28,   339,   742,
     321,   390,   742,    -1,    28,   379,   649,   321,   390,   742,
      -1,    28,   379,   182,   147,   649,   321,   390,   742,    -1,
      28,   346,   740,   321,   390,   742,    -1,    28,   346,   182,
     147,   740,   321,   390,   742,    -1,    28,   425,   740,   321,
     390,   742,    -1,    28,   425,   182,   147,   740,   321,   390,
     742,    -1,    28,   191,   740,   321,   390,   742,    -1,    28,
     191,   182,   147,   740,   321,   390,   742,    -1,    28,   379,
     649,   321,   493,   742,   390,   742,    -1,    28,   379,   182,
     147,   649,   321,   493,   742,   390,   742,    -1,    28,   379,
     649,   321,    84,   742,   390,   742,    -1,    28,   379,   182,
     147,   649,   321,    84,   742,   390,   742,    -1,    74,    -1,
      -1,   498,   201,   207,   496,   495,   501,   503,    -1,   596,
      -1,   281,   504,   418,   596,    -1,   469,   508,   470,   596,
      -1,   469,   508,   470,   281,   504,   418,   596,    -1,   112,
     419,    -1,   740,    -1,   740,    35,   748,    -1,   469,   510,
     470,   657,    -1,   268,    84,   742,    -1,    -1,   601,    -1,
      -1,   748,   734,    -1,   511,   458,   684,    -1,   469,   505,
     470,   458,   684,    -1,   268,    82,   497,   128,   411,   352,
     509,   657,    -1,   268,    82,   497,   128,   254,    -1,    -1,
     748,   506,   507,   614,   615,    -1,   689,   506,   507,   614,
     615,    -1,   469,   684,   470,   506,   507,   614,   615,    -1,
     328,   737,    -1,    -1,   412,    -1,   378,    -1,   511,    -1,
     505,   473,   511,    -1,    72,   751,    -1,    -1,   751,    -1,
      -1,   499,    -1,   508,   473,   499,    -1,   500,    -1,   509,
     473,   500,    -1,   502,    -1,   510,   473,   502,    -1,   748,
     734,    -1,   294,   748,    -1,   294,   748,   458,   790,    -1,
     294,   748,   469,   712,   470,    -1,    91,   570,   346,   740,
     514,    -1,    91,   570,   346,   182,   253,   147,   740,   514,
      -1,   518,    -1,    -1,   146,   742,   516,    -1,    91,   570,
     379,   814,    35,   146,   742,   516,   813,    -1,    91,   570,
     379,   182,   253,   147,   814,    35,   146,   742,   516,   813,
      -1,   469,   711,   470,    -1,    -1,    28,   346,   740,   518,
      -1,    28,   346,   182,   147,   740,   518,    -1,   521,    -1,
     518,   521,    -1,   432,    -1,   455,    -1,    -1,     4,    -1,
     460,     4,    -1,   461,     4,    -1,   523,    -1,    35,   663,
      -1,    54,   520,    -1,   104,    -1,   251,   104,    -1,   190,
     522,   520,    -1,   237,   520,    -1,   240,   520,    -1,   251,
     237,    -1,   251,   240,    -1,   282,    53,   751,    -1,   346,
     244,   751,    -1,   366,   519,   520,    -1,   326,    -1,   326,
     519,   520,    -1,    53,    -1,    -1,   746,    -1,   460,   746,
      -1,   461,   746,    -1,    18,   525,    -1,    46,   525,    -1,
     366,   525,    -1,    78,   525,    -1,   138,   525,    -1,   333,
     525,    -1,   435,    -1,   392,    -1,    -1,    91,   570,   379,
     740,   469,   558,   470,   546,   538,    -1,    91,   570,   379,
     182,   253,   147,   740,   469,   558,   470,   546,   538,    -1,
      -1,   527,   550,    -1,   565,    -1,   818,    -1,   708,    -1,
     520,    -1,   747,    -1,   252,    -1,   469,   518,   470,    -1,
      -1,   747,    -1,   251,    21,    -1,   327,    -1,    57,    -1,
     352,   258,    -1,   352,   112,    -1,    84,   742,   533,    -1,
     533,    -1,   545,    -1,    72,   751,    -1,   253,   258,    -1,
     258,    -1,   406,   557,    -1,   300,   213,   557,    -1,    66,
     469,   684,   470,   540,    -1,   112,   685,    -1,   169,   571,
      35,   181,   529,    -1,   315,   740,   560,   568,   536,    -1,
     549,   530,    -1,   268,   411,   531,    -1,   535,    -1,   562,
      -1,   535,   562,    -1,   562,   535,    -1,    -1,   272,   469,
     552,   470,    -1,    -1,   268,    78,   132,    -1,   268,    78,
     117,   336,    -1,   268,    78,   299,   336,    -1,    -1,   469,
     543,   470,    -1,   251,   193,    -1,    -1,    84,   742,   566,
      -1,   566,    -1,    77,    -1,    85,    -1,   113,    -1,   181,
      -1,   192,    -1,   368,    -1,   371,    -1,    26,    -1,   563,
      -1,   543,   473,   563,    -1,   413,   191,   554,    -1,   114,
      -1,   253,   114,    -1,   195,   115,    -1,   195,   184,    -1,
     432,   539,    -1,   432,   266,    -1,   434,   266,    -1,    -1,
     469,   553,   470,    -1,   548,   189,   542,    -1,   548,   144,
     542,    -1,    -1,   755,    -1,   253,   114,    -1,   114,    -1,
     195,   184,    -1,   195,   115,    -1,   253,   415,    -1,   251,
     193,    -1,   748,   661,   537,   561,    -1,   534,    -1,   552,
     473,   534,    -1,   556,    -1,   553,   473,   556,    -1,   748,
      -1,   551,    -1,   569,    -1,   541,    -1,   755,   458,   528,
      -1,   755,    -1,   432,   547,    -1,    -1,   567,    -1,    -1,
     748,    -1,   469,   564,   470,    -1,    -1,   561,   532,    -1,
      -1,   268,   117,   531,    -1,   755,   458,   528,    -1,   755,
      -1,   755,   471,   755,   458,   528,    -1,   755,   471,   755,
      -1,   559,    -1,   564,   473,   559,    -1,   661,    -1,   750,
     752,   464,   400,    -1,   353,   750,   752,   464,   400,    -1,
      66,   469,   684,   470,   527,    -1,   406,   469,   564,   470,
     557,   527,    -1,   406,   544,   527,    -1,   300,   213,   469,
     564,   470,   557,   527,    -1,   300,   213,   544,   527,    -1,
     162,   213,   469,   564,   470,   315,   740,   560,   568,   536,
     527,    -1,   555,    -1,   567,   473,   555,    -1,   235,   166,
      -1,   235,   286,    -1,   235,   358,    -1,    -1,   223,   740,
     548,    -1,   385,    -1,   383,    -1,   227,   385,    -1,   227,
     383,    -1,   171,   385,    -1,   171,   383,    -1,   409,    -1,
      -1,    29,    -1,    53,   112,    -1,   132,   573,   182,   147,
     575,   576,    -1,   132,   573,   575,   576,    -1,   132,   574,
     182,   147,   741,   576,    -1,   132,   574,   741,   576,    -1,
     132,   577,   742,   268,   751,   576,    -1,   132,   577,   182,
     147,   742,   268,   751,   576,    -1,   379,    -1,   346,    -1,
     425,    -1,   236,   425,    -1,   191,    -1,   162,   379,    -1,
      73,    -1,    88,    -1,   368,    -1,   386,   342,   285,    -1,
     386,   342,   124,    -1,   386,   342,   384,    -1,   386,   342,
      81,    -1,    20,   238,    -1,   141,   395,    -1,   150,    -1,
     162,   105,   436,    -1,   306,    -1,   339,    -1,   349,    -1,
     751,    -1,   575,   473,   751,    -1,    57,    -1,   327,    -1,
      -1,   292,    -1,   337,    -1,   395,    -1,   498,   411,   799,
     352,   509,   639,   800,   503,    -1,    89,   591,   740,   560,
     589,   580,   585,   594,   581,   519,   586,    -1,    89,   469,
     759,   470,   390,   585,   594,   519,   586,    -1,   165,    -1,
     390,    -1,   583,   119,   747,    -1,    -1,   593,    -1,   582,
     473,   593,    -1,   413,    -1,    -1,    35,    -1,    -1,   305,
      -1,    -1,   590,    -1,   469,   595,   470,    -1,   782,    -1,
     520,    -1,   462,    -1,   469,   582,   470,    -1,    -1,   755,
     587,    -1,   432,   266,    -1,    -1,   590,   592,    -1,    -1,
      49,    -1,    -1,    49,    -1,   266,    -1,   164,    -1,   118,
     584,   747,    -1,   258,   584,   747,    -1,    93,    -1,   178,
      -1,   307,   584,   747,    -1,   140,   584,   747,    -1,   161,
     307,   564,    -1,   161,   307,   462,    -1,   161,   253,   258,
     564,    -1,   161,   258,   564,    -1,   136,   747,    -1,   782,
      -1,   747,    -1,   369,    -1,   370,    -1,   588,    -1,   595,
     473,   588,    -1,   598,    -1,   597,    -1,   469,   598,   470,
      -1,   469,   597,   470,    -1,   600,    -1,   599,   611,    -1,
     599,   610,   631,   617,    -1,   599,   610,   616,   632,    -1,
     601,   599,    -1,   601,   599,   611,    -1,   601,   599,   610,
     631,   617,    -1,   601,   599,   610,   616,   632,    -1,   600,
      -1,   597,    -1,   345,   609,   736,   604,   639,   657,   626,
     630,   693,    -1,   345,   608,   737,   604,   639,   657,   626,
     630,   693,    -1,   638,    -1,   379,   649,    -1,   599,   405,
     607,   599,    -1,   599,   205,   607,   599,    -1,   599,   142,
     607,   599,    -1,   432,   602,    -1,   455,   602,    -1,   432,
     313,   602,    -1,   603,    -1,   602,   473,   603,    -1,   742,
     753,    35,   469,   759,   470,    -1,   207,   605,    -1,    -1,
     385,   606,   740,    -1,   383,   606,   740,    -1,   227,   385,
     606,   740,    -1,   227,   383,   606,   740,    -1,   171,   385,
     606,   740,    -1,   171,   383,   606,   740,    -1,   409,   606,
     740,    -1,   379,   740,    -1,   740,    -1,   379,    -1,    -1,
      26,    -1,   127,    -1,    -1,   127,    -1,   127,   268,   469,
     711,   470,    -1,    26,    -1,    -1,   611,    -1,    -1,   274,
      53,   612,    -1,   613,    -1,   612,   473,   613,    -1,   684,
     413,   708,   615,    -1,   684,   614,   615,    -1,    36,    -1,
     121,    -1,    -1,   454,   157,    -1,   454,   217,    -1,    -1,
     618,   619,    -1,   619,   618,    -1,   618,    -1,   619,    -1,
     616,    -1,    -1,   224,   620,    -1,   224,   620,   473,   621,
      -1,   155,   625,   622,   624,   269,    -1,   155,   625,   624,
     269,    -1,   265,   621,    -1,   265,   622,   624,    -1,   684,
      -1,    26,    -1,   684,    -1,   686,    -1,   460,   623,    -1,
     461,   623,    -1,   746,    -1,     4,    -1,   335,    -1,   336,
      -1,   157,    -1,   250,    -1,   174,    53,   627,    -1,    -1,
     628,    -1,   627,   473,   628,    -1,   684,    -1,   629,    -1,
     469,   470,    -1,   177,   684,    -1,    -1,   633,    -1,   160,
     309,   269,    -1,   631,    -1,    -1,   634,    -1,   633,   634,
      -1,   635,   636,   637,    -1,   160,   411,    -1,   160,   251,
     213,   411,    -1,   160,   355,    -1,   160,   213,   355,    -1,
     263,   739,    -1,    -1,   257,    -1,   359,   232,    -1,    -1,
     419,   469,   711,   470,    -1,   638,   473,   469,   711,   470,
      -1,   165,   640,    -1,    -1,   641,    -1,   640,   473,   641,
      -1,   649,   644,    -1,   649,   644,   650,    -1,   652,   645,
      -1,   218,   652,   645,    -1,   597,   644,    -1,   218,   597,
     644,    -1,   642,    -1,   469,   642,   470,   643,    -1,   469,
     642,   470,    -1,   641,    92,   212,   641,    -1,   641,   646,
     212,   641,   648,    -1,   641,   212,   641,   648,    -1,   641,
     247,   646,   212,   641,    -1,   641,   247,   212,   641,    -1,
      35,   748,   469,   741,   470,    -1,    35,   749,    -1,   748,
     469,   741,   470,    -1,   748,    -1,   643,    -1,    -1,   643,
      -1,    35,   469,   658,   470,    -1,    35,   748,   469,   658,
     470,    -1,   748,   469,   658,   470,    -1,    -1,   166,   647,
      -1,   221,   647,    -1,   331,   647,    -1,   197,    -1,   277,
      -1,    -1,   413,   469,   741,   470,    -1,   268,   684,    -1,
     740,    -1,   740,   462,    -1,   269,   740,    -1,   269,   469,
     740,   470,    -1,   381,   744,   469,   711,   470,   651,    -1,
     322,   469,   684,   470,    -1,    -1,   689,   656,    -1,   336,
     165,   469,   654,   470,   656,    -1,   689,   655,    -1,   653,
      -1,   654,   473,   653,    -1,    35,   469,   658,   470,    -1,
      -1,   455,   275,    -1,    -1,   429,   684,    -1,    -1,   659,
      -1,   658,   473,   659,    -1,   748,   661,   660,    -1,    72,
     751,    -1,    -1,   663,   662,    -1,   353,   663,   662,    -1,
     663,    34,   467,   746,   468,    -1,   353,   663,    34,   467,
     746,   468,    -1,   663,    34,    -1,   353,   663,    34,    -1,
     662,   467,   468,    -1,   662,   467,   746,   468,    -1,    -1,
     665,    -1,   667,    -1,   669,    -1,   673,    -1,   679,    -1,
     680,   682,    -1,   680,   469,   746,   470,    -1,   667,    -1,
     670,    -1,   674,    -1,   679,    -1,   750,   666,    -1,   750,
     752,   666,    -1,   469,   711,   470,    -1,    -1,   203,    -1,
     204,    -1,   360,    -1,    48,    -1,   310,    -1,   158,   668,
      -1,   131,   296,    -1,   110,   666,    -1,   109,   666,    -1,
     261,   666,    -1,    51,    -1,   469,   746,   470,    -1,    -1,
     671,    -1,   672,    -1,   671,    -1,   672,    -1,    50,   678,
     469,   711,   470,    -1,    50,   678,    -1,   675,    -1,   676,
      -1,   675,    -1,   676,    -1,   677,   469,   746,   470,    -1,
     677,    -1,    64,   678,    -1,    63,   678,    -1,   420,    -1,
     246,    64,   678,    -1,   246,    63,   678,    -1,   248,   678,
      -1,   422,    -1,    -1,   389,   469,   746,   470,   681,    -1,
     389,   681,    -1,   388,   469,   746,   470,   681,    -1,   388,
     681,    -1,   206,    -1,   455,   388,   452,    -1,   434,   388,
     452,    -1,    -1,   450,    -1,   242,    -1,   107,    -1,   180,
      -1,   239,    -1,   683,    -1,   450,   390,   242,    -1,   107,
     390,   180,    -1,   107,   390,   239,    -1,   107,   390,   683,
      -1,   180,   390,   239,    -1,   180,   390,   683,    -1,   239,
     390,   683,    -1,    -1,   343,    -1,   343,   469,   746,   470,
      -1,   686,    -1,   684,    11,   661,    -1,   684,    72,   751,
      -1,   684,    40,   388,   452,   684,    -1,   460,   684,    -1,
     461,   684,    -1,   684,   460,   684,    -1,   684,   461,   684,
      -1,   684,   462,   684,    -1,   684,   463,   684,    -1,   684,
     464,   684,    -1,   684,   465,   684,    -1,   684,   456,   684,
      -1,   684,   457,   684,    -1,   684,   458,   684,    -1,   684,
      15,   684,    -1,   684,    16,   684,    -1,   684,    17,   684,
      -1,   684,   707,   684,    -1,   707,   684,    -1,   684,   707,
      -1,   684,    32,   684,    -1,   684,   273,   684,    -1,   253,
     684,    -1,   453,   684,    -1,   684,   170,   684,    -1,   684,
     223,   684,    -1,   684,   223,   684,   140,   684,    -1,   684,
     453,   223,   684,    -1,   684,   453,   223,   684,   140,   684,
      -1,   684,   183,   684,    -1,   684,   183,   684,   140,   684,
      -1,   684,   453,   183,   684,    -1,   684,   453,   183,   684,
     140,   684,    -1,   684,   357,   390,   684,    -1,   684,   357,
     390,   684,   140,   684,    -1,   684,   453,   357,   390,   684,
      -1,   684,   453,   357,   390,   684,   140,   684,    -1,   684,
     209,   258,    -1,   684,   210,    -1,   684,   209,   253,   258,
      -1,   684,   253,   258,    -1,   684,   256,    -1,   703,   279,
     703,    -1,   684,   209,   397,    -1,   684,   209,   253,   397,
      -1,   684,   209,   153,    -1,   684,   209,   253,   153,    -1,
     684,   209,   407,    -1,   684,   209,   253,   407,    -1,   684,
     209,   127,   165,   684,    -1,   684,   209,   253,   127,   165,
     684,    -1,   684,   209,   263,   469,   714,   470,    -1,   684,
     209,   253,   263,   469,   714,   470,    -1,   684,    47,   735,
     685,    32,   684,    -1,   684,   453,    47,   735,   685,    32,
     684,    -1,   684,    47,   376,   685,    32,   684,    -1,   684,
     453,    47,   376,   685,    32,   684,    -1,   684,   188,   724,
      -1,   684,   453,   188,   724,    -1,   684,   709,   704,   597,
      -1,   684,   709,   704,   469,   684,   470,    -1,   112,    -1,
     686,    -1,   685,    11,   661,    -1,   460,   685,    -1,   461,
     685,    -1,   685,   460,   685,    -1,   685,   461,   685,    -1,
     685,   462,   685,    -1,   685,   463,   685,    -1,   685,   464,
     685,    -1,   685,   465,   685,    -1,   685,   456,   685,    -1,
     685,   457,   685,    -1,   685,   458,   685,    -1,   685,    15,
     685,    -1,   685,    16,   685,    -1,   685,    17,   685,    -1,
     685,   707,   685,    -1,   707,   685,    -1,   685,   707,    -1,
     685,   209,   127,   165,   685,    -1,   685,   209,   253,   127,
     165,   685,    -1,   685,   209,   263,   469,   714,   470,    -1,
     685,   209,   253,   263,   469,   714,   470,    -1,   730,    -1,
     745,    -1,   474,   734,    -1,    10,   734,    -1,   469,   684,
     470,   734,    -1,   725,    -1,   688,    -1,   597,    -1,   597,
     733,    -1,   147,   597,    -1,   744,   469,   470,    -1,   744,
     469,   712,   610,   470,    -1,   744,   469,   421,   713,   610,
     470,    -1,   744,   469,   712,   473,   421,   713,   610,   470,
      -1,   744,   469,    26,   712,   610,   470,    -1,   744,   469,
     127,   712,   610,   470,    -1,   744,   469,   462,   470,    -1,
     687,   691,   692,   696,    -1,   690,    -1,   687,    -1,   690,
      -1,    73,   160,   469,   684,   470,    -1,    97,    -1,   100,
      -1,   100,   469,   746,   470,    -1,   101,    -1,   101,   469,
     746,   470,    -1,   228,    -1,   228,   469,   746,   470,    -1,
     229,    -1,   229,   469,   746,   470,    -1,    98,    -1,   102,
      -1,   351,    -1,   412,    -1,    96,    -1,    99,    -1,    60,
     469,   684,    35,   661,   470,    -1,   152,   469,   715,   470,
      -1,   280,   469,   717,   470,    -1,   293,   469,   719,   470,
      -1,   375,   469,   720,   470,    -1,   394,   469,   684,    35,
     661,   470,    -1,   396,   469,    52,   723,   470,    -1,   396,
     469,   219,   723,   470,    -1,   396,   469,   391,   723,   470,
      -1,   396,   469,   723,   470,    -1,   259,   469,   684,   473,
     684,   470,    -1,    71,   469,   711,   470,    -1,   433,   174,
     469,   611,   470,    -1,    -1,   156,   469,   429,   684,   470,
      -1,    -1,   431,   694,    -1,    -1,   695,    -1,   694,   473,
     695,    -1,   748,    35,   697,    -1,   278,   697,    -1,   278,
     748,    -1,    -1,   469,   698,   699,   610,   700,   470,    -1,
     748,    -1,    -1,   287,    53,   711,    -1,    -1,   308,   701,
      -1,   336,   701,    -1,    -1,   702,    -1,    47,   702,    32,
     702,    -1,   402,   295,    -1,   402,   159,    -1,    95,   335,
      -1,   684,   295,    -1,   684,   159,    -1,   335,   469,   711,
     470,    -1,   335,   469,   470,    -1,   469,   711,   473,   684,
     470,    -1,    33,    -1,   362,    -1,    26,    -1,     8,    -1,
     706,    -1,   460,    -1,   461,    -1,   462,    -1,   463,    -1,
     464,    -1,   465,    -1,   456,    -1,   457,    -1,   458,    -1,
      15,    -1,    16,    -1,    17,    -1,     8,    -1,   270,   469,
     710,   470,    -1,   705,    -1,   270,   469,   710,   470,    -1,
     705,    -1,   270,   469,   710,   470,    -1,   223,    -1,   453,
     223,    -1,   170,    -1,   453,   170,    -1,   183,    -1,   453,
     183,    -1,   705,    -1,   748,   471,   710,    -1,   684,    -1,
     711,   473,   684,    -1,   713,    -1,   712,   473,   713,    -1,
     684,    -1,   754,    13,   684,    -1,   754,    14,   684,    -1,
     661,    -1,   714,   473,   661,    -1,   716,   165,   684,    -1,
      -1,     3,    -1,   450,    -1,   242,    -1,   107,    -1,   180,
      -1,   239,    -1,   343,    -1,   747,    -1,   684,   718,   721,
     722,    -1,   684,   718,   721,    -1,   290,   684,    -1,   685,
     188,   685,    -1,    -1,   684,   721,   722,    -1,   684,   722,
     721,    -1,   684,   721,    -1,   684,   722,    -1,   711,    -1,
      -1,   165,   684,    -1,   160,   684,    -1,   684,   165,   711,
      -1,   165,   711,    -1,   711,    -1,   597,    -1,   469,   711,
     470,    -1,    59,   729,   726,   728,   138,    -1,   727,    -1,
     726,   727,    -1,   428,   684,   387,   684,    -1,   134,   684,
      -1,    -1,   684,    -1,    -1,   748,    -1,   748,   733,    -1,
     471,   743,    -1,   471,   462,    -1,   467,   684,   468,    -1,
     467,   732,   475,   732,   468,    -1,   684,    -1,    -1,   731,
      -1,   733,   731,    -1,    -1,   734,   731,    -1,    39,    -1,
      -1,   737,    -1,    -1,   738,    -1,   737,   473,   738,    -1,
     684,    35,   756,    -1,   684,     3,    -1,   684,    -1,   462,
      -1,   740,    -1,   739,   473,   740,    -1,   748,    -1,   748,
     733,    -1,   742,    -1,   741,   473,   742,    -1,   748,    -1,
     755,    -1,   750,    -1,   748,   733,    -1,   746,    -1,     4,
      -1,   747,    -1,     6,    -1,     7,    -1,   744,   747,    -1,
     744,   469,   712,   610,   470,   747,    -1,   664,   747,    -1,
     680,   747,   682,    -1,   680,   469,   746,   470,   747,    -1,
     680,   469,   474,   470,   474,   682,    -1,   397,    -1,   153,
      -1,   258,    -1,     9,    -1,     5,    -1,     3,    -1,   815,
      -1,   816,    -1,   748,    -1,     5,    -1,     3,    -1,   815,
      -1,   817,    -1,   748,    -1,   748,   752,    -1,   471,   743,
      -1,   752,   471,   743,    -1,   469,   741,   470,    -1,    -1,
     750,    -1,     3,    -1,   815,    -1,   816,    -1,   817,    -1,
     818,    -1,   755,    -1,     5,    -1,   297,   742,   758,    35,
     759,    -1,   469,   714,   470,    -1,    -1,   596,    -1,   494,
      -1,   578,    -1,   798,    -1,    91,   339,   748,   761,    -1,
      91,   339,   182,   253,   147,   748,   761,    -1,   761,   762,
      -1,    -1,   526,    -1,   763,    -1,   513,    -1,   810,    -1,
      91,   769,   191,   766,   767,   268,   740,   765,   469,   510,
     470,   768,   657,    -1,    91,   769,   191,   766,   182,   253,
     147,   554,   268,   740,   765,   469,   510,   470,   768,   657,
      -1,   748,    -1,   413,   764,    -1,    -1,    80,    -1,    -1,
     554,    -1,    -1,   432,   539,    -1,    -1,   406,    -1,    -1,
      28,   379,   649,   352,   339,   742,    -1,    28,   379,   182,
     147,   649,   352,   339,   742,    -1,    28,   346,   740,   352,
     339,   742,    -1,    28,   346,   182,   147,   740,   352,   339,
     742,    -1,    28,   425,   740,   352,   339,   742,    -1,    28,
     425,   182,   147,   740,   352,   339,   742,    -1,    67,    -1,
     149,   106,   747,   586,    -1,   187,   106,   747,    -1,   148,
     777,    -1,   148,   781,   775,   777,    -1,   148,   423,   777,
      -1,   148,   469,   780,   470,   777,    -1,   423,    -1,    -1,
     782,    -1,   520,    -1,    -1,   596,    -1,   494,    -1,   578,
      -1,   798,    -1,   812,    -1,     3,    -1,   815,    -1,   816,
      -1,   817,    -1,   778,    -1,   747,    -1,   783,    -1,   780,
     473,   783,    -1,    31,    -1,    30,    -1,   397,    -1,   153,
      -1,   268,    -1,   779,    -1,   784,   776,    -1,   778,    -1,
     781,    -1,   352,   786,    -1,   352,   227,   786,    -1,   352,
     350,   786,    -1,   787,    -1,   808,   165,    95,    -1,   388,
     452,   789,    -1,   339,   747,    -1,   808,   390,   790,    -1,
     808,   458,   790,    -1,   808,   390,   112,    -1,   808,   458,
     112,    -1,   782,    -1,   520,    -1,   747,    -1,     3,    -1,
     680,   747,   682,    -1,   680,   469,   746,   470,   747,    -1,
     520,    -1,   112,    -1,   227,    -1,   788,    -1,   790,   473,
     788,    -1,   226,   792,    -1,   747,    -1,   414,   795,   797,
     775,    -1,   414,   795,   797,   775,   740,    -1,   414,   795,
     797,   775,   802,    -1,   414,   469,   796,   470,    -1,   414,
     469,   796,   470,   740,   753,    -1,   781,    -1,   423,    -1,
     164,    -1,   166,    -1,     3,    -1,   166,    -1,    -1,   794,
      -1,   796,   473,   794,    -1,   164,    -1,    -1,   498,   117,
     165,   799,   801,   800,   503,    -1,   649,    -1,   649,   748,
      -1,   649,    35,   748,    -1,   429,   684,    -1,    -1,   413,
     640,    -1,    -1,   781,   775,    -1,   781,   775,   740,   753,
      -1,   325,   805,    -1,   808,    -1,    26,    -1,   804,    -1,
     388,   452,    -1,   392,   211,   222,    -1,   807,   808,    -1,
     807,   388,   452,    -1,   807,   392,   211,   222,    -1,   807,
      26,    -1,   356,    -1,   122,    -1,   748,    -1,   808,   471,
     748,    -1,    55,   687,    -1,    91,   570,   425,   740,   560,
     768,    35,   596,   811,    -1,    91,   273,   323,   570,   425,
     740,   560,   768,    35,   596,   811,    -1,    91,   570,   313,
     425,   740,   469,   564,   470,   768,    35,   596,   811,    -1,
      91,   273,   323,   570,   313,   425,   740,   469,   564,   470,
     768,    35,   596,   811,    -1,   432,    66,   271,    -1,   432,
      58,    66,   271,    -1,   432,   227,    66,   271,    -1,    -1,
      91,   570,   379,   814,    35,   596,   813,    -1,    91,   570,
     379,   182,   253,   147,   814,    35,   596,   813,    -1,   432,
     105,    -1,   432,   251,   105,    -1,    -1,   740,   560,   546,
     538,    -1,    18,    -1,    19,    -1,    20,    -1,    21,    -1,
      22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,    -1,
      28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,    -1,
      41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,    -1,
      53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,
      58,    -1,    61,    -1,    62,    -1,    65,    -1,    67,    -1,
      68,    -1,    69,    -1,    70,    -1,    75,    -1,    76,    -1,
      77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,    -1,
      83,    -1,    85,    -1,    86,    -1,    87,    -1,    88,    -1,
      89,    -1,    90,    -1,    93,    -1,    94,    -1,    95,    -1,
     103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,    -1,
     108,    -1,   111,    -1,   113,    -1,   115,    -1,   116,    -1,
     117,    -1,   118,    -1,   119,    -1,   120,    -1,   122,    -1,
     123,    -1,   124,    -1,   125,    -1,   126,    -1,   129,    -1,
     130,    -1,   131,    -1,   132,    -1,   133,    -1,   135,    -1,
     136,    -1,   137,    -1,   139,    -1,   140,    -1,   141,    -1,
     143,    -1,   144,    -1,   145,    -1,   146,    -1,   148,    -1,
     149,    -1,   150,    -1,   151,    -1,   154,    -1,   156,    -1,
     157,    -1,   159,    -1,   161,    -1,   163,    -1,   167,    -1,
     168,    -1,   169,    -1,   171,    -1,   173,    -1,   176,    -1,
     178,    -1,   179,    -1,   180,    -1,   181,    -1,   182,    -1,
     184,    -1,   185,    -1,   186,    -1,   187,    -1,   189,    -1,
     190,    -1,   191,    -1,   192,    -1,   193,    -1,   194,    -1,
     196,    -1,   199,    -1,   200,    -1,   201,    -1,   202,    -1,
     208,    -1,   211,    -1,   213,    -1,   214,    -1,   215,    -1,
     216,    -1,   217,    -1,   220,    -1,   222,    -1,   225,    -1,
     226,    -1,   227,    -1,   230,    -1,   231,    -1,   232,    -1,
     233,    -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,
     238,    -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,
     243,    -1,   244,    -1,   245,    -1,   249,    -1,   250,    -1,
     251,    -1,   254,    -1,   255,    -1,   257,    -1,   260,    -1,
     262,    -1,   263,    -1,   264,    -1,   266,    -1,   267,    -1,
     270,    -1,   271,    -1,   272,    -1,   275,    -1,   278,    -1,
     281,    -1,   282,    -1,   283,    -1,   284,    -1,   285,    -1,
     286,    -1,   287,    -1,   288,    -1,   289,    -1,   291,    -1,
     292,    -1,   294,    -1,   295,    -1,   297,    -1,   298,    -1,
     299,    -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,
     305,    -1,   306,    -1,   307,    -1,   308,    -1,   309,    -1,
     311,    -1,   312,    -1,   313,    -1,   314,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     322,    -1,   323,    -1,   324,    -1,   325,    -1,   326,    -1,
     327,    -1,   329,    -1,   330,    -1,   332,    -1,   333,    -1,
     334,    -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,
     340,    -1,   341,    -1,   342,    -1,   343,    -1,   344,    -1,
     346,    -1,   347,    -1,   348,    -1,   349,    -1,   350,    -1,
     352,    -1,   354,    -1,   355,    -1,   356,    -1,   358,    -1,
     359,    -1,   361,    -1,   363,    -1,   364,    -1,   365,    -1,
     366,    -1,   367,    -1,   368,    -1,   369,    -1,   370,    -1,
     371,    -1,   372,    -1,   373,    -1,   374,    -1,   377,    -1,
     378,    -1,   380,    -1,   382,    -1,   383,    -1,   384,    -1,
     385,    -1,   386,    -1,   392,    -1,   393,    -1,   395,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   402,    -1,
     403,    -1,   404,    -1,   407,    -1,   408,    -1,   409,    -1,
     410,    -1,   411,    -1,   414,    -1,   415,    -1,   416,    -1,
     417,    -1,   418,    -1,   422,    -1,   424,    -1,   425,    -1,
     426,    -1,   427,    -1,   430,    -1,   433,    -1,   434,    -1,
     435,    -1,   436,    -1,   437,    -1,   438,    -1,   450,    -1,
     451,    -1,   452,    -1,    47,    -1,    48,    -1,    50,    -1,
      51,    -1,    63,    -1,    64,    -1,    71,    -1,   109,    -1,
     110,    -1,   147,    -1,   152,    -1,   158,    -1,   175,    -1,
     198,    -1,   203,    -1,   204,    -1,   206,    -1,   246,    -1,
     248,    -1,   252,    -1,   259,    -1,   261,    -1,   276,    -1,
     280,    -1,   293,    -1,   296,    -1,   310,    -1,   335,    -1,
     353,    -1,   360,    -1,   375,    -1,   388,    -1,   389,    -1,
     394,    -1,   396,    -1,   419,    -1,   420,    -1,   439,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     445,    -1,   446,    -1,   447,    -1,   448,    -1,   449,    -1,
      43,    -1,    49,    -1,    73,    -1,    80,    -1,    92,    -1,
      99,    -1,   164,    -1,   166,    -1,   170,    -1,   183,    -1,
     197,    -1,   209,    -1,   210,    -1,   212,    -1,   221,    -1,
     223,    -1,   247,    -1,   256,    -1,   277,    -1,   279,    -1,
     331,    -1,   357,    -1,   381,    -1,   423,    -1,    26,    -1,
      30,    -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    39,    -1,    52,    -1,    59,    -1,
      60,    -1,    66,    -1,    72,    -1,    74,    -1,    84,    -1,
      91,    -1,    96,    -1,    97,    -1,    98,    -1,   100,    -1,
     101,    -1,   102,    -1,   112,    -1,   114,    -1,   121,    -1,
     127,    -1,   128,    -1,   134,    -1,   138,    -1,   142,    -1,
     153,    -1,   155,    -1,   160,    -1,   162,    -1,   165,    -1,
     172,    -1,   174,    -1,   177,    -1,   188,    -1,   195,    -1,
     205,    -1,   207,    -1,   218,    -1,   219,    -1,   224,    -1,
     228,    -1,   229,    -1,   253,    -1,   258,    -1,   265,    -1,
     268,    -1,   269,    -1,   273,    -1,   274,    -1,   290,    -1,
     300,    -1,   315,    -1,   328,    -1,   345,    -1,   351,    -1,
     362,    -1,   376,    -1,   379,    -1,   387,    -1,   390,    -1,
     391,    -1,   397,    -1,   405,    -1,   406,    -1,   412,    -1,
     413,    -1,   421,    -1,   428,    -1,   429,    -1,   431,    -1,
     432,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   452,   452,   468,   480,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   522,     9,    18,
      27,    36,    45,    54,    63,    72,    85,    87,    93,    94,
      99,   103,   107,   118,   126,   130,   139,   148,   157,   166,
     175,   184,   192,   200,   209,   218,   227,   236,   253,   262,
     271,   280,   290,   303,   318,   327,   335,   350,   358,   368,
     378,   385,   392,   400,   407,   418,   419,   424,   428,   433,
     438,   446,   447,   452,   456,   457,     7,    13,    19,    25,
       6,    15,    25,    35,    45,    55,    65,    75,    85,    95,
     106,   117,   127,   140,   141,     8,    21,    27,    34,    40,
      47,    57,    61,    70,    79,    88,    95,    96,   101,   113,
     118,   143,   153,   163,   169,   180,   191,   206,   207,   213,
     214,   219,   220,   226,   227,   231,   232,   237,   239,   245,
     246,   250,   251,   256,     7,    14,    22,     9,    19,    32,
      33,     7,    14,    31,    51,    52,     9,    17,    29,    30,
      34,    35,    36,    41,    42,    43,    48,    52,    56,    60,
      64,    68,    72,    76,    80,    84,    88,    92,    97,   101,
     105,   112,   113,   117,   118,   119,     2,     9,    15,    21,
      28,    35,    45,    46,    47,     7,    21,    41,    42,    69,
      70,    71,    72,    73,    74,    78,    79,    84,    89,    90,
      91,    92,    93,    98,   105,   106,   107,   124,   131,   138,
     148,   158,   170,   179,   188,   207,   214,   219,   221,   223,
     225,   228,   233,   234,   238,   239,   240,   241,   246,   250,
     251,   256,   263,   268,   269,   270,   271,   272,   273,   274,
     275,   281,   282,   286,   291,   298,   305,   312,   324,   325,
     326,   327,   331,   336,   337,   338,   343,   348,   349,   350,
     351,   352,   353,   358,   381,   385,   392,   393,   397,   401,
     402,   403,   407,   411,   419,   420,   425,   426,   430,   438,
     439,   444,   445,   449,   454,   458,   462,   467,   475,   476,
     480,   481,   487,   498,   511,   525,   539,   553,   567,   590,
     594,   601,   605,   613,   618,   625,   635,   636,   637,   638,
     639,   646,   653,   654,   659,   660,     9,    19,    29,    39,
      49,    59,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    90,    91,    92,    93,    94,
      95,    96,   101,   102,   107,   108,   109,   114,   115,   116,
       7,     1,    30,    53,    54,    59,    63,    68,    72,    80,
      81,    85,    86,    91,    92,    96,    97,   102,   103,   104,
     105,   106,   111,   119,   123,   128,   129,   134,   138,   143,
     147,   151,   155,   159,   163,   167,   171,   175,   179,   183,
     187,   191,   195,   203,   209,   210,   211,   216,   220,    47,
      48,    52,    53,    68,    69,    76,    84,    92,   100,   108,
     116,   127,   128,   155,   169,   184,   185,   204,   208,   212,
     229,   236,   243,   253,   254,   257,   269,   280,   288,   293,
     298,   303,   308,   316,   324,   329,   334,   341,   342,   346,
     347,   348,   355,   356,   360,   361,   365,   366,   370,   374,
     375,   378,   387,   398,   399,   400,   403,   404,   405,   409,
     410,   411,   412,   416,   417,   421,   423,   439,   441,   446,
     449,   454,   455,   463,   483,   484,   486,   491,   492,   496,
     497,   500,   501,   526,   527,   531,   532,   536,   537,   541,
     554,   555,   559,   560,   564,   565,   569,   570,   574,   585,
     586,   587,   588,   592,   593,   598,   599,   600,   609,   615,
     633,   634,   638,   639,   645,   650,   658,   665,   673,   708,
     733,   737,   763,   767,   780,   794,   809,   821,   837,   843,
     848,   854,   861,   862,   870,   874,   878,   884,   891,   896,
     897,   898,   899,   903,   904,   916,   917,   922,   929,   936,
     943,   966,   979,   980,   995,  1005,  1017,  1022,  1023,  1026,
    1027,  1030,  1031,  1036,  1037,  1042,  1046,  1052,  1073,  1081,
    1093,  1098,  1105,  1110,  1116,  1121,  1130,  1132,  1135,  1139,
    1140,  1141,  1142,  1143,  1144,  1149,  1169,  1170,  1171,  1172,
    1183,  1189,  1197,  1198,  1204,  1209,  1214,  1219,  1224,  1229,
    1234,  1239,  1245,  1251,  1257,  1264,  1286,  1295,  1299,  1307,
    1311,  1319,  1331,  1352,  1356,  1362,  1366,  1379,  1387,  1397,
    1399,  1401,  1403,  1405,  1407,  1412,  1413,  1420,  1429,  1437,
    1446,  1457,  1465,  1466,  1467,  1471,  1473,  1475,  1477,  1479,
    1481,  1483,  1488,  1493,  1499,  1507,  1512,  1519,  1526,  1530,
    1534,  1570,  1571,  1573,  1581,  1596,  1598,  1600,  1602,  1604,
    1606,  1608,  1610,  1612,  1614,  1616,  1618,  1620,  1622,  1625,
    1627,  1629,  1632,  1634,  1636,  1638,  1641,  1646,  1651,  1658,
    1663,  1670,  1675,  1683,  1688,  1697,  1705,  1713,  1721,  1739,
    1747,  1755,  1763,  1771,  1779,  1795,  1803,  1811,  1819,  1827,
    1835,  1843,  1847,  1851,  1855,  1859,  1867,  1875,  1883,  1891,
    1911,  1933,  1944,  1951,  1976,  1978,  1980,  1982,  1984,  1986,
    1988,  1990,  1992,  1994,  1996,  1998,  2000,  2002,  2004,  2006,
    2008,  2010,  2012,  2014,  2018,  2022,  2026,  2040,  2041,  2042,
    2054,  2069,  2081,  2083,  2085,  2096,  2120,  2133,  2137,  2143,
    2150,  2157,  2167,  2174,  2202,  2237,  2248,  2249,  2256,  2262,
    2266,  2270,  2274,  2278,  2282,  2286,  2290,  2294,  2298,  2302,
    2306,  2310,  2314,  2318,  2322,  2324,  2328,  2337,  2342,  2349,
    2364,  2371,  2375,  2379,  2383,  2387,  2401,  2402,  2406,  2407,
    2415,  2416,  2420,  2421,  2426,  2434,  2436,  2450,  2453,  2480,
    2481,  2484,  2485,  2496,  2514,  2521,  2530,  2547,  2592,  2600,
    2608,  2616,  2624,  2645,  2646,  2647,  2650,  2651,  2652,  2655,
    2656,  2659,  2660,  2661,  2662,  2663,  2664,  2665,  2666,  2667,
    2668,  2669,  2670,  2673,  2675,  2680,  2682,  2687,  2689,  2691,
    2693,  2695,  2697,  2699,  2701,  2715,  2717,  2721,  2725,  2732,
    2736,  2742,  2746,  2755,  2766,  2767,  2771,  2775,  2782,  2783,
    2784,  2785,  2786,  2787,  2788,  2789,  2799,  2803,  2810,  2817,
    2818,  2834,  2838,  2843,  2847,  2862,  2867,  2871,  2874,  2877,
    2878,  2879,  2882,  2889,  2899,  2913,  2914,  2918,  2929,  2930,
    2933,  2934,  2937,  2941,  2948,  2952,  2956,  2964,  2975,  2976,
    2980,  2981,  2985,  2986,  2989,  2990,  3000,  3001,  3005,  3006,
    3009,  3025,  3033,  3041,  3063,  3064,  3075,  3079,  3106,  3108,
    3113,  3115,  3125,  3127,  3138,  3142,  3146,  3150,  3154,  3163,
    3170,  3202,  3206,  3212,  3220,  3232,  3236,  3240,  3246,  3247,
    3263,  3264,  3265,  3268,  3269,  3274,  3275,  3276,  3279,  3280,
    3283,  3285,  3290,  3291,  3294,  3302,  3303,  3304,  3305,  3306,
    3309,  3310,     7,    18,    19,    23,    24,    25,    26,     7,
      16,    34,    41,    46,    47,    48,    49,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       7,    16,    25,    34,    43,    52,     5,     7,    20,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    68,    73,    74,    79,
      83,    91,    92,    97,    98,    99,   105,   110,   118,   119,
      10,    16,    22,    32,    33,    41,    52,    64,    72,    80,
      87,    97,    99,   105,   109,   113,   128,   135,   136,   137,
     141,   142,     7,    16,     8,    22,    36,    48,    56,    70,
      71,    72,    73,    74,    87,    88,    93,    94,    98,    99,
       7,    21,    25,    32,    43,    44,    50,    51,     9,    19,
       2,     7,    14,    24,    25,    32,     3,     9,    15,    21,
      29,    29,    31,    32,     6,     8,    21,    34,    52,    74,
      75,    76,    77,    11,    24,    41,    42,    43,    48,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE",
  "MONTH_P", "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR",
  "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL",
  "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF",
  "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION",
  "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER",
  "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER", "PARALLEL",
  "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD", "PLACING",
  "PLANS", "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION",
  "PREPARE", "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES",
  "PROCEDURAL", "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE",
  "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA",
  "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,    60,    62,    61,   711,
      43,    45,    42,    47,    37,    94,   712,    91,    93,    40,
      41,    46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   476,   477,   478,   478,   479,   479,   479,   479,   479,
     479,   479,   479,   479,   479,   479,   479,   479,   479,   479,
     479,   479,   479,   479,   479,   479,   479,   479,   479,   479,
     479,   479,   479,   479,   479,   479,   479,   479,   480,   480,
     480,   480,   480,   480,   480,   480,   481,   481,   482,   482,
     483,   483,   483,   483,   484,   484,   485,   485,   485,   485,
     485,   485,   485,   485,   485,   485,   485,   485,   485,   485,
     485,   485,   485,   485,   485,   485,   485,   485,   485,   485,
     485,   485,   485,   485,   485,   486,   486,   487,   487,   487,
     487,   488,   488,   489,   490,   490,   491,   491,   491,   491,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   493,   493,   494,   495,   495,   495,   495,
     495,   496,   496,   497,   497,   497,   498,   498,   499,   500,
     500,   501,   501,   501,   502,   502,   502,   503,   503,   504,
     504,   505,   505,   506,   506,   507,   507,   508,   508,   509,
     509,   510,   510,   511,   512,   512,   512,   513,   513,   514,
     514,   515,   515,   515,   516,   516,   517,   517,   518,   518,
     519,   519,   519,   520,   520,   520,   520,   521,   521,   521,
     521,   521,   521,   521,   521,   521,   521,   521,   521,   521,
     521,   522,   522,   523,   523,   523,   524,   524,   524,   524,
     524,   524,   525,   525,   525,   526,   526,   527,   527,   528,
     528,   528,   528,   528,   528,   529,   529,   530,   531,   531,
     531,   531,   531,   532,   532,   532,   532,   533,   533,   533,
     533,   533,   533,   533,   533,   534,   535,   536,   536,   536,
     536,   536,   537,   537,   538,   538,   538,   538,   539,   540,
     540,   541,   541,   542,   542,   542,   542,   542,   542,   542,
     542,   543,   543,   544,   545,   545,   545,   545,   546,   546,
     546,   546,   547,   548,   548,   548,   549,   550,   550,   550,
     550,   550,   550,   551,   552,   552,   553,   553,   554,   555,
     555,   555,   556,   556,   557,   557,   558,   558,   559,   560,
     560,   561,   561,   562,   563,   563,   563,   563,   564,   564,
     565,   565,   565,   566,   566,   566,   566,   566,   566,   567,
     567,   568,   568,   568,   568,   569,   570,   570,   570,   570,
     570,   570,   570,   570,   571,   571,   572,   572,   572,   572,
     572,   572,   573,   573,   573,   573,   573,   573,   573,   573,
     573,   573,   573,   573,   573,   574,   574,   574,   574,   574,
     574,   574,   575,   575,   576,   576,   576,   577,   577,   577,
     578,   579,   579,   580,   580,   581,   581,   582,   582,   583,
     583,   584,   584,   585,   585,   586,   586,   587,   587,   587,
     587,   587,   588,   589,   589,   590,   590,   591,   591,   592,
     592,   592,   592,   592,   592,   592,   592,   592,   592,   592,
     592,   592,   592,   593,   594,   594,   594,   595,   595,   596,
     596,   597,   597,   598,   598,   598,   598,   598,   598,   598,
     598,   599,   599,   600,   600,   600,   600,   600,   600,   600,
     601,   601,   601,   602,   602,   603,   604,   604,   605,   605,
     605,   605,   605,   605,   605,   605,   605,   606,   606,   607,
     607,   607,   608,   608,   609,   609,   610,   610,   611,   612,
     612,   613,   613,   614,   614,   614,   615,   615,   615,   616,
     616,   616,   616,   617,   617,   618,   618,   618,   618,   619,
     619,   620,   620,   621,   622,   622,   622,   623,   623,   624,
     624,   625,   625,   626,   626,   627,   627,   628,   628,   629,
     630,   630,   631,   631,   632,   632,   633,   633,   634,   635,
     635,   635,   635,   636,   636,   637,   637,   637,   638,   638,
     639,   639,   640,   640,   641,   641,   641,   641,   641,   641,
     641,   641,   642,   642,   642,   642,   642,   642,   643,   643,
     643,   643,   644,   644,   645,   645,   645,   645,   645,   646,
     646,   646,   646,   647,   647,   648,   648,   649,   649,   649,
     649,   650,   651,   651,   652,   652,   653,   654,   654,   655,
     655,   656,   656,   657,   657,   658,   658,   659,   660,   660,
     661,   661,   661,   661,   661,   661,   662,   662,   662,   663,
     663,   663,   663,   663,   663,   663,   664,   664,   664,   664,
     665,   665,   666,   666,   667,   667,   667,   667,   667,   667,
     667,   667,   667,   667,   667,   668,   668,   669,   669,   670,
     670,   671,   672,   673,   673,   674,   674,   675,   676,   677,
     677,   677,   677,   677,   677,   678,   678,   679,   679,   679,
     679,   680,   681,   681,   681,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   683,
     683,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   685,   685,   685,   685,   685,   685,
     685,   685,   685,   685,   685,   685,   685,   685,   685,   685,
     685,   685,   685,   685,   685,   685,   685,   686,   686,   686,
     686,   686,   686,   686,   686,   686,   686,   687,   687,   687,
     687,   687,   687,   687,   688,   688,   689,   689,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   691,   691,   692,   692,
     693,   693,   694,   694,   695,   696,   696,   696,   697,   698,
     698,   699,   699,   700,   700,   700,   701,   701,   702,   702,
     702,   702,   702,   703,   703,   703,   704,   704,   704,   705,
     705,   706,   706,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   707,   707,   708,   708,   709,   709,   709,
     709,   709,   709,   709,   709,   710,   710,   711,   711,   712,
     712,   713,   713,   713,   714,   714,   715,   715,   716,   716,
     716,   716,   716,   716,   716,   716,   717,   717,   718,   719,
     719,   720,   720,   720,   720,   720,   720,   721,   722,   723,
     723,   723,   724,   724,   725,   726,   726,   727,   728,   728,
     729,   729,   730,   730,   731,   731,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   737,   737,
     738,   738,   738,   738,   739,   739,   740,   740,   741,   741,
     742,   743,   744,   744,   745,   745,   745,   745,   745,   745,
     745,   745,   745,   745,   745,   745,   745,   745,   746,   747,
     748,   748,   748,   749,   749,   750,   750,   750,   751,   751,
     752,   752,   753,   753,   754,   755,   755,   755,   755,   755,
     756,   756,   757,   758,   758,   759,   759,   759,   759,   760,
     760,   761,   761,   762,   762,   762,   762,   763,   763,   764,
     765,   765,   766,   766,   767,   767,   768,   768,   769,   769,
     770,   770,   770,   770,   770,   770,   771,   772,   773,   774,
     774,   774,   774,   775,   775,   776,   776,   776,   777,   777,
     777,   777,   777,   778,   778,   778,   778,   779,   779,   780,
     780,   781,   781,   782,   782,   782,   782,   783,   784,   784,
     785,   785,   785,   786,   786,   786,   786,   787,   787,   787,
     787,   788,   788,   789,   789,   789,   789,   789,   789,   789,
     790,   790,   791,   792,   793,   793,   793,   793,   793,   794,
     794,   794,   794,   794,   795,   795,   796,   796,   797,   797,
     798,   799,   799,   799,   800,   800,   801,   801,   802,   802,
     803,   804,   804,   805,   805,   805,   806,   806,   806,   806,
     807,   807,   808,   808,   809,   810,   810,   810,   810,   811,
     811,   811,   811,   812,   812,   813,   813,   813,   814,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   815,   815,   815,   815,   815,
     815,   815,   815,   815,   815,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   816,   816,   816,   816,   816,   816,   816,
     816,   816,   816,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   817,   817,   817,
     817,   817,   817,   817,   817,   817,   817,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     4,     6,
       4,     6,     4,     6,     4,     6,     1,     2,     3,     2,
       1,     3,     2,     3,     1,     3,     2,     5,     3,     6,
       4,     6,     6,     6,     5,     5,     6,     9,     4,     5,
       7,     6,     4,     8,     4,     2,     4,     3,     6,     4,
       2,     2,     2,     2,     1,     2,     0,     1,     2,     2,
       2,     1,     3,     4,     2,     0,     2,     3,     2,     3,
       6,     6,     8,     6,     8,     6,     8,     6,     8,     8,
      10,     8,    10,     1,     0,     7,     1,     4,     4,     7,
       2,     1,     3,     4,     3,     0,     1,     0,     2,     3,
       5,     8,     5,     0,     5,     5,     7,     2,     0,     1,
       1,     1,     3,     2,     0,     1,     0,     1,     3,     1,
       3,     1,     3,     2,     2,     4,     5,     5,     8,     1,
       0,     3,     9,    12,     3,     0,     4,     6,     1,     2,
       1,     1,     0,     1,     2,     2,     1,     2,     2,     1,
       2,     3,     2,     2,     2,     2,     3,     3,     3,     1,
       3,     1,     0,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     0,     9,    12,     0,     2,     1,
       1,     1,     1,     1,     1,     3,     0,     1,     2,     1,
       1,     2,     2,     3,     1,     1,     2,     2,     1,     2,
       3,     5,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     1,     1,     1,     2,     1,     2,     1,     1,
       1,     3,     3,     3,     3,     2,     2,     1,     3,     1,
       1,     1,     1,     3,     1,     1,     0,     1,     1,     1,
       8,    11,     9,     1,     1,     3,     0,     1,     3,     1,
       0,     1,     0,     1,     0,     1,     3,     1,     1,     1,
       3,     0,     2,     2,     0,     2,     0,     1,     0,     1,
       1,     1,     3,     3,     1,     1,     3,     3,     3,     3,
       4,     3,     2,     1,     1,     1,     1,     1,     3,     1,
       1,     3,     3,     1,     2,     4,     4,     2,     3,     5,
       5,     1,     1,     9,     9,     1,     2,     4,     4,     4,
       2,     2,     3,     1,     3,     6,     2,     0,     3,     3,
       4,     4,     4,     4,     3,     2,     1,     1,     0,     1,
       1,     0,     1,     5,     1,     0,     1,     0,     3,     1,
       3,     4,     3,     1,     1,     0,     2,     2,     0,     2,
       2,     1,     1,     1,     0,     2,     4,     5,     4,     2,
       3,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     3,     1,     1,     2,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       2,     0,     1,     3,     2,     3,     2,     3,     2,     3,
       1,     4,     3,     4,     5,     4,     5,     4,     5,     2,
       4,     1,     1,     0,     1,     4,     5,     4,     0,     2,
       2,     2,     1,     1,     0,     4,     2,     1,     2,     2,
       4,     6,     4,     0,     2,     6,     2,     1,     3,     4,
       0,     2,     0,     2,     0,     1,     3,     3,     2,     0,
       2,     3,     5,     6,     2,     3,     3,     4,     0,     1,
       1,     1,     1,     1,     2,     4,     1,     1,     1,     1,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     2,     1,     3,     0,     1,     1,     1,
       1,     5,     2,     1,     1,     1,     1,     4,     1,     2,
       2,     1,     3,     3,     2,     1,     0,     5,     2,     5,
       2,     1,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     3,     3,     3,     3,     0,     1,
       4,     1,     3,     3,     5,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     2,     3,     3,     5,     4,
       6,     3,     5,     4,     6,     4,     6,     5,     7,     3,
       2,     4,     3,     2,     3,     3,     4,     3,     4,     3,
       4,     5,     6,     6,     7,     6,     7,     6,     7,     3,
       4,     4,     6,     1,     1,     3,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     2,     5,     6,     6,     7,     1,     1,     2,
       2,     4,     1,     1,     1,     2,     2,     3,     5,     6,
       8,     6,     6,     4,     4,     1,     1,     1,     5,     1,
       1,     4,     1,     4,     1,     4,     1,     4,     1,     1,
       1,     1,     1,     1,     6,     4,     4,     4,     4,     6,
       5,     5,     5,     4,     6,     4,     5,     0,     5,     0,
       2,     0,     1,     3,     3,     2,     2,     0,     6,     1,
       0,     3,     0,     2,     2,     0,     1,     4,     2,     2,
       2,     2,     2,     4,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     3,     2,     3,
       0,     3,     3,     2,     2,     1,     0,     2,     2,     3,
       2,     1,     1,     3,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     2,     2,     2,     3,     5,     1,     0,
       1,     2,     0,     2,     1,     0,     1,     0,     1,     3,
       3,     2,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       6,     2,     3,     5,     6,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     5,     3,     0,     1,     1,     1,     1,     4,
       7,     2,     0,     1,     1,     1,     1,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       6,     8,     6,     8,     6,     8,     1,     4,     3,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     2,     1,     4,     5,     5,     4,     6,     1,
       1,     1,     1,     1,     1,     0,     1,     3,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     2,     4,
       2,     1,     1,     1,     2,     3,     2,     3,     4,     2,
       1,     1,     1,     3,     2,     9,    11,    12,    14,     3,
       4,     4,     0,     7,    10,     2,     3,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     127,   204,     0,  1042,  1041,   204,     0,  1016,   204,   398,
     333,     0,  1111,     0,   204,     0,   127,     0,     0,     0,
       0,     0,     0,   204,   465,     0,  1110,   204,     0,  1085,
       0,     0,     0,     0,     0,     2,     4,     7,    16,    28,
      24,     0,    26,    14,    19,     6,    30,    15,    18,    31,
      11,    29,   432,   419,   467,   431,   126,   435,    27,    13,
      23,     5,    10,    21,    22,    20,  1024,    34,    25,    32,
      17,     8,    33,    35,     0,     9,    36,    12,   203,   202,
     196,     0,     0,     0,     0,     0,   197,   960,  1129,  1130,
    1131,  1132,  1133,  1134,  1135,  1136,  1137,  1138,  1139,  1140,
    1141,  1142,  1143,  1144,  1463,  1145,  1146,  1147,  1415,  1416,
    1464,  1417,  1418,  1148,  1149,  1150,  1151,  1152,  1153,  1154,
    1155,  1419,  1420,  1156,  1157,  1158,  1159,  1160,  1421,  1465,
    1161,  1162,  1163,  1164,  1165,  1466,  1166,  1167,  1168,  1169,
    1170,  1171,  1172,  1173,  1174,  1467,  1175,  1176,  1177,  1468,
    1178,  1179,  1180,  1181,  1182,  1183,  1422,  1423,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,
    1206,  1207,  1208,  1209,  1210,  1211,  1424,  1212,  1213,  1214,
    1215,  1425,  1216,  1217,  1218,  1426,  1219,  1220,  1221,  1469,
    1470,  1222,  1223,  1224,  1471,  1225,  1226,  1427,  1227,  1228,
    1229,  1230,  1231,  1232,  1472,  1233,  1234,  1235,  1236,  1237,
    1238,  1239,  1240,  1241,  1242,  1243,  1473,  1428,  1244,  1245,
    1246,  1247,  1429,  1430,  1431,  1248,  1474,  1475,  1249,  1476,
    1250,  1251,  1252,  1253,  1254,  1255,  1477,  1256,  1478,  1257,
    1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,  1266,  1267,
    1268,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1432,  1479,
    1433,  1276,  1277,  1278,  1434,  1279,  1280,  1480,  1281,  1435,
    1282,  1436,  1283,  1284,  1285,  1286,  1287,  1288,  1289,  1290,
    1291,  1437,  1481,  1292,  1482,  1438,  1293,  1294,  1295,  1296,
    1297,  1298,  1299,  1300,  1301,  1302,  1303,  1439,  1304,  1305,
    1440,  1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,  1314,
    1315,  1316,  1317,  1441,  1318,  1319,  1320,  1321,  1322,  1323,
    1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,  1332,  1333,
    1334,  1335,  1483,  1336,  1337,  1338,  1442,  1339,  1340,  1341,
    1342,  1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1443,  1354,  1355,  1356,  1484,  1357,  1358,  1444,
    1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,  1367,  1368,
    1369,  1370,  1371,  1445,  1372,  1373,  1374,  1485,  1375,  1376,
    1377,  1378,  1379,  1446,  1447,  1380,  1381,  1448,  1382,  1449,
    1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1450,  1451,  1400,
    1486,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1408,  1409,
    1410,  1411,  1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,
    1460,  1461,  1462,  1412,  1413,  1414,  1114,     0,     0,   942,
     961,   962,   967,   199,   397,   127,     0,     0,     0,     0,
       0,   327,   326,  1008,   332,     0,     0,   960,    98,  1306,
      96,   940,   961,     0,   348,   349,     0,   357,     0,   346,
       0,   367,   359,   368,   360,   343,   361,   350,   342,     0,
     369,   344,     0,     0,     0,   200,   165,   333,   127,     0,
    1029,  1030,  1028,  1019,  1024,  1031,  1032,     0,     0,   959,
    1073,  1072,   154,   984,  1102,  1446,  1380,  1112,  1103,  1100,
    1101,   201,   464,   462,     0,   927,  1259,  1342,  1352,  1446,
    1050,  1053,     0,   198,     0,   436,   567,   936,  1084,     0,
    1089,     0,  1320,   440,   443,   973,   441,   432,     0,     0,
       1,   127,     0,     0,     0,   461,   461,     0,   461,     0,
     424,   432,   427,   431,     0,  1023,  1098,  1109,  1446,  1380,
    1106,  1232,     0,     0,  1232,     0,  1232,     0,  1232,     0,
       0,   919,     0,   920,   943,   986,   987,   985,     0,   988,
     300,   331,   330,   329,   328,   333,  1232,   992,     0,     0,
       0,     0,  1003,    99,    97,   355,   356,     0,   347,   345,
       0,  1232,   366,   968,   362,  1232,   366,   938,  1232,     0,
       0,   161,     0,  1021,  1033,  1450,  1048,     0,  1049,  1039,
    1027,  1034,  1035,  1036,   127,   396,  1018,     0,     0,     0,
       0,  1104,     0,     0,     0,   945,   947,   948,   853,   958,
     922,  1416,  1417,  1418,   911,     0,  1419,  1420,  1421,  1465,
     792,   779,   788,   793,   780,   782,   789,  1422,  1423,   733,
    1199,  1424,  1425,   956,  1426,  1429,  1430,  1431,   784,   786,
    1432,  1433,     0,   957,  1435,  1436,  1288,  1438,  1439,  1441,
    1442,   790,  1444,  1445,  1446,  1447,  1448,  1449,   955,   791,
    1451,     0,     0,     0,   933,     0,   922,   764,     0,   606,
     607,   629,   630,   608,   635,   636,   638,   609,     0,   932,
     671,   807,   763,   775,     0,     0,   762,   757,   447,   928,
       0,   758,   944,   946,   912,   447,   926,  1051,  1056,  1052,
       0,     0,     0,     0,     0,   569,   568,   937,  1083,  1081,
    1082,  1080,  1079,  1086,     0,  1088,  1024,   867,     0,   442,
       0,     0,     0,   422,   421,     3,     0,     0,  1091,     0,
     459,   460,     0,     0,     0,     0,     0,     0,     0,     0,
     515,   481,   482,   484,   512,   516,   524,     0,   428,     0,
     973,  1107,     0,     0,     0,   114,   114,     0,     0,     0,
       0,     0,    91,    40,    84,     0,     0,     0,     0,   179,
     192,     0,     0,     0,     0,     0,   189,     0,     0,   172,
      42,   166,   168,     0,   114,     0,    38,     0,     0,     0,
      44,     0,     0,     0,     0,   767,   871,   467,   869,   942,
       0,   918,     0,   975,  1487,  1488,  1489,  1490,  1491,  1492,
    1493,  1494,  1495,  1496,  1497,  1498,  1499,  1500,  1501,  1502,
    1503,  1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,
    1513,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,   915,   914,   941,   976,   977,   978,   979,   921,     0,
       0,   394,     0,     0,   989,     0,  1232,   160,  1232,   300,
       0,   300,  1002,  1005,   358,   354,   352,   351,   353,     0,
     364,   365,     0,   337,     0,   969,     0,     0,   339,     0,
       0,     0,     0,   127,     0,   173,  1044,  1045,  1043,     0,
       0,  1026,   176,   193,  1038,  1047,  1037,  1046,  1025,  1020,
       0,  1017,   385,  1062,  1061,  1070,   155,     0,   965,   617,
     646,   624,   646,   646,   613,   613,   626,   614,   615,   651,
       0,   646,   613,   618,     0,   616,   654,   654,   641,   874,
     598,   599,   600,   601,   627,   628,   602,   633,   634,   603,
     668,     0,   613,   966,   127,  1105,  1113,     0,   760,   645,
     632,   910,     0,     0,   640,   639,     0,     0,     0,     0,
       0,   622,   621,   620,   766,   877,     0,   619,     0,     0,
     646,   646,   644,   694,     0,   623,     0,     0,   890,     0,
     896,     0,     0,     0,   650,     0,   648,     0,     0,   695,
     675,   676,   764,   867,     0,   759,   765,   951,     0,     0,
     668,   931,   853,     0,   850,   851,   852,     0,     0,     0,
     925,     0,   861,   863,     0,     0,   710,   859,     0,   713,
       0,     0,     0,     0,   847,   848,   849,   841,   842,   843,
     844,   845,   846,   857,   840,   691,     0,     0,   809,     0,
     690,     0,     0,   531,     0,   949,   913,   531,  1064,  1068,
    1069,  1067,     0,  1063,  1055,  1054,  1059,  1057,  1060,  1058,
       0,  1077,     0,  1074,   528,     0,   444,     0,     0,  1097,
       0,   121,     0,  1092,     0,   439,   438,   468,   469,   475,
     437,   501,   502,     0,     0,     0,     0,   521,   519,   492,
     485,   491,     0,     0,   489,     0,   493,   671,   514,   426,
     479,   480,   483,   425,     0,   517,     0,   527,   515,   484,
       0,  1099,  1108,     0,     0,     0,     0,     0,  1232,     0,
       0,    75,    56,   252,     0,   113,     0,     0,     0,     0,
       0,     0,     0,    83,    80,    81,    82,     0,     0,     0,
       0,   177,   178,   191,     0,   182,   183,   180,   184,   185,
       0,     0,   170,   171,     0,     0,     0,     0,   169,     0,
       0,     0,     0,     0,     0,     0,     0,   467,   467,   467,
     773,     0,     0,   466,     0,     0,   916,   919,   384,   308,
       0,   298,     0,     0,     0,     0,     0,   333,   995,   993,
     991,   994,   996,     0,     0,   157,   159,     0,   297,   271,
       0,  1007,  1232,  1004,   288,     0,   366,   363,   970,     0,
     366,   939,     0,   366,   164,  1232,   300,     0,  1022,  1040,
     174,   194,   175,   195,   417,     0,   391,   399,   404,   382,
       0,   382,     0,   401,   405,   382,   400,   382,   395,     0,
     156,     0,   598,   594,   590,   657,   658,   659,   656,   669,
     655,     0,   604,   660,   983,     0,   610,   613,   982,     0,
     923,     0,     0,   909,   905,     0,     0,     0,     0,     0,
       0,   878,   881,   882,   883,   880,   884,   879,     0,     0,
     885,     0,     0,     0,   643,   642,     0,   839,   850,   851,
     852,   847,   848,   849,   841,   842,   843,   844,   845,   846,
     865,     0,     0,     0,     0,     0,     0,     0,     0,   734,
       0,     0,   834,     0,   867,   895,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   867,   901,     0,   922,
       0,     0,     0,     0,   952,   672,   686,   687,   688,   692,
     981,   980,   930,     0,   924,     0,     0,   673,   696,   701,
       0,   902,   729,     0,   717,     0,   709,     0,   715,   719,
     697,   712,     0,   693,     0,   925,   862,   864,     0,   860,
       0,   683,   684,   685,   677,   678,   679,   680,   681,   682,
     689,   838,   836,   837,     0,     0,     0,   817,     0,     0,
     714,  1225,  1259,     0,   458,   458,   458,   446,   456,   929,
       0,   584,   467,   584,     0,   668,   570,   973,  1087,  1075,
    1076,   868,   972,   127,     0,  1095,     0,     0,     0,   133,
     116,     0,  1093,     0,   149,   531,     0,   922,     0,   473,
     474,     0,   478,  1442,  1339,     0,     0,     0,     0,   494,
     522,     0,   513,     0,   945,   495,   944,   496,   499,   500,
     490,   523,   934,   525,     0,   518,   430,   429,   529,     0,
      41,     0,  1232,    58,     0,     0,     0,     0,     0,     0,
     207,   243,   207,    95,  1232,   366,  1232,   366,  1133,  1200,
    1353,     0,    54,    87,     0,   276,   107,     0,   261,   305,
      77,    92,   100,     0,     0,    43,   167,   181,   186,   103,
     190,   187,  1012,   188,   114,     0,    39,     0,   101,     0,
    1010,     0,     0,    45,   105,  1014,     0,     0,     0,     0,
     870,   768,   872,   873,   918,     0,   383,     0,   299,     0,
     393,   373,   374,   384,     0,   300,   992,     0,     0,     0,
       0,     0,   291,   289,   319,     0,   296,   290,   298,     0,
       0,   247,     0,  1127,     0,     0,     0,     0,   336,   971,
     338,     0,   340,     0,     0,   386,     0,   389,     0,   388,
     392,   387,   381,     0,   412,     0,     0,     0,     0,     0,
       0,  1071,   595,   591,     0,     0,     0,     0,     0,     0,
       0,     0,   875,   611,   463,     0,     0,     0,   906,     0,
       0,   805,     0,   781,   783,   612,   795,     0,   625,   785,
     787,     0,   854,     0,     0,     0,   796,   736,   737,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   752,   751,   797,   833,
       0,     0,   893,   894,   798,   653,   652,   654,   654,     0,
       0,   900,     0,     0,     0,   803,   761,   868,   637,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   718,   711,
       0,   716,   720,     0,     0,     0,   705,     0,     0,   703,
     730,   699,     0,     0,   731,     0,     0,     0,   774,   458,
     458,   458,   458,   455,   457,     0,     0,     0,     0,  1339,
       0,   553,   530,   532,   540,   553,   558,   776,   582,   777,
     936,     0,   504,     0,   504,     0,  1065,  1078,     0,  1096,
       0,   138,   120,   140,   139,     0,   147,     0,   922,     0,
     138,   122,     0,   141,     0,  1095,     0,   153,   470,     0,
     855,   478,     0,   472,   498,   497,     0,   488,   520,   486,
       0,   526,     0,     0,     0,   251,     0,     0,     0,   207,
       0,     0,   315,     0,   302,    76,     0,     0,     0,    50,
       0,    68,    60,    46,    74,     0,     0,    79,     0,    72,
      89,    90,    88,    93,     0,   235,   217,   248,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   771,   772,   769,   467,   917,   415,   416,   172,   414,
     309,     0,     0,  1007,   990,     0,     0,   160,   300,     0,
     275,   271,     0,   269,   268,   270,     0,  1128,   165,     0,
    1123,  1006,     0,     0,  1001,   366,     0,   418,     0,   377,
     413,   402,   407,     0,   411,   409,   408,   403,   406,     0,
       0,   596,     0,   662,   663,   664,   665,   666,   667,     0,
     661,   605,   631,     0,   908,   904,     0,   778,   876,     0,
     866,   888,   887,   735,   747,   748,   749,   889,     0,     0,
       0,   744,   745,   746,   738,   739,   740,   741,   742,   743,
     750,   898,   897,   891,   892,   649,   647,     0,   800,   801,
     802,   899,   835,   668,   953,   674,     0,     0,   702,   903,
     721,     0,     0,     0,   698,   854,     0,     0,     0,     0,
       0,   707,     0,     0,     0,   820,   815,   816,     0,     0,
       0,     0,   449,   448,   454,   553,   558,     0,   432,     0,
     540,     0,   552,   538,   551,     0,     0,   564,   562,     0,
     564,     0,   564,     0,   534,     0,   554,   536,   551,     0,
     574,   937,   583,     0,   511,   768,   511,     0,   445,  1094,
       0,  1090,     0,     0,     0,   128,   125,   115,     0,     0,
     150,   138,   129,     0,   471,   476,   477,   487,   935,   108,
     207,     0,     0,    57,     0,   317,   263,   295,   278,     0,
       0,     0,   208,     0,   283,     0,    49,    69,     0,    65,
       0,    94,     0,     0,     0,     0,     0,    52,    64,     0,
      47,     0,   366,   366,    55,   262,   214,  1288,     0,   841,
     842,   212,   304,   209,   310,   211,   213,   613,   210,   307,
     104,  1013,     0,   102,     0,  1011,   111,   109,   106,  1015,
       0,   396,   376,     0,     0,  1232,     0,  1007,   158,   297,
       0,   325,   247,   320,     0,  1127,  1125,     0,  1122,     0,
       0,     0,   341,     0,   390,     0,   410,     0,   592,   597,
     670,   907,   794,   804,   886,     0,     0,     0,     0,   799,
     954,   727,   725,   722,     0,   723,   706,     0,     0,   704,
     700,     0,   732,   806,     0,   822,   819,   453,   452,   451,
     450,   539,   537,     0,   542,   964,   963,   549,     0,   533,
       0,   563,   559,     0,   560,     0,     0,   561,     0,     0,
     535,     0,   963,     0,   581,     0,     0,   811,   950,   811,
    1066,   137,   117,     0,   118,   148,     0,     0,     0,     0,
     142,   370,     0,   313,    59,     0,   295,     0,   207,   280,
     279,   282,   277,   281,   284,     0,     0,     0,     0,     0,
     264,     0,     0,     0,   228,     0,     0,   295,   301,   224,
     225,   334,     0,     0,     0,    61,    51,    48,    53,    62,
       0,     0,    63,    66,   589,    78,    71,   613,   613,     0,
       0,     0,   770,   372,   379,   172,     0,     0,     0,     0,
     297,     0,     0,     0,  1127,     0,     0,   205,     0,   244,
       0,   162,  1126,     0,  1115,     0,   999,  1000,     0,     0,
     378,   593,   753,     0,     0,     0,   724,   728,   726,   708,
     808,     0,   467,   577,     0,   580,   541,     0,     0,   543,
       0,     0,   545,   547,     0,     0,     0,     0,   585,     0,
       0,     0,   940,     0,   503,   505,   508,   507,   510,     0,
     434,   433,     0,     0,     0,   151,     0,   144,   144,     0,
     130,   856,     0,   207,     0,   294,   314,   242,     0,     0,
     226,     0,   232,     0,   266,   267,   265,   227,   295,   300,
     229,   335,     0,    70,     0,    86,   613,     0,   306,   112,
     110,   396,     0,  1007,  1122,     0,     0,   271,   165,  1124,
     260,   253,   254,   255,   256,   257,   258,   259,   274,   273,
     245,   246,     0,     0,     0,  1001,     0,   754,     0,   755,
       0,   825,   582,     0,     0,   576,     0,   550,   566,     0,
     546,   544,     0,   555,     0,   589,     0,   557,   509,     0,
     810,   812,     0,     0,   124,     0,   584,     0,     0,   146,
     146,   132,     0,   300,   316,     0,   286,   293,   285,     0,
       0,   223,     0,   230,   324,   216,   588,     0,    73,     0,
     311,   371,   375,     0,  1116,     0,  1122,   247,  1127,     0,
    1119,     0,     0,  1007,   756,   821,     0,     0,     0,   575,
     578,     0,   548,     0,     0,   586,   587,   556,   506,     0,
       0,   119,   144,   123,   152,   143,   475,   145,   475,     0,
     324,   272,     0,     0,   250,   216,     0,   241,     0,    67,
      85,   312,     0,   297,  1117,   206,   163,  1120,  1121,     0,
     584,  1415,  1177,  1387,     0,   823,   826,   824,   818,     0,
     565,   573,   813,   814,   146,   478,   478,   584,   241,   287,
     292,     0,   231,   233,   321,   322,   323,     0,   237,   234,
     238,     0,  1122,     0,   997,     0,   830,   829,   828,   832,
     831,   579,     0,   571,   475,   135,   134,   131,   207,   249,
       0,     0,     0,   239,     0,   240,   215,  1118,  1007,     0,
       0,   478,   318,   220,     0,   219,     0,   303,   236,   584,
     827,     0,   136,   218,   222,   221,   998,   572
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1851,  1852,  1853,  1561,   802,
    2468,  1562,   803,   804,  1855,    38,    39,  1207,   500,  1499,
    1150,  2228,    41,  1806,  1504,  1810,  2355,  2051,  1805,  1812,
    2449,  2506,  1807,  1505,  2356,  1506,    42,    43,  1275,    44,
     621,    45,  1276,  1234,   983,   822,  1224,   972,    46,    80,
      47,  1842,  2112,  2519,  1865,  2597,  2258,  2259,  1563,  2558,
    2559,  1844,  1907,  1216,  2552,  1622,  2408,  1567,  1550,  2260,
    1631,  2365,  2141,  1564,  2082,  1623,  2245,  2455,  1283,  1624,
    2456,  2238,  1625,  1259,  1279,  2084,  2560,  1568,  1260,  2113,
    1203,  1626,  2517,  1627,   465,  2263,    48,   492,   493,   612,
     953,   494,   501,    50,  1613,  2285,  1918,  2286,  1653,  1607,
     981,  1650,  1304,  1263,   982,   456,  1318,  1919,  1888,  1305,
     502,   707,    53,    54,    55,   549,   543,   544,  1123,  1477,
    1775,   772,   524,   525,   559,  1253,  1157,  1158,  1512,  1823,
    1182,  1183,   781,   782,  1170,  1174,  1175,  1525,  1518,  1163,
    2044,  2344,  2345,  2346,  2217,  1178,  1179,   784,   785,   786,
    1187,  1535,    57,  1481,  1782,  1783,  1784,  2022,  2023,  2037,
    2033,  2202,  2332,  1785,  2210,  2573,  1786,  2323,  2324,  2425,
    2040,  1792,  2337,  2338,  2385,  1009,  1324,  1010,   708,  1011,
    1336,   709,  1047,  1013,   710,   711,   712,  1016,   713,   714,
     715,   716,  1030,   717,   718,  1064,  1332,  1333,   757,  1388,
     720,   721,   722,  1788,   723,  1118,  1467,  2350,  2440,  2441,
    1768,  2006,  2185,  2322,  2488,  2535,  2536,   724,  1464,  1113,
    1114,   725,  2115,  1116,  1381,  1407,   837,   838,  1021,  1358,
    1359,  1384,  1695,  1391,  1396,  1722,  1723,  1408,  1432,   726,
    1343,  1344,  1679,  1032,   727,   583,   842,   584,  1028,  1426,
     735,   728,   729,  1531,   536,  2328,   617,   922,   730,   731,
     732,   733,   734,  2197,   449,  2507,   955,   762,   840,  1565,
    1422,    58,   640,   588,    59,   934,  1270,    60,  2307,  2151,
     943,  1285,  1635,   466,    61,    62,    63,    64,    65,   566,
     975,   503,   976,   977,   627,    66,   984,   629,   630,    67,
     530,   531,   985,  1134,   986,    68,   511,    69,   753,   540,
     754,   756,   505,   769,  1801,  1495,    71,    72,   518,   519,
      73,    74,   532,    75,    76,  2304,   506,  1910,   940,   472,
     451,   452,   927
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2295
static const int yypact[] =
{
    3972,  -142,   461, -2295, -2295,  -142, 28939, -2295,  -142,    42,
    1964, 30739, -2295,  4567,  -142, 35239,   380,   218,   409,   310,
   35239, 35239, 31189,  -142,   181, 35689, -2295,  -142, 31639,   -50,
     173, 36139, 35239,  1139,   524,   117, -2295, -2295, -2295, -2295,
   -2295,    47, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295,    72, -2295,   121,   113,   336,   197, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295,   175, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, 32089, -2295, -2295, -2295, -2295, -2295,
   -2295, 36589, 35239, 37039, 32539, 37489, -2295,    83, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295,   224,   417, -2295,
      85, -2295, -2295, -2295, -2295,  1139, 35239,   546,   582,   355,
   37939, -2295, -2295, -2295, -2295,   510,   567, -2295, -2295, 32989,
   -2295, -2295, -2295,   467, -2295, -2295,   317, -2295,    55, -2295,
     340, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,   429,
   -2295, -2295, 38389, 38839, 39289, -2295,   329,    18,   425, 18063,
   -2295, -2295, -2295, -2295,   175, -2295, -2295,   310,   310, -2295,
   -2295, -2295,  -173,   342, -2295,   407,   662, -2295, -2295, -2295,
     396, -2295, -2295,   613,  7821,  7821, 39739,   310, 39739,   455,
   -2295, -2295,   227, -2295, 19421, -2295,   451,   417, -2295,    91,
     785, 10181, 35239,   452, -2295,   464,   452,   487,   503,   336,
   -2295,  3972,   799,   817, 31639,   209,   209,   956,   209,   730,
     887, -2295,  1267, -2295,   545, -2295, 35239, -2295,   588,   839,
     396,   899,   107,   764,   917,  5397,   942,   802,   965,  1013,
    5933, 10181, 22756, -2295,   417, -2295, -2295, -2295,   645, -2295,
     650, -2295, -2295, -2295, -2295,    18,   889, -2295,   725, 40189,
   40639, 35239,  1096, -2295, -2295, -2295, -2295,   746, -2295, -2295,
     262,  1078,    48,   782, -2295,  1113,    49, -2295,  1124,  1014,
   10181, -2295,   931, -2295, -2295,   173, -2295,   450, -2295, -2295,
   24556, -2295, -2295, -2295,   425,   821, -2295, 24556, 10181, 44689,
    1279, -2295,  1098, 35239,   859, -2295, -2295, -2295, -2295, -2295,
   -2295,  1321,    98,  1328, 10181,   870,    98,    98,   876,  1189,
   -2295, -2295, -2295,    88,   901,   908, -2295,   104,   104, -2295,
    1058,   909,   926, -2295,   109,  1355,  1377,   118,   933,   952,
     226,    98, 10181, -2295,   962,   104,   964,   966,   978,  1455,
    1008, -2295,  1476,  1016,   137,   168,  1017,  1023, -2295, -2295,
     122, 10181, 10181, 10181, -2295,  6877, -2295,   417,   310, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295,  1024, -2295,   125,  5016,
   -2295,  1049, -2295, -2295,  1146, 10181, -2295, -2295,   -53, -2295,
     127, -2295, -2295, -2295,   417,  1276,  1022, -2295, -2295, -2295,
     147,  1399, 23656, 24106, 35239, -2295, -2295,   417, -2295, -2295,
   -2295, -2295, -2295, -2295,   531, -2295,   175, 25699,   533,   452,
   35239, 35239,  1461, -2295, -2295, -2295, 31639, 35239, 41089,  1145,
   -2295, -2295,   336,   336, 10181,   336,   166,   977,  8293, 10653,
    1338,  1234,   101,    74,  1344, -2295,  1244,   730,   887, 10181,
     464, -2295,  1286, 35239, 29389,   713,   784,  1044,  1126,  1052,
     -32,  1439, -2295,  1054, -2295,  1135, 35239, 45125,    76, -2295,
    1475,    76,    76,   514,  1480,  1152,   179,  1300,   439,   353,
    1054,  2092, -2295, 31639,    64,   515,  1054, 35239,  1155,   598,
    1054, 10181, 10181, 10181,  1077, -2295, 25699,   -84, -2295,   518,
     955, 22305,  1073, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,  1159,
   35239,  1118,   -93,  1408,  1466, 35239,  1306,  2092,  1308,  1093,
    1528,   650, -2295, 41539, -2295, -2295, -2295, -2295, -2295, 35239,
   -2295, -2295, 35239, -2295, 26689,  1095, 35239, 35239, -2295, 35239,
   35239,   540, 41989,   425, 28489, -2295, -2295, -2295, -2295,   494,
     634, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   26689, -2295,  1798, -2295, -2295, -2295,  1091,   555, -2295, -2295,
    1150, -2295,  1150,  1150,  1099,  1099,  1104, -2295, -2295, -2295,
     226,  1150,  1099, -2295, 45125, -2295,   311,   477, -2295, -2295,
    1540, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
      12,   556,   521, -2295,  1139, -2295, -2295, 10181,   417, -2295,
    1106, 25699,  1149, 10181, -2295, -2295, 10181,  1109,  1572,  1572,
   10181, -2295, -2295, -2295, -2295,   154,  1572, -2295,  1572,  1572,
    1150,  1150, -2295, 25770, 10181, -2295, 21231, 10181, 13013,  8765,
   10181,  1194,  1198,  1572, -2295,  1572, -2295, 10181,  7349, 25770,
    1577,  1577,  1295,  5168,  1116,   417,   417, -2295,  1572,    77,
     -12, -2295,    84, 44689, 10181, 10181, 10181, 10181, 26239,  1202,
      92, 35239, 10181, 10181,  1122,  1021, -2295, 10181,  1334, -2295,
    1127, 10181,  1207,   579, 10181, 10181, 10181, 10181, 10181, 10181,
   10181, 10181, 10181, -2295, -2295, 14890,   129,  1427,  1447,   -89,
     194, 33439,  7821,  1442,  5933, -2295,   119,  1442, -2295, -2295,
   -2295, -2295,   128, -2295, -2295, -2295, -2295,  1091, -2295,  1091,
    1134, 35239,    91, 30289, -2295, 10181, -2295,   566,  1143,  1206,
     840,  1585, 35239, -2295, 19873,  1416, -2295,  1151, -2295, 25003,
    1416, -2295, -2295, 13474,  1268,  1412,  1358, -2295, -2295, -2295,
    1156, 25699, 11125, 11125, -2295,   758, 25699,   793, -2295, -2295,
   -2295, -2295, -2295, -2295,   665, -2295, 35239,   -24,  1338,    74,
     673, -2295, -2295,  1215,  1163, 42439, 35239,  1415,  1382,  1424,
    -170, -2295, -2295, -2295, 44689, -2295, 35239, 35239, 42889, 43339,
   27139, 35239, 26689, -2295, -2295, -2295, -2295, 35239,   890, 35239,
    5430, -2295, -2295, -2295,    76, -2295, -2295, -2295, -2295, -2295,
   35239, 35239, -2295, -2295,    76, 35239, 35239,    76, -2295,  1218,
   35239, 35239, 35239, 35239,  1274, 35239, 35239,   -74,   -74,  1364,
   -2295,  9237,  1169, -2295, 10181, 10181, -2295, 10181,  1336, -2295,
     674, -2295,  1378,    45,  1220, 35239, 35239,  1002, -2295, -2295,
   -2295, -2295, -2295,  1174,  1501, -2295,  2092,  1503, 29839,   641,
    1257,  1217,  1398, -2295, -2295,  1385,    48, -2295, -2295, 26689,
      49, -2295,  1386,    80, -2295,  1402,   650,  1621, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295,   690, 17611, -2295, -2295,  1622,
     310,  1622,   656, -2295, -2295,  1622, -2295,  1622, -2295, 24556,
   -2295, 10181,  1624,  1195,  1199,  1271,  1280,  1283, -2295,  1208,
    1285,  1572, -2295, -2295, -2295, 44689, -2295,   655, -2295,   702,
   -2295, 10181, 10181,    97, -2295, 25112,   710, 10181,  1209,  1210,
     716, -2295, -2295, -2295, -2295, -2295, -2295, -2295,  1212,  1513,
   -2295,  1213,  1216,  1221, -2295, -2295,  4705, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295,  1223,  1228, 25149,  1241, 13013, 13013,  6877,  1652, -2295,
   13013,  1246, -2295,   718, 25037,  1214,  1247,  1266,  1270,  1250,
    1259, 25410,  9709, 10181,  9709,  9709, 25438,  1214,  1260, -2295,
   10181,  1262,  1264,  1273, -2295, -2295,  4185,  4185,  4185, 25770,
   -2295, -2295, -2295,  1284, -2295, 13013, 13013, -2295,  4211,  2071,
    6877, -2295, -2295,  1579, -2295,   472, -2295,  1277, -2295, -2295,
    2424, -2295, 21231, 25736, 10181,   102, -2295, 10181,  1122, 10181,
    1347,  4185,  4185,  4185,   198,   198,   136,   136,   136,   666,
     194, -2295, -2295, -2295,  1294,  1298,  1301,  1467,  1008, 10181,
   -2295,   766,   811, 35239,  2598,  4082,  4362, -2295, -2295, -2295,
   16255,  1320,   -84,  1320,  1572,   -12, -2295,   464, -2295, -2295,
   -2295, 25699, -2295,  1139, 16255,  1325,  1345,   -91, 18516,  1510,
   -2295, 35239, -2295, 35239, -2295,   -37,  1311, -2295, 10181, -2295,
   -2295,  2620,  1327,  1514,  1517,   866,   866,   758,  1520, -2295,
   -2295,  1360, -2295, 10181,   797, -2295,   820, -2295, -2295, -2295,
   -2295,  1309, -2295, -2295,  1558, -2295, -2295, -2295, -2295,  1407,
    1054, 10181,  1539, -2295,    54,  1330,  1655,   271,  1614, 35239,
   -2295,  1535, -2295,   401,  1662,    80,  1666,    80, 26689, 26689,
   26689,   722, -2295, -2295,   310, -2295, -2295,   732, -2295,   253,
   -2295, -2295, -2295,  1425,   603,  1054,  2092, -2295, -2295, -2295,
   -2295, -2295, -2295, -2295,    87,   769,  1054,  1426, -2295,  1429,
   -2295,  1430,   778,  1054, -2295, -2295,  1352,  1356,  1357, 10181,
   -2295, -2295, 25699, 25699, 25699,  1346, -2295,   110, -2295, 35239,
   -2295, -2295, -2295,  1336, 35239,   650, -2295,   659, 35239, 35239,
   35239, 35239, -2295, -2295, -2295,  1359,  1361, -2295, 44689,   -82,
    1551,  1562, 35239,  1400,  1052,  1800,  1686, 35239, -2295, -2295,
   -2295, 35239, -2295,  1690,  1139, -2295, 26689, -2295, 28039, -2295,
   -2295, -2295, -2295,   310, -2295,   310,  1584, 35239, 23206,   310,
     310, -2295,  1383,  1199,  1572,    78,   123,   -13,  1500,  1572,
    1602,  1396, -2295, -2295, -2295,   739, 25472, 10181, -2295,  1714,
   44689, -2295,  5234, -2295, -2295, -2295, -2295, 10181, -2295, -2295,
   -2295, 10181, -2295, 21231, 10181,  1688, -2295,  1844,  1844,  5168,
   44689, 13013, 13013, 13013, 13013,    75,   964, 13013, 13013, 13013,
   13013, 13013, 13013, 13013, 13013, 13013, 13946,   330, -2295, -2295,
   10181, 10181,  1709,  1688, -2295, -2295, -2295,   387,   387, 44689,
    1404,  1214,  1406,  1409, 10181, -2295,   417, 21689, -2295,  1397,
     310, 10181,   911,  1568, 10181,   743, 10181,  1705, -2295, -2295,
    1403, -2295, -2295, 44689, 10181,  1410,  2546, 13013, 13013,  2674,
   -2295,  3425, 10181,  6877, -2295,  1364,  1448, 20325, -2295,  1499,
    1499,  1499,  1499, -2295, -2295, 35239, 35239, 35239, 16707,  1716,
   15802, 33889,  1411,   640, -2295, 33889, 34339, -2295,  1428, -2295,
     417, 10181,  1708,  1417,  1708,  1418, -2295, -2295,  1422,  1411,
   10181,  1565, -2295, -2295, -2295,  1468, -2295,   744, -2295,  1812,
    1565, -2295,   750, -2295, 19873,  1325, 10181,   417, -2295,  1433,
   -2295,  1327,   517, -2295, -2295, -2295,  1626, -2295, -2295, -2295,
   35239, -2295, 35239, 21708,  1756, -2295, 35239, 35239, 35239, -2295,
   35239,   757,   449,  1435, -2295,   449,  1736,    99,  1052,   179,
    3556,   -43, -2295, -2295, -2295,  1506, 35239, -2295, 35239, -2295,
   -2295, -2295, -2295, -2295, 27139, -2295, -2295, -2295, 26689, 20780,
   26689, 35239, 35239, 35239, 35239, 35239, 35239, 35239, 35239, 35239,
   35239, -2295, -2295, -2295,  1364, -2295, -2295, -2295,   353, -2295,
   -2295,   110,  1438,  1217,  1466, 43789,   761,  2092,  1440,  1873,
   -2295,   641, 29839, -2295, -2295, -2295,  1832, -2295,   329,   139,
   -2295, -2295,  1139, 35239,  1498,    80, 35239, -2295,   763, -2295,
   -2295, -2295, -2295, 35239,  1441, -2295,  1441, -2295, -2295,  1572,
    1444, -2295,  1445, -2295, -2295, -2295, -2295, -2295, -2295,  1449,
   -2295, -2295, -2295, 10181, 25699, -2295,  1451, -2295, 25699, 21727,
   -2295, 25699,  1709, -2295,  1153,  1153,  1153,   440,  1752,   167,
    1454,  1153,  1153,  1153,   204,   204,    73,    73,    73,  1844,
     330, 25699, 25699, -2295, -2295, -2295, -2295,  1456, -2295, -2295,
   -2295,  1214, -2295,   -12, -2295,   238, 10181, 10181,  4211, -2295,
   25790, 10181, 44689,   807,  4211,   144, 10181,  2804,  4155, 10181,
   10181,  4205, 21786,  1457, 10181, 44239, -2295, -2295, 35239, 35239,
   35239, 35239, -2295, -2295, -2295, 33889, 34339,  1459, 15349,   640,
    1463, 34789, -2295, -2295,  1460, 16255,  1706,  1647, -2295, 16255,
    1647,   779,  1647,  1713,  1554, 18969, -2295, -2295,  1470,  1667,
   -2295,   272, 25699,  1888,  1768,   310,  1768,   310, -2295, 25699,
    7821, -2295,  1139,   752, 35239,   417,   -81, -2295,  1488, 35239,
   -2295,  1565, 25699, 21231, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, 35239,   835, -2295,   846,   449, -2295,  1515, -2295,   495,
    1758,    29, -2295, 26689,  1889,   691, -2295,  1767,  1695, -2295,
      76, -2295, 10181,   691,  1696,   169, 35239, -2295, -2295,  2265,
   -2295, 44689,    80,    80, -2295, -2295, -2295,  1433, 45125,   494,
     634, -2295, -2295, -2295, -2295, -2295, -2295,   521, -2295,  1507,
   -2295, -2295,  1566, -2295,  1567, -2295, -2295, -2295, -2295, -2295,
    1494,   821,    27, 35239,  1923,  1717,  1497,  1217, -2295, 29839,
    1376,   153,  1562, -2295,    86,  1400, -2295,  1862,  1536,  1701,
   35239,  1509, -2295,  1936, -2295, 28039,  1441,  1511, -2295, -2295,
   -2295, 25699, -2295, -2295, -2295, 13013,  1810,  1518, 44689, -2295,
   -2295,  4211,  4211, 25790,   851, -2295,  4211, 10181, 10181,  4211,
    4211, 10181, -2295, -2295, 21820,  1697, -2295, -2295, -2295, -2295,
   -2295, -2295, -2295, 27589, 33889, -2295,  1519, -2295, 35239,   640,
   16255, -2295, -2295,    20, -2295, 16255,  1770, -2295, 16255, 28939,
   -2295, 35239,  1522, 35239, -2295, 11597, 10181,  1552, -2295,  1552,
   -2295,  1022, -2295,   -91, -2295, -2295,  1912, 17159,  1869, 10181,
   -2295, -2295,  1529,   449, -2295,  1685,  1515,  1533, -2295, -2295,
   -2295, -2295, -2295, -2295, -2295,   857,  1537, 35239, 35239, 13013,
   -2295,   691,   520,   133, -2295,  1791, 35239,  1515, -2295, -2295,
   -2295, -2295,  1895,  1973,  1865, -2295, -2295, 25699, -2295, -2295,
    1572,  1572, -2295, -2295,  1941, -2295, -2295,   521,   446, 20780,
   35239, 35239, -2295, -2295, -2295,   353,  1896,   885,  1139,  1867,
   29839,  1981,  1547, 35239,  1400,   770,   770, -2295,  1682, -2295,
    1684, -2295, -2295,   170, -2295, 35239, -2295, -2295, 17159,  1139,
   -2295, -2295,  2471, 13013, 44689,   891, -2295,  4211,  4211,  4211,
   -2295,  1968,  1364, -2295,   913,  1987, -2295, 35239,   919, -2295,
   10181,  1569, -2295, -2295, 16255,    20,  1570,   920, -2295, 44689,
   35239,   921, 44689,  6405,  1561, -2295, -2295, 25699, 25699, 35239,
   -2295, -2295,  1609, 35239, 10181, -2295,   937,  1965,    28,    15,
   25699, -2295, 35239, -2295, 26689, -2295,   449, -2295, 26689, 10181,
   -2295,   708,   440,  2001, -2295, -2295, -2295, -2295,  1515,   650,
   -2295, -2295,  1859, -2295, 35239,  1628,   594,  1642, -2295, -2295,
   -2295,   821,   310,  1217,  1536, 35239,  1139,   641,   329, -2295,
   -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295,
   -2295, -2295,  1977,  1774,  1980,  1498,   975,  2471,   981, -2295,
   10181,   -16,  1428, 27589,  1578, -2295,   986, -2295, 25699, 35239,
   -2295, -2295, 10181, -2295, 35239,  1941,   988, -2295, -2295, 11597,
    1575, -2295,  2014,  1139, -2295, 22083,  1320, 17159, 35239, 35239,
   35239, -2295,  1698,   650,   449,   992, -2295,  1594, -2295, 22185,
    1795, -2295,  1876, -2295,  1819,  1593, -2295, 10181, -2295,  1663,
   -2295, -2295, -2295,  2030, -2295,  1597,  1536,  1562,  1400,  1796,
   -2295,  1797,  1600,  1217, -2295,  1214, 12069, 12069,  1601, -2295,
   -2295, 35239, -2295,   994,   996, -2295, -2295, -2295, -2295, 35239,
    1604, -2295,  1965, -2295, -2295, -2295,   206, -2295,   206, 19873,
    1819, -2295, 26689, 20780,  1825,  1593,   -21,  1802,  2092, -2295,
   25699, -2295,  1139, 29839, -2295, -2295, -2295, -2295, -2295, 17159,
    1320, 14418,  1743,   157, 25074, -2295, -2295, -2295, -2295,  1000,
   -2295,  1759, -2295, -2295, 35239,  1327,  1327,   279,  1802, -2295,
   -2295,  1887, -2295, -2295, -2295, -2295, -2295,    81,  1815, -2295,
    1817,  1502,  1536,  1006, -2295,  2055, -2295, -2295, -2295, -2295,
   -2295, -2295,  1620, -2295,   206, -2295, -2295, -2295, -2295, -2295,
     623,   623,  1976, -2295,  1679, -2295, -2295, -2295,  1217, 12541,
   10181,  1327,   449, -2295,  2073, -2295,   140, -2295, -2295,  1320,
   -2295, 22247, -2295, -2295, -2295, -2295, -2295, -2295
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2295, -2295, -2295,  1550, -2295, -2295, -2295,   252, -2295,   886,
   -2295,   243,  -511,   568, -2295, -2295, -2295,  -769,    21, -2295,
   -2295, -2295, -2295,    65,   306, -2295,  -325, -1643,  -100, -2295,
   -2094, -2197, -2295,  -383, -2123, -1444, -2295,  -908,   231, -2295,
   -1834, -2295,  -570,  -805,  -615,  -801, -2295,    34, -2295,  1317,
    -905, -1522, -2100,  -385, -2295,  -450, -2295,  -239, -1504,  -427,
    -414, -2295, -1993,  -758, -2295,  1342,  -158, -2295,   592, -2295,
   -1828, -2295, -2295,   581, -2295,  -778, -2295, -2295, -1600,   239,
    -368, -1976, -2058,   536,  -578, -2295,  -408,   283, -1492, -2295,
     608, -2295,  -354, -2295,  -451, -1869, -2295, -2295, -2295,  1211,
    -572, -2295,    31, -2295, -2295, -2295, -2295, -2295,  -472,   544,
   -1997, -2295,   522, -2295, -2295, -2295, -2295,     6,   273, -2295,
       8,  1401,   -30,     4,     9,    19,    39,  1419,  1431, -2295,
    -753,   683, -2295, -2295,  -561,   -52, -2295,   661, -2229, -1782,
    -378,   974,  1388,  1405, -2295,   654,  1015, -1069, -1067, -2295,
     386, -2295,  -257, -2295,   138,  -365,   995, -2295,  1413, -2295,
   -2295, -2295, -2295, -1016,   694, -1718,   405, -1694, -1603,   174,
     161,  -733,  -137,    23, -2295, -2295,   415,  -223, -2295, -2295,
    -221, -1459, -2038,  -229,  -228, -1035,   884,  -790, -2295, -2295,
    -645,  -503, -2295, -2295, -2295,   642,   991, -2295, -2295,  1420,
    1715, -2295,  -232,  2315,  -521,  -659, -1042,  -775,  2844, -1343,
    -446,    71, -2295, -2002, -1212, -2295, -2295,   -11, -2295,  -286,
   -2295,  -285, -2295, -2295, -2295,  -270, -2294,  1101, -2295, -1003,
   -2295,  3398,   707, -2295, -1392,  -531,  -559,  -766, -1701, -2295,
   -2295, -2295, -2295, -2295, -2295, -1411, -1523,  -449,   774, -2295,
   -2295,   881, -2295, -2295, -2295,  -526,   968,  -512,  -678,   783,
   -2295,  -516,  1107, -2295,  2131,  -486,  1421,  -782,    26, -2295,
    2410,   120,  1331, -2295,  2110,  -488, -1004,  -741, -2295,  -576,
   -2295, -2295, -2295,  -954, -2295,   614, -2295,  -900, -2295,  -183,
   -2295, -2295, -1832, -2295, -2295, -2295, -2295, -2295, -2295,  -351,
   -2295,  -422,  -421, -2295, -2295,    -5,  -617,  1269, -2295, -2295,
     775, -2295,   923, -2295,   235, -2295, -2295, -2295,  1094, -2295,
   -2295, -2295,    33,  1472,   424, -2295,  1097, -2295, -2295, -2295,
   -2295, -2295,   240, -2295,  -897, -2120,    69, -1965,  -917,    -6,
    -424,  -359, -1806
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1469
static const yytype_int16 yytable[] =
{
     450,   787,   560,   548,   614,   821,   923,   616,    51,   736,
     758,   504,   931,   978,  1237,   971,  1202,  1221,  1337,    56,
    1238,    40,  1041,  1042,  1794,   747,  1268,  1209,  1075,  1269,
    1845,    49,   447,    70,  1271,    56,  1066,  1272,  1414,  2064,
    1055,  1213,  1697,  1698,   958,  1297,   622,  1717,  1415,  1191,
    1755,   535,  1993,  1380,  1860,  1242,  1862,  1841,   928,  1813,
     562,  2134,  2019,  2118,   820,   563,   826,  1249,   830,    77,
    1338,   546,  -420,  2142,  2145,   632,   623,   446,   626,   987,
     965,  2292,  1742,  1743,  1700,   649,   649,   649,  -965,   961,
    -966,   454,  2036, -1468,   748,  1325,  -965,  -965,  -966,  -966,
    2448, -1468, -1468,  -646,  1527,   950,   950,   577,  1530,  -613,
    -839,  1483,  2026,  -423,  -626,   509,   538,  -839,  1020,  1325,
    1194,     3,     4,  -651,  -943,  1131,  1896,  -641,  1480,   794,
     509,  1424,   509,   509,  2283,   795,  1012,   950,  1205,   510,
     633,  1424,  -654,  2242,   932,  2554,  -380,  1083,  1240,  2297,
    1128,   965,   509,   634,  1121,  1461,   649,  1351,   925,   509,
     607,  1205,  1462,  -420,   552,  1924,  1926,  2057,  1326,  1551,
    -858,  1873,  1288,  -654,  1074,  2341,  1089,  -858,   649,  2388,
    2301,   780,  2034,  -172,  1903,  2416,  2027,  2226,  -172,   457,
     557,  2325,  1326,  1222,   783,  1076,  1225,  1226,  2580,  1973,
     557,  1214,  1958,  2298,  -423,  1083,   632,   522,  1091,  1083,
    1611,  2086,   979,   632,  1322,  1700,  1197,  2028,  2299,  1132,
    1264,   928,  1126,   926,  2268,  2357,  1936,  1327,  2412,   776,
    1328,  1677,  2029,  1533,  1089,   770,  2413,  2565,  1089,   796,
    2076,  2030,  1509,  1548,  2146,   458,  1468,  2376,   553,  1083,
      78,  1327,  2604,  2508,  1328,   749,   776,   750,  1190,  1129,
    2363,  1352,   520,   555,  2450,  2555,  1091,  2031,  1789,  2451,
    1091,   633,  1247,  1248,  2474,  1147,  1252,  2545,   633,  2546,
    2087,  2380,  1789,  1849,  1952,   637,  1020,  1803,  2330,  1050,
    1051,  2174,  2486,    79,  2166,  2600,   638,  2295,   778,  1549,
    1672,  1950,  2436,  1933,  1012,  2291,  2357,  2199,   523,  2099,
    1091,  2203,  1974,  2149,   570,   509,  2567,  2075,   632,   632,
    2487,  1804,  2036,  1161,   507,   778,   556,  1510,  1959,  2399,
    1329,  1329,  1265,  1177,  1353,  1534,   771,  2556,  1960,   779,
    -420,  1700,  2296,   945,  2072,  2591,  2074,  2574,  1066,  1041,
    1042,  2032,  2088,   999,  1199,  1329,  2524,  1055,  1954,  1955,
    1956,  1957,  1934,  1281,  1961,  1962,  1963,  1964,  1965,  1966,
    1967,  1968,  1969,  1970,  1130,   951,   951,  1215,   923,   797,
    1469,  -423,  2373,   633,   633,  2300,   946,  1212,  2227,  1251,
    2147,  2377,   741,  1354,  2471,   557,  1355,  2414,  2605,  1321,
    -420,   461,  2463,   462,  1306,  1143,  2563,   951,  2544,  1188,
       3,     4,  2191,  2550,  1997,  1998,  1162,  1543,  2231,   539,
    1122,  2325,  1189,  1846,  1034,  1035,  2452,   464,   798,  2164,
    2167,  2156,   799,  2331,   608,  1612,  1814,  1212,  1330,  1380,
    2284,  -423,  2587,  1796,  2243,  2357,  -839,  1527,   648,  1052,
    1826,  1700,  2568,  2539,  1241,  1701,  1702,  1703,   554,   800,
    1200,   614,  1330,   587,  1287,  2292,  1329,  2315,  1425,   548,
    1290,   497,  1293,  2118,    56,  1238,   585,  1874,  1757,  1886,
    1887,  1331,  2329,  1020,  2525,  1600,   586,  2333,   589,  1815,
    2335,  1463,  2581,   631,   628,   581,  1339,  1356,  1300,   582,
    2326,  1012,  1340,   649,  -420,  1346,  -858,  1639,  1820,  1350,
     788,   455,  1421,  2526,   751,   508,   497,    56,   450,   450,
    1029,   952,   957,   801,   550,  1342,   558,  2357,  1393,  1395,
     925,  -974,  -974,  1847,   752,   450,   969,   970,  1715,  1798,
     632,  1298,  -420,   626,  -420,  -423,  1931,   947,  2233,  1340,
     928,  1412,  -965,   562,  -966,  1600,   925, -1468,   563,    51,
    1076,  2473,  1020,  2078,  2478,  1482,  1789,  -646,  1789,  2477,
      56,  1061,    40,  1040,   450,   450,   924,   768,  1046,  2244,
    1012,   759,    49,  -423,    70,  -423,   581,  -651,  -943,   551,
     582,  -641,  1062,  1551,  1079,   926,  1124,  1484,   565,  1747,
     928,  1112,  1061,  1427,  1357,   633,  1063,   969,   970,  1577,
    2239,  1232,  1389,  2418,   450,  2230,  2430,   742,  1227,  1580,
      77,   926,  1583,  1062,   631,  1748,  1445,   635,   636,  2270,
    2271,   631,   450,  1023,  1233,  2374,  1569,  1065,  1302,  -172,
    -172,  2287,   541,   649,  2079,  1946,   948,   738,   450,  1705,
    1576,  2530,    81,    56,  1107,  1108,  1109,  1110,  1111,  1112,
    1109,  1110,  1111,  1112,   925,  1953,  1712,  1713,  1714,  1715,
     564,  2232,  1214,   797,  2065,   548,   450,  1083,   595,  2240,
    2593,    24,  1540,  1020,  1548,   743,  1596,  1597,  1598,  1651,
    1380,  1649,  1673,   580,  1977,   450,   450,   450,   643,   450,
    2080,  1012,  2081,  1899,  2375,   605,  1089,  2118,  1791,  1575,
    1706,  1869,   606,   923,  1638,    28,  2366,  1519,  1640,   450,
    2261,  1642,  1776,  1777,  1870,    24,  1848,  1849,  1586,   926,
    1749,  1736,  2026,  1593,  2066,  1750,   631,   631,  1091,   581,
    1838,  -943,  1578,   582,  2262,  1061,  1797,  1581,  1214,  1446,
     974,  1228,  1814,  1850,  1229,    30,  2599,   974,   602,    28,
    1034,  1035,  1447,  2575,  2576,   609,  1062,  1448,   450,  1052,
      24,   610,   450,   450,  2246,  1238,  1155,  1156,  1236,  1160,
    1063,   563,   563,   450,   563,  1232,   925,  1205,   925,   768,
    1710,  1711,  1712,  1713,  1714,  1715,  2400,  1206,   620,    30,
      82,  1023,  1449,   498,    28,    33,  2027,    83,  1233,  2602,
    1675,   639,    31,  1789,  1020,  1875,  1617,  1789,  1364,  1365,
    2249,  1061,  2312,   598,   794,   450,   450,   450,  1077,  1817,
     795,  1214,  1012,  1884,  2114,    32,  1214,  2028,  1080,  1655,
      84,  2454,  1062,  1659,    30,  1660,  1239,  2401,  1215,   499,
    1125,   926,  2029,   926,  1243,  2402,   599,    31,  1205,   641,
    1133,  2030,   974,   974,  2458,   925,  1820,   643,  1208,  1751,
    1824,  1904,  1731,   642,  2594,   649,  1911,  2251,  1164,  1752,
      32,   644,   632,  2403,   581,   776,    85,  2031,   582,   600,
     777,  1935,  1937,  1938,    33,   632,  1707,  1708,  1709,  1745,
    1710,  1711,  1712,  1713,  1714,  1715,  2372,   740,  1212,  1656,
    2387,  1061,   794,   746,  1657,  1040,  1165,  1289,   795,   648,
     963,  1793,  1700,   964,  1215,   760,  1701,  1702,  1703,   591,
     926,   592,  1062,   761,   796,   601,  1450,  1246,  1074,  1389,
    1389,  2170,  1872,  1986,  1389,  2027,  1065,   633,   924,   755,
    2595,  2404,  1496,  1730,   778,  1732,  1733,   763,   631,   628,
     633,  2460,  2405,  1658,   766,   593,  2254,   594,  1254,  1255,
    2417,  2032,   598,   764,   924,  2596,  2028,  1137,  1139,  1389,
    1389,  1789,    56,  1857,  1212,  1859,  1268,  2503,  1789,  1269,
    1040,  2205,   954,  1789,  1271,   779,  1789,  1272,  1023,  2153,
    2030,  1141,  1214,  1144,  1142,   599,  1145,  1215,  2255,   774,
    1294,  1214,  1215,  1145,   789,  1789,  2008,  2009,  2010,  2011,
    1167,   450,   796,  2256,   767,  1320,  1334,   450,  1321,  1335,
     450,  1920,   587,  2223,   450,   794,  1492,  1893,  1895,   957,
     791,   795,  -466,    56,  2090,   585,   793,  -466,   450,  2097,
     792,   450,   450,   450,   450,   586,  2592,   589,  2469,  2073,
    1380,   450,   450,  1040,   806,  1289,  2274,  1212,  1975,  1976,
    1306,  2564,  1212,  1629,   797,  1630,  1168,  1023,   450,   450,
     450,   450,   924,  2131,   601,   805,   450,   450,  2577,   823,
    2089,   450,  2098,  1528,  1529,   450,  1789,    24,   450,   450,
     450,   450,   450,   450,   450,   450,   450,  1020,  1876,   450,
    2032,  -466,   827,  2278,  2257,   929,   450,  1880,   450,   930,
    1705,  1497,  1789,   824,  1040,  1012,  1289,   799,  -494,  -494,
    2055,    28,  -498,  -498,   925,   925,   925,   752,  2406,   450,
    2606,  2407,   933,  1538,  1608,   796,  1145,  1609,  1433,  1769,
     935,  1770,  -466,  1915,   825,  -497,  -497,   450,  1500,  1020,
    1645,   648,   797,  1646,  1700,  1360,   450,   450, -1469, -1469,
   -1469,    30,  1674,   457,  1434,  1145,   942,  1012,  1215,  1020,
    1681,  1706,   944,  1145,    31,    24,  1685,  1215,  1719,  1145,
    1164,  1145,  1863, -1009,  1771,  1864,  1772,  1012,  1023,   926,
     926,   926,  1867,  1981,   924,  1868,   924,    32,  1020,  1942,
    1340,  1789,  1145,  1989,  2053,   799,  1145,  2054,   801,    28,
    2058,    33,   925,  2059,   632,   949,  1012,  2077,  1165,   458,
    1609,  2137,  1020,  2154,  1609,  1789,  2155,   794,  1212,   773,
     794,   775,   800,   795,  2114,   450,   795,  1212,   450,   450,
    1012,   450,  1485,   954,  2111,  1389,  1389,  1389,  1389,    30,
     956,  1389,  1389,  1389,  1389,  1389,  1389,  1389,  1389,  1389,
    1389,   959,    31,  2386,  1435,   459,  1820,  2175,  2041,  1436,
    1335,  1014,   960,   924,  1437,   797,  1166,   926,  1633,   633,
     980,  1340,  1569,  2234,  2119,    32,   794,  2204,  2097,  2207,
     631,   737,   795,   739,  2435,  2235,   801,  2435,  1609,  1498,
     962,  1389,  1389,   631,  1024,   450,  2236,  1789,  1322,  1609,
    1025,  2316,    86,  2130,  1335,   453,  -617,  2367,  1027,  1023,
    2368,   495,  1167,  -624,   828,   450,   450,   448,   799,  1033,
     521,   450,   471,  2152,   533,  1036,   471,   796,  1020,  1037,
     796,   512,   471,   517,  1043,  2393,   517,   548,  1609,   537,
    -614,  2419,   471,   471,  1335,   829,  1012,  1707,  1708,  1709,
    1038,  1710,  1711,  1712,  1713,  1714,  1715,  1039,    33,   450,
     450,   450,  -615,  2422,   450,   461,  2423,   462,  1168,  2427,
    2433,  2437,   957,  2434,  2434,  1045,   450,   450,   450,   450,
     548,    52,  1048,  1632,   450,   517,   796,  2446,   463,   555,
    2447,   464,   537,   471,   537,   537,   537,    52,  1438,   450,
     450,  1049,  -467,  1706,   450,  1119,   974,  -467,  1439,   801,
    1654,  1054,   470,  1056,   547,  1057,   496,  -432,   450,   974,
     925,   450,   513,   450,   925,  2483,   925,  1058,  2447,  1014,
    -432,  2484,   545,   545,  1335,  -432,  2492,   561,  2497,   957,
    -618,  2434,  2511,   450,  2540,  2512,  2541,   957,   548,  1145,
    2571,  1020,   556,  2434,   450,  2266,  2588,  1059,  2114,  2447,
    2391,  -616,  1117,  1121,    24,  1060,  1067,   797,   450,  1012,
     797,  -467,  1068,  1078,  1135,  1122,  1148,  1154,   777,   779,
    -432,   587,   450,   573,  1184,   926,   447,  1186,  1192,   926,
    1820,   926,    56,  1210,   585,   928,  1211,   450,    28,  -432,
     447,  1212,  2293,  1217,   586,  1219,   589,  1218,  1223,  1340,
    2275,  2276,  -467,  1230,  2221,   450,  1539,   807,  1920,  1584,
     799,   557,  1231,   799,  1235,  1245,   797,  1250,  1257,  1258,
    1262,  1787,   924,   924,   924,  1266,   808,  1267,    30,  1274,
    -432,  1277,  1278,  1280,  1319,  1787,  1289,   800,  1040,  -432,
    1585,    31,  1029,  1046,  1323,  1341,   648,  1342,  1347,  1700,
    1020,   649,  1397,  1701,  1702,  1703,  1398,  1020,  1083,  1410,
    1423,  1430,  1441,   450,    32,  1591,  1442,  1444,  1012,   799,
    1987,  1465,    24,  1466,  1486,  1012,   809,  1480,    33, -1469,
   -1469, -1469,  1493,  1710,  1711,  1712,  1713,  1714,  1715,  1494,
    1501,   556,  1023,  1520,  1508,  1521,  1592,  1522,  1545,  1523,
    1015,   801,  1541,  1673,   801,  1546,    28,  1547,   557,  1601,
     924,  1606,   631,  1618,  1610,  1614,  1014,  1020,  1619,  1634,
    1620,  1636,  1633,  1637,  1641,  1643,  1644,  1652,  1662,   925,
     648,  1666,  1664,  1700,  2111,  1012,  1665,  1701,  1702,  1703,
    1667,   450,   558,  1668,  1023,  1670,    30,  1669,  1687,  1683,
    1684,   450,  1686,  1688,  1866,   450,  1689,  1145,   450,    31,
     801,  1690,   810,  1692,  1023,   450,   450,   450,   450,  1693,
    -432,   450,   450,   450,   450,   450,   450,   450,   450,   450,
     450,  1696,    32,  2003,   450,   450,  1718,  1724,  1725,  1389,
    1727,    24,  1726,  1023,   926,  1014,    33,  1889,   450,  1728,
    1735,   632,  1738,   548,  1739,   450,  1741,  1762,   450,   811,
     450,  1673,   812,  1740,  1746,  1767,  1753,  1023,   450,  1791,
     548,   450,   450,   813,  1800,    28,   450,   450,  1020,  2370,
    1238,  2421,   581,  1763,  1802,   763,   582,  1765,   974,  1816,
    1766,  1828,   450,  1921,   450,  1922,  1012,  1705,  1809,  1927,
    1928,  1822,  1830,  -499,   814,   450,  -500,   537,  2457,  1827,
    1831,   597,  1834,  1020,   450,    30,   633,  1832,  1015,  1836,
     471,  2464,  1837,  1389,   447,  1840,   447,  1843,    31,  1856,
     450,  1012,  1074,  1858,  1885,  1871,  1877,  1905,  1020,  1878,
    1879,  1020,  1881,   613,   471,   471,  1882,  1883,   816,  1901,
    1906,    32,  1909,  1913,  1902,  1912,  1012,  1916,  1706,  1012,
    1704,  2426,  1923,  1329,  1940,    33,  1014,  1307,   817,  1787,
    1929,  1787,  1945,  1721,  2426,  1700,    52,   517,   924,   517,
    1984,  1705,   924,  1023,   924,   537,  1941,  1389,   819,  1720,
    1991,  1983,  1992,   471,  1978,  2510,  1979,  2004,  1774,  1980,
    1995,  2017,  2043,  2039,  2025,   537,  2052,  2045,  2047,  2485,
     604,  1308,  2048,  2050,  2056,  2067,  2466,   537,  2111,    52,
     547,  2494,  2063,  2071,  2083,  2085,  2101,  2133,  2140,  2139,
    2144,  2150,  2158,  2159,  1609,   619,  1309,  2165,  2200,  2160,
    2148,  2162,  1706,  2168,  2201,  2208,  2169,  2183,  2193,  2198,
     537,   537,   537,  2194,  1310,  2209,  2457,   450,  1311,  2213,
     925,  2215,  2214,  2493,   925,  2216,  2229,  2237,  2561,  2264,
     561,  2241,    52,  2265,  2269,  2246,  2280,  2281,  2288,  1312,
    2505,  2247,  1313,   545,  2282,  2279,  2290,  2302,  2303,  2305,
    2289,  2309,  2586,  2248,  1026,  2313,  1314,  1014,  2308,  2311,
     450,   450,  2334,  2349,  2321,   450,  1023,  2314,  2327,  2116,
     450,  2340,  1020,   450,   450,  1015,  2353,  2359,   450,  2361,
    2362,  2249,  2364,  2250,  2378,   926,  2369,  2381,  2382,   926,
    1012,  1889,  2383,  2384,  2395,  2392,  2396,  2397,  2410,   450,
    2411,  2420,  2424,   450,  1707,  1708,  1709,  2443,  1710,  1711,
    1712,  1713,  1714,  1715,  2439,    52,  2462,  2448,  2429,  2432,
    2465,  2467,  2470,  2479,   450,  2480,  2481,  2491,  2499,  2500,
    2509,   447,  2513,  2377,  2516,   447,  1315,  2515,  2251,  1017,
    2222,  2224,  2518,  2521,  1316,  2522,  2523,  2527,  2528,  2529,
    2557,  2538,  1044,  2005,  1015,   537,  2551,   924,  2566,  1082,
    2579,  2572,  1083,  2582,  2252,  2584,   450,  2589,   925,  2590,
    2581,   471,   471,  2580,  2603,  1023,  1787,   537,   537,  1153,
    1787,   765,  1023,  2100,  1571,  1317,  1072,  2104,  1707,  1708,
    1709,  1089,  1710,  1711,  1712,  1713,  1714,  1715, -1469,  2225,
    2060,  1854,  2504,  2352,   537,  1204,  2547,   807,  2138,  2272,
    2553,  2598,  2461,  2585,  2578,   457,  1201,   537,  2409,  1839,
    1861,  2143,  2253,  1091,  2549,  1890,   808,  2254,  2294,   631,
    2583,  2105,  1835,   926,   537, -1009,  2548,  1891,   537,   450,
    1286,  2310,  1023,  1537,  2132,  2218,  1127,  2220,  1917,  1818,
    1181,   450,   450,   561,   561,   450,   561,  1829,  1517,  1146,
    2046,   545,  2498,  1536,  2219,  2020,  1180,   450,  1799,  2255,
    2192,   458,  2206,  2016,   450,  1015,   809,  1185,  2431,   450,
    2490,  2489,   450,   450,  2256,  2495,  1663,  2496,  2351,   450,
     450,  1744,   572,  2542,   575,  2543,   579,  2537,  1821,   447,
    1470,   450,  1760,   450,  1678,  1605,   447,  1017,  1758,  1479,
    1894,   447,  2482,  1299,   447,  2336,  1488,   459,  1149,  2061,
    1490, -1469,  1661,   450,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   447, -1469,     0,     0,     0,     0, -1469,
       0,  1261,     0,     0,  1787,     0,   537,     0,     0,     0,
    1014,  1787,     0,  1023,  1284,   974,  1787,     0,     0,  1787,
     613,     0,   810,   613,     0,     0,     0,   471,   471,     0,
     471,   613,     0,   537, -1469,  2257,  2394,     0,  1787,     0,
     807,     0,   450,   460,     0,     0,     0,   450,  1023,     0,
       0,     0,     0,   548,     0,     0,     0,  2294,     0,   808,
       0,     0,  1014,     0,   450,     0,  1015,     0,   450,   811,
       0,     0,   812,  1023,   447,     0,  1023,   450,     0,     0,
       0,  1100,  1014,   813,     0,     0,     0,   461,   450,   462,
       0,     0,     0,     0,  1018,     0,     0,     0,   924,     0,
     447,     0,   924,   450,    52,     0,     0,     0,     0,   809,
     463,  1014,     0,   464,   814,     0,     0,     0,  1291,  1787,
    1292,     0,     0,     0,     0,     0,     0,  1382,     0,     0,
       0,     0,     0,     0,     0,  1014,     0,     0,     0,  2116,
       0,     0,     0,     0,  2476,  1787,     0,     0,     0,     0,
       0,     0,     0,     0,   450,     0,     0,   450,   816,     0,
       0,     0,   613,     0,  1017,    52,   450,     0, -1469,     0,
       0,     0,  1082,   450,  2093,  1083,     0,     0,   817,     0,
       0,   450,     0,     0,     0,     0,     0,     0,     0,   447,
       0,  2501,   537,     0,     0,   810,     0,     0,   819,     0,
       0,   450,     0,     0,  1089,     0,     0,     0,     0,     0,
       0, -1469,   537,   447,   537,     0,     0,     0,     0,   648,
     450,   450,  1700,  1502,     0,  1507,  1701,  1702,  1703,     0,
       0,     0,     0,     0,  1787,  1431,  1091,     0,     0,     0,
       0,     0,   811,  1017,     0,   812,   924,  1023,     0,     0,
       0,  1014,  2472,     0,     0,     0,   813,   537,  1787,     0,
       0,     0,  1018,   450, -1469,   450,  1204,   471,     0,     0,
    2562,  1107,  1108,  1109,  1110,  1111,  1112,   471,  1553,   471,
    1557,     0,   471,     0,     0,     0,     0,   814,   471,     0,
     471,    52,     0,     0,  1082,   447,     0,  1083,     0,     0,
       0,   613,   471,     0,  1754,     0,   613,   471,     0,     0,
       0,   471,   471,   471,   471,     0,   471,   471,     0,     0,
       0,     0,     0,   450,   450,     0,  1089,   590,     0,     0,
       0,   816,     0, -1469, -1469,     0,   537,  1616, -1376,     0,
    1787,     0,     0,     0,     0,     0,     0, -1469,     0,  1628,
       0,   817, -1469,     0,     0,     0,     0,  1544,  1091,  1015,
       0,     0,     0,     0,  1017,     0,     0,  1552,  1367,  1555,
       0,   819,  1566,  2116,  1014,  1368,  1369,  1370,  1570,     0,
    1572,     0,     0,     0,     0,     0,     0, -1469,     0,     0,
       0,     0,  1579,     0,     0,     0,     0,  1582,     0,     0,
       0,  1587,  1588,  1589,  1590,   745,  1594,  1595,     0,     0,
       0,  1015,     0,     0,     0,     0,     0,     0,     0,     0,
   -1469,    52,  1082,     0,     0,  1083,  1996,     0,     0, -1376,
     839,  1015,     0,     0,  1100,     0,     0,   790,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1089,     0, -1469,     0,     0,  1018,
    1015, -1469,     0,     0,     0,     0,     0,     0,     0, -1469,
     937,   939,   941,     0, -1469,     0,     0,     0,     0,     0,
   -1376,  1706,     0,  1014,  1015,     0,  1091,     0,   839,  1022,
    1014,     0,     0, -1376,     0,  1017,     0,     0, -1376,     0,
       0,     0,     0, -1376,     0,     0,     0,     0,     0, -1469,
       0,     0, -1376,  1382,     0, -1376,     0,     0,     0,     0,
       0, -1469,     0,     0,     0,     0,     0,     0,  1072,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1018,     0,
       0,     0,     0, -1376,   537,     0,     0,     0,     0,     0,
    1014,  1790,   648,     0,  1999,  1700,  1100,     0,     0,  1701,
    1702,  1703, -1376,     0,     0,  1790,     0,     0,     0,  1808,
       0,  1072,  1811,     0,  1507,     0,  2177,     0,     0,     0,
       0,     0,     0,     0, -1469,     0,     0,     0,     0,  1431,
       0,     0,     0,     0,     0,     0,     0, -1469,     0,     0,
    1015,     0, -1469, -1376,     0,  1764, -1376,     0,     0,     0,
       0,     0, -1376,     0,     0,  1140,     0, -1469,     0,     0,
    1261,  1781,     0,     0,  1107,  1108,  1109,  1110,  1111,  1112,
    1819,     0,     0,     0,    52,  1781,     0, -1469,  1151,   547,
       0,     0,     0, -1469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1022,     0,  1018,
       0,  1014,     0,     0,  1193,     0, -1376,  1707,  1708,  1709,
       0,  1710,  1711,  1712,  1713,  1714,  1715,  1220,     0,     0,
    1261,   839,   839,   839,  1100,   537,     0,     0,     0,  1261,
     537,   537,   537,     0,  1019,     0,  1014,     0,  1244,     0,
       0,     0,     0,   471,     0,     0,     0,     0,   537,     0,
       0,     0,   613,     0,     0,     0,     0,  1774,     0,     0,
       0,  1014,     0,  1015,  1014,     0,     0,     0,  1261,  1261,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1469,
       0,     0,     0, -1376,     0,     0,  1107,  1108,  1109,  1110,
    1111,  1112,     0,  1705,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1382,     0,     0, -1376,     0, -1376,
   -1376, -1469,     0,     0,     0,     0,     0,     0,     0,     0,
     973,     0,     0,     0,     0,    52,     0,   973,  1017,     0,
    1018,     0,     0,  1908,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1376,  1273,     0, -1376, -1376,
   -1376,     0,     0,     0,  1706,     0,  1371,  1372,  1373,     0,
    1374,  1375,  1376,  1377,  1378,  1379,     0,     0,     0,     0,
       0,     0,  1015,  1296,     0,     0,     0,     0,  2007,  1015,
    1017,     0,     0,     0,     0,     0,   537,   537,   537,   448,
       0,  1790,  2024,     0,  1022,     0,  2024,  2038,     0,     0,
    1017,     0,  1019,     0,     0,     0,     0, -1469,     0,     0,
       0,     0,     0,     0,  1107,  1108,  1109,  1110,  1111,  1112,
       0,     0,     0,     0,     0,  1507,     0,     0,     0,  1017,
     973,     0,   973,   973,     0,  1014,     0,     0,     0,  1015,
       0,   537,     0,   471,  1072,     0,     0,  1261,  1204,  1261,
       0,  1284,     0,  1017,     0,     0,     0,     0,     0,  2015,
       0,  2018,     0,     0,     0,     0,     0,   471,     0,  2103,
       0,     0,     0,  1022,     0,     0,     0,     0,     0,     0,
       0,     0,   471,   471,   471,   471,   471,   471,   471,   471,
     471,   471,     0,     0,     0,     0,     0,     0,   973,     0,
       0,   973,   973,     0,     0,     0,   537,     0,     0,     0,
       0,     0,     0,  1204,   839,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1284,     0,     0,   537,     0,     0,
       0,     0,  1478,  2069,  1261,     0,     0,     0,     0,     0,
    1707,  1708,  1709,     0,  1710,  1711,  1712,  1713,  1714,  1715,
    1015,     0,  1487,     0,  1489,     0,     0,  2102,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1017,
       0,     0,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,
    2128,  2129,     0,     0,     0,  1015,     0,     0,     0,     0,
       0,     0,     0,    52,  1022,     0,     0,  1532,     0,  1019,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1015,     0,     0,  1015,     0,     0,  2186,     0,     0,   537,
     537,   537,   537,  1018,     0,     0,  2024,  2038,     0,  2024,
       0,     0,  2196,     0,     0,     0,  1790,     0,     0,     0,
    1790,   839,     0,     0,     0,     0,  2212,     0,   719,   719,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1301,
    1303,     0,     0,     0,     0,  1808,     0,     0,     0,     0,
    1507,     0,     0,     0,  1382,  1018,  1615,     0,  1019,     0,
       0,     0,  1204,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1017,     0,     0,  1018,     0,     0,     0,     0,
       0,     0,     0,     0,   836,   841,  1781,  2273,     0,     0,
    1781,   839,     0,  1082,     0,     0,  1083,     0,     0,     0,
       0,     0,     0,     0,  1018,  1022,     0,     0,  1348,  1349,
       0,     0,     0,    52,    52,     0,  1361,     0,  1362,  1363,
       0,     0,     0,     0,  1261,  1089,     0,     0,  1018,     0,
    1628,     0, -1469,  1399,     0,  1400,     0,     0,     0,     0,
       0,  2306,   836,     0,     0,     0,     0,     0,  1411,  1413,
       0,     0,     0,     0,     0,     0,     0,  1091,  1031,     0,
       0,     0,     0,     0,  1015,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1019,
       0,  1017,     0,     0,   448,  2024,  1053,     0,  1017,   471,
       0,  1790,     0,     0,     0,     0,  1790,     0,     0,  1790,
     448,    52,  2339,     0,  2342,  1069,  1070,  1071,     0,  1073,
       0,     0,     0,     0,     0,     0,     0,     0,  2358,     0,
       0,     0,     0,     0,     0,  2000,     0,     0,     0,  1120,
       0,     0,     0,     0,     0,     0,     0,     0,   613,   471,
       0,     0,  1526,  1526,  1018,     0,     0,   537,  1017,     0,
       0,   807,     0,     0,     0, -1469,     0,     0,     0,     0,
       0,  1781,     0,     0,  1773,     0,  1781,     0, -1469,  1781,
     808,   471,   471, -1469,     0,     0,     0,     0,  1159,     0,
       0,  1204,  1171,  1176,   471,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   973,     0,   537,     0,     0,  2358,
       0,     0,     0,     0,   973,     0,     0,   973, -1469,     0,
    1019,     0,     0,     0,     0,     0,     0,     0,   471,     0,
     809,  2091,     0,     0,     0,  1790,     0,     0,  2092,  2371,
       0,  2342,     0,     0,     0,   836,   836,   836,     0,     0,
    2442,     0,     0,     0,   471,     0,     0,     0,     0,    52,
       0,     0,     0,   537,     0,  1100,     0,     0,     0,  1017,
       0,  2389,  2390,     0,     0,     0,     0,  1018,     0,   839,
      52,     0,     0,     0,  2398,   613,   973,     0,     0,     0,
       0,     0,     0,     0,     0,  2093,   537,     0,     0,   973,
       0,     0,     0,     0,  1017,  1781,     0,     0,  1022,     0,
       0,  1671,     0,     0,  1072,  1892,   810,     0,     0,     0,
    1897,  1898,  1900,     0,   448,     0,     0,     0,     0,  1017,
     471,     0,  1017,     0,     0,  2339,     0,     0,  1914,     0,
       0,     0,     0,     0,  2444,     0,     0,     0,  2358,   613,
     613,   613, -1469,     0,     0,     0,     0,     0,     0,     0,
    1022,     0,     0,   811,     0,     0,   812,    52,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   813,     0,  2094,
    1022,     0,     0,     0,     0,     0,  1018,     0,     0,     0,
       0,     0,  2339,  1018,     0,     0,     0,     0,     0,     0,
    2442,     0,     0,     0,     0,     0,     0,     0,   814,  1022,
    1507,     0,     0,     0,    52,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1204,     0,     0,     0,     0,     0,
    2358,     0,     0,  1022,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   613,     0,  1345, -1469,     0,
       0,     0,   816,  1018,     0,  1107,  1108,  1109,  1110,  1111,
    1112,     0,     0,     0,  1795,     0,     0,     0,  1366,     0,
       0,  1383,   817,     0,  1394,     0,  2012,  2013,  2014,     0,
       0,  1401,  1406,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   819,    52,  2095,  1825,  1825,  2096,  1416,  1417,
    1418,  1419,     0,  1017,     0,     0,  1428,  1429,     0,     0,
       0,  1440,     0,  1019,     0,  1443,     0,     0,  1451,  1452,
    1453,  1454,  1455,  1456,  1457,  1458,  1459,     0,     0,  1460,
       0,  2068,     0,     0,     0,     0,   719,     0,   836,     0,
       0,     0,   -37,     0,     0,     0,     0,     0,     0,  2117,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1491,
       1,     0,     0,     0,  1018,  1019,     0,     0,     0,     0,
       2,     0,     3,     4,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1019,  1070,  1071,     5,     0,
       0,     0,     0,     0,     0,  1212,  2136,     6,     0,  1018,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     7,
       0,     0,     0,     0,  1019,     0,     0,  1296,     0,     0,
       8,     0,     0,     0,  1018,     0,     0,  1018,     0,     0,
       0,     9,     0,    10,     0,     0,     0,     0,  1019,     0,
       0,     0,     0,     0,  1930,  1932,     0,     0,     0,  1939,
      11,     0, -1378,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    12,   836,     0,     0,  1602,  1603,
       0,  1604,  1022,     0,    13,     0,     0,     0,     0,     0,
      14,     0,     0,     0,     0,     0,     0,  1115,    15,     0,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2187,
    2188,  2189,  2190,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,     0,    18,
       0,     0,     0,   648,     0,   836,  1700,     0,     0,     0,
    1701,  1702,  1703, -1378,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1019,     0,  1676,  2178,     0,     0,
       0,  1682,     0,  1082,     0,     0,  1083,     0,    19,     0,
   -1469, -1469, -1469,     0,     0,     0,     0,     0,     0,     0,
       0,  1022,     0,  1082,     0,     0,  1083,     0,  2277,  1082,
       0,     0,  1083,     0, -1378,  1089,     0,     0,  1018,     0,
       0,  1699,  1090,     0,  1115,     0,     0, -1378,     0,  1115,
       0,     0, -1378,     0,     0,  1089,  1406, -1378,  1406,  1406,
       0,  1089, -1469,     0,  1737,     0, -1378,  1091, -1469, -1378,
       0,     0,     0,     0,     0,     0,    20,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,  1091,  1022,   973,
       0,     0,     0,  1091,     0,     0,     0, -1378,  1756,     0,
       0,  1759,     0,  1761,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,    23, -1378,  1019,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    24,     0,     0,
       0,     0,     0,     0,    25,     0,     0,     0,    26,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    27,  2157,
       0,     0,     0,     0,     0,  2181,     0, -1378,     0,     0,
   -1378,    28,  1159,     0,     0,  1092, -1378,     0,     0,     0,
       0,     0, -1392,     0,  1705,     0,     0,  1176,  1093,     0,
       0,     0,     0,  1094,     0, -1469,     0,     0,     0,     0,
       0, -1469,     0,     0,     0,  1833,    29,  2379, -1469,  2117,
       0,    30,     0, -1469, -1469,     0,     0,     0,     0, -1469,
       0,     0,     0,     0,    31,     0,     0,     0,  1097,     0,
   -1378,     0,     0,     0,     0,     0,  1019,     0,     0,     0,
       0,     0,     0,  1019,  1022,  1706,     0,    32, -1469,  1115,
       0,     0,     0,     0, -1469,     0,  2415,     0,     0,     0,
       0,    33,     0,   836,   -37,     0,     0,     0,     0,  1022,
       0,  1115,  1022, -1392,     0,  1100,  1390,     0,     0,     0,
       0,  1774,     0,     0,     0,     0,     0,  1115,  1115,  1115,
       0,  1115,     0,     0,     0,  1100,     0,     0,     0,     0,
       0,  1100,     0,  1019,     0,     0,     0, -1378,     0,     0,
       0,     0,     0,  2453,     0,     0,     0,     0,     0,     0,
     973,     0,     0,     0, -1392,   973,     0,     0,     0,     0,
       0, -1378,     0, -1378, -1378,     0,     0, -1392,  1115,  1301,
    1303,  1944, -1392,     0,     0,     0,  2475, -1392,     0,     0,
       0,  1948,     0,     0,     0,  1949, -1392,     0,  1951, -1392,
       0,     0,  1102,     0,     0,     0,     0,     0,     0, -1378,
       0,     0, -1378, -1378, -1378,     0,     0,  1115,     0,     0,
       0,     0, -1469,     0,  1971,  1972,     0, -1392, -1469,  1115,
       0,     0,     0,     0,  1115,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1985, -1392,   473,  1988,     0,
    1990,     0,     0,     0,  1019,     0,     0,     0,  1994,     0,
       0,     0,     0,     0,     0,     0,  2001,  2002,     0,     0,
       0,  1707,  1708,  1709,     0,  1710,  1711,  1712,  1713,  1714,
    1715,     0,     0,  2117,     0,     0,     0, -1392,     0,  1019,
   -1392,     0,     0,     0,     0,  2042, -1392,     0,  1103,     0,
     474, -1469, -1469, -1469,  2049,  1107,  1108,  1109,  1110,  1111,
    1112,     0,     0,     0,  1019,   475,     0,  1019, -1469,     0,
    2062,     0,     0,     0, -1469,  1107,  1108,  1109,  1110,  1111,
    1112,  1107,  1108,  1109,  1110,  1111,  1112,     0,     0,     0,
    1301,  1303,     0,     0,     0,     0,     0,     0,     0,   973,
   -1392,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   476,     0,
       0,     0,     0,  1082,     0,     0,  1083,   477,     0,     0,
    1084,  1085,  1086,     0,     0,     0,     0,     0,     0,   478,
       0,     0,     0,     0,     0,     0,     0,  1087,     0,     0,
       0,  1774,     0,  1115,     0,  1089,     0,     0,     0,     0,
       0,     0,  1090,     0,     0,     0,     0,     0,   479,     0,
       0,     0,     0,     0,  1115,     0,     0, -1392,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1091,     0,     0,
       0,  1115,     0,  1390,  1390,     0,  1716,  2161,  1390,     0,
       0, -1392,  1115, -1392, -1392,     0,     0,     0,     0,  1115,
       0,     0,     0,   480,  1115,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1115,  1115,  1115,  1115,     0,     0,
       0,     0,     0,  1390,  1390,     0,  1115,  1115,  1019, -1392,
    2171,  2172, -1392, -1392, -1392,  2173,     0,     0,  1115,     0,
    2176,  1115,     0,  2179,  2180,     0,     0,     0,  2184,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,   481,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   482,     0,  1092,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1093,  1115,
       0,     0,     0,  1094,   719,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   483,     0,   484,     0,     0,     0,
       0,     0,     0,   485,  1095,  1096,   486,     0,     0,     0,
       0,     0,     0,   973,     0,     0,     0,     0,  1097,     0,
       0,     0,     0,     0,     0,   487,  2267,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   488,     0,     0,     0,
       0,     0,     0,   489,     0,     0,     0,     0,  1098,     0,
       0,  1099,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1100,     0,     0,  1101,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   491,     0,     0,     0,     0,     0,     0,     0,
    1115,  1115,  1115,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1081,
       0,  2317,  2318,     0,  1082,  2319,     0,  1083,     0,     0,
       0,  1084,  1085,  1086,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1087,     0,
       0,  1088,     0,     0,     0,     0,  1089,     0,     0,  2347,
    2348,     0,  1102,  1090,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2360,  1115,     0,     0,     0,     0,     0,
    1115,     0,     0,     0,     0,     0,     0,     0,  1091,     0,
       0,     0,     0,     0,     0,  1716,  1716,  1115,     0,  1390,
    1390,  1390,  1390,     0,     0,  1390,  1390,  1390,  1390,  1390,
    1390,  1390,  1390,  1390,  1390,  1716,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,     0,     0,
    1716,  1716,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1115,  1390,  1390,  1115,  1103,  1115,
       0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,
    1112,     0,     0,     0,  2428,     0,  1082,     0,  1691,  1083,
       0,     0,     0,  1084,  1085,  1086,  1092,  1073,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2445,  1093,
    1087,     0,     0,     0,  1094,     0,     0,     0,  1089,     0,
       0,     0,     0,  2459,     0,  1090,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1095,  1096,     0,     0,     0,
       0,  1115,     0,     0,     0,     0,     0,     0,     0,  1097,
    1091,     0,  1082,     0,     0,  1083,     0,     0,     0,  1084,
    1085,  1086,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1087,     0,     0,  1098,
       0,     0,  1099,     0,  1089,     0,     0,     0,     0,     0,
       0,  1090,     0,  2347,     0,     0,  1100,     0,     0,  1101,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1091,     0,     0,     0,
       0,  2520,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2534,  2534,     0,     0,     0,     0,     0,     0,  1092,     0,
       0,     0,  1115,     0,     0,     0,  1115,  1115,     0,  1115,
       0,  1093,  1716,  1716,  1716,  1716,  1094,     0,     0,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1115,
    1115,     0,     0,  1102,     0,  2534,     0,  1095,  1096,     0,
       0,     0,     0,  1115,     0,     0,  1115,     0,  1115,     0,
       0,  1097,  1115,     0,     0,  1716,  1716,     0,     0,  1115,
    1115,     0,     0,     0,  1092,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1093,     0,   794,
       0,  1098,  1094,     0,  1099,   795,     0,     0,     0,     0,
       0,     0,   807,  2534,  2601,     0,     0,     0,  1100,     0,
    1115,  1101,     0,  1095,  1096,     0,     0,  1115,     0,     0,
       0,   808,   794,     0,     0,     0,     0,  1097,   795,     0,
    1115,     0,     0,     0,     0,   807,     0,     0,     0,  1103,
       0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,
    1111,  1112,     0,     0,   808,     0,     0,  1098,     0,     0,
    1099,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   809,     0,     0,  1100,     0,     0,  1101,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1102,     0,     0,     0,   796,
       0,     0,     0,     0,   809,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,   796,  1390,     0,     0,     0,     0,     0,  1115,
    1115,  1115,     0,     0,  1115,     0,     0,  1115,  1115,     0,
       0,     0,  1115,     0,     0,     0,     0,   810,     0,     0,
       0,  1102,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     810,  1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,
    1109,  1110,  1111,  1112,   811,     0,     0,   812,  1409,     0,
       0,     0,     0,     0,     0,     0,     0,  1390,   813,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,   811,     0,   797,
     812,     0,     0,     0,     0,     0,     0,     0,     0,   814,
       0,   813,     0,     0,     0,     0,     0,  1103,     0,     0,
    1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,  1112,
       0,     0,   797,     0,  1947,     0,     0,     0,     0,     0,
    1716,  1390,   814,     0,     0,  1115,  1115,  1115,   815,     0,
       0,     0,   799,   816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   817,     0,  1115,  1115,     0,     0,   818,
       0,  1573,     0,     0,     0,   799,   816,     0,  1115,     0,
       0,     0,     0,   819,     0,     0,     0,     0,     0,     0,
    1716,     0,     0,     0,     0,     0,   817,     0,     0,     0,
       0,     0,  1574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   819,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   801,     0,  1716,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1115,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1115,     0,     0,   801,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1115,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1115,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1115,     0,     0,     0,    87,   645,   509,   646,
     647,   648,   649,   650,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,   831,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   651,   110,   652,   653,     0,   113,   114,   115,   116,
     117,   118,   654,   655,   119,   120,   656,   657,   123,  1115,
     124,   125,   126,   127,   658,     0,   659,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   660,
     661,   662,   663,   664,   665,   666,   150,   151,   152,   153,
     154,   155,   667,   668,   158,   669,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
     832,     0,   171,   172,   670,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     671,   187,   188,   189,   190,   672,   673,   192,     0,   193,
     194,   674,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,   231,   675,   676,     0,   677,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,     0,   245,   246,   247,   248,     0,   249,   250,
     251,   678,   679,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   680,
     269,   681,   271,   272,   273,   274,   682,   275,   276,   277,
     278,   683,   684,   280,   685,   282,   283,   284,     0,   285,
     286,     0,     0,   686,   288,   289,     0,     0,   290,   291,
     292,   293,   294,   687,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   688,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   689,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   690,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   691,   361,   362,   363,   364,   365,
     366,   367,   368,   692,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   693,     0,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
       0,   694,   695,     0,     0,   395,   396,   696,   398,   697,
     698,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,   699,     0,   412,   413,   414,
     415,   416,   417,   700,   833,   419,   420,   421,   422,   423,
     424,     0,     0,   425,     0,     0,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   701,     0,     0,     0,
       0,     0,     0,   702,   703,   834,     0,     0,     0,     0,
       0,     0,   705,   835,     0,     0,     0,   706,    87,   645,
     509,   646,   647,   648,   649,   650,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   651,   110,   652,   653,     0,   113,   114,
     115,   116,   117,   118,   654,   655,   119,   120,   656,   657,
     123,     0,   124,   125,   126,   127,   658,     0,   659,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   660,   661,   662,   663,   664,   665,   666,   150,   151,
     152,   153,   154,   155,   667,   668,   158,   669,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   670,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   671,   187,   188,   189,   190,   672,   673,   192,
       0,   193,   194,   674,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,   231,   675,   676,
       0,   677,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,     0,   245,   246,   247,   248,     0,
     249,   250,   251,   678,   679,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   680,   269,   681,   271,   272,   273,   274,   682,   275,
     276,   277,   278,   683,   684,   280,   685,   282,   283,   284,
       0,   285,   286,     0,     0,   686,   288,   289,     0,     0,
     290,   291,   292,   293,   294,   687,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,   688,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   689,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     690,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      24,   356,   357,   358,   359,   360,   691,   361,   362,   363,
     364,   365,   366,   367,   368,   692,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     693,     0,   384,   385,    28,   386,   387,   388,   389,   390,
     391,   392,     0,   694,   695,     0,     0,   395,   396,   696,
     398,   697,   698,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,   699,     0,   412,
     413,   414,   415,   416,   625,   700,     0,   419,   420,   421,
     422,   423,   424,     0,     0,   425,     0,    31,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   701,     0,
      32,     0,     0,     0,     0,   702,   703,     0,     0,     0,
       0,     0,     0,     0,   705,  2438,     0,     0,     0,   706,
      87,   645,   509,   646,   647,   648,   649,   650,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   651,   110,   652,   653,     0,
     113,   114,   115,   116,   117,   118,   654,   655,   119,   120,
     656,   657,   123,     0,   124,   125,   126,   127,   658,     0,
     659,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   660,   661,   662,   663,   664,   665,   666,
     150,   151,   152,   153,   154,   155,   667,   668,   158,   669,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   670,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   671,   187,   188,   189,   190,   672,
     673,   192,     0,   193,   194,   674,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,   231,
     675,   676,     0,   677,     0,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,     0,   245,   246,   247,
     248,     0,   249,   250,   251,   678,   679,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   680,   269,   681,   271,   272,   273,   274,
     682,   275,   276,   277,   278,   683,   684,   280,   685,   282,
     283,   284,     0,   285,   286,     0,     0,   686,   288,   289,
       0,     0,   290,   291,   292,   293,   294,   687,   296,   297,
     298,   299,   300,   301,   302,   303,   304,     0,   305,   306,
     688,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   689,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   690,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    24,   356,   357,   358,   359,   360,   691,   361,
     362,   363,   364,   365,   366,   367,   368,   692,   370,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   693,     0,   384,   385,    28,   386,   387,   388,
     389,   390,   391,   392,     0,   694,   695,     0,     0,   395,
     396,   696,   398,   697,   698,   400,   401,   402,   403,   404,
     405,   406,     0,     0,   407,   408,   409,   410,   411,   699,
       0,   412,   413,   414,   415,   416,   625,   700,     0,   419,
     420,   421,   422,   423,   424,     0,     0,   425,     0,    31,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     701,     0,    32,     0,     0,     0,     0,   702,   703,     0,
       0,     0,     0,     0,     0,     0,   705,     0,     0,     0,
       0,   706,    87,   645,   509,   646,   647,   648,   649,   650,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   651,   110,   652,
     653,  1402,   113,   114,   115,   116,   117,   118,   654,   655,
     119,   120,   656,   657,   123,     0,   124,   125,   126,   127,
     658,     0,   659,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   660,   661,   662,   663,   664,
     665,   666,   150,   151,   152,   153,   154,   155,   667,   668,
     158,   669,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     670,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   671,   187,   188,   189,
     190,   672,   673,   192,     0,   193,   194,   674,   196,     0,
     197,     0,   198,   199,  1403,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   675,   676,     0,   677,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,  1404,   245,
     246,   247,   248,     0,   249,   250,   251,   678,   679,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   680,   269,   681,   271,   272,
     273,   274,   682,   275,   276,   277,   278,   683,   684,   280,
     685,   282,   283,   284,     0,   285,   286,     0,     0,   686,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   687,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   688,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   689,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   690,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     691,   361,   362,   363,   364,   365,   366,   367,   368,   692,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   693,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   694,   695,     0,
    1405,   395,   396,   696,   398,   697,   698,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,   699,     0,   412,   413,   414,   415,   416,   417,   700,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   701,     0,     0,     0,     0,     0,     0,   702,
     703,     0,     0,     0,     0,     0,     0,     0,   705,     0,
       0,     0,     0,   706,    87,   645,   509,   646,   647,   648,
     649,   650,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   651,
     110,   652,   653,     0,   113,   114,   115,   116,   117,   118,
     654,   655,   119,   120,   656,   657,   123,     0,   124,   125,
     126,   127,   658,     0,   659,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   660,   661,   662,
     663,   664,   665,   666,   150,   151,   152,   153,   154,   155,
     667,   668,   158,   669,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   670,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   671,   187,
     188,   189,   190,   672,   673,   192,     0,   193,   194,   674,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,   231,   675,   676,     0,   677,     0,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
       0,   245,   246,   247,   248,     0,   249,   250,   251,   678,
     679,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   680,   269,   681,
     271,   272,   273,   274,   682,   275,   276,   277,   278,   683,
     684,   280,   685,   282,   283,   284,     0,   285,   286,     0,
       0,   686,   288,   289,     0,     0,   290,   291,   292,   293,
     294,   687,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   688,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   689,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   690,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   691,   361,   362,   363,   364,   365,   366,   367,
     368,   692,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   693,     0,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,     0,   694,
     695,     0,     0,   395,   396,   696,   398,   697,   698,   400,
     401,   402,   403,   404,   405,   406,     0,     0,   407,   408,
     409,   410,   411,   699,     0,   412,   413,   414,   415,   416,
     417,   700,     0,   419,   420,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   701,     0,     0,     0,     0,     0,
       0,   702,   703,   704,     0,     0,     0,     0,     0,     0,
     705,     0,     0,     0,     0,   706,    87,   645,   509,   646,
     647,   648,   649,   650,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,  1169,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   651,   110,   652,   653,     0,   113,   114,   115,   116,
     117,   118,   654,   655,   119,   120,   656,   657,   123,     0,
     124,   125,   126,   127,   658,     0,   659,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   660,
     661,   662,   663,   664,   665,   666,   150,   151,   152,   153,
     154,   155,   667,   668,   158,   669,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   670,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     671,   187,   188,   189,   190,   672,   673,   192,     0,   193,
     194,   674,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,   231,   675,   676,     0,   677,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,     0,   245,   246,   247,   248,     0,   249,   250,
     251,   678,   679,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   680,
     269,   681,   271,   272,   273,   274,   682,   275,   276,   277,
     278,   683,   684,   280,   685,   282,   283,   284,     0,   285,
     286,     0,     0,   686,   288,   289,     0,     0,   290,   291,
     292,   293,   294,   687,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   688,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   689,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   690,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   691,   361,   362,   363,   364,   365,
     366,   367,   368,   692,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   693,     0,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
       0,   694,   695,     0,     0,   395,   396,   696,   398,   697,
     698,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,   699,     0,   412,   413,   414,
     415,   416,   417,   700,     0,   419,   420,   421,   422,   423,
     424,     0,     0,   425,     0,     0,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   701,     0,     0,     0,
       0,     0,     0,   702,   703,     0,     0,     0,     0,     0,
       0,     0,   705,     0,     0,     0,     0,   706,    87,   645,
     509,   646,   647,   648,   649,   650,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   651,   110,   652,   653,     0,   113,   114,
     115,   116,   117,   118,   654,   655,   119,   120,   656,   657,
     123,     0,   124,   125,   126,   127,   658,     0,   659,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   660,   661,   662,   663,   664,   665,   666,   150,   151,
     152,   153,   154,   155,   667,   668,   158,   669,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   670,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   671,   187,   188,   189,   190,   672,   673,   192,
       0,   193,   194,   674,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,   231,   675,   676,
       0,   677,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,     0,   245,   246,   247,   248,     0,
     249,   250,   251,   678,   679,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   680,   269,   681,   271,   272,   273,   274,   682,   275,
     276,   277,   278,   683,   684,   280,   685,   282,   283,   284,
       0,   285,   286,     0,     0,   686,   288,   289,     0,     0,
     290,   291,   292,   293,   294,   687,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,   688,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   689,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     690,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   691,   361,   362,   363,
     364,   365,   366,   367,   368,   692,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     693,     0,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,     0,   694,   695,     0,     0,   395,   396,   696,
     398,   697,   698,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,   699,     0,   412,
     413,   414,   415,   416,   417,   700,     0,   419,   420,   421,
     422,   423,   424,     0,     0,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   701,     0,
       0,     0,     0,     0,     0,   702,   703,     0,     0,     0,
       0,     0,     0,     0,   705,  1392,     0,     0,     0,   706,
      87,   645,   509,   646,   647,   648,   649,   650,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   651,   110,   652,   653,     0,
     113,   114,   115,   116,   117,   118,   654,   655,   119,   120,
     656,   657,   123,     0,   124,   125,   126,   127,   658,     0,
     659,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   660,   661,   662,   663,   664,   665,   666,
     150,   151,   152,   153,   154,   155,   667,   668,   158,   669,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   670,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   671,   187,   188,   189,   190,   672,
     673,   192,     0,   193,   194,   674,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,   231,
     675,   676,     0,   677,     0,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,     0,   245,   246,   247,
     248,     0,   249,   250,   251,   678,   679,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   680,   269,   681,   271,   272,   273,   274,
     682,   275,   276,   277,   278,   683,   684,   280,   685,   282,
     283,   284,     0,   285,   286,     0,     0,   686,   288,   289,
       0,     0,   290,   291,   292,   293,   294,   687,   296,   297,
     298,   299,   300,   301,   302,   303,   304,     0,   305,   306,
     688,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   689,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   690,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   691,   361,
     362,   363,   364,   365,   366,   367,   368,   692,   370,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   693,     0,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,     0,   694,   695,     0,     0,   395,
     396,   696,   398,   697,   698,   400,   401,   402,   403,   404,
     405,   406,     0,     0,   407,   408,   409,   410,   411,   699,
       0,   412,   413,   414,   415,   416,   417,   700,  1599,   419,
     420,   421,   422,   423,   424,     0,     0,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     701,     0,     0,     0,     0,     0,     0,   702,   703,     0,
       0,     0,     0,     0,     0,     0,   705,     0,     0,     0,
       0,   706,    87,   645,   509,   646,   647,   648,   649,   650,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   651,   110,   652,
     653,     0,   113,   114,   115,   116,   117,   118,   654,   655,
     119,   120,   656,   657,   123,     0,   124,   125,   126,   127,
     658,     0,   659,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   660,   661,   662,   663,   664,
     665,   666,   150,   151,   152,   153,   154,   155,   667,   668,
     158,   669,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     670,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   671,   187,   188,   189,
     190,   672,   673,   192,     0,   193,   194,   674,   196,     0,
     197,     0,   198,   199,  1403,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   675,   676,     0,   677,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,   678,   679,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   680,   269,   681,   271,   272,
     273,   274,   682,   275,   276,   277,   278,   683,   684,   280,
     685,   282,   283,   284,     0,   285,   286,     0,     0,   686,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   687,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   688,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   689,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   690,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     691,   361,   362,   363,   364,   365,   366,   367,   368,   692,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   693,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   694,   695,     0,
       0,   395,   396,   696,   398,   697,   698,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,   699,     0,   412,   413,   414,   415,   416,   417,   700,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   701,     0,     0,     0,     0,     0,     0,   702,
     703,     0,     0,     0,     0,     0,     0,     0,   705,     0,
       0,     0,     0,   706,    87,   645,   509,   646,   647,   648,
     649,   650,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   651,
     110,   652,   653,     0,   113,   114,   115,   116,   117,   118,
     654,   655,   119,   120,   656,   657,   123,     0,   124,   125,
     126,   127,   658,     0,   659,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   660,   661,   662,
     663,   664,   665,   666,   150,   151,   152,   153,   154,   155,
     667,   668,   158,   669,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   670,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   671,   187,
     188,   189,   190,   672,   673,   192,     0,   193,   194,   674,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,   231,   675,   676,     0,   677,     0,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
       0,   245,   246,   247,   248,     0,   249,   250,   251,   678,
     679,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   680,   269,   681,
     271,   272,   273,   274,   682,   275,   276,   277,   278,   683,
     684,   280,   685,   282,   283,   284,     0,   285,   286,     0,
       0,   686,   288,   289,     0,     0,   290,   291,   292,   293,
     294,   687,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   688,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   689,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   690,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   691,   361,   362,   363,   364,   365,   366,   367,
     368,   692,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   693,     0,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,     0,   694,
     695,     0,     0,   395,   396,   696,   398,   697,   698,   400,
     401,   402,   403,   404,   405,   406,     0,     0,   407,   408,
     409,   410,   411,   699,     0,   412,   413,   414,   415,   416,
     417,   700,     0,   419,   420,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   701,     0,     0,     0,     0,     0,
       0,   702,   703,     0,     0,     0,     0,     0,     0,     0,
     705,     0,     0,     0,     0,   706,    87,   645,   509,   646,
     647,   648,   649,   650,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   651,   110,   652,   653,     0,   113,   114,   115,   116,
     117,   118,   654,   655,   119,   120,   656,   657,   123,     0,
     124,   125,   126,   127,   658,     0,   659,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   660,
     661,   662,   663,   664,   665,   666,   150,   151,   152,   153,
     154,   155,   667,   668,   158,   669,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   670,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     671,   187,   188,   189,   190,   672,   673,   192,     0,   193,
     194,   674,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,   231,   675,   676,     0,   677,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,     0,   245,   246,   247,   248,     0,   249,   250,
     251,   678,   679,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   680,
     269,   681,   271,   272,   273,   274,   682,   275,   276,   277,
     278,   683,   684,   280,   685,   282,   283,   284,     0,   285,
     286,     0,     0,   686,   288,   289,     0,     0,   290,   291,
     292,   293,   294,   687,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   688,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   689,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   690,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   691,   361,   362,   363,   364,   365,
     366,   367,   368,   692,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   693,     0,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
       0,   694,   695,     0,     0,   395,   396,   696,   398,   697,
     698,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,   699,     0,   412,   413,   414,
     415,   416,   417,   700,     0,   419,   420,   421,   422,   423,
     424,     0,     0,   425,     0,     0,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   701,     0,     0,     0,
       0,     0,     0,  1172,  1173,     0,     0,     0,     0,     0,
       0,     0,   705,     0,     0,     0,     0,   706,    87,  1524,
     509,   646,   647,   648,   649,   650,     0,     0,     0,     0,
       0,     0,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   651,   110,   652,   653,     0,   113,   114,
     115,   116,   117,   118,   654,   655,   119,   120,   656,   657,
     123,     0,   124,   125,   126,   127,   658,     0,   659,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   660,   661,   662,   663,   664,   665,   666,   150,   151,
     152,   153,   154,   155,   667,   668,   158,   669,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   670,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   671,   187,   188,   189,   190,   672,   673,   192,
       0,   193,   194,   674,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,   231,   675,   676,
       0,   677,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,     0,   245,   246,   247,   248,     0,
     249,   250,   251,   678,   679,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   680,   269,   681,   271,   272,   273,   274,   682,   275,
     276,   277,   278,   683,   684,   280,   685,   282,   283,   284,
       0,   285,   286,     0,     0,   686,   288,   289,     0,     0,
     290,   291,   292,   293,   294,   687,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,   688,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   689,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     690,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   691,   361,   362,   363,
     364,   365,   366,   367,   368,   692,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     693,     0,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,     0,   694,   695,     0,     0,   395,   396,   696,
     398,   697,   698,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,   699,     0,   412,
     413,   414,   415,   416,   417,   700,     0,   419,   420,   421,
     422,   423,   424,     0,     0,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   701,     0,
       0,     0,     0,     0,     0,   702,   703,     0,     0,     0,
       0,     0,     0,     0,   705,     0,     0,     0,     0,   706,
      87,   645,   509,   646,   647,   648,   649,   650,     0,     0,
       0,     0,     0,     0,     0,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   651,   110,   652,   653,     0,
     113,   114,   115,   116,   117,   118,   654,   655,   119,   120,
     656,   657,   123,     0,   124,   125,   126,   127,   658,     0,
     659,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   660,   661,   662,   663,   664,   665,   666,
     150,   151,   152,   153,   154,   155,   667,   668,   158,   669,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   670,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   671,   187,   188,   189,   190,   672,
     673,   192,     0,   193,   194,   674,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,   231,
     675,   676,     0,   677,     0,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,     0,   245,   246,   247,
     248,     0,   249,   250,   251,   678,   679,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   680,   269,   681,   271,   272,   273,   274,
     682,   275,   276,   277,   278,   683,   684,   280,   685,   282,
     283,   284,     0,   285,   286,     0,     0,   686,   288,   289,
       0,     0,   290,   291,   292,   293,   294,   687,   296,   297,
     298,   299,   300,   301,   302,   303,   304,     0,   305,   306,
     688,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   689,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   690,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   691,   361,
     362,   363,   364,   365,   366,   367,   368,   692,   370,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   693,     0,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,     0,   694,   695,     0,     0,   395,
     396,   696,   398,   697,   698,   400,   401,   402,   403,   404,
     405,   406,     0,     0,   407,   408,   409,   410,   411,   699,
       0,   412,   413,   414,   415,   416,   417,   700,     0,   419,
     420,   421,   422,   423,   424,     0,     0,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     701,     0,     0,     0,     0,     0,     0,   702,   703,     0,
       0,     0,     0,     0,     0,     0,  2343,     0,     0,     0,
       0,   706,    87,   645,   509,   646,   647,   648,   649,   650,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,  2531,   651,   110,   652,
     653,     0,   113,   114,   115,   116,   117,   118,   654,   655,
     119,   120,   656,   657,   123,     0,   124,   125,   126,   127,
     658,     0,   659,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,  2532,   660,   661,   662,   663,   664,
     665,   666,   150,   151,   152,   153,   154,   155,   667,   668,
     158,   669,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     670,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   671,   187,   188,   189,
     190,   672,   673,   192,     0,   193,   194,   674,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   675,   676,     0,   677,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,   678,   679,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   680,   269,   681,   271,   272,
     273,   274,   682,   275,   276,   277,   278,   683,   684,   280,
     685,   282,   283,   284,     0,   285,   286,     0,     0,   686,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   687,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   688,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   689,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   690,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     691,   361,   362,   363,   364,   365,   366,   367,   368,   692,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   693,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   694,   695,     0,
       0,   395,   396,   696,   398,   697,   698,   400,   401,   402,
     403,  2533,   405,   406,     0,     0,   407,   408,   409,   410,
     411,   699,     0,   412,   413,   414,   415,   416,   417,   700,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   701,     0,     0,     0,     0,     0,     0,   702,
     703,     0,     0,     0,     0,     0,     0,     0,   705,     0,
       0,     0,     0,   706,    87,   645,   509,   646,   647,   648,
     649,   650,     0,     0,     0,     0,     0,     0,     0,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   651,
     110,   652,   653,     0,   113,   114,   115,   116,   117,   118,
     654,   655,   119,   120,   656,   657,   123,     0,   124,   125,
     126,   127,   658,     0,   659,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,  2532,   660,   661,   662,
     663,   664,   665,   666,   150,   151,   152,   153,   154,   155,
     667,   668,   158,   669,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   670,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   671,   187,
     188,   189,   190,   672,   673,   192,     0,   193,   194,   674,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,   231,   675,   676,     0,   677,     0,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
       0,   245,   246,   247,   248,     0,   249,   250,   251,   678,
     679,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   680,   269,   681,
     271,   272,   273,   274,   682,   275,   276,   277,   278,   683,
     684,   280,   685,   282,   283,   284,     0,   285,   286,     0,
       0,   686,   288,   289,     0,     0,   290,   291,   292,   293,
     294,   687,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   688,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   689,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   690,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   691,   361,   362,   363,   364,   365,   366,   367,
     368,   692,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   693,     0,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,     0,   694,
     695,     0,     0,   395,   396,   696,   398,   697,   698,   400,
     401,   402,   403,  2533,   405,   406,     0,     0,   407,   408,
     409,   410,   411,   699,     0,   412,   413,   414,   415,   416,
     417,   700,     0,   419,   420,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   701,     0,     0,     0,     0,     0,
       0,   702,   703,     0,     0,     0,     0,     0,     0,     0,
     705,     0,     0,     0,     0,   706,    87,   645,   509,   646,
     647,   648,   649,   650,     0,     0,     0,     0,     0,     0,
       0,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   651,   110,   652,   653,     0,   113,   114,   115,   116,
     117,   118,   654,   655,   119,   120,   656,   657,   123,     0,
     124,   125,   126,   127,   658,     0,   659,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   660,
     661,   662,   663,   664,   665,   666,   150,   151,   152,   153,
     154,   155,   667,   668,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   670,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     671,   187,   188,   189,   190,   672,   673,   192,     0,   193,
     194,   674,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,   231,   675,   676,     0,   677,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,     0,   245,   246,   247,   248,     0,   249,   250,
     251,   678,   679,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   680,
     269,   681,   271,   272,   273,   274,     0,   275,   276,   277,
     278,   683,   684,   280,   685,   282,   283,   284,     0,   285,
     286,     0,     0,   686,   288,   289,     0,     0,   290,   291,
     292,   293,   294,   687,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   688,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   689,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   691,   361,   362,   363,   364,   365,
     366,   367,   368,   692,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   693,     0,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
       0,   694,   695,     0,     0,   395,   396,   696,   398,   697,
     698,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,   699,     0,   412,   413,   414,
     415,   416,   417,   700,     0,   419,   420,   421,   422,   423,
     424,     0,     0,   425,     0,     0,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,     0,     0,     0,     0,
       0,     0,     0,  1385,  1386,     0,     0,    87,   645,   509,
     646,   647,  1387,   649,   650,     0,     0,   706,     0,     0,
       0,     0,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,     0,     0,     0,     0,     0,     0,
       0,    99,   100,     0,   101,   102,   103,   104,   105,   106,
     107,   108,   651,   110,   652,   653,     0,   113,   114,   115,
     116,   117,   118,   654,   655,   119,   120,   656,   657,   123,
       0,   124,   125,   126,   127,   658,     0,   659,     0,   130,
     131,   132,   133,   134,   135,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     660,   661,   662,   663,   664,   665,   666,   150,   151,   152,
     153,   154,   155,   667,   668,   158,     0,   159,     0,   160,
     161,   162,   163,   164,   165,     0,   166,   167,   168,   169,
     170,     0,     0,   171,   172,   670,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
     185,   671,   187,   188,   189,   190,   672,   673,   192,     0,
     193,   194,   674,   196,     0,   197,     0,   198,   199,     0,
     200,   201,   202,   203,   204,   205,     0,   206,     0,   207,
     208,     0,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,     0,
     225,   226,   227,   228,   229,   230,   231,   675,   676,     0,
     677,     0,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,     0,   245,   246,   247,   248,     0,   249,
     250,   251,   678,   679,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     680,   269,   681,   271,   272,   273,   274,     0,   275,   276,
     277,   278,   683,   684,   280,   685,   282,   283,   284,     0,
     285,   286,     0,     0,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,   687,   296,   297,   298,   299,   300,
     301,   302,   303,   304,     0,   305,   306,   688,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   689,   324,   325,   326,   327,     0,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,  1513,
    1514,   348,   349,   350,   351,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   691,   361,   362,   363,   364,
     365,   366,   367,   368,   692,   370,     0,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   693,
       0,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,     0,   694,   695,     0,     0,   395,   396,   696,   398,
     697,   698,   400,   401,   402,   403,   404,   405,   406,     0,
       0,   407,   408,   409,   410,   411,   699,     0,   412,   413,
     414,   415,   416,   417,   700,     0,   419,   420,   421,   422,
     423,   424,     0,     0,   425,     0,     0,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,     0,     0,     0,
       0,     0,     0,     0,  1515,  1516,     0,     0,     0,     0,
       0,     0,     0,  1387,     0,     0,     0,     0,   706,    87,
     645,   509,   646,   647,   648,   649,   650,     0,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   651,   110,   652,   653,     0,   113,
     114,   115,   116,   117,   118,   654,   655,   119,   120,   656,
     657,   123,     0,   124,   125,   126,   127,   658,     0,   659,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   660,   661,   662,   663,   664,   665,   666,   150,
     151,   152,   153,   154,   155,   667,   668,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   670,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   671,   187,   188,   189,   190,   672,   673,
     192,     0,   193,   194,   674,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,   231,   675,
     676,     0,   677,     0,   235,     0,   237,   238,   239,   240,
     241,   242,   243,   244,     0,     0,   245,   246,   247,   248,
       0,   249,   250,   251,   678,   679,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   680,   269,   681,   271,   272,   273,   274,     0,
     275,   276,   277,   278,   683,   684,   280,   685,   282,   283,
     284,     0,   285,   286,     0,     0,   686,   288,   289,     0,
       0,   290,   291,   292,   293,   294,   687,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   688,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   689,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   691,   361,   362,
     363,   364,   365,   366,   367,   368,   692,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   693,     0,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,     0,   694,   695,     0,     0,   395,   396,
     696,   398,   697,   698,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,   699,     0,
     412,   413,   414,   415,   416,   417,   700,     0,   419,   420,
     421,   422,   423,   424,     0,     0,   425,     0,     0,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,     0,
       0,     0,     0,     0,     0,     0,  1385,  1386,     0,     0,
       0,     0,     0,     0,     0,  1387,     0,     0,     0,     0,
     706,    87,   645,   509,   646,   647,   648,   649,   650,     0,
       0,     0,     0,     0,     0,     0,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,     0,     0,
       0,     0,     0,     0,     0,    99,   100,     0,   101,   102,
     103,   104,   105,   106,   107, -1469,   651,   110,   652,   653,
       0,   113,   114,   115,   116,   117,   118,   654,   655,   119,
     120,   656,   657,   123,     0,   124,   125,   126,   127,   658,
       0,   659,     0,   130,   131,   132,   133,   134,   135,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,  2532,   660,   661,   662,   663,   664,   665,
     666,   150,   151,   152,   153,   154,   155,   667,   668,   158,
     669,   159,     0,   160,   161,   162,   163,   164,   165,     0,
     166,   167,   168,   169,   170,     0,     0,   171,   172,   670,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,   185,   671,   187,   188,   189,   190,
     672,   673,   192,     0,   193,   194,   674,   196,     0,   197,
       0,   198,   199,     0,   200,   201,   202,   203, -1469,   205,
       0,   206,     0,   207,   208,     0,   209,   210,   211,   212,
     213, -1469,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,     0,   225,   226,   227,   228,   229,   230,
     231,   675,   676,     0,   677,     0,   235,     0,     0,   238,
     239,   240,   241,   242,   243,   244,     0,     0,   245,   246,
     247, -1469,     0,   249,   250,   251,   678,   679,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   680,   269,   681,   271,   272,   273,
     274,     0,   275,   276,     0,   278,   683,   684,   280,   685,
     282,   283,   284,     0,   285,   286,     0,     0,   686,   288,
     289,     0,     0,   290,   291,   292,   293,   294,   687,   296,
     297,   298,   299,   300,   301,   302,   303,   304,     0,   305,
     306,   688,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   689,   324,
     325,   326,   327,     0,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   690,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   691,
     361,   362,   363,   364,   365, -1469,   367,   368,   692,   370,
       0,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   693,     0,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,     0,   694,   695,     0,     0,
     395,   396,   696,   398,   697,   698,   400,   401,   402,   403,
    2533,   405,   406,     0,     0,   407,   408,   409,   410,   411,
     699,     0,   412,   413,   414,   415,   416,   417,   700,     0,
     419,   420,   421,   422,   423,   424,     0,     0,   425,     0,
       0,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445, -1469,     0,     0,     0,     0,     0,     0,   702,   703,
       0,     0,     0,     0,     0,     0,     0,   705,     0,     0,
       0,     0,   706,    87,   645,   509,   646,   647,   648,   649,
     650,     0,     0,     0,     0,     0,     0,     0,    88,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
       0,     0,     0,     0,     0,     0,     0,    99,   100,     0,
     101,   102,   103,   104,   105,   106,   107,     0,   651,   110,
     652,   653,     0,   113,   114,   115,   116,   117,   118,   654,
     655,   119,   120,   656,   657,   123,     0,   124,   125,   126,
     127,   658,     0,   659,     0,   130,   131,   132,   133,   134,
     135,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   660,   661,   662,   663,
     664,   665,   666,   150,   151,   152,   153,   154,   155,   667,
     668,   158,   669,   159,     0,   160,   161,   162,   163,   164,
     165,     0,   166,   167,   168,   169,   170,     0,     0,   171,
     172,   670,   174,   175,     0,   176,   177,   178,     0,   179,
       0,   181,     0,   182,   183,   184,   185,   671,   187,   188,
     189,   190,   672,   673,   192,     0,   193,   194,   674,   196,
       0,   197,     0,   198,   199,     0,   200,   201,   202,   203,
       0,   205,     0,   206,     0,   207,   208,     0,   209,   210,
     211,   212,   213,     0,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,     0,   225,   226,   227,   228,
     229,   230,   231,   675,   676,     0,   677,     0,   235,     0,
       0,   238,   239,   240,   241,   242,   243,   244,     0,     0,
     245,   246,   247,     0,     0,   249,   250,   251,   678,   679,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   680,   269,   681,   271,
     272,   273,   274,     0,   275,   276,     0,   278,   683,   684,
     280,   685,   282,   283,   284,     0,   285,   286,     0,     0,
     686,   288,   289,     0,     0,   290,   291,   292,   293,   294,
     687,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       0,   305,   306,   688,   308,   309,   310,   311,   312,   313,
       0,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     689,   324,   325,   326,   327,     0,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   690,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   691,   361,   362,   363,   364,   365,     0,   367,   368,
     692,   370,     0,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   693,     0,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,     0,   694,   695,
       0,     0,   395,   396,   696,   398,   697,   698,   400,   401,
     402,   403,   404,   405,   406,     0,     0,   407,   408,   409,
     410,   411,   699,     0,   412,   413,   414,   415,   416,   417,
     700,     0,   419,   420,   421,   422,   423,   424,     0,     0,
     425,     0,     0,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,     0,     0,     0,     0,     0,     0,     0,
     702,   703,   467,     0,     0,     0,     0,     0,     0,   705,
       0,     0,     0,     0,   706,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,  2021,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,  -553,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,  -553,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,  -553,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,  -553,   240,   241,   242,   243,   244,     0,     0,   245,
    -553,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,  -553,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
    -553,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,     0,     0,     0,    87,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   763,
      88,    89,    90,    91,    92,    93,    94,    95,     0,    96,
      97,    98,     0,     0,     0,     0,     0,     0,     0,    99,
     100,     0,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,     0,   113,   114,   115,   116,   117,
     118,     0,   655,   119,   120,   121,   122,   123,     0,   124,
     125,   126,   127,   658,     0,   659,     0,   130,   131,   132,
     133,   134,   135,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   660,   661,
     662,   663,   664,   665,   666,   150,   151,   152,   153,   154,
     155,   156,   157,   158,     0,   159,     0,   160,   161,   162,
     163,   164,   165,     0,   166,   167,   168,   169,   170,     0,
       0,   171,   172,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   672,     0,   192,     0,   193,   194,
     195,   196,     0,   197,     0,   198,   199,     0,   200,   201,
     202,   203,   204,   205,     0,   206,     0,   207,   208,     0,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
       0,   219,   220,   221,   222,   223,   224,     0,   225,   226,
     227,   228,   229,   230,   231,   232,   233,     0,   234,     0,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
    1778,     0,   245,   246,   247,   248,     0,   249,   250,   251,
     678,   679,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   275,   276,   277,   278,
       0,   684,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   534,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,   687,   296,   297,   298,   299,   300,   301,   302,
     303,   304,     0,   305,   306,   688,   308,   309,   310,   311,
     312,   313,     0,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,     0,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,  1779,   348,
     349,   350,   351,   352,   353,   354,   355,    24,   356,   357,
     358,   359,   360,   691,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   693,     0,   384,
     385,    28,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,     0,   395,   396,   696,   398,   697,     0,
     400,   401,   402,   403,   404,   405,   406,     0,     0,   407,
     408,   409,   410,   411,   699,     0,   412,   413,   414,   415,
     416,   625,   418,     0,   419,   420,   421,   422,   423,   424,
       0,     0,   425,     0,    31,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,     0,     0,    32,    87,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1780,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,   655,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   658,     0,   659,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   660,   661,   662,   663,   664,   665,   666,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   672,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,   226,   227,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,  1778,     0,   245,   246,   247,   248,     0,
     249,   250,   251,   678,   679,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   275,
     276,   277,   278,     0,   684,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   534,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,   687,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,   688,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,  1779,   348,   349,   350,   351,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   691,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     693,     0,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,     0,   393,   394,     0,     0,   395,   396,   696,
     398,   697,     0,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,   699,     0,   412,
     413,   414,   415,   416,   417,   418,     0,   419,   420,   421,
     422,   423,   424,     0,     0,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,     0,     0,
      87,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1780,    88,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,     0,     0,     0,
       0,     0,     0,     0,    99,   100,     0,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,     0,
     113,   114,   115,   116,   117,   118,     0,   655,   119,   120,
     121,   122,   123,     0,   124,   125,   126,   127,   658,     0,
     659,     0,   130,   131,   132,   133,   134,   135,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   660,   661,   662,   663,   664,   665,   666,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
     159,     0,   160,   161,   162,   163,   164,   165,     0,   166,
     167,   168,   169,   170,     0,     0,   171,   172,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   672,
       0,   192,     0,   193,   194,   195,   196,     0,   197,     0,
     198,   199,     0,   200,   201,   202,   203,   204,   205,     0,
     206,     0,   207,   208,     0,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,     0,   225,   226,   227,   228,   229,   230,   231,
     232,   233,     0,   234,     0,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,     0,   245,   246,   247,
     248,     0,   249,   250,   251,   678,   679,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   275,   276,   277,   278,     0,   684,   280,   281,   282,
     283,   284,     0,   285,   286,     0,     0,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,   687,   296,   297,
     298,   299,   300,   301,   302,   303,   304,     0,   305,   306,
     688,   308,   309,   310,   311,   312,   313,     0,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,     0,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,  1779,   348,   349,   350,   351,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   691,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   693,     0,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,     0,     0,   395,
     396,   696,   398,   697,     0,   400,   401,   402,   403,   404,
     405,   406,     0,     0,   407,   408,   409,   410,   411,   699,
       0,   412,   413,   414,   415,   416,   417,   418,     0,   419,
     420,   421,   422,   423,   424,     0,     0,   425,     0,     0,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
       0,     0,    87,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,   655,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     658,     0,   659,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   660,   661,   662,   663,   664,
     665,   666,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   672,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,   678,   679,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   275,   276,   277,   278,     0,   684,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   687,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   688,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     691,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   693,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   696,   398,   697,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,   699,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,     0,     0,   624,   965,   509,     0,     0,     0,
     649,     0,     0,     0,     0,     0,     0,     0,  2354,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,   129,     0,   130,   131,   132,   133,
     134,   135,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,     0,     0,     0,
     149,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   966,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,   199,     0,   200,   201,   202,
     203,   204,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,   226,   227,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
       0,   245,   246,   247,   248,     0,   249,   250,   251,     0,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   275,   276,   277,   278,     0,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   967,
       0,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,     0,   395,   396,   397,   398,   399,   968,   400,
     401,   402,   403,   404,   405,   406,     0,     0,   407,   408,
     409,   410,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,     0,   419,   420,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,     0,     0,   624,     0,     0,     0,
       0,   969,   970,  1647,     0,     0,     0,     0,     0,     0,
    1648,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     3,     4,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,   129,     0,   130,   131,
     132,   133,   134,   135,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,     0,
       0,     0,   149,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,   199,     0,   200,
     201,   202,   203,   204,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
     226,   227,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,     0,   245,   246,   247,   248,     0,   249,   250,
     251,     0,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   275,   276,   277,
     278,     0,   279,   280,   281,   282,   283,   284,     0,   285,
     286,     0,     0,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    24,   356,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,    28,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,     0,   395,   396,   397,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,     0,     0,   412,   413,   414,
     415,   416,   625,   418,     0,   419,   420,   421,   422,   423,
     424,     0,     0,   425,     0,    31,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,     0,     0,    32,   467,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,     0,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,     0,   227,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,   238,     0,   240,
     241,   242,   243,   244,     0,     0,   245,     0,   247,     0,
       0,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,     0,   270,   271,   272,   273,   274,     0,
     275,   276,     0,   278,     0,   279,   280,   281,   282,   283,
     284,     0,   285,   286,     0,     0,   287,   288,   289,     0,
       0,   290,   291,     0,   293,     0,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    24,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,     0,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,    28,   386,     0,   388,   389,
     390,   391,   392,     0,   393,   394,     0,     0,   395,   396,
     397,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,     0,     0,
     412,   413,   414,   415,   416,   625,   418,     0,   419,     0,
     421,   422,   423,   424,     0,     0,   425,     0,    31,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,     0,
       0,    32,   467,     0,  2195,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,     0,     0,   467,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2211,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,     0,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,     0,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,     0,   227,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,   238,     0,   240,   241,   242,   243,   244,     0,
       0,   245,     0,   247,     0,     0,   249,   250,   251,     0,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,     0,   270,
     271,   272,   273,   274,     0,   275,   276,     0,   278,     0,
     279,   280,   281,   282,   283,   284,     0,   285,   286,     0,
       0,   287,   288,   289,     0,     0,   290,   291,     0,   293,
       0,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,     0,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
       0,   386,     0,   388,   389,   390,   391,   392,     0,   393,
     394,     0,     0,   395,   396,   397,   398,   399,     0,   400,
     401,   402,   403,   404,   405,   406,     0,     0,   407,   408,
     409,   410,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,     0,   419,     0,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,     0,     0,   467,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     744,    88,    89,    90,    91,    92,    93,    94,    95,     0,
      96,    97,    98,     0,     0,     0,     0,     0,     0,     0,
      99,   100,     0,   101,   102,   103,     0,   105,   106,   107,
     108,   109,     0,   111,   112,     0,   113,   114,   115,   116,
     117,   118,     0,     0,   119,   120,   121,   122,   123,     0,
     124,   125,   126,   127,   128,     0,     0,     0,   130,   131,
     132,   133,   134,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   146,   147,   148,     0,
       0,     0,     0,     0,     0,     0,   150,   151,   152,   153,
     154,   155,   156,   157,   158,     0,   159,     0,   160,   161,
     162,   163,   164,   165,     0,   166,   167,   168,   169,   170,
       0,     0,   171,   172,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,     0,   192,     0,   193,
     194,   195,   196,     0,   197,     0,   198,     0,     0,     0,
     201,   202,   203,     0,   205,     0,   206,     0,   207,   208,
       0,   209,   210,   211,   212,   213,     0,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,     0,   225,
       0,   227,   228,   229,   230,   231,   232,   233,     0,   234,
       0,   235,     0,     0,   238,     0,   240,   241,   242,   243,
     244,     0,     0,   245,     0,   247,     0,     0,   249,   250,
     251,     0,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
       0,   270,   271,   272,   273,   274,     0,   275,   276,     0,
     278,     0,   279,   280,   281,   282,   283,   284,     0,   285,
     286,     0,     0,   287,   288,   289,     0,     0,   290,   291,
       0,   293,     0,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,     0,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,     0,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,     0,   361,   362,   363,   364,   365,
       0,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,     0,   386,     0,   388,   389,   390,   391,   392,
       0,   393,   394,     0,     0,   395,   396,   397,   398,   399,
       0,   400,   401,   402,   403,   404,   405,   406,     0,     0,
     407,   408,   409,   410,   411,     0,     0,   412,   413,   414,
     415,   416,   417,   418,     0,   419,     0,   421,   422,   423,
     424,     0,     0,   425,     0,     0,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,     0,     0,   467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1503,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,     0,   105,
     106,   107,   108,   109,     0,   111,   112,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   121,   122,
     123,     0,   124,   125,   126,   127,   128,     0,     0,     0,
     130,   131,   132,   133,   134,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   146,   147,
     148,     0,     0,     0,     0,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   156,   157,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,     0,   192,
       0,   193,   194,   195,   196,     0,   197,     0,   198,     0,
       0,     0,   201,   202,   203,     0,   205,     0,   206,     0,
     207,   208,     0,   209,   210,   211,   212,   213,     0,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,     0,   227,   228,   229,   230,   231,   232,   233,
       0,   234,     0,   235,     0,     0,   238,     0,   240,   241,
     242,   243,   244,     0,     0,   245,     0,   247,     0,     0,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,     0,   270,   271,   272,   273,   274,     0,   275,
     276,     0,   278,     0,   279,   280,   281,   282,   283,   284,
       0,   285,   286,     0,     0,   287,   288,   289,     0,     0,
     290,   291,     0,   293,     0,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,     0,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
     364,   365,     0,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,     0,   384,   385,     0,   386,     0,   388,   389,   390,
     391,   392,     0,   393,   394,     0,     0,   395,   396,   397,
     398,   399,     0,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,     0,     0,   412,
     413,   414,   415,   416,   417,   418,     0,   419,     0,   421,
     422,   423,   424,     0,     0,   425,     0,     0,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,     0,     0,
       0,     0,     0,   988,   965,   509,     0,     0,  1367,   649,
       0,     0,     0,     0,  2005,  1368,  1369,  1370,    88,    89,
      90,    91,    92,    93,    94,    95,   844,    96,    97,    98,
     845,   846,   847,   848,   849,   850,   851,    99,   100,   852,
     101,   102,   103,   104,   105,   106,   107,     0,   989,   110,
     990,   991,   853,   113,   114,   115,   116,   117,   118,   854,
     855,   119,   120,   992,   993,   123,   856,   124,   125,   126,
     127,     0,   857,   129,   858,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   859,   139,   140,   141,   142,   143,
     144,   860,   145,   146,   147,   148,   861,   862,   863,   149,
     864,   865,   866,   150,   151,   152,   153,   154,   155,   994,
     995,   158,   867,   159,   868,   160,   161,   162,   163,   164,
     165,   869,   166,   167,   168,   169,   170,   870,   871,   171,
     172,   670,   174,   175,   872,   176,   177,   178,   873,   179,
     180,   181,   874,   182,   183,   184,   185,     0,   187,   188,
     189,   190,     0,   875,   192,   876,   193,   194,   996,   196,
     877,   197,   878,   198,   199,   879,   200,   201,   202,   203,
     204,   205,   880,   206,   881,     0,   208,   882,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   883,   219,
     220,   221,   222,   223,   224,   884,   225,   226,     0,   228,
     229,   230,   231,   997,   998,   885,   999,   886,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   887,   888,
     245,   246,   247,   248,   889,   249,   250,   251,   890,   891,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,  1000,   269,  1001,   271,
     272,   273,  2106,   892,   275,   276,   277,   278,   893,     0,
     280,  1002,   282,   283,   284,   894,   285,   286,   895,   896,
    2107,   288,   289,   897,   898,   290,     0,   292,   293,   294,
       0,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     899,   305,   306,     0,   308,   309,     0,   311,   312,   313,
     900,   314,   315,   316,   317,   318,   319,   320,   321,   322,
    1003,   324,   325,   326,   327,   901,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   902,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   903,   356,   357,   358,   359,
     360,   904,   361,  2108,   363,   364,   365,   366,   367,   368,
    1005,   370,   905,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,     0,   906,   384,   385,   907,
     386,   387,   388,   389,   390,   391,   392,   908,  1006,  1007,
     909,   910,   395,   396,     0,   398,     0,   911,   400,   401,
     402,   403,   404,   405,   406,   912,   913,   407,   408,   409,
     410,   411,   914,   915,   412,   413,   414,   415,   416,     0,
    1008,   916,   419,   420,   421,   422,   423,   424,   917,   918,
     425,   919,   920,   426,   427,   428,   429,   430,   431,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     443,   444,   445,     0,   467,     0,  1371,  1372,  1373,  1367,
    2109,  2110,  1376,  1377,  1378,  1379,  1368,  1369,  1370,    88,
      89,    90,    91,    92,    93,    94,    95,     0,    96,    97,
      98,     0,     0,     0,     0,     0,     0,     0,    99,   100,
       0,   101,   102,   103,     0,   105,   106,   107,   108,   109,
       0,   111,   112,     0,   113,   114,   115,   116,   117,   118,
       0,     0,   119,   120,   121,   122,   123,     0,   124,   125,
     126,   127,   128,     0,     0,     0,   130,   131,   132,   133,
     134,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   146,   147,   148,     0,     0,     0,
       0,     0,     0,     0,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,   159,     0,   160,   161,   162,   163,
     164,   165,     0,   166,   167,   168,   169,   170,     0,     0,
     171,   172,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,     0,   192,     0,   193,   194,   195,
     196,     0,   197,     0,   198,     0,     0,     0,   201,   202,
     203,     0,   205,     0,   206,     0,   207,   208,     0,   209,
     210,   211,   212,   213,     0,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,     0,   225,     0,   227,
     228,   229,   230,   231,   232,   233,     0,   234,     0,   235,
       0,     0,   238,     0,   240,   241,   242,   243,   244,     0,
       0,   245,     0,   247,     0,     0,   249,   250,   251,     0,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,     0,   270,
     271,   272,   273,   274,     0,   275,   276,     0,   278,     0,
     279,   280,   281,   282,   283,   284,     0,   285,   286,     0,
       0,   287,   288,   289,     0,     0,   290,   291,     0,   293,
       0,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,     0,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,   364,   365,     0,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
       0,   386,     0,   388,   389,   390,   391,   392,     0,   393,
     394,     0,     0,   395,   396,   397,   398,   399,     0,   400,
     401,   402,   403,   404,   405,   406,     0,     0,   407,   408,
     409,   410,   411,     0,     0,   412,   413,   414,   415,   416,
     417,   418,     0,   419,     0,   421,   422,   423,   424,     0,
       0,   425,     0,     0,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,     0,     0,     0,  1371,  1372,  1373,
       0,  1374,  1375,  1376,  1377,  1378,  1379,  1082,     0,     0,
    1083,     0,     0,     0,  1084,  1085,  1086,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1082,     0,     0,  1083,
       0,  1087,     0,  1084,  1085,  1086,     0,     0,     0,  1089,
       0,     0,     0,     0,     0,  1082,  1090,     0,  1083,     0,
    1087,     0,  1084,  1085,  1086,     0,     0,     0,  1089,     0,
       0,     0,     0,     0,     0,  1090,     0,     0,     0,  1087,
       0,  1091,     0,     0,     0,     0,     0,  1089,     0,     0,
       0,     0,     0,     0,  1090,     0,     0,     0,     0,     0,
    1091,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1082,     0,     0,  1083,     0,  1091,
       0,  1084,  1085,  1086,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1087,     0,
       0,     0,     0,     0,     0,     0,  1089,     0,  1082,     0,
       0,  1083,     0,  1090,     0,  1084,  1085,  1086,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1087,     0,     0,     0,     0,     0,  1091,  1092,
    1089,     0,     0,     0,     0,     0,     0,  1090,     0,     0,
       0,     0,  1093,     0,     0,     0,     0,  1094,  1092,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1093,  1091,     0,     0,     0,  1094,  1092,  1095,  1096,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1093,     0,  1097,     0,     0,  1094,     0,  1095,  1096,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1097,     0,     0,     0,     0,  1095,  1096,     0,     0,
       0,     0,  1098,     0,     0,  1099,     0,     0,     0,     0,
    1097,     0,     0,     0,     0,     0,  1092,     0,     0,  1100,
       0,  1098,  1101,     0,  1099,     0,     0,     0,     0,  1093,
       0,     0,     0,     0,  1094,     0,     0,     0,  1100,     0,
    1098,  1101,     0,  1099,     0,     0,     0,     0,     0,     0,
    1092,     0,     0,     0,     0,  1095,  1096,  1100,     0,     0,
    1101,     0,     0,  1093,     0,     0,     0,     0,  1094,  1097,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1095,
    1096,     0,     0,     0,     0,     0,     0,     0,     0,  1098,
       0,     0,  1099,  1097,     0,     0,  1102,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1100,     0,     0,  1101,
       0,     0,     0,     0,     0,  1102,     0,     0,     0,     0,
       0,     0,     0,  1098,     0,     0,  1099,     0,     0,     0,
       0,     0,     0,     0,  1102,     0,     0,     0,     0,     0,
    1100,  1082,     0,  1101,  1083,     0,     0,     0,  1084,  1085,
    1086,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1087,     0,     0,     0,     0,
       0,     0,     0,  1089,     0,     0,     0,     0,     0,     0,
    1090,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1103,  1102,     0,  1104,  1105,  1106,     0,  1107,
    1108,  1109,  1110,  1111,  1112,  1091,     0,     0,     0,  1982,
       0,  1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,
    1109,  1110,  1111,  1112,     0,     0,     0,  1102,  2070,     0,
    1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,
    1110,  1111,  1112,  1082,     0,     0,  1083,  2163,     0,     0,
    1084,  1085,  1086,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1087,     0,     0,
       0,     0,     0,     0,     0,  1089,     0,     0,     0,     0,
       0,     0,  1090,     0,     0,     0,     0,     0,     0,  1103,
       0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,
    1111,  1112,     0,  1092,     0,  1082,  2182,  1091,  1083,     0,
       0,     0,  1084,  1085,  1086,     0,  1093,     0,     0,     0,
       0,  1094,     0,  1103,     0,     0,  1104,  1105,  1106,  1087,
    1107,  1108,  1109,  1110,  1111,  1112,     0,  1089,     0,     0,
    2320,     0,  1095,  1096,  1090,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1097,     0,     0,     0,
       0,     0,     0,  1082,     0,     0,  1083,     0,     0,  1091,
    1084,  1085,  1086,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1098,  1087,     0,  1099,
       0,     0,     0,     0,     0,  1089,     0,     0,     0,     0,
       0,     0,  1090,  1100,     0,  1092,  1101,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1093,     0,
       0,     0,     0,  1094,     0,     0,     0,  1091,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1095,  1096,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1097,     0,
       0,     0,     0,     0,     0,     0,     0,  1092,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1093,     0,     0,     0,     0,  1094,     0,     0,  1098,     0,
    1102,  1099,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1100,  1095,  1096,  1101,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1097,     0,     0,     0,     0,  1092,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1093,     0,
       0,     0,     0,  1094,     0,     0,     0,     0,     0,     0,
    1098,     0,     0,  1099,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1095,  1096,     0,  1100,     0,     0,
    1101,     0,     0,     0,     0,     0,     0,     0,  1097,     0,
       0,     0,     0,     0,     0,     0,  1103,     0,     0,  1104,
    1105,  1106,  1102,  1107,  1108,  1109,  1110,  1111,  1112,     0,
       0,     0,     0,  2502,     0,     0,     0,     0,  1098,     0,
       0,  1099,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1100,     0,     0,  1101,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1102,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1103,     0,
       0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,
    1112,     0,     0,     0,     0,  2514,     0,     0,     0,     0,
       0,     0,  1102,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,
    1110,  1111,  1112,     0,     0,     0,     0,  2607,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1103,   843,
       0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,
    1112,     0,     0,  1256,    88,    89,    90,    91,    92,    93,
      94,    95,   844,    96,    97,    98,   845,   846,   847,   848,
     849,   850,   851,    99,   100,   852,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   853,   113,
     114,   115,   116,   117,   118,   854,   855,   119,   120,   121,
     122,   123,   856,   124,   125,   126,   127,   128,   857,   129,
     858,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     859,   139,   140,   141,   142,   143,   144,   860,   145,   146,
     147,   148,   861,   862,   863,   149,   864,   865,   866,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   867,   159,
     868,   160,   161,   162,   163,   164,   165,   869,   166,   167,
     168,   169,   170,   870,   871,   171,   172,   173,   174,   175,
     872,   176,   177,   178,   873,   179,   180,   181,   874,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   875,
     192,   876,   193,   194,   195,   196,   877,   197,   878,   198,
     199,   879,   200,   201,   202,   203,   204,   205,   880,   206,
     881,   207,   208,   882,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   883,   219,   220,   221,   222,   223,
     224,   884,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   885,   234,   886,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   887,   888,   245,   246,   247,   248,
     889,   249,   250,   251,   890,   891,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   892,
     275,   276,   277,   278,   893,   279,   280,   281,   282,   283,
     284,   894,   285,   286,   895,   896,   287,   288,   289,   897,
     898,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   899,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   900,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   901,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   902,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   903,   356,   357,   358,   359,   360,   904,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   905,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   906,   384,   385,   907,   386,   387,   388,   389,
     390,   391,   392,   908,   393,   394,   909,   910,   395,   396,
     397,   398,   399,   911,   400,   401,   402,   403,   404,   405,
     406,   912,   913,   407,   408,   409,   410,   411,   914,   915,
     412,   413,   414,   415,   416,   417,   418,   916,   419,   420,
     421,   422,   423,   424,   917,   918,   425,   919,   920,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   467,
       0,     0,     0,     0,     0,     0,     0,     0,   921,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,     0,
     105,   106,   107,   108,   109,     0,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,     0,
       0,   130,   131,   132,   133,   134,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   146,
     147,   148,     0,     0,     0,     0,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,     0,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
       0,     0,     0,   201,   202,   203,     0,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,     0,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,     0,   227,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   235,     0,     0,   238,     0,   240,
     241,   242,   243,   244,     0,     0,   245,     0,   247,     0,
       0,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,     0,   270,   271,   272,   273,   274,     0,
     275,   276,     0,   278,     0,   279,   280,   281,   282,   283,
     284,     0,   285,   286,     0,     0,   287,   288,   289,     0,
       0,   290,   291,     0,   293,     0,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,     0,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,     0,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,     0,   386,     0,   388,   389,
     390,   391,   392,     0,   393,   394,     0,     0,   395,   396,
     397,   398,   399,     0,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,     0,   419,     0,
     421,   422,   423,   424,     0,     0,   425,     0,     0,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   624,
     965,   509,     0,     0,     0,   649,     0,     0,  1925,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,   129,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,     0,     0,     0,   149,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,  1136,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   966,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,     0,   245,   246,   247,   248,
       0,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     275,   276,   277,   278,     0,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   967,     0,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   968,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,     0,   419,   420,
     421,   422,   423,   424,     0,     0,   425,     0,     0,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   624,
     965,   509,     0,     0,     0,   649,   969,   970,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,   129,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,     0,     0,     0,   149,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,  1138,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   966,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,     0,   245,   246,   247,   248,
       0,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     275,   276,   277,   278,     0,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   967,     0,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   968,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,     0,   419,   420,
     421,   422,   423,   424,     0,     0,   425,     0,     0,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   624,
     965,   509,     0,     0,     0,   649,   969,   970,     0,     0,
       0,     0,     0,     0,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,     0,     0,     0,     0,
       0,     0,     0,    99,   100,     0,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,     0,   113,
     114,   115,   116,   117,   118,     0,     0,   119,   120,   121,
     122,   123,     0,   124,   125,   126,   127,   128,     0,   129,
       0,   130,   131,   132,   133,   134,   135,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,     0,     0,     0,   149,     0,     0,     0,   150,
     151,   152,   153,   154,   155,   156,   157,   158,     0,   159,
       0,   160,   161,   162,   163,   164,   165,     0,   166,   167,
     168,   169,   170,     0,     0,   171,   172,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   966,
     192,     0,   193,   194,   195,   196,     0,   197,     0,   198,
     199,     0,   200,   201,   202,   203,   204,   205,     0,   206,
       0,   207,   208,     0,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,     0,   225,   226,   227,   228,   229,   230,   231,   232,
     233,     0,   234,     0,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,     0,   245,   246,   247,   248,
       0,   249,   250,   251,     0,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     275,   276,   277,   278,     0,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   967,     0,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,     0,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,     0,   395,   396,
     397,   398,   399,   968,   400,   401,   402,   403,   404,   405,
     406,     0,     0,   407,   408,   409,   410,   411,     0,     0,
     412,   413,   414,   415,   416,   417,   418,     0,   419,   420,
     421,   422,   423,   424,     0,     0,   425,     0,     0,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,     0,
       0,  1082,     0,     0,  1083,     0,   969,   970,  1084,  1085,
    1086,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1087,     0,     0,     0,  1509,
       0,     0,     0,  1089,     0,  1082,     0,     0,  1083,     0,
    1090,     0,  1084,  1085,  1086,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1087,
       0,     0,     0,     0,     0,  1091,     0,  1089,     0,     0,
       0,     0,  1082,     0,  1090,  1083,     0,     0,     0,  1084,
    1085,  1086,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1087,     0,     0,  1091,
       0,     0,     0,     0,  1089,     0,     0,     0,     0,     0,
    1082,  1090,     0,  1083,  1510,     0,     0,  1084,  1085,  1086,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1087,     0,  1091,  1680,     0,     0,
       0,     0,  1089,     0,     0,     0,     0,  1082,     0,  1090,
    1083,     0,     0,     0,  1084,  1085,  1086,     0,     0,     0,
       0,     0,     0,  1092,     0,     0,     0,     0,     0,     0,
       0,  1087,     0,     0,  1091,     0,  1093,     0,     0,  1089,
       0,  1094,     0,     0,     0,     0,  1090,  1720,     0,     0,
       0,     0,  1721,     0,     0,     0,     0,  1092,     0,     0,
       0,     0,  1095,  1096,     0,     0,     0,     0,     0,     0,
    1093,  1091,     0,     0,     0,  1094,  1097,     0,     0,     0,
       0,     0,     0,  2569,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1092,     0,  1095,  1096,     0,     0,
       0,     0,     0,     0,     0,     0,  1098,  1093,     0,  1099,
    1097,     0,  1094,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1100,     0,     0,  1101,     0,     0,     0,
       0,     0,  1092,  1095,  1096,     0,     0,     0,     0,     0,
    1098,     0,     0,  1099,     0,  1093,     0,  1097,     0,     0,
    1094,     0,     0,     0,     0,     0,     0,  1100,     0,     0,
    1101,     0,     0,     0,     0,     0,     0,     0,     0,  1092,
       0,  1095,  1096,     0,     0,     0,     0,  1098,     0,     0,
    1099,     0,  1093,     0,     0,  1097,     0,  1094,     0,     0,
       0,     0,     0,     0,  1100,     0,     0,  1101,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1095,  1096,
    1102,     0,     0,     0,     0,  1098,     0,     0,  1099,  2570,
       0,     0,  1097,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1100,     0,     0,  1101,     0,     0,     0,     0,
       0,     0,     0,     0,  1102,     0,     0,     0,     0,     0,
       0,     0,  1098,     0,     0,  1099,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1511,     0,  1082,  1100,
       0,  1083,  1101,     0,     0,  1084,  1085,  1086,     0,     0,
       0,  1102,     0,     0,     0,     0,     0,     0,     0,  1694,
       0,     0,  1087,     0,     0,  1729,  1082,     0,     0,  1083,
    1089,     0,     0,  1084,  1085,  1086,  1103,  1090,     0,  1104,
    1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,  1112,  1102,
    1087,     0,     0,     0,     0,     0,     0,     0,  1089,     0,
    1082,     0,  1091,  1083,     0,  1090,     0,  1084,  1085,  1086,
    1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,
    1110,  1111,  1112,     0,  1087,     0,  1102,     0,     0,     0,
    1091,     0,  1089,     0,     0,     0,     0,     0,     0,  1090,
       0,     0,     0,     0,     0,     0,     0,  1103,     0,     0,
    1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,  1111,  1112,
       0,     0,     0,     0,  1091,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1103,     0,     0,  1104,  1105,
    1106,     0,  1107,  1108,  1109,  1110,  1111,  1112,     0,     0,
    1092,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1093,     0,     0,     0,     0,  1094,     0,
       0,     0,  1103,  1734,     0,  1104,  1105,  1106,  1092,  1107,
    1108,  1109,  1110,  1111,  1112,     0,     0,     0,     0,  1095,
    1096,  1093,     0,     0,     0,     0,  1094,     0,     0,     0,
       0,     0,     0,  1097,     0,     0,     0,     0,     0,     0,
       0,     0,  1092,     0,     0,     0,     0,  1095,  1096,     0,
       0,     0,     0,     0,     0,  1093,     0,     0,     0,     0,
    1094,  1097,     0,  1098,     0,     0,  1099,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1100,  1095,  1096,  1101,     0,     0,     0,     0,     0,     0,
       0,  1098,     0,     0,  1099,  1097,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1082,  1100,     0,
    1083,  1101,     0,     0,  1084,  1085,  1086,     0,     0,     0,
       0,     0,     0,     0,     0,  1098,     0,     0,  1099,     0,
       0,  1087,     0,     0,     0,     0,     0,     0,     0,  1089,
       0,     0,  1100,     0,  1082,  1101,  1090,  1083,     0,     0,
       0,  1084,  1085,  1086,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1102,  1087,     0,
       0,  1091,     0,     0,     0,     0,  1089,     0,  1082,     0,
       0,  1083,     0,  1090,     0,  1084,  1085,  1086,     0,     0,
       0,     0,     0,     0,     0,  1102,     0,     0,  1082,     0,
       0,  1083,     0,     0,     0,  1084,  1085,  1086,  1091,     0,
    1089,     0,     0,     0,     0,     0,     0,  1090,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1102,
    1089,     0,     0,     0,     0,     0,     0,  1090,     0,     0,
       0,     0,  1091,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1943,
       0,     0,  1091,  1103,     0,     0,  1104,  1105,  1106,  1092,
    1107,  1108,  1109,  1110,  1111,  1112,     0,     0,     0,     0,
       0,     0,  1093,     0,     0,     0,     0,  1094,     0,     0,
       0,  1103,     0,     0,  1104,  1105,  1106,     0,  1107,  1108,
    1109,  1110,  1111,  1112,     0,     0,  1092,     0,  1095,  1096,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1093,
       0,     0,  1097,     0,  1094,  1103,     0,     0,  1104,  1105,
    1106,     0,  1107,  1108,  1109,  1110,  1111,  1112,     0,     0,
    1092,     0,     0,     0,     0,  1095,  1096,     0,     0,     0,
       0,     0,  1098,  1093,     0,  1099,     0,     0,  1094,  1097,
    1092,     0,     0,     0,     0,     0,     0,     0,     0,  1100,
       0,     0,  1101,  1093,     0,     0,     0,     0,  1094,  1095,
    1096,     0,     0,     0,     0,     0,     0,     0,     0,  1098,
       0,     0,  1099,  1097,     0,     0,     0,     0,     0, -1469,
   -1469,     0,     0,     0,     0,     0,  1100,     0,     0,     0,
       0,     0,     0,  1097,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1098,     0,     0,  1099,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1100,     0,     0,     0,     0,     0, -1469,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1102,     0,     0,     0,
    1100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1102,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1102,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1102,     0,     0,
       0,     0,  1103,     0,     0,  1104,  1105,  1106,     0,  1107,
    1108,  1109,  1110,  1111,  1112,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1103,
       0,     0,  1104,  1105,  1106,     0,  1107,  1108,  1109,  1110,
    1111,  1112,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1103,     0,     0,  1104,  1105,  1106,     0,
    1107,  1108,  1109,  1110,  1111,  1112,     0,     0,     0,     0,
       0,     0,   843,  1103,  1420,     0,  1104,  1105,  1106,     0,
    1107,  1108,  1109,  1110,  1111,  1112,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   844,    96,    97,    98,   845,
     846,   847,   848,   849,   850,   851,    99,   100,   852,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   853,   113,   114,   115,   116,   117,   118,   854,   855,
     119,   120,   121,   122,   123,   856,   124,   125,   126,   127,
     128,   857,   129,   858,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   859,   139,   140,   141,   142,   143,   144,
     860,   145,   146,   147,   148,   861,   862,   863,   149,   864,
     865,   866,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   867,   159,   868,   160,   161,   162,   163,   164,   165,
     869,   166,   167,   168,   169,   170,   870,   871,   171,   172,
     173,   174,   175,   872,   176,   177,   178,   873,   179,   180,
     181,   874,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   875,   192,   876,   193,   194,   195,   196,   877,
     197,   878,   198,   199,   879,   200,   201,   202,   203,   204,
     205,   880,   206,   881,   207,   208,   882,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   883,   219,   220,
     221,   222,   223,   224,   884,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   885,   234,   886,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   887,   888,   245,
     246,   247,   248,   889,   249,   250,   251,   890,   891,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   892,   275,   276,   277,   278,   893,   279,   280,
     281,   282,   283,   284,   894,   285,   286,   895,   896,   287,
     288,   289,   897,   898,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   899,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   900,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   901,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   902,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   903,   356,   357,   358,   359,   360,
     904,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   905,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   906,   384,   385,   907,   386,
     387,   388,   389,   390,   391,   392,   908,   393,   394,   909,
     910,   395,   396,   397,   398,   399,   911,   400,   401,   402,
     403,   404,   405,   406,   912,   913,   407,   408,   409,   410,
     411,   914,   915,   412,   413,   414,   415,   416,   417,   418,
     916,   419,   420,   421,   422,   423,   424,   917,   918,   425,
     919,   920,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   843,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   844,    96,    97,    98,   845,
     846,   847,   848,   849,   850,   851,    99,   100,   852,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   853,   113,   114,   115,   116,   117,   118,   854,   855,
     119,   120,   121,   122,   123,   856,   124,   125,   126,   127,
     128,   857,   129,   858,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   859,   139,   140,   141,   142,   143,   144,
     860,   145,   146,   147,   148,   861,   862,   863,   149,   864,
     865,   866,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   867,   159,   868,   160,   161,   162,   163,   164,   165,
     869,   166,   167,   168,   169,   170,   870,   871,   171,   172,
     173,   174,   175,   872,   176,   177,   178,   873,   179,   180,
     181,   874,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   875,   192,   876,   193,   194,   195,   196,   877,
     197,   878,   198,   199,   879,   200,   201,   202,   203,   204,
     205,   880,   206,   881,   207,   208,   882,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   883,   219,   220,
     221,   222,   223,   224,   884,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   885,   234,   886,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   887,   888,   245,
     246,   247,   248,   889,   249,   250,   251,   890,   891,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   892,   275,   276,   277,   278,   893,   279,   280,
     281,   282,   283,   284,   894,   285,   286,   895,   896,   287,
     288,   289,   897,   898,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   899,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   900,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   901,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   902,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   903,   356,   357,   358,   359,   360,
     904,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   905,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   906,   384,   385,   907,   386,
     387,   388,   389,   390,   391,   392,   908,   393,   394,   909,
     910,   395,   396,   397,   398,   399,   911,   400,   401,   402,
     403,   404,   405,   406,   912,   913,   407,   408,   409,   410,
     411,   914,   915,   412,   413,   414,   415,   416,   417,   418,
     916,   419,   420,   421,   422,   423,   424,   917,   918,   425,
     919,   920,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   843,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,  1558,    93,    94,    95,   844,    96,    97,    98,   845,
     846,   847,   848,   849,   850,   851,    99,   100,   852,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   853,   113,   114,   115,   116,   117,   118,   854,   855,
     119,   120,   121,   122,   123,   856,   124,   125,   126,   127,
     128,   857,   129,   858,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   859,   139,   140,   141,   142,   143,   144,
     860,   145,   146,   147,   148,   861,   862,   863,   149,   864,
     865,   866,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   867,   159,   868,   160,   161,   162,   163,   164,   165,
     869,   166,   167,   168,   169,   170,   870,   871,   171,   172,
     173,  1559,   175,   872,   176,   177,   178,   873,   179,   180,
     181,   874,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   875,   192,   876,   193,   194,   195,   196,   877,
     197,   878,   198,   199,   879,   200,   201,   202,   203,   204,
     205,   880,   206,   881,   207,   208,   882,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   883,   219,   220,
     221,   222,   223,   224,   884,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   885,   234,   886,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   887,   888,   245,
     246,   247,   248,   889,   249,   250,   251,   890,   891,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   892,   275,   276,   277,   278,   893,   279,   280,
     281,   282,   283,   284,   894,   285,   286,   895,   896,   287,
     288,   289,   897,   898,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   899,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   900,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   901,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   902,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   903,   356,   357,   358,   359,   360,
     904,  1560,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   905,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   906,   384,   385,   907,   386,
     387,   388,   389,   390,   391,   392,   908,   393,   394,   909,
     910,   395,   396,   397,   398,   399,   911,   400,   401,   402,
     403,   404,   405,   406,   912,   913,   407,   408,   409,   410,
     411,   914,   915,   412,   413,   414,   415,   416,   417,   418,
     916,   419,   420,   421,   422,   423,   424,   917,   918,   425,
     919,   920,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,    87,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,   655,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     658,     0,   659,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   660,   661,   662,   663,   664,
     665,   666,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   672,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,   678,   679,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   275,   276,   277,   278,     0,   684,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   687,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   688,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     691,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   693,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   696,   398,   697,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,   699,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   624,     0,   509,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   966,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   275,   276,   277,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   967,     0,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,   968,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   624,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     3,
       4,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   275,   276,   277,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,    87,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   275,   276,   277,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,  1194,   124,   125,   126,   127,
     128,     0,     0,  1195,   130,   131,   132,   133,   134,     0,
     136,   137,   138,  1196,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,  1197,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1198,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,  1199,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,  1200,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,  1194,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,  1196,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,  1197,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,  1621,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,  1199,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,  1200,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     3,
       4,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   468,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   469,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   514,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   515,   394,     0,
       0,   516,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   534,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   567,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   568,   394,     0,
       0,   569,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   576,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   534,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,   603,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
    1471,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,  1472,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,  1473,   386,
       0,   388,  1474,   390,  1475,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,  1476,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,  2021,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,  2035,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,  2195,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   526,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   527,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   528,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   529,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   542,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   571,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   574,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   578,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   596,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   611,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   615,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   618,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   527,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   529,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   936,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   938,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,  1152,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,     0,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1282,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1295,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1542,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1554,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  1556,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,  2135,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,     0,   105,   106,   107,   108,   109,     0,   111,
     112,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   121,   122,   123,     0,   124,   125,   126,   127,
     128,     0,     0,     0,   130,   131,   132,   133,   134,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   146,   147,   148,     0,     0,     0,     0,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,     0,   192,     0,   193,   194,   195,   196,     0,
     197,     0,   198,     0,     0,     0,   201,   202,   203,     0,
     205,     0,   206,     0,   207,   208,     0,   209,   210,   211,
     212,   213,     0,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,     0,   227,   228,   229,
     230,   231,   232,   233,     0,   234,     0,   235,     0,     0,
     238,     0,   240,   241,   242,   243,   244,     0,     0,   245,
       0,   247,     0,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,     0,   270,   271,   272,
     273,   274,     0,   275,   276,     0,   278,     0,   279,   280,
     281,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,   291,     0,   293,     0,   295,
     296,   297,   298,   299,   300,   301,     0,   303,   304,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,     0,   322,   323,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
       0,   343,   344,   345,   346,     0,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,   364,   365,     0,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,     0,   384,   385,     0,   386,
       0,   388,   389,   390,   391,   392,     0,   393,   394,     0,
       0,   395,   396,   397,   398,   399,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,   417,   418,
       0,   419,     0,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   988,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,    89,    90,
      91,    92,    93,    94,    95,     0,    96,    97,    98,     0,
       0,     0,     0,     0,     0,     0,    99,   100,     0,   101,
     102,   103,   104,   105,   106,   107,     0,   989,   110,   990,
     991,     0,   113,   114,   115,   116,   117,   118,     0,     0,
     119,   120,   992,   993,   123,     0,   124,   125,   126,   127,
       0,     0,   129,     0,   130,   131,   132,   133,   134,   135,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,     0,     0,     0,   149,     0,
       0,     0,   150,   151,   152,   153,   154,   155,   994,   995,
     158,     0,   159,     0,   160,   161,   162,   163,   164,   165,
       0,   166,   167,   168,   169,   170,     0,     0,   171,   172,
     670,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,   185,     0,   187,   188,   189,
     190,     0,     0,   192,     0,   193,   194,   996,   196,     0,
     197,     0,   198,   199,     0,   200,   201,   202,   203,   204,
     205,     0,   206,     0,     0,   208,     0,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,     0,   225,   226,     0,   228,   229,
     230,   231,   997,   998,     0,   999,     0,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,     0,   245,
     246,   247,   248,     0,   249,   250,   251,     0,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,  1000,   269,  1001,   271,   272,
     273,     0,     0,   275,   276,   277,   278,     0,     0,   280,
    1002,   282,   283,   284,     0,   285,   286,     0,     0,   287,
     288,   289,     0,     0,   290,     0,   292,   293,   294,     0,
     296,   297,   298,   299,   300,   301,   302,   303,   304,     0,
     305,   306,     0,   308,   309,     0,   311,   312,   313,     0,
     314,   315,   316,   317,   318,   319,   320,   321,   322,  1003,
     324,   325,   326,   327,     0,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
       0,   361,  1004,   363,   364,   365,   366,   367,   368,  1005,
     370,     0,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,     0,     0,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,     0,  1006,  1007,     0,
       0,   395,   396,     0,   398,     0,     0,   400,   401,   402,
     403,   404,   405,   406,     0,     0,   407,   408,   409,   410,
     411,     0,     0,   412,   413,   414,   415,   416,     0,  1008,
       0,   419,   420,   421,   422,   423,   424,     0,     0,   425,
       0,     0,   426,   427,   428,   429,   430,   431,   988,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   443,
     444,   445,     0,    88,    89,    90,    91,    92,    93,    94,
      95,     0,    96,    97,    98,     0,     0,     0,     0,     0,
       0,     0,    99,   100,     0,   101,   102,   103,   104,   105,
     106,   107,     0,   989,   110,   990,   991,     0,   113,   114,
     115,   116,   117,   118,     0,     0,   119,   120,   992,   993,
     123,     0,   124,   125,   126,   127,     0,     0,   129,     0,
     130,   131,   132,   133,   134,   135,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,     0,     0,     0,   149,     0,     0,     0,   150,   151,
     152,   153,   154,   155,   994,   995,   158,     0,   159,     0,
     160,   161,   162,   163,   164,   165,     0,   166,   167,   168,
     169,   170,     0,     0,   171,   172,   670,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,   185,     0,   187,   188,   189,   190,     0,     0,   192,
       0,   193,   194,   996,   196,     0,   197,     0,   198,   199,
       0,   200,   201,   202,   203,   204,   205,     0,   206,     0,
       0,   208,     0,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
       0,   225,   226,     0,   228,   229,   230,   231,   997,   998,
       0,   999,     0,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,     0,   245,   246,   247,   248,     0,
     249,   250,   251,     0,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,  1000,   269,  1001,   271,   272,   273,     0,     0,   275,
     276,   277,   278,     0,     0,   280,  1002,   282,   283,   284,
       0,   285,   286,     0,     0,   287,   288,   289,     0,     0,
     290,     0,   292,   293,   294,     0,   296,   297,   298,   299,
     300,   301,   302,   303,   304,     0,   305,   306,     0,   308,
     309,     0,   311,   312,   313,     0,   314,   315,   316,   317,
     318,   319,   320,   321,   322,  1003,   324,   325,   326,   327,
       0,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,     0,   361,     0,   363,
     364,   365,   366,   367,   368,  1005,   370,     0,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
       0,     0,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,     0,  1006,  1007,     0,     0,   395,   396,     0,
     398,     0,     0,   400,   401,   402,   403,   404,   405,   406,
       0,     0,   407,   408,   409,   410,   411,     0,     0,   412,
     413,   414,   415,   416,     0,  1008,     0,   419,   420,   421,
     422,   423,   424,     0,     0,   425,     0,     0,   426,   427,
     428,   429,   430,   431,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   443,   444,   445
};

static const yytype_int16 yycheck[] =
{
       6,   562,    54,    33,   492,   575,   582,   493,     0,   525,
     541,    16,   590,   630,   819,   630,   794,   807,  1022,     0,
     821,     0,   667,   668,  1483,   537,   934,   796,   706,   934,
    1552,     0,     6,     0,   934,    16,   695,   934,  1080,  1821,
     685,   799,  1385,  1386,   616,   962,   497,  1390,  1083,   790,
    1442,    28,  1753,  1056,  1558,   824,  1560,  1549,   584,  1503,
      56,  1893,  1780,  1869,   575,    56,   577,   833,   579,     0,
    1024,    32,     0,  1901,  1908,   499,   498,     6,   499,   638,
       4,  2139,  1425,  1426,    11,     9,     9,     9,     5,   620,
       5,    49,  1786,     5,     3,   107,    13,    14,    13,    14,
      72,    13,    14,     5,  1173,    57,    57,    84,  1175,     5,
      26,  1127,    92,     0,     5,     5,   166,    33,   639,   107,
      66,    30,    31,     5,     5,   740,  1618,     5,   165,    22,
       5,    39,     5,     5,  2131,    28,   639,    57,    74,    19,
     499,    39,     5,   114,   595,   166,   119,    11,    84,  2142,
       3,     4,     5,   504,   207,    26,     9,     3,   582,     5,
     105,    74,    33,    91,   117,  1657,  1658,  1810,   180,  1204,
      26,    84,   954,     5,   705,  2213,    40,    33,     9,  2279,
    2145,   559,  1785,     4,   266,  2308,   166,   268,     9,   171,
     274,  2193,   180,   808,   559,   707,   811,   812,   117,  1722,
     274,   233,   127,   117,    91,    11,   630,    26,    72,    11,
     165,   112,   634,   637,  1004,    11,   162,   197,   132,   740,
     313,   747,   734,   582,  2093,  2227,   239,   239,    58,   155,
     242,   134,   212,   257,    40,    26,    66,  2531,    40,   132,
    1840,   221,    36,   413,   105,   227,   335,   114,   201,    11,
     392,   239,   112,  2450,   242,   164,   155,   166,   789,   112,
    2236,   107,    22,   142,  2358,   286,    72,   247,  1480,   254,
      72,   630,   831,   832,  2394,   761,   837,  2506,   637,  2508,
     181,  2257,  1494,   326,  1695,   458,   807,   378,   268,    63,
      64,  1992,   308,   435,   127,  2589,   469,   144,   224,   469,
    1335,  1693,  2340,   180,   807,  2137,  2308,  2025,   127,   352,
      72,  2029,  1723,  1913,    74,     5,   159,  1839,   742,   743,
     336,   412,  2016,   157,   106,   224,   205,   121,   253,  2294,
     343,   343,   425,   779,   180,   359,   127,   358,   263,   265,
     268,    11,   189,    81,  1836,  2574,  1838,  2544,  1007,   994,
     995,   331,   253,   206,   300,   343,  2476,  1002,  1701,  1702,
    1703,  1704,   239,   941,  1707,  1708,  1709,  1710,  1711,  1712,
    1713,  1714,  1715,  1716,   227,   327,   327,   409,   954,   272,
     469,   268,  2251,   742,   743,   299,   124,   469,   469,   473,
     251,   258,   165,   239,  2391,   274,   242,   227,   258,   473,
     328,   383,  2378,   385,   980,   756,  2529,   327,  2502,   787,
      30,    31,  2015,  2513,  1757,  1758,   250,  1195,  2061,   469,
     473,  2423,   787,    22,   656,   657,   411,   409,   321,  1952,
     263,  1923,   325,   413,   379,   390,   473,   469,   450,  1442,
     413,   328,  2562,  1485,   415,  2447,   362,  1516,     8,   681,
    1517,    11,   295,  2491,   390,    15,    16,    17,   411,   352,
     406,   949,   450,   455,   952,  2523,   343,  2168,   376,   499,
     956,    91,   960,  2279,   455,  1276,   455,   390,   376,   369,
     370,   469,  2200,  1004,  2477,  1251,   455,  2205,   455,  1505,
    2208,   362,   411,   499,   499,   467,  1027,   343,     4,   471,
    2194,  1004,  1028,     9,   432,  1036,   362,  1289,  1511,  1040,
     562,   469,  1088,  2478,   423,   106,    91,   498,   524,   525,
     422,   473,   473,   416,     0,   428,   405,  2529,  1059,  1060,
     954,    13,    14,   132,   539,   541,   460,   461,   465,  1493,
     964,   963,   470,   964,   472,   432,   468,   285,  2070,  1075,
    1076,   474,   469,   549,   469,  1321,   980,   469,   549,   551,
    1072,  2393,  1083,   114,  2398,  1124,  1778,   469,  1780,  2397,
     551,   434,   551,   469,   580,   581,   582,   554,   469,  2083,
    1083,   542,   551,   470,   551,   472,   467,   469,   469,   472,
     471,   469,   455,  1628,   469,   954,   469,   469,   423,   127,
    1126,   465,   434,  1091,   450,   964,   469,   460,   461,  1224,
     115,   432,  1058,  2314,   620,  2059,  2334,   390,   104,  1234,
     551,   980,  1237,   455,   630,   153,    47,   507,   508,   460,
     461,   637,   638,   639,   455,   115,  1212,   469,     4,   460,
     461,  2133,   469,     9,   195,  1680,   384,   527,   654,   209,
    1220,  2483,   191,   634,   460,   461,   462,   463,   464,   465,
     462,   463,   464,   465,  1088,  1700,   462,   463,   464,   465,
     473,  2063,   233,   272,   157,   705,   682,    11,   323,   184,
      57,   345,  1193,  1204,   413,   458,  1247,  1248,  1249,  1306,
    1693,  1306,  1337,   469,  1729,   701,   702,   703,   471,   705,
     251,  1204,   253,  1620,   184,   238,    40,  2513,   429,  1220,
     270,   458,   395,  1289,  1286,   379,  2238,  1163,  1290,   725,
      29,  1293,  1475,  1476,   471,   345,   325,   326,  1239,  1088,
     258,  1409,    92,  1244,   217,   263,   742,   743,    72,   467,
     469,   469,  1230,   471,    53,   434,  1487,  1235,   233,   170,
     630,   237,   473,   352,   240,   419,  2588,   637,   191,   379,
     992,   993,   183,  2545,  2546,   425,   455,   188,   774,  1001,
     345,   342,   778,   779,    66,  1576,   772,   773,   339,   775,
     469,   772,   773,   789,   775,   432,  1210,    74,  1212,   766,
     460,   461,   462,   463,   464,   465,    26,    84,   469,   419,
     339,   807,   223,   423,   379,   469,   166,   346,   455,  2591,
    1341,   469,   432,  2025,  1335,  1584,  1267,  2029,  1050,  1051,
     112,   434,  2165,   313,    22,   831,   832,   833,   708,  1507,
      28,   233,  1335,  1599,  1869,   455,   233,   197,   718,  1311,
     379,  2363,   455,  1315,   419,  1317,   823,    77,   409,   469,
     730,  1210,   212,  1212,   339,    85,   346,   432,    74,   452,
     740,   221,   742,   743,  2368,  1289,  1869,   471,    84,   397,
       4,  1629,  1403,   211,   251,     9,  1634,   169,   213,   407,
     455,   268,  1306,   113,   467,   155,   425,   247,   471,   379,
     160,  1666,  1667,  1668,   469,  1319,   456,   457,   458,  1430,
     460,   461,   462,   463,   464,   465,  2249,   452,   469,   253,
     464,   434,    22,   462,   258,   469,   251,   471,    28,     8,
     470,  1482,    11,   473,   409,   473,    15,    16,    17,   383,
    1289,   385,   455,   469,   132,   425,   357,   339,  1469,  1385,
    1386,  1983,   339,    32,  1390,   166,   469,  1306,   954,   164,
     327,   181,   112,  1402,   224,  1404,  1405,   470,   964,   964,
    1319,   253,   192,   307,   165,   383,   258,   385,    13,    14,
    2313,   331,   313,   470,   980,   352,   197,   742,   743,  1425,
    1426,  2193,   963,  1555,   469,  1557,  1894,  2446,  2200,  1894,
     469,   212,   471,  2205,  1894,   265,  2208,  1894,  1004,  1916,
     221,   470,   233,   470,   473,   346,   473,   409,   300,    53,
     470,   233,   409,   473,   469,  2227,  1769,  1770,  1771,  1772,
     355,  1027,   132,   315,   207,   470,   470,  1033,   473,   473,
    1036,  1648,  1024,   281,  1040,    22,   470,  1615,   379,   473,
     452,    28,   155,  1024,  1849,  1024,   147,   160,  1054,  1850,
     211,  1057,  1058,  1059,  1060,  1024,  2578,  1024,   464,  1837,
    2063,  1067,  1068,   469,   147,   471,  2101,   469,  1727,  1728,
    1646,  2530,   469,   432,   272,   434,   411,  1083,  1084,  1085,
    1086,  1087,  1088,  1888,   425,   321,  1092,  1093,  2547,   147,
    1848,  1097,  1850,   335,   336,  1101,  2308,   345,  1104,  1105,
    1106,  1107,  1108,  1109,  1110,  1111,  1112,  1628,   339,  1115,
     331,   224,   147,  2117,   406,   470,  1122,   339,  1124,   469,
     209,   281,  2334,   321,   469,  1628,   471,   325,   335,   336,
    1808,   379,   335,   336,  1558,  1559,  1560,  1142,   368,  1145,
    2599,   371,   253,   470,   470,   132,   473,   473,   127,   383,
     425,   385,   265,  1641,   352,   335,   336,  1163,  1150,  1680,
     470,     8,   272,   473,    11,  1045,  1172,  1173,    15,    16,
      17,   419,   470,   171,   153,   473,    80,  1680,   409,  1700,
     470,   270,   436,   473,   432,   345,   470,   409,   470,   473,
     213,   473,   470,   191,   383,   473,   385,  1700,  1204,  1558,
    1559,  1560,   470,  1734,  1210,   473,  1212,   455,  1729,   470,
    1736,  2423,   473,   470,   470,   325,   473,   473,   416,   379,
     470,   469,  1646,   473,  1648,   147,  1729,   470,   251,   227,
     473,   470,  1753,   470,   473,  2447,   473,    22,   469,   556,
      22,   558,   352,    28,  2279,  1251,    28,   469,  1254,  1255,
    1753,  1257,  1132,   471,  1869,  1701,  1702,  1703,  1704,   419,
     147,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,
    1716,   147,   432,  2277,   253,   273,  2279,   470,  1790,   258,
     473,   639,   268,  1289,   263,   272,   309,  1646,  1280,  1648,
     469,  1817,  1868,  2071,  1870,   455,    22,  2030,  2099,  2032,
    1306,   526,    28,   528,  2339,   470,   416,  2342,   473,   469,
     379,  1757,  1758,  1319,    35,  1321,   470,  2529,  2108,   473,
     222,   470,     5,  1884,   473,     8,     5,   470,   469,  1335,
     473,    14,   355,     5,   321,  1341,  1342,     6,   325,   469,
      23,  1347,    11,  1915,    27,   469,    15,   132,  1869,   160,
     132,    20,    21,    22,   296,   470,    25,  1387,   473,    28,
       5,   470,    31,    32,   473,   352,  1869,   456,   457,   458,
     469,   460,   461,   462,   463,   464,   465,   469,   469,  1385,
    1386,  1387,     5,   470,  1390,   383,   473,   385,   411,   470,
     470,   470,   473,   473,   473,   469,  1402,  1403,  1404,  1405,
    1430,     0,   469,   146,  1410,    74,   132,   470,   406,   142,
     473,   409,    81,    82,    83,    84,    85,    16,   397,  1425,
    1426,   469,   155,   270,  1430,   279,  1306,   160,   407,   416,
    1310,   469,    11,   469,    33,   469,    15,   142,  1444,  1319,
    1864,  1447,    21,  1449,  1868,   470,  1870,   469,   473,   807,
     155,   470,    31,    32,   473,   160,   470,    56,   470,   473,
       5,   473,   470,  1469,   470,   473,   470,   473,  1498,   473,
     470,  1992,   205,   473,  1480,  2090,   470,   469,  2513,   473,
    2285,     5,   433,   207,   345,   469,   469,   272,  1494,  1992,
     272,   224,   469,   469,    95,   473,    35,   352,   160,   265,
     205,  1493,  1508,    82,   160,  1864,  1480,   263,   222,  1868,
    2513,  1870,  1493,   469,  1493,  2041,   390,  1523,   379,   224,
    1494,   469,   146,    84,  1493,   390,  1493,   473,    53,  2055,
    2102,  2103,   265,    53,  2050,  1541,   321,    35,  2155,   321,
     325,   274,   390,   325,   244,   390,   272,   470,   475,   390,
     432,  1480,  1558,  1559,  1560,   147,    54,    91,   419,   253,
     265,   253,   469,    35,   473,  1494,   471,   352,   469,   274,
     352,   432,   422,   469,    34,   469,     8,   428,   469,    11,
    2101,     9,   388,    15,    16,    17,   388,  2108,    11,   473,
     388,   469,   258,  1599,   455,   321,   469,   390,  2101,   325,
      32,   174,   345,   156,   470,  2108,   104,   165,   469,   456,
     457,   458,   469,   460,   461,   462,   463,   464,   465,   413,
      35,   205,  1628,   355,   473,   213,   352,   269,   213,   473,
     639,   416,   469,  2278,   416,   253,   379,   213,   274,   470,
    1646,   305,  1648,   469,   266,   425,  1004,  2168,   147,   432,
     147,   253,  1644,   268,   268,   253,    35,    35,    34,  2083,
       8,   390,   467,    11,  2279,  2168,   467,    15,    16,    17,
     390,  1677,   405,   390,  1680,   390,   419,   469,   165,   470,
     470,  1687,   470,   470,  1564,  1691,   470,   473,  1694,   432,
     416,   470,   190,   470,  1700,  1701,  1702,  1703,  1704,   471,
     405,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,
    1716,   470,   455,  1765,  1720,  1721,   470,   470,   452,  2165,
     470,   345,   452,  1729,  2083,  1083,   469,  1607,  1734,   470,
     470,  2155,   470,  1763,   470,  1741,   452,   390,  1744,   237,
    1746,  2386,   240,   470,   165,   278,   469,  1753,  1754,   429,
    1780,  1757,  1758,   251,   429,   379,  1762,  1763,  2279,  2247,
    2561,  2322,   467,   469,   419,   470,   471,   469,  1648,   458,
     469,   411,  1778,  1653,  1780,  1655,  2279,   209,   268,  1659,
    1660,   454,   473,   269,   282,  1791,   269,   456,  2364,   269,
     232,   460,   253,  2314,  1800,   419,  2155,   390,   807,   469,
     469,  2379,   147,  2249,  1778,   191,  1780,   272,   432,   147,
    1816,  2314,  2343,   147,   468,   390,   390,   266,  2339,   390,
     390,  2342,   470,   492,   493,   494,   470,   470,   326,   470,
     268,   455,   432,   147,   473,    35,  2339,   147,   270,  2342,
     188,  2327,   258,   343,   242,   469,  1204,    49,   346,  1778,
     467,  1780,   138,   165,  2340,    11,   455,   526,  1864,   528,
    1740,   209,  1868,  1869,  1870,   534,   470,  2313,   366,   160,
     165,   474,   469,   542,   470,  2453,   470,   429,   379,   470,
     470,   165,   174,   455,   473,   554,   418,   470,   470,  2420,
     469,    93,   470,   328,    82,   269,  2384,   566,  2513,   498,
     499,  2432,   469,   147,   469,   169,   400,   469,    35,   469,
      78,   413,   468,   468,   473,   494,   118,   165,   212,   470,
    1912,   470,   270,   469,   277,   212,   470,   470,   469,   469,
     599,   600,   601,   470,   136,   381,  2512,  1943,   140,   469,
    2364,    53,   275,  2429,  2368,   177,   458,   432,  2518,   182,
     549,   193,   551,   258,   258,    66,   390,   390,    35,   161,
    2448,    72,   164,   542,   470,   458,   469,   105,   432,   268,
     253,    35,   470,    84,   643,   165,   178,  1335,   469,   468,
    1986,  1987,   212,   431,   287,  1991,  1992,   469,   469,  1869,
    1996,   469,  2513,  1999,  2000,  1004,    84,   128,  2004,   470,
     315,   112,   469,   114,   213,  2364,   469,   112,    35,  2368,
    2513,  1891,   147,    72,   147,   119,    35,   470,   336,  2025,
     336,    53,    35,  2029,   456,   457,   458,   418,   460,   461,
     462,   463,   464,   465,   473,   634,    35,    72,   469,   469,
     181,   413,   400,    66,  2050,   271,    66,   469,   473,    35,
     352,  2025,   458,   258,   235,  2029,   258,   181,   169,   639,
    2052,  2053,   469,   400,   266,    35,   469,   271,   271,   469,
     268,   470,   671,   469,  1083,   744,   251,  2083,   335,     8,
     193,   322,    11,   268,   195,   268,  2092,    32,  2512,   469,
     411,   760,   761,   117,    21,  2101,  2025,   766,   767,   768,
    2029,   551,  2108,  1851,  1218,   307,   705,  1864,   456,   457,
     458,    40,   460,   461,   462,   463,   464,   465,    47,  2054,
    1814,  1553,  2447,  2223,   793,   794,  2509,    35,  1897,  2095,
    2515,  2581,  2371,  2560,  2548,   171,   794,   806,  2296,  1547,
    1559,  1902,   253,    72,  2512,  1609,    54,   258,  2140,  2155,
    2558,  1868,  1544,  2512,   823,   191,  2510,  1613,   827,  2165,
     949,  2155,  2168,  1189,  1891,  2045,   735,  2047,  1646,  1508,
     782,  2177,  2178,   772,   773,  2181,   775,  1523,  1163,   760,
    1794,   760,  2439,  1188,  2046,  1780,   781,  2193,  1494,   300,
    2016,   227,  2031,  1778,  2200,  1204,   104,   784,  2335,  2205,
    2423,  2422,  2208,  2209,   315,  2434,  1322,  2435,  2219,  2215,
    2216,   140,    81,  2499,    83,  2500,    85,  2487,  1511,  2193,
    1119,  2227,  1448,  2229,  1343,  1257,  2200,   807,  1445,  1122,
    1616,  2205,  2415,   964,  2208,  2209,  1142,   273,   766,  1815,
    1143,   170,  1319,  2249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2227,   183,    -1,    -1,    -1,    -1,   188,
      -1,   930,    -1,    -1,  2193,    -1,   935,    -1,    -1,    -1,
    1628,  2200,    -1,  2279,   943,  2155,  2205,    -1,    -1,  2208,
     949,    -1,   190,   952,    -1,    -1,    -1,   956,   957,    -1,
     959,   960,    -1,   962,   223,   406,  2288,    -1,  2227,    -1,
      35,    -1,  2308,   339,    -1,    -1,    -1,  2313,  2314,    -1,
      -1,    -1,    -1,  2343,    -1,    -1,    -1,  2309,    -1,    54,
      -1,    -1,  1680,    -1,  2330,    -1,  1335,    -1,  2334,   237,
      -1,    -1,   240,  2339,  2308,    -1,  2342,  2343,    -1,    -1,
      -1,   270,  1700,   251,    -1,    -1,    -1,   383,  2354,   385,
      -1,    -1,    -1,    -1,   639,    -1,    -1,    -1,  2364,    -1,
    2334,    -1,  2368,  2369,   963,    -1,    -1,    -1,    -1,   104,
     406,  1729,    -1,   409,   282,    -1,    -1,    -1,   957,  2308,
     959,    -1,    -1,    -1,    -1,    -1,    -1,  1056,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1753,    -1,    -1,    -1,  2279,
      -1,    -1,    -1,    -1,  2396,  2334,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2420,    -1,    -1,  2423,   326,    -1,
      -1,    -1,  1091,    -1,  1004,  1024,  2432,    -1,   357,    -1,
      -1,    -1,     8,  2439,   169,    11,    -1,    -1,   346,    -1,
      -1,  2447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2423,
      -1,  2443,  1121,    -1,    -1,   190,    -1,    -1,   366,    -1,
      -1,  2467,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,  1141,  2447,  1143,    -1,    -1,    -1,    -1,     8,
    2486,  2487,    11,  1152,    -1,  1154,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,  2423,  1094,    72,    -1,    -1,    -1,
      -1,    -1,   237,  1083,    -1,   240,  2512,  2513,    -1,    -1,
      -1,  1869,  2392,    -1,    -1,    -1,   251,  1186,  2447,    -1,
      -1,    -1,   807,  2529,   453,  2531,  1195,  1196,    -1,    -1,
    2522,   460,   461,   462,   463,   464,   465,  1206,  1207,  1208,
    1209,    -1,  1211,    -1,    -1,    -1,    -1,   282,  1217,    -1,
    1219,  1150,    -1,    -1,     8,  2529,    -1,    11,    -1,    -1,
      -1,  1230,  1231,    -1,   140,    -1,  1235,  1236,    -1,    -1,
      -1,  1240,  1241,  1242,  1243,    -1,  1245,  1246,    -1,    -1,
      -1,    -1,    -1,  2589,  2590,    -1,    40,   456,    -1,    -1,
      -1,   326,    -1,    47,   170,    -1,  1265,  1266,     0,    -1,
    2529,    -1,    -1,    -1,    -1,    -1,    -1,   183,    -1,  1278,
      -1,   346,   188,    -1,    -1,    -1,    -1,  1196,    72,  1628,
      -1,    -1,    -1,    -1,  1204,    -1,    -1,  1206,     8,  1208,
      -1,   366,  1211,  2513,  1992,    15,    16,    17,  1217,    -1,
    1219,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,
      -1,    -1,  1231,    -1,    -1,    -1,    -1,  1236,    -1,    -1,
      -1,  1240,  1241,  1242,  1243,   534,  1245,  1246,    -1,    -1,
      -1,  1680,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     209,  1280,     8,    -1,    -1,    11,   140,    -1,    -1,    91,
     580,  1700,    -1,    -1,   270,    -1,    -1,   566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,   170,    -1,    -1,  1004,
    1729,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,
     599,   600,   601,    -1,   188,    -1,    -1,    -1,    -1,    -1,
     142,   270,    -1,  2101,  1753,    -1,    72,    -1,   638,   639,
    2108,    -1,    -1,   155,    -1,  1335,    -1,    -1,   160,    -1,
      -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,   223,
      -1,    -1,   174,  1442,    -1,   177,    -1,    -1,    -1,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,  1387,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1083,    -1,
      -1,    -1,    -1,   205,  1473,    -1,    -1,    -1,    -1,    -1,
    2168,  1480,     8,    -1,   140,    11,   270,    -1,    -1,    15,
      16,    17,   224,    -1,    -1,  1494,    -1,    -1,    -1,  1498,
      -1,  1430,  1501,    -1,  1503,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,  1448,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,
    1869,    -1,   188,   265,    -1,  1464,   268,    -1,    -1,    -1,
      -1,    -1,   274,    -1,    -1,   744,    -1,   453,    -1,    -1,
    1549,  1480,    -1,    -1,   460,   461,   462,   463,   464,   465,
     270,    -1,    -1,    -1,  1493,  1494,    -1,   223,   767,  1498,
      -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   807,    -1,  1204,
      -1,  2279,    -1,    -1,   793,    -1,   328,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   806,    -1,    -1,
    1609,   831,   832,   833,   270,  1614,    -1,    -1,    -1,  1618,
    1619,  1620,  1621,    -1,   639,    -1,  2314,    -1,   827,    -1,
      -1,    -1,    -1,  1632,    -1,    -1,    -1,    -1,  1637,    -1,
      -1,    -1,  1641,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,  2339,    -1,  1992,  2342,    -1,    -1,    -1,  1657,  1658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,
      -1,    -1,    -1,   405,    -1,    -1,   460,   461,   462,   463,
     464,   465,    -1,   209,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1693,    -1,    -1,   429,    -1,   431,
     432,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     630,    -1,    -1,    -1,    -1,  1644,    -1,   637,  1628,    -1,
    1335,    -1,    -1,  1632,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   467,   935,    -1,   470,   471,
     472,    -1,    -1,    -1,   270,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,  2101,   962,    -1,    -1,    -1,    -1,  1767,  2108,
    1680,    -1,    -1,    -1,    -1,    -1,  1775,  1776,  1777,  1778,
      -1,  1780,  1781,    -1,  1004,    -1,  1785,  1786,    -1,    -1,
    1700,    -1,   807,    -1,    -1,    -1,    -1,   453,    -1,    -1,
      -1,    -1,    -1,    -1,   460,   461,   462,   463,   464,   465,
      -1,    -1,    -1,    -1,    -1,  1814,    -1,    -1,    -1,  1729,
     740,    -1,   742,   743,    -1,  2513,    -1,    -1,    -1,  2168,
      -1,  1830,    -1,  1832,  1763,    -1,    -1,  1836,  1837,  1838,
      -1,  1840,    -1,  1753,    -1,    -1,    -1,    -1,    -1,  1778,
      -1,  1780,    -1,    -1,    -1,    -1,    -1,  1856,    -1,  1858,
      -1,    -1,    -1,  1083,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1871,  1872,  1873,  1874,  1875,  1876,  1877,  1878,
    1879,  1880,    -1,    -1,    -1,    -1,    -1,    -1,   808,    -1,
      -1,   811,   812,    -1,    -1,    -1,  1895,    -1,    -1,    -1,
      -1,    -1,    -1,  1902,  1124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1913,    -1,    -1,  1916,    -1,    -1,
      -1,    -1,  1121,  1832,  1923,    -1,    -1,    -1,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
    2279,    -1,  1141,    -1,  1143,    -1,    -1,  1856,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1869,
      -1,    -1,  1871,  1872,  1873,  1874,  1875,  1876,  1877,  1878,
    1879,  1880,    -1,    -1,    -1,  2314,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1912,  1204,    -1,    -1,  1186,    -1,  1004,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2339,    -1,    -1,  2342,    -1,    -1,  2005,    -1,    -1,  2008,
    2009,  2010,  2011,  1628,    -1,    -1,  2015,  2016,    -1,  2018,
      -1,    -1,  2021,    -1,    -1,    -1,  2025,    -1,    -1,    -1,
    2029,  1251,    -1,    -1,    -1,    -1,  2035,    -1,   524,   525,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   969,
     970,    -1,    -1,    -1,    -1,  2054,    -1,    -1,    -1,    -1,
    2059,    -1,    -1,    -1,  2063,  1680,  1265,    -1,  1083,    -1,
      -1,    -1,  2071,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1992,    -1,    -1,  1700,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   580,   581,  2025,  2096,    -1,    -1,
    2029,  1321,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1729,  1335,    -1,    -1,  1038,  1039,
      -1,    -1,    -1,  2052,  2053,    -1,  1046,    -1,  1048,  1049,
      -1,    -1,    -1,    -1,  2133,    40,    -1,    -1,  1753,    -1,
    2139,    -1,    47,  1063,    -1,  1065,    -1,    -1,    -1,    -1,
      -1,  2150,   638,    -1,    -1,    -1,    -1,    -1,  1078,  1079,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,   654,    -1,
      -1,    -1,    -1,    -1,  2513,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1204,
      -1,  2101,    -1,    -1,  2193,  2194,   682,    -1,  2108,  2198,
      -1,  2200,    -1,    -1,    -1,    -1,  2205,    -1,    -1,  2208,
    2209,  2140,  2211,    -1,  2213,   701,   702,   703,    -1,   705,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2227,    -1,
      -1,    -1,    -1,    -1,    -1,   140,    -1,    -1,    -1,   725,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2247,  2248,
      -1,    -1,  1172,  1173,  1869,    -1,    -1,  2256,  2168,    -1,
      -1,    35,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
      -1,  2200,    -1,    -1,  1473,    -1,  2205,    -1,   183,  2208,
      54,  2280,  2281,   188,    -1,    -1,    -1,    -1,   774,    -1,
      -1,  2290,   778,   779,  2293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1224,    -1,  2305,    -1,    -1,  2308,
      -1,    -1,    -1,    -1,  1234,    -1,    -1,  1237,   223,    -1,
    1335,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2327,    -1,
     104,   105,    -1,    -1,    -1,  2334,    -1,    -1,   112,  2248,
      -1,  2340,    -1,    -1,    -1,   831,   832,   833,    -1,    -1,
    2349,    -1,    -1,    -1,  2353,    -1,    -1,    -1,    -1,  2288,
      -1,    -1,    -1,  2362,    -1,   270,    -1,    -1,    -1,  2279,
      -1,  2280,  2281,    -1,    -1,    -1,    -1,  1992,    -1,  1599,
    2309,    -1,    -1,    -1,  2293,  2384,  1306,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,  2395,    -1,    -1,  1319,
      -1,    -1,    -1,    -1,  2314,  2334,    -1,    -1,  1628,    -1,
      -1,  1331,    -1,    -1,  2343,  1614,   190,    -1,    -1,    -1,
    1619,  1620,  1621,    -1,  2423,    -1,    -1,    -1,    -1,  2339,
    2429,    -1,  2342,    -1,    -1,  2434,    -1,    -1,  1637,    -1,
      -1,    -1,    -1,    -1,  2353,    -1,    -1,    -1,  2447,  2448,
    2449,  2450,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1680,    -1,    -1,   237,    -1,    -1,   240,  2396,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
    1700,    -1,    -1,    -1,    -1,    -1,  2101,    -1,    -1,    -1,
      -1,    -1,  2491,  2108,    -1,    -1,    -1,    -1,    -1,    -1,
    2499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,  1729,
    2509,    -1,    -1,    -1,  2443,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2523,    -1,    -1,    -1,    -1,    -1,
    2529,    -1,    -1,  1753,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2544,    -1,  1033,   453,    -1,
      -1,    -1,   326,  2168,    -1,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,  1484,    -1,    -1,    -1,  1054,    -1,
      -1,  1057,   346,    -1,  1060,    -1,  1775,  1776,  1777,    -1,
      -1,  1067,  1068,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   366,  2522,   368,  1515,  1516,   371,  1084,  1085,
    1086,  1087,    -1,  2513,    -1,    -1,  1092,  1093,    -1,    -1,
      -1,  1097,    -1,  1628,    -1,  1101,    -1,    -1,  1104,  1105,
    1106,  1107,  1108,  1109,  1110,  1111,  1112,    -1,    -1,  1115,
      -1,  1830,    -1,    -1,    -1,    -1,  1122,    -1,  1124,    -1,
      -1,    -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,  1869,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1145,
      18,    -1,    -1,    -1,  2279,  1680,    -1,    -1,    -1,    -1,
      28,    -1,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1700,  1172,  1173,    46,    -1,
      -1,    -1,    -1,    -1,    -1,   469,  1895,    55,    -1,  2314,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,
      -1,    -1,    -1,    -1,  1729,    -1,    -1,  1916,    -1,    -1,
      78,    -1,    -1,    -1,  2339,    -1,    -1,  2342,    -1,    -1,
      -1,    89,    -1,    91,    -1,    -1,    -1,    -1,  1753,    -1,
      -1,    -1,    -1,    -1,  1664,  1665,    -1,    -1,    -1,  1669,
     108,    -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   122,  1251,    -1,    -1,  1254,  1255,
      -1,  1257,  1992,    -1,   132,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,   719,   146,    -1,
     148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2008,
    2009,  2010,  2011,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   757,    -1,    -1,    -1,   187,
      -1,    -1,    -1,     8,    -1,  1321,    11,    -1,    -1,    -1,
      15,    16,    17,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1869,    -1,  1342,    32,    -1,    -1,
      -1,  1347,    -1,     8,    -1,    -1,    11,    -1,   226,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2101,    -1,     8,    -1,    -1,    11,    -1,  2108,     8,
      -1,    -1,    11,    -1,   142,    40,    -1,    -1,  2513,    -1,
      -1,  1387,    47,    -1,   836,    -1,    -1,   155,    -1,   841,
      -1,    -1,   160,    -1,    -1,    40,  1402,   165,  1404,  1405,
      -1,    40,    47,    -1,  1410,    -1,   174,    72,    47,   177,
      -1,    -1,    -1,    -1,    -1,    -1,   294,    -1,    -1,   297,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,  2168,  1869,
      -1,    -1,    -1,    72,    -1,    -1,    -1,   205,  1444,    -1,
      -1,  1447,    -1,  1449,    -1,    -1,    -1,   325,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   333,   224,  1992,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,    -1,
      -1,    -1,    -1,    -1,   352,    -1,    -1,    -1,   356,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   366,  1929,
      -1,    -1,    -1,    -1,    -1,   140,    -1,   265,    -1,    -1,
     268,   379,  1508,    -1,    -1,   170,   274,    -1,    -1,    -1,
      -1,    -1,     0,    -1,   209,    -1,    -1,  1523,   183,    -1,
      -1,    -1,    -1,   188,    -1,   170,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,  1541,   414,  2256,   183,  2279,
      -1,   419,    -1,   188,   183,    -1,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   432,    -1,    -1,    -1,   223,    -1,
     328,    -1,    -1,    -1,    -1,    -1,  2101,    -1,    -1,    -1,
      -1,    -1,    -1,  2108,  2314,   270,    -1,   455,   223,  1031,
      -1,    -1,    -1,    -1,   223,    -1,  2305,    -1,    -1,    -1,
      -1,   469,    -1,  1599,   472,    -1,    -1,    -1,    -1,  2339,
      -1,  1053,  2342,    91,    -1,   270,  1058,    -1,    -1,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,  1069,  1070,  1071,
      -1,  1073,    -1,    -1,    -1,   270,    -1,    -1,    -1,    -1,
      -1,   270,    -1,  2168,    -1,    -1,    -1,   405,    -1,    -1,
      -1,    -1,    -1,  2362,    -1,    -1,    -1,    -1,    -1,    -1,
    2090,    -1,    -1,    -1,   142,  2095,    -1,    -1,    -1,    -1,
      -1,   429,    -1,   431,   432,    -1,    -1,   155,  1120,  2109,
    2110,  1677,   160,    -1,    -1,    -1,  2395,   165,    -1,    -1,
      -1,  1687,    -1,    -1,    -1,  1691,   174,    -1,  1694,   177,
      -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,   470,   471,   472,    -1,    -1,  1159,    -1,    -1,
      -1,    -1,   357,    -1,  1720,  1721,    -1,   205,   357,  1171,
      -1,    -1,    -1,    -1,  1176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1741,   224,    20,  1744,    -1,
    1746,    -1,    -1,    -1,  2279,    -1,    -1,    -1,  1754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1762,  1763,    -1,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,    -1,    -1,  2513,    -1,    -1,    -1,   265,    -1,  2314,
     268,    -1,    -1,    -1,    -1,  1791,   274,    -1,   453,    -1,
      73,   456,   457,   458,  1800,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,  2339,    88,    -1,  2342,   453,    -1,
    1816,    -1,    -1,    -1,   453,   460,   461,   462,   463,   464,
     465,   460,   461,   462,   463,   464,   465,    -1,    -1,    -1,
    2270,  2271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2279,
     328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,   150,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,   162,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,   379,    -1,  1345,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,   191,    -1,
      -1,    -1,    -1,    -1,  1366,    -1,    -1,   405,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,
      -1,  1383,    -1,  1385,  1386,    -1,  1388,  1943,  1390,    -1,
      -1,   429,  1394,   431,   432,    -1,    -1,    -1,    -1,  1401,
      -1,    -1,    -1,   236,  1406,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1416,  1417,  1418,  1419,    -1,    -1,
      -1,    -1,    -1,  1425,  1426,    -1,  1428,  1429,  2513,   467,
    1986,  1987,   470,   471,   472,  1991,    -1,    -1,  1440,    -1,
    1996,  1443,    -1,  1999,  2000,    -1,    -1,    -1,  2004,  1451,
    1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,   292,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,    -1,   170,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,  1491,
      -1,    -1,    -1,   188,  2050,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   337,    -1,   339,    -1,    -1,    -1,
      -1,    -1,    -1,   346,   209,   210,   349,    -1,    -1,    -1,
      -1,    -1,    -1,  2513,    -1,    -1,    -1,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   368,  2092,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,   386,    -1,    -1,    -1,    -1,   253,    -1,
      -1,   256,   395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   425,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1602,  1603,  1604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,  2177,  2178,    -1,     8,  2181,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,  2215,
    2216,    -1,   357,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2229,  1676,    -1,    -1,    -1,    -1,    -1,
    1682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,  1697,  1698,  1699,    -1,  1701,
    1702,  1703,  1704,    -1,    -1,  1707,  1708,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,  1716,  1717,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1737,    -1,    -1,    -1,    -1,
    1742,  1743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1756,  1757,  1758,  1759,   453,  1761,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,  2330,    -1,     8,    -1,   473,    11,
      -1,    -1,    -1,    15,    16,    17,   170,  2343,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2354,   183,
      32,    -1,    -1,    -1,   188,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,  2369,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,    -1,    -1,
      -1,  1833,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,
      72,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,   253,
      -1,    -1,   256,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,  2439,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,
      -1,  2467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2486,  2487,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,
      -1,    -1,  1944,    -1,    -1,    -1,  1948,  1949,    -1,  1951,
      -1,   183,  1954,  1955,  1956,  1957,   188,    -1,    -1,  1961,
    1962,  1963,  1964,  1965,  1966,  1967,  1968,  1969,  1970,  1971,
    1972,    -1,    -1,   357,    -1,  2531,    -1,   209,   210,    -1,
      -1,    -1,    -1,  1985,    -1,    -1,  1988,    -1,  1990,    -1,
      -1,   223,  1994,    -1,    -1,  1997,  1998,    -1,    -1,  2001,
    2002,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,    -1,    22,
      -1,   253,   188,    -1,   256,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    35,  2589,  2590,    -1,    -1,    -1,   270,    -1,
    2042,   273,    -1,   209,   210,    -1,    -1,  2049,    -1,    -1,
      -1,    54,    22,    -1,    -1,    -1,    -1,   223,    28,    -1,
    2062,    -1,    -1,    -1,    -1,    35,    -1,    -1,    -1,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,    -1,    -1,    54,    -1,    -1,   253,    -1,    -1,
     256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,   132,
      -1,    -1,    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2161,
      -1,    -1,   132,  2165,    -1,    -1,    -1,    -1,    -1,  2171,
    2172,  2173,    -1,    -1,  2176,    -1,    -1,  2179,  2180,    -1,
      -1,    -1,  2184,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   237,    -1,    -1,   240,   470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2249,   251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2267,    -1,   237,    -1,   272,
     240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   251,    -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
      -1,    -1,   272,    -1,   470,    -1,    -1,    -1,    -1,    -1,
    2312,  2313,   282,    -1,    -1,  2317,  2318,  2319,   321,    -1,
      -1,    -1,   325,   326,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   346,    -1,  2347,  2348,    -1,    -1,   352,
      -1,   321,    -1,    -1,    -1,   325,   326,    -1,  2360,    -1,
      -1,    -1,    -1,   366,    -1,    -1,    -1,    -1,    -1,    -1,
    2372,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,
      -1,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   416,    -1,  2417,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2428,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2445,    -1,    -1,   416,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2459,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2520,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2534,    -1,    -1,    -1,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,  2601,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
     127,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,   223,    -1,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,    -1,
      -1,    -1,    -1,   460,   461,   462,    -1,    -1,    -1,    -1,
      -1,    -1,   469,   470,    -1,    -1,    -1,   474,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,   171,    -1,   173,    -1,
     175,   176,    -1,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
     455,    -1,    -1,    -1,    -1,   460,   461,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   469,   470,    -1,    -1,    -1,   474,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,   171,    -1,
     173,    -1,   175,   176,    -1,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
     203,   204,    -1,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
     223,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,    -1,   388,   389,    -1,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,   455,    -1,    -1,    -1,    -1,   460,   461,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,
      -1,   474,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,   219,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,    -1,    -1,    -1,    -1,   460,
     461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,
      -1,    -1,    -1,   474,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,   223,    -1,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,    -1,    -1,    -1,
      -1,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    -1,    -1,    -1,    -1,   474,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,   223,    -1,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,    -1,
      -1,    -1,    -1,   460,   461,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   469,    -1,    -1,    -1,    -1,   474,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,   171,    -1,   173,    -1,
     175,   176,    -1,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,   460,   461,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   469,   470,    -1,    -1,    -1,   474,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,   171,    -1,
     173,    -1,   175,   176,    -1,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
     203,   204,    -1,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
     223,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,    -1,   388,   389,    -1,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,    -1,    -1,    -1,    -1,   460,   461,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,
      -1,   474,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,    -1,    -1,    -1,    -1,   460,
     461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,
      -1,    -1,    -1,   474,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,   223,    -1,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,    -1,    -1,    -1,
      -1,   460,   461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    -1,    -1,    -1,    -1,   474,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,   223,    -1,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,    -1,    -1,    -1,
      -1,    -1,    -1,   460,   461,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   469,    -1,    -1,    -1,    -1,   474,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,   171,    -1,   173,    -1,
     175,   176,    -1,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,   460,   461,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,    -1,   474,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,   171,    -1,
     173,    -1,   175,   176,    -1,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
     203,   204,    -1,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
     223,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,    -1,   388,   389,    -1,    -1,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,    -1,    -1,    -1,    -1,    -1,    -1,   460,   461,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,
      -1,   474,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,    -1,    -1,    -1,    -1,    -1,    -1,   460,
     461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,
      -1,    -1,    -1,   474,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,   223,    -1,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,    -1,    -1,    -1,    -1,    -1,
      -1,   460,   461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    -1,    -1,    -1,    -1,   474,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,   223,    -1,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   460,   461,    -1,    -1,     3,     4,     5,
       6,     7,   469,     9,    10,    -1,    -1,   474,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,   157,   158,   159,    -1,   161,    -1,   163,   164,    -1,
     166,   167,   168,   169,   170,   171,    -1,   173,    -1,   175,
     176,    -1,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,   203,   204,    -1,
     206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,   223,    -1,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,    -1,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,    -1,
     266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,    -1,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,    -1,   388,   389,    -1,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   460,   461,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,    -1,    -1,    -1,    -1,   474,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,   223,
      -1,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   460,   461,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,    -1,    -1,
     474,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,   157,   158,   159,    -1,   161,
      -1,   163,   164,    -1,   166,   167,   168,   169,   170,   171,
      -1,   173,    -1,   175,   176,    -1,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,   211,
     212,   213,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,   223,    -1,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,    -1,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,   263,   264,    -1,   266,   267,    -1,    -1,   270,   271,
     272,    -1,    -1,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,    -1,   388,   389,    -1,    -1,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,    -1,    -1,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,    -1,    -1,    -1,    -1,    -1,    -1,   460,   461,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,
      -1,    -1,   474,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
      -1,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,   157,   158,   159,
      -1,   161,    -1,   163,   164,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,    -1,   175,   176,    -1,   178,   179,
     180,   181,   182,    -1,   184,   185,   186,   187,    -1,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,   203,   204,    -1,   206,    -1,   208,    -1,
      -1,   211,   212,   213,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,    -1,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,   263,   264,    -1,   266,   267,    -1,    -1,
     270,   271,   272,    -1,    -1,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,    -1,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,    -1,   388,   389,
      -1,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,    -1,    -1,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,   469,
      -1,    -1,    -1,    -1,   474,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,   166,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,    -1,   161,    -1,   163,   164,    -1,   166,   167,
     168,   169,   170,   171,    -1,   173,    -1,   175,   176,    -1,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,   203,   204,    -1,   206,    -1,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,    -1,   220,   221,   222,   223,    -1,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,    -1,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,   264,    -1,   266,   267,
      -1,   269,   270,   271,   272,    -1,    -1,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,    -1,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,    -1,
     388,   389,    -1,    -1,   392,   393,   394,   395,   396,    -1,
     398,   399,   400,   401,   402,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   469,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,   171,    -1,   173,    -1,
     175,   176,    -1,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,   223,    -1,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,    -1,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,   269,   270,   271,   272,    -1,    -1,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   469,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,    -1,   156,   157,   158,   159,    -1,   161,    -1,
     163,   164,    -1,   166,   167,   168,   169,   170,   171,    -1,
     173,    -1,   175,   176,    -1,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
     203,   204,    -1,   206,    -1,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
     223,    -1,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
      -1,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,    -1,   266,   267,    -1,    -1,   270,   271,   272,
      -1,    -1,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,    -1,   388,   389,    -1,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,   402,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   469,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,     3,     4,     5,    -1,    -1,    -1,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      99,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,   164,    -1,   166,   167,   168,
     169,   170,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,   223,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,    -1,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,   268,
      -1,   270,   271,   272,    -1,    -1,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,     3,    -1,    -1,    -1,
      -1,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,   164,    -1,   166,
     167,   168,   169,   170,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,   223,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,    -1,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,    -1,   414,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   469,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,    -1,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,    -1,    -1,   211,    -1,   213,
     214,   215,   216,   217,    -1,    -1,   220,    -1,   222,    -1,
      -1,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,    -1,   248,   249,   250,   251,   252,    -1,
     254,   255,    -1,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,    -1,   278,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,    -1,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,    -1,
     424,   425,   426,   427,    -1,    -1,   430,    -1,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   469,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,    -1,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,    -1,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
      -1,    -1,   211,    -1,   213,   214,   215,   216,   217,    -1,
      -1,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,    -1,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,    -1,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,    -1,   156,
     157,   158,   159,    -1,   161,    -1,   163,    -1,    -1,    -1,
     167,   168,   169,    -1,   171,    -1,   173,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,    -1,   184,   185,   186,
     187,    -1,   189,   190,   191,   192,   193,   194,    -1,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
      -1,   208,    -1,    -1,   211,    -1,   213,   214,   215,   216,
     217,    -1,    -1,   220,    -1,   222,    -1,    -1,   225,   226,
     227,    -1,    -1,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
      -1,   248,   249,   250,   251,   252,    -1,   254,   255,    -1,
     257,    -1,   259,   260,   261,   262,   263,   264,    -1,   266,
     267,    -1,    -1,   270,   271,   272,    -1,    -1,   275,   276,
      -1,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,    -1,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,    -1,   380,    -1,   382,   383,   384,   385,   386,
      -1,   388,   389,    -1,    -1,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,   401,   402,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,    -1,   414,   415,   416,
     417,   418,   419,   420,    -1,   422,    -1,   424,   425,   426,
     427,    -1,    -1,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   469,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,    -1,
      -1,    -1,   167,   168,   169,    -1,   171,    -1,   173,    -1,
     175,   176,    -1,   178,   179,   180,   181,   182,    -1,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,    -1,    -1,   211,    -1,   213,   214,
     215,   216,   217,    -1,    -1,   220,    -1,   222,    -1,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,    -1,   248,   249,   250,   251,   252,    -1,   254,
     255,    -1,   257,    -1,   259,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,   276,    -1,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,    -1,   380,    -1,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,   414,
     415,   416,   417,   418,   419,   420,    -1,   422,    -1,   424,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,    -1,
      -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,
      -1,    -1,    -1,    -1,   469,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,    -1,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,    -1,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
      -1,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,    -1,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,     3,    -1,   456,   457,   458,     8,
     460,   461,   462,   463,   464,   465,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,    -1,   156,   157,   158,
     159,    -1,   161,    -1,   163,    -1,    -1,    -1,   167,   168,
     169,    -1,   171,    -1,   173,    -1,   175,   176,    -1,   178,
     179,   180,   181,   182,    -1,   184,   185,   186,   187,    -1,
     189,   190,   191,   192,   193,   194,    -1,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,    -1,   208,
      -1,    -1,   211,    -1,   213,   214,   215,   216,   217,    -1,
      -1,   220,    -1,   222,    -1,    -1,   225,   226,   227,    -1,
      -1,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,    -1,   248,
     249,   250,   251,   252,    -1,   254,   255,    -1,   257,    -1,
     259,   260,   261,   262,   263,   264,    -1,   266,   267,    -1,
      -1,   270,   271,   272,    -1,    -1,   275,   276,    -1,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
      -1,   380,    -1,   382,   383,   384,   385,   386,    -1,   388,
     389,    -1,    -1,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,   401,   402,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,    -1,   414,   415,   416,   417,   418,
     419,   420,    -1,   422,    -1,   424,   425,   426,   427,    -1,
      -1,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,    -1,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    32,    -1,    15,    16,    17,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,     8,    47,    -1,    11,    -1,
      32,    -1,    15,    16,    17,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    32,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    72,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,
      -1,    11,    -1,    47,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    72,   170,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,   183,    -1,    -1,    -1,    -1,   188,   170,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   183,    72,    -1,    -1,    -1,   188,   170,   209,   210,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     183,    -1,   223,    -1,    -1,   188,    -1,   209,   210,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   223,    -1,    -1,    -1,    -1,   209,   210,    -1,    -1,
      -1,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,    -1,
     223,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,   270,
      -1,   253,   273,    -1,   256,    -1,    -1,    -1,    -1,   183,
      -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,   270,    -1,
     253,   273,    -1,   256,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,    -1,   209,   210,   270,    -1,    -1,
     273,    -1,    -1,   183,    -1,    -1,    -1,    -1,   188,   223,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,
     210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   253,
      -1,    -1,   256,   223,    -1,    -1,   357,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,
     270,     8,    -1,   273,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   453,   357,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,    72,    -1,    -1,    -1,   470,
      -1,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,    -1,    -1,    -1,   357,   470,    -1,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,     8,    -1,    -1,    11,   470,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,    -1,   170,    -1,     8,   470,    72,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,   183,    -1,    -1,    -1,
      -1,   188,    -1,   453,    -1,    -1,   456,   457,   458,    32,
     460,   461,   462,   463,   464,   465,    -1,    40,    -1,    -1,
     470,    -1,   209,   210,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    72,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   253,    32,    -1,   256,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,   270,    -1,   170,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,    -1,
      -1,    -1,    -1,   188,    -1,    -1,    -1,    72,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   209,   210,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     183,    -1,    -1,    -1,    -1,   188,    -1,    -1,   253,    -1,
     357,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,   209,   210,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     223,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,    -1,
      -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     253,    -1,    -1,   256,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   209,   210,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,   456,
     457,   458,   357,   460,   461,   462,   463,   464,   465,    -1,
      -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,   253,    -1,
      -1,   256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,    -1,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,    -1,    -1,    -1,    -1,   470,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,     3,
      -1,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,    -1,    -1,   468,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   462,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
      -1,    -1,    -1,   167,   168,   169,    -1,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,    -1,    -1,   211,    -1,   213,
     214,   215,   216,   217,    -1,    -1,   220,    -1,   222,    -1,
      -1,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,    -1,   248,   249,   250,   251,   252,    -1,
     254,   255,    -1,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,
      -1,   275,   276,    -1,   278,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,    -1,   380,    -1,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,    -1,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,    -1,
     424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   462,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,   223,
      -1,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,     3,
       4,     5,    -1,    -1,    -1,     9,   460,   461,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,   223,
      -1,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,     3,
       4,     5,    -1,    -1,    -1,     9,   460,   461,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,   157,   158,   159,    -1,   161,    -1,   163,
     164,    -1,   166,   167,   168,   169,   170,   171,    -1,   173,
      -1,   175,   176,    -1,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,    -1,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,   223,
      -1,   225,   226,   227,    -1,    -1,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,    -1,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,    -1,   266,   267,   268,    -1,   270,   271,   272,    -1,
      -1,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,    -1,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,    -1,   388,   389,    -1,    -1,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,
     414,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,     8,    -1,    -1,    11,    -1,   460,   461,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,     8,    -1,    -1,    11,    -1,
      47,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    72,    -1,    40,    -1,    -1,
      -1,    -1,     8,    -1,    47,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    72,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
       8,    47,    -1,    11,   121,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    72,    35,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,     8,    -1,    47,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    72,    -1,   183,    -1,    -1,    40,
      -1,   188,    -1,    -1,    -1,    -1,    47,   160,    -1,    -1,
      -1,    -1,   165,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,    -1,   209,   210,    -1,    -1,    -1,    -1,    -1,    -1,
     183,    72,    -1,    -1,    -1,   188,   223,    -1,    -1,    -1,
      -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,   209,   210,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   253,   183,    -1,   256,
     223,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,
      -1,    -1,   170,   209,   210,    -1,    -1,    -1,    -1,    -1,
     253,    -1,    -1,   256,    -1,   183,    -1,   223,    -1,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,
      -1,   209,   210,    -1,    -1,    -1,    -1,   253,    -1,    -1,
     256,    -1,   183,    -1,    -1,   223,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,   210,
     357,    -1,    -1,    -1,    -1,   253,    -1,    -1,   256,   295,
      -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   413,    -1,     8,   270,
      -1,    11,   273,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   290,
      -1,    -1,    32,    -1,    -1,    35,     8,    -1,    -1,    11,
      40,    -1,    -1,    15,    16,    17,   453,    47,    -1,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   357,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
       8,    -1,    72,    11,    -1,    47,    -1,    15,    16,    17,
     453,    -1,    -1,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,    -1,    32,    -1,   357,    -1,    -1,    -1,
      72,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
      -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,    -1,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,   188,    -1,
      -1,    -1,   453,   165,    -1,   456,   457,   458,   170,   460,
     461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,   209,
     210,   183,    -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   170,    -1,    -1,    -1,    -1,   209,   210,    -1,
      -1,    -1,    -1,    -1,    -1,   183,    -1,    -1,    -1,    -1,
     188,   223,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   209,   210,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   253,    -1,    -1,   256,   223,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   270,    -1,
      11,   273,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   253,    -1,    -1,   256,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,   270,    -1,     8,   273,    47,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,    32,    -1,
      -1,    72,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,
      -1,    11,    -1,    47,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    72,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   387,
      -1,    -1,    72,   453,    -1,    -1,   456,   457,   458,   170,
     460,   461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,   183,    -1,    -1,    -1,    -1,   188,    -1,    -1,
      -1,   453,    -1,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,    -1,    -1,   170,    -1,   209,   210,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,
      -1,    -1,   223,    -1,   188,   453,    -1,    -1,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,    -1,    -1,
     170,    -1,    -1,    -1,    -1,   209,   210,    -1,    -1,    -1,
      -1,    -1,   253,   183,    -1,   256,    -1,    -1,   188,   223,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,   273,   183,    -1,    -1,    -1,    -1,   188,   209,
     210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   253,
      -1,    -1,   256,   223,    -1,    -1,    -1,    -1,    -1,   209,
     210,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   253,    -1,    -1,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,   256,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,    -1,
      -1,    -1,   453,    -1,    -1,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   453,
      -1,    -1,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   453,    -1,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,
      -1,    -1,     3,   453,     5,    -1,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,   268,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,    -1,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    -1,    -1,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,   162,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,   162,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,   269,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,   269,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,    -1,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,    -1,    -1,    -1,   167,   168,   169,    -1,
     171,    -1,   173,    -1,   175,   176,    -1,   178,   179,   180,
     181,   182,    -1,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,    -1,    -1,
     211,    -1,   213,   214,   215,   216,   217,    -1,    -1,   220,
      -1,   222,    -1,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,    -1,   248,   249,   250,
     251,   252,    -1,   254,   255,    -1,   257,    -1,   259,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,   276,    -1,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
      -1,   332,   333,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,    -1,   380,
      -1,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,    -1,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      -1,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,    -1,   113,    -1,   115,   116,   117,   118,   119,   120,
      -1,   122,   123,   124,   125,   126,    -1,    -1,   129,   130,
     131,   132,   133,    -1,   135,   136,   137,    -1,   139,   140,
     141,    -1,   143,   144,   145,   146,    -1,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,    -1,
     161,    -1,   163,   164,    -1,   166,   167,   168,   169,   170,
     171,    -1,   173,    -1,    -1,   176,    -1,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,    -1,   206,    -1,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,   223,    -1,   225,   226,   227,    -1,    -1,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,    -1,   254,   255,   256,   257,    -1,    -1,   260,
     261,   262,   263,   264,    -1,   266,   267,    -1,    -1,   270,
     271,   272,    -1,    -1,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,    -1,   294,   295,    -1,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,    -1,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,    -1,
      -1,   392,   393,    -1,   395,    -1,    -1,   398,   399,   400,
     401,   402,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,    -1,   414,   415,   416,   417,   418,    -1,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,
     451,   452,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    -1,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,    -1,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,    -1,   161,    -1,   163,   164,
      -1,   166,   167,   168,   169,   170,   171,    -1,   173,    -1,
      -1,   176,    -1,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
      -1,   206,    -1,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,   223,    -1,
     225,   226,   227,    -1,    -1,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,    -1,   254,
     255,   256,   257,    -1,    -1,   260,   261,   262,   263,   264,
      -1,   266,   267,    -1,    -1,   270,   271,   272,    -1,    -1,
     275,    -1,   277,   278,   279,    -1,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,    -1,   294,
     295,    -1,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
      -1,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,    -1,   352,    -1,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,    -1,   388,   389,    -1,    -1,   392,   393,    -1,
     395,    -1,    -1,   398,   399,   400,   401,   402,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,    -1,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,   426,   427,    -1,    -1,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,   451,   452
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   108,   122,   132,   138,   146,   148,   149,   187,   226,
     294,   297,   325,   333,   345,   352,   356,   366,   379,   414,
     419,   432,   455,   469,   477,   478,   479,   480,   491,   492,
     494,   498,   512,   513,   515,   517,   524,   526,   572,   578,
     579,   596,   597,   598,   599,   600,   601,   638,   757,   760,
     763,   770,   771,   772,   773,   774,   781,   785,   791,   793,
     798,   802,   803,   806,   807,   809,   810,   812,   392,   435,
     525,   191,   339,   346,   379,   425,   525,     3,    18,    19,
      20,    21,    22,    23,    24,    25,    27,    28,    29,    37,
      38,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    53,    54,    55,    56,    57,    58,    61,
      62,    63,    64,    65,    67,    68,    69,    70,    71,    73,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    85,
      86,    87,    88,    89,    90,    92,    93,    94,    95,    99,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   113,
     115,   116,   117,   118,   119,   120,   122,   123,   124,   125,
     126,   129,   130,   131,   132,   133,   135,   136,   137,   139,
     140,   141,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   154,   156,   157,   158,   159,   161,   163,   164,
     166,   167,   168,   169,   170,   171,   173,   175,   176,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   189,
     190,   191,   192,   193,   194,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   206,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   220,   221,   222,   223,   225,
     226,   227,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   254,   255,   256,   257,   259,
     260,   261,   262,   263,   264,   266,   267,   270,   271,   272,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   346,   347,   348,   349,
     350,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   377,   378,   380,   381,   382,   383,
     384,   385,   386,   388,   389,   392,   393,   394,   395,   396,
     398,   399,   400,   401,   402,   403,   404,   407,   408,   409,
     410,   411,   414,   415,   416,   417,   418,   419,   420,   422,
     423,   424,   425,   426,   427,   430,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   687,   744,   748,   750,
     815,   816,   817,   525,    49,   469,   591,   171,   227,   273,
     339,   383,   385,   406,   409,   570,   769,     3,    26,   297,
     742,   748,   815,    20,    73,    88,   141,   150,   162,   191,
     236,   292,   306,   337,   339,   346,   349,   368,   379,   386,
     395,   425,   573,   574,   577,   525,   742,    91,   423,   469,
     494,   578,   596,   777,   781,   798,   812,   106,   106,     5,
     747,   792,   748,   742,    26,   388,   392,   748,   804,   805,
     808,   525,    26,   127,   608,   609,   227,   339,   350,   388,
     786,   787,   808,   525,   269,   649,   740,   748,   166,   469,
     795,   469,   313,   602,   603,   742,   602,   597,   598,   601,
       0,   472,   117,   201,   411,   142,   205,   274,   405,   610,
     611,   597,   599,   600,   473,   423,   775,    26,   388,   392,
     808,   182,   740,   742,   182,   740,   182,   649,   182,   740,
     469,   467,   471,   731,   733,   494,   578,   596,   759,   798,
     740,   383,   385,   383,   385,   323,   182,   748,   313,   346,
     379,   425,   191,    26,   742,   238,   395,   105,   379,   425,
     342,   182,   575,   748,   751,   182,   741,   742,   182,   742,
     469,   516,   570,   777,     3,   419,   778,   780,   781,   783,
     784,   815,   816,   817,   775,   747,   747,   458,   469,   469,
     758,   452,   211,   471,   268,     4,     6,     7,     8,     9,
      10,    48,    50,    51,    59,    60,    63,    64,    71,    73,
      96,    97,    98,    99,   100,   101,   102,   109,   110,   112,
     131,   147,   152,   153,   158,   203,   204,   206,   228,   229,
     246,   248,   253,   258,   259,   261,   270,   280,   293,   310,
     335,   351,   360,   375,   388,   389,   394,   396,   397,   412,
     420,   453,   460,   461,   462,   469,   474,   597,   664,   667,
     670,   671,   672,   674,   675,   676,   677,   679,   680,   684,
     686,   687,   688,   690,   703,   707,   725,   730,   737,   738,
     744,   745,   746,   747,   748,   736,   737,   786,   747,   786,
     452,   165,   390,   458,   469,   740,   462,   733,     3,   164,
     166,   423,   781,   794,   796,   164,   797,   684,   711,   602,
     473,   469,   753,   470,   470,   479,   165,   207,   649,   799,
      26,   127,   607,   607,    53,   607,   155,   160,   224,   265,
     616,   618,   619,   631,   633,   634,   635,   610,   611,   469,
     740,   452,   211,   147,    22,    28,   132,   272,   321,   325,
     352,   416,   485,   488,   489,   321,   147,    35,    54,   104,
     190,   237,   240,   251,   282,   321,   326,   346,   352,   366,
     488,   518,   521,   147,   321,   352,   488,   147,   321,   352,
     488,    26,   127,   421,   462,   470,   684,   712,   713,   750,
     754,   684,   732,     3,    26,    30,    31,    32,    33,    34,
      35,    36,    39,    52,    59,    60,    66,    72,    74,    84,
      91,    96,    97,    98,   100,   101,   102,   112,   114,   121,
     127,   128,   134,   138,   142,   153,   155,   160,   162,   165,
     172,   174,   177,   188,   195,   205,   207,   218,   219,   224,
     228,   229,   253,   258,   265,   268,   269,   273,   274,   290,
     300,   315,   328,   345,   351,   362,   376,   379,   387,   390,
     391,   397,   405,   406,   412,   413,   421,   428,   429,   431,
     432,   462,   743,   755,   815,   816,   817,   818,   731,   470,
     469,   560,   570,   253,   761,   425,   182,   740,   182,   740,
     814,   740,    80,   766,   436,    81,   124,   285,   384,   147,
      57,   327,   473,   576,   471,   752,   147,   473,   576,   147,
     268,   711,   379,   470,   473,     4,   153,   268,   397,   460,
     461,   520,   523,   746,   747,   776,   778,   779,   782,   777,
     469,   586,   590,   520,   782,   788,   790,   712,     3,    48,
      50,    51,    63,    64,   109,   110,   158,   203,   204,   206,
     246,   248,   261,   310,   353,   360,   388,   389,   420,   661,
     663,   665,   667,   669,   671,   672,   673,   675,   676,   679,
     680,   714,   750,   815,    35,   222,   748,   469,   734,   422,
     678,   684,   729,   469,   678,   678,   469,   160,   469,   469,
     469,   666,   666,   296,   597,   469,   469,   668,   469,   469,
      63,    64,   678,   684,   469,   666,   469,   469,   469,   469,
     469,   434,   455,   469,   681,   469,   681,   469,   469,   684,
     684,   684,   597,   684,   711,   734,   733,   747,   469,   469,
     747,     3,     8,    11,    15,    16,    17,    32,    35,    40,
      47,    72,   170,   183,   188,   209,   210,   223,   253,   256,
     270,   273,   357,   453,   456,   457,   458,   460,   461,   462,
     463,   464,   465,   705,   706,   707,   709,   433,   691,   279,
     684,   207,   473,   604,   469,   747,   733,   604,     3,   112,
     227,   520,   680,   747,   789,    95,   112,   790,   112,   790,
     740,   470,   473,   775,   470,   473,   603,   741,    35,   799,
     496,   740,    35,   748,   352,   599,   599,   612,   613,   684,
     599,   157,   250,   625,   213,   251,   309,   355,   411,    26,
     620,   684,   460,   461,   621,   622,   684,   686,   631,   632,
     619,   618,   616,   617,   160,   634,   263,   636,   616,   631,
     711,   753,   222,   740,    66,    74,    84,   162,   182,   300,
     406,   541,   551,   566,   748,    74,    84,   493,    84,   493,
     469,   390,   469,   539,   233,   409,   539,    84,   473,   390,
     740,   663,   520,    53,   522,   520,   520,   104,   237,   240,
      53,   390,   432,   455,   519,   244,   339,   519,   521,   649,
      84,   390,   493,   339,   740,   390,   339,   712,   712,   713,
     470,   473,   610,   611,    13,    14,   468,   475,   390,   559,
     564,   748,   432,   589,   313,   425,   147,    91,   513,   526,
     762,   763,   810,   740,   253,   514,   518,   253,   469,   560,
      35,   560,   182,   554,   748,   767,   575,   751,   743,   471,
     741,   742,   742,   751,   470,   182,   740,   814,   777,   783,
       4,   746,     4,   746,   588,   595,   755,    49,    93,   118,
     136,   140,   161,   164,   178,   258,   266,   307,   592,   473,
     470,   473,   663,    34,   662,   107,   180,   239,   242,   343,
     450,   469,   682,   683,   470,   473,   666,   752,   759,   711,
     731,   469,   428,   726,   727,   684,   711,   469,   746,   746,
     711,     3,   107,   180,   239,   242,   343,   450,   715,   716,
     747,   746,   746,   746,   678,   678,   684,     8,    15,    16,
      17,   456,   457,   458,   460,   461,   462,   463,   464,   465,
     705,   710,   748,   684,   717,   460,   461,   469,   685,   686,
     707,   719,   470,   711,   684,   711,   720,   388,   388,   746,
     746,   684,    52,   165,   219,   391,   684,   711,   723,   470,
     473,   746,   474,   746,   682,   661,   684,   684,   684,   684,
       5,   755,   756,   388,    39,   376,   735,   751,   684,   684,
     469,   597,   724,   127,   153,   253,   258,   263,   397,   407,
     684,   258,   469,   684,   390,    47,   170,   183,   188,   223,
     357,   684,   684,   684,   684,   684,   684,   684,   684,   684,
     684,    26,    33,   362,   704,   174,   156,   692,   335,   469,
     703,   171,   227,   379,   383,   385,   409,   605,   740,   738,
     165,   639,   712,   639,   469,   747,   470,   740,   794,   740,
     802,   684,   470,   469,   413,   801,   112,   281,   469,   495,
     596,    35,   748,   469,   500,   509,   511,   748,   473,    36,
     121,   413,   614,   335,   336,   460,   461,   622,   624,   686,
     355,   213,   269,   473,     4,   623,   746,   623,   335,   336,
     624,   739,   740,   257,   359,   637,   632,   617,   470,   321,
     488,   469,   182,   551,   742,   213,   253,   213,   413,   469,
     544,   661,   742,   748,   182,   742,   182,   748,    22,   132,
     352,   484,   487,   534,   549,   755,   742,   543,   563,   755,
     742,   485,   742,   321,   352,   488,   518,   520,   751,   742,
     520,   751,   742,   520,   321,   352,   488,   742,   742,   742,
     742,   321,   352,   488,   742,   742,   610,   610,   610,   421,
     713,   470,   684,   684,   684,   732,   305,   585,   470,   473,
     266,   165,   390,   580,   425,   740,   748,   570,   469,   147,
     147,   223,   541,   551,   555,   558,   567,   569,   748,   432,
     434,   546,   146,   596,   432,   768,   253,   268,   576,   743,
     576,   268,   576,   253,    35,   470,   473,   462,   469,   520,
     587,   782,    35,   584,   747,   584,   253,   258,   307,   584,
     584,   788,    34,   662,   467,   467,   390,   390,   390,   469,
     390,   746,   661,   666,   470,   711,   684,   134,   727,   728,
      35,   470,   684,   470,   470,   470,   470,   165,   470,   470,
     470,   473,   470,   471,   290,   718,   470,   685,   685,   684,
      11,    15,    16,    17,   188,   209,   270,   456,   457,   458,
     460,   461,   462,   463,   464,   465,   707,   685,   470,   470,
     160,   165,   721,   722,   470,   452,   452,   470,   470,    35,
     723,   711,   723,   723,   165,   470,   734,   684,   470,   470,
     470,   452,   685,   685,   140,   711,   165,   127,   153,   258,
     263,   397,   407,   469,   140,   710,   684,   376,   735,   684,
     724,   684,   390,   469,   597,   469,   469,   278,   696,   383,
     385,   383,   385,   740,   379,   606,   606,   606,   218,   336,
     469,   597,   640,   641,   642,   649,   652,   687,   689,   690,
     748,   429,   657,   610,   657,   746,   682,   753,   759,   640,
     429,   800,   419,   378,   412,   504,   499,   508,   748,   268,
     501,   748,   505,   511,   473,   639,   458,   734,   613,   270,
     705,   708,   454,   615,     4,   746,   624,   269,   411,   621,
     473,   232,   390,   684,   253,   566,   469,   147,   469,   544,
     191,   564,   527,   272,   537,   527,    22,   132,   325,   326,
     352,   481,   482,   483,   489,   490,   147,   576,   147,   576,
     534,   549,   534,   470,   473,   530,   747,   470,   473,   458,
     471,   390,   339,    84,   390,   493,   339,   390,   390,   390,
     339,   470,   470,   470,   713,   468,   369,   370,   594,   747,
     559,   585,   740,   560,   761,   379,   564,   740,   740,   814,
     740,   470,   473,   266,   539,   266,   268,   538,   742,   432,
     813,   539,    35,   147,   740,   751,   147,   588,   582,   593,
     782,   747,   747,   258,   564,   462,   564,   747,   747,   467,
     746,   468,   746,   180,   239,   683,   239,   683,   683,   746,
     242,   470,   470,   387,   684,   138,   661,   470,   684,   684,
     710,   684,   721,   661,   685,   685,   685,   685,   127,   253,
     263,   685,   685,   685,   685,   685,   685,   685,   685,   685,
     685,   684,   684,   722,   721,   681,   681,   661,   470,   470,
     470,   711,   470,   474,   747,   684,    32,    32,   684,   470,
     684,   165,   469,   714,   684,   470,   140,   685,   685,   140,
     140,   684,   684,   611,   429,   469,   697,   748,   606,   606,
     606,   606,   740,   740,   740,   597,   652,   165,   597,   641,
     642,    35,   643,   644,   748,   473,    92,   166,   197,   212,
     221,   247,   331,   646,   644,    35,   643,   645,   748,   455,
     656,   733,   684,   174,   626,   470,   626,   470,   470,   684,
     328,   503,   418,   470,   473,   734,    82,   503,   470,   473,
     500,   800,   684,   469,   615,   157,   217,   269,   740,   742,
     470,   147,   564,   551,   564,   527,   554,   470,   114,   195,
     251,   253,   550,   469,   561,   169,   112,   181,   253,   539,
     519,   105,   112,   169,   253,   368,   371,   521,   539,   352,
     483,   400,   742,   748,   487,   563,   252,   270,   353,   460,
     461,   520,   528,   565,   661,   708,   747,   750,   818,   755,
     742,   742,   742,   742,   742,   742,   742,   742,   742,   742,
     610,   519,   594,   469,   768,   182,   740,   470,   514,   469,
      35,   548,   546,   555,    78,   516,   105,   251,   596,   554,
     413,   765,   576,   814,   470,   473,   564,   746,   468,   468,
     470,   684,   470,   470,   722,   165,   127,   263,   469,   470,
     682,   684,   684,   684,   714,   470,   684,    32,    32,   684,
     684,   140,   470,   470,   684,   698,   748,   740,   740,   740,
     740,   644,   645,   469,   470,     5,   748,   749,   469,   641,
     212,   277,   647,   641,   647,   212,   646,   647,   212,   381,
     650,   469,   748,   469,   275,    53,   177,   630,   747,   630,
     747,   737,   596,   281,   596,   499,   268,   469,   497,   458,
     511,   503,   710,   527,   551,   470,   470,   432,   557,   115,
     184,   193,   114,   415,   534,   552,    66,    72,    84,   112,
     114,   169,   195,   253,   258,   300,   315,   406,   532,   533,
     545,    29,    53,   571,   182,   258,   520,   684,   571,   258,
     460,   461,   523,   748,   661,   576,   576,   750,   752,   458,
     390,   390,   470,   586,   413,   581,   583,   564,    35,   253,
     469,   768,   558,   146,   596,   144,   189,   538,   117,   132,
     299,   813,   105,   432,   811,   268,   748,   764,   469,    35,
     593,   468,   685,   165,   469,   714,   470,   684,   684,   684,
     470,   287,   699,   653,   654,   689,   643,   469,   741,   641,
     268,   413,   648,   641,   212,   641,   744,   658,   659,   748,
     469,   658,   748,   469,   627,   628,   629,   684,   684,   431,
     693,   693,   504,    84,   469,   502,   510,   689,   748,   128,
     684,   470,   315,   557,   469,   547,   527,   470,   473,   469,
     751,   742,   685,   571,   115,   184,   114,   258,   213,   740,
     557,   112,    35,   147,    72,   660,   752,   464,   528,   742,
     742,   519,   119,   470,   596,   147,    35,   470,   742,   813,
      26,    77,    85,   113,   181,   192,   368,   371,   542,   542,
     336,   336,    58,    66,   227,   740,   510,   685,   714,   470,
      53,   610,   470,   473,    35,   655,   741,   470,   684,   469,
     641,   648,   469,   470,   473,   661,   658,   470,   470,   473,
     694,   695,   748,   418,   742,   684,   470,   473,    72,   506,
     506,   254,   411,   740,   527,   553,   556,   755,   534,   684,
     253,   533,    35,   557,   560,   181,   751,   413,   486,   464,
     400,   586,   747,   768,   811,   740,   596,   546,   516,    66,
     271,    66,   765,   470,   470,   711,   308,   336,   700,   656,
     653,   469,   470,   741,   711,   659,   660,   470,   628,   473,
      35,   596,   470,   657,   502,   751,   507,   751,   507,   352,
     560,   470,   473,   458,   470,   181,   235,   568,   469,   529,
     684,   400,    35,   469,   811,   538,   813,   271,   271,   469,
     768,    47,    95,   402,   684,   701,   702,   701,   470,   658,
     470,   470,   695,   697,   506,   614,   614,   509,   568,   556,
     528,   251,   540,   529,   166,   286,   358,   268,   535,   536,
     562,   518,   596,   510,   657,   702,   335,   159,   295,   159,
     295,   470,   322,   651,   507,   615,   615,   657,   536,   193,
     117,   411,   268,   562,   268,   535,   470,   811,   470,    32,
     469,   614,   527,    57,   251,   327,   352,   531,   531,   768,
     702,   684,   615,    21,   112,   258,   657,   470
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 453 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 469 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 481 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 37:
#line 522 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 38:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 47:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 48:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 49:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 50:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 51:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 52:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 53:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 55:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 56:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 85:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 86:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 87:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 88:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 89:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 90:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 91:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 92:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 93:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 94:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 95:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 96:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 114:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 115:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 116:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 117:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 118:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 120:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 121:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 122:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 123:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 124:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 125:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 126:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 127:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 128:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 129:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 130:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 131:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 132:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 133:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 134:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 135:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 137:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 138:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 139:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 140:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 141:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 142:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 143:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 144:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 145:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 146:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 148:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 149:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 150:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 151:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 152:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 153:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 154:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 160:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 161:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 162:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 163:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 165:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 166:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 169:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 170:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 171:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 174:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 175:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 176:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 177:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 180:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 182:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 187:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 190:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 191:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 192:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 194:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 195:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 203:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 208:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 209:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 210:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 211:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 212:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 213:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 214:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 215:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 216:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 217:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 218:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 219:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 220:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 221:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 222:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 223:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 224:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 225:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 227:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 236:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 237:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 238:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 239:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 240:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 242:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 243:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 244:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 245:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 246:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 247:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 248:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 249:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 250:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 251:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 252:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 253:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 254:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 255:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 256:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 257:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 258:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 259:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 260:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 261:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 262:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 263:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 269:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 270:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 272:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 273:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 274:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 276:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 277:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 278:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 279:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 280:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 281:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 282:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 284:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 285:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 286:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 287:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 288:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 289:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 290:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 293:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 294:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 295:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 296:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 297:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 298:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 299:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 300:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 301:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 302:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 303:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 304:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 305:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 306:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 307:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 308:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 309:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 310:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 311:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 312:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 313:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 320:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 321:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 322:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 323:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 324:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 331:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 333:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 334:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 335:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 336:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 341:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 343:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 344:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 345:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 346:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 347:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 348:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 349:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 350:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 351:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 352:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 353:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 354:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 355:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 356:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 357:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 358:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 359:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 360:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 361:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 364:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 365:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 366:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 367:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 368:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 369:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 370:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 371:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 372:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 373:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 374:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 375:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 376:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 377:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 378:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 379:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 381:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 382:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 383:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 384:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 385:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 386:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 387:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 388:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 389:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 390:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 391:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 392:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 393:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 394:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 395:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 396:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 397:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 399:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 400:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 401:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 402:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 403:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 404:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 405:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 408:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 410:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 411:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 413:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 414:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 415:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 416:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 417:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 418:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 421:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 422:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 423:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 424:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 425:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 426:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 427:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 428:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 429:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 430:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 431:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 433:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 435:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 436:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 437:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 438:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 439:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 440:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 441:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 442:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 443:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 444:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 445:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 446:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 447:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 448:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 452:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 453:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 454:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 455:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 456:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 457:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 458:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 459:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 460:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 461:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 462:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 463:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 464:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 465:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 466:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 467:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 468:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 469:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 470:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 471:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 472:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 473:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 474:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 475:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 476:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 477:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 478:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 479:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 480:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 481:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 482:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 483:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 484:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 485:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 486:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 487:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 488:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 489:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 490:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 491:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 493:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 494:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 495:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 496:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 497:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 498:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 499:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 501:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 502:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 503:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 504:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 505:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 506:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 507:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 508:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 509:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 510:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 511:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 512:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 513:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 514:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 515:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 516:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 517:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 518:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 519:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 520:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 521:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 522:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 523:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 524:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 525:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 526:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 527:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 528:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 529:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 530:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 531:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 535:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 538:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 539:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 540:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 541:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 542:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 543:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 781 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 795 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 546:
#line 810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 547:
#line 822 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 548:
#line 838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 549:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 550:
#line 849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 551:
#line 855 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 552:
#line 861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 553:
#line 862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 554:
#line 871 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 555:
#line 875 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 556:
#line 879 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 557:
#line 885 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 558:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 559:
#line 896 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 560:
#line 897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 561:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 562:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 563:
#line 903 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 564:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 565:
#line 916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 566:
#line 917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 567:
#line 923 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 930 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 569:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 570:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 571:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 573:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 574:
#line 996 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 575:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 576:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 577:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 578:
#line 1023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 579:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 580:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 581:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 582:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 583:
#line 1036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 584:
#line 1037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 585:
#line 1043 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 586:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 587:
#line 1053 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 588:
#line 1074 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 1081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 591:
#line 1099 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 592:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 593:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 594:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 595:
#line 1122 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 596:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 597:
#line 1133 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 598:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 599:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 602:
#line 1142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 603:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 604:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 605:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 606:
#line 1169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1171 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 609:
#line 1172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 610:
#line 1184 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 611:
#line 1190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 612:
#line 1197 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 613:
#line 1198 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 614:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 617:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 618:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 619:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 622:
#line 1246 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 623:
#line 1252 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 624:
#line 1258 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 625:
#line 1265 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 626:
#line 1286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 627:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 628:
#line 1300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 629:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 630:
#line 1312 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 631:
#line 1320 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 632:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 633:
#line 1353 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 634:
#line 1357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 635:
#line 1363 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 636:
#line 1367 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 637:
#line 1380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 638:
#line 1388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 639:
#line 1398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 1402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 642:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 643:
#line 1406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 644:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 645:
#line 1412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 646:
#line 1413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 647:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 648:
#line 1430 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1438 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 650:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 652:
#line 1465 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 653:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 654:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 655:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 658:
#line 1478 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 659:
#line 1480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 660:
#line 1482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 661:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 662:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 664:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 666:
#line 1513 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 667:
#line 1520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 668:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 669:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 670:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 671:
#line 1570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 672:
#line 1572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 673:
#line 1574 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 674:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 675:
#line 1597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 676:
#line 1599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 677:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 688:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 689:
#line 1626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 691:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 692:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 693:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 694:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 695:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 696:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 697:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 698:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 699:
#line 1659 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 700:
#line 1664 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 701:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 702:
#line 1676 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 703:
#line 1684 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 704:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 705:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 706:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 707:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 708:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 709:
#line 1740 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 711:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 712:
#line 1764 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 713:
#line 1772 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 714:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 715:
#line 1796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 718:
#line 1820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 719:
#line 1828 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 720:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 721:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 722:
#line 1848 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 723:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 724:
#line 1856 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 725:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 726:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 727:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 728:
#line 1884 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 729:
#line 1892 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 730:
#line 1912 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 731:
#line 1934 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 732:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 733:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 734:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 735:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 737:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 738:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 749:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 751:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 752:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 753:
#line 2015 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 754:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 755:
#line 2023 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 756:
#line 2027 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 757:
#line 2040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 758:
#line 2041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 759:
#line 2043 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 760:
#line 2055 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 761:
#line 2070 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 762:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 2084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 764:
#line 2086 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 2097 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 766:
#line 2121 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 768:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2151 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 771:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 772:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 773:
#line 2175 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 774:
#line 2203 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 775:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 776:
#line 2248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 777:
#line 2249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 778:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 779:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 780:
#line 2267 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 781:
#line 2271 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 782:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 783:
#line 2279 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 784:
#line 2283 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 2287 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 786:
#line 2291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 2295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 788:
#line 2299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 791:
#line 2311 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 792:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 793:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 794:
#line 2323 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 795:
#line 2325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 796:
#line 2329 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 797:
#line 2338 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 798:
#line 2343 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 799:
#line 2350 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 800:
#line 2365 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 801:
#line 2372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 802:
#line 2376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 803:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 804:
#line 2384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 805:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 806:
#line 2401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 807:
#line 2402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 808:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 809:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 810:
#line 2415 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 811:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 812:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 813:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 814:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 815:
#line 2435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 816:
#line 2437 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 817:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 818:
#line 2455 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 819:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 820:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 821:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 822:
#line 2485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 823:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 2548 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 828:
#line 2593 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2601 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 831:
#line 2617 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 832:
#line 2625 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 833:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 834:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 835:
#line 2647 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 836:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 837:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 838:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 839:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 840:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 841:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 842:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 843:
#line 2661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 844:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 845:
#line 2663 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 846:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 847:
#line 2665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 848:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 849:
#line 2667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 850:
#line 2668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 851:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 852:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 853:
#line 2674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 854:
#line 2676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 855:
#line 2681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 856:
#line 2683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 857:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 858:
#line 2690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 859:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 860:
#line 2694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 861:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 862:
#line 2698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 863:
#line 2700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 864:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 865:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 866:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 867:
#line 2722 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 868:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 869:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 870:
#line 2737 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 871:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 872:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 873:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 874:
#line 2766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 875:
#line 2767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 876:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 877:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 878:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 879:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 880:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 881:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 882:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 883:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 884:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 885:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 886:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 887:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 888:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 889:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 890:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 891:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 892:
#line 2839 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 893:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 894:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 895:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 896:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 897:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 898:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 899:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 900:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 901:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 902:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 903:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 904:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 905:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 906:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 907:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 908:
#line 2929 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 909:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 910:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 911:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 912:
#line 2938 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 913:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 914:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 915:
#line 2953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 916:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 917:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 918:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 919:
#line 2976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 920:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 921:
#line 2981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 922:
#line 2985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 923:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 926:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 927:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 928:
#line 3005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 929:
#line 3006 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 930:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 931:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 932:
#line 3034 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 933:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 934:
#line 3063 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 935:
#line 3064 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 936:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 937:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 938:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 939:
#line 3109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 940:
#line 3113 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 941:
#line 3115 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 942:
#line 3126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 943:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 944:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 945:
#line 3143 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 946:
#line 3147 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 947:
#line 3151 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 948:
#line 3155 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 949:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 950:
#line 3171 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 951:
#line 3203 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 952:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 953:
#line 3213 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 954:
#line 3221 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 955:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 956:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 957:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 958:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 959:
#line 3247 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 960:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 962:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 963:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 964:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 965:
#line 3274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 966:
#line 3275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 967:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 968:
#line 3279 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 969:
#line 3280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 970:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 971:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 972:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 973:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 975:
#line 3302 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 976:
#line 3303 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 977:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 978:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 979:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 980:
#line 3309 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 981:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 982:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 983:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 984:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 989:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 990:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 991:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 992:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 997:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 998:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 999:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1000:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1001:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1002:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1003:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1004:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1005:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1006:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1007:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1008:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1009:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1010:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1012:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1013:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1014:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1015:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1016:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1017:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1018:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1019:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1020:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1021:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1022:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1023:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1024:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1025:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1026:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1027:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1033:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1035:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1036:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1037:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1038:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1039:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1040:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1041:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1042:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1043:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1044:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1045:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1046:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1047:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1048:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1049:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1050:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1051:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1052:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1053:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1054:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1055:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1056:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1057:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1058:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1059:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1060:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1061:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1062:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1063:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1064:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1065:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1066:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1067:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1068:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1069:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1070:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1071:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1072:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1075:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1077:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1078:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1079:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1080:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1081:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1082:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1083:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1084:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1085:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1086:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1087:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1088:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1089:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1090:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1091:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1092:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1093:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1094:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1095:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1096:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1097:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1098:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1099:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1100:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1101:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1103:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1104:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1105:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1106:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1107:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1112:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1113:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1114:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1115:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1116:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1117:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1118:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1119:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1120:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1121:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1122:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1123:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1124:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1125:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1126:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1127:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1128:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22187 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
