/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DETACH = 376,
     DICTIONARY = 377,
     DISABLE_P = 378,
     DISCARD = 379,
     DISTINCT = 380,
     DO = 381,
     DOCUMENT_P = 382,
     DOMAIN_P = 383,
     DOUBLE_P = 384,
     DROP = 385,
     EACH = 386,
     ELSE = 387,
     ENABLE_P = 388,
     ENCODING = 389,
     ENCRYPTED = 390,
     END_P = 391,
     ENUM_P = 392,
     ESCAPE = 393,
     EVENT = 394,
     EXCEPT = 395,
     EXCLUDE = 396,
     EXCLUDING = 397,
     EXCLUSIVE = 398,
     EXECUTE = 399,
     EXISTS = 400,
     EXPLAIN = 401,
     EXTENSION = 402,
     EXTERNAL = 403,
     EXTRACT = 404,
     FALSE_P = 405,
     FAMILY = 406,
     FETCH = 407,
     FILTER = 408,
     FIRST_P = 409,
     FLOAT_P = 410,
     FOLLOWING = 411,
     FOR = 412,
     FORCE = 413,
     FOREIGN = 414,
     FORWARD = 415,
     FREEZE = 416,
     FROM = 417,
     FULL = 418,
     FUNCTION = 419,
     FUNCTIONS = 420,
     GENERATED = 421,
     GLOBAL = 422,
     GRANT = 423,
     GRANTED = 424,
     GREATEST = 425,
     GROUP_P = 426,
     GROUPING = 427,
     HANDLER = 428,
     HAVING = 429,
     HEADER_P = 430,
     HOLD = 431,
     HOUR_P = 432,
     IDENTITY_P = 433,
     IF_P = 434,
     ILIKE = 435,
     IMMEDIATE = 436,
     IMMUTABLE = 437,
     IMPLICIT_P = 438,
     IMPORT_P = 439,
     IN_P = 440,
     INCLUDING = 441,
     INCREMENT = 442,
     INDEX = 443,
     INDEXES = 444,
     INHERIT = 445,
     INHERITS = 446,
     INITIALLY = 447,
     INLINE_P = 448,
     INNER_P = 449,
     INOUT = 450,
     INPUT_P = 451,
     INSENSITIVE = 452,
     INSERT = 453,
     INSTEAD = 454,
     INT_P = 455,
     INTEGER = 456,
     INTERSECT = 457,
     INTERVAL = 458,
     INTO = 459,
     INVOKER = 460,
     IS = 461,
     ISNULL = 462,
     ISOLATION = 463,
     JOIN = 464,
     KEY = 465,
     LABEL = 466,
     LANGUAGE = 467,
     LARGE_P = 468,
     LAST_P = 469,
     LATERAL_P = 470,
     LEADING = 471,
     LEAKPROOF = 472,
     LEAST = 473,
     LEFT = 474,
     LEVEL = 475,
     LIKE = 476,
     LIMIT = 477,
     LISTEN = 478,
     LOAD = 479,
     LOCAL = 480,
     LOCALTIME = 481,
     LOCALTIMESTAMP = 482,
     LOCATION = 483,
     LOCK_P = 484,
     LOCKED = 485,
     LOGGED = 486,
     MAPPING = 487,
     MATCH = 488,
     MATERIALIZED = 489,
     MAXVALUE = 490,
     METHOD = 491,
     MINUTE_P = 492,
     MINVALUE = 493,
     MODE = 494,
     MONTH_P = 495,
     MOVE = 496,
     NAME_P = 497,
     NAMES = 498,
     NATIONAL = 499,
     NATURAL = 500,
     NCHAR = 501,
     NEW = 502,
     NEXT = 503,
     NO = 504,
     NONE = 505,
     NOT = 506,
     NOTHING = 507,
     NOTIFY = 508,
     NOTNULL = 509,
     NOWAIT = 510,
     NULL_P = 511,
     NULLIF = 512,
     NULLS_P = 513,
     NUMERIC = 514,
     OBJECT_P = 515,
     OF = 516,
     OFF = 517,
     OFFSET = 518,
     OIDS = 519,
     OLD = 520,
     ON = 521,
     ONLY = 522,
     OPERATOR = 523,
     OPTION = 524,
     OPTIONS = 525,
     OR = 526,
     ORDER = 527,
     ORDINALITY = 528,
     OUT_P = 529,
     OUTER_P = 530,
     OVER = 531,
     OVERLAPS = 532,
     OVERLAY = 533,
     OVERRIDING = 534,
     OWNED = 535,
     OWNER = 536,
     PARALLEL = 537,
     PARSER = 538,
     PARTIAL = 539,
     PARTITION = 540,
     PASSING = 541,
     PASSWORD = 542,
     PLACING = 543,
     PLANS = 544,
     POLICY = 545,
     POSITION = 546,
     PRECEDING = 547,
     PRECISION = 548,
     PREPARE = 549,
     PREPARED = 550,
     PRESERVE = 551,
     PRIMARY = 552,
     PRIOR = 553,
     PRIVILEGES = 554,
     PROCEDURAL = 555,
     PROCEDURE = 556,
     PROGRAM = 557,
     PUBLICATION = 558,
     QUOTE = 559,
     RANGE = 560,
     READ_P = 561,
     REAL = 562,
     REASSIGN = 563,
     RECHECK = 564,
     RECURSIVE = 565,
     REF = 566,
     REFERENCES = 567,
     REFERENCING = 568,
     REFRESH = 569,
     REINDEX = 570,
     RELATIVE_P = 571,
     RELEASE = 572,
     RENAME = 573,
     REPEATABLE = 574,
     REPLACE = 575,
     REPLICA = 576,
     RESET = 577,
     RESTART = 578,
     RESTRICT = 579,
     RETURNING = 580,
     RETURNS = 581,
     REVOKE = 582,
     RIGHT = 583,
     ROLE = 584,
     ROLLBACK = 585,
     ROLLUP = 586,
     ROW = 587,
     ROWS = 588,
     RULE = 589,
     SAVEPOINT = 590,
     SCHEMA = 591,
     SCHEMAS = 592,
     SCROLL = 593,
     SEARCH = 594,
     SECOND_P = 595,
     SECURITY = 596,
     SELECT = 597,
     SEQUENCE = 598,
     SEQUENCES = 599,
     SERIALIZABLE = 600,
     SERVER = 601,
     SESSION = 602,
     SESSION_USER = 603,
     SET = 604,
     SETOF = 605,
     SETS = 606,
     SHARE = 607,
     SHOW = 608,
     SIMILAR = 609,
     SIMPLE = 610,
     SKIP = 611,
     SMALLINT = 612,
     SNAPSHOT = 613,
     SOME = 614,
     SQL_P = 615,
     STABLE = 616,
     STANDALONE_P = 617,
     START = 618,
     STATEMENT = 619,
     STATISTICS = 620,
     STDIN = 621,
     STDOUT = 622,
     STORAGE = 623,
     STRICT_P = 624,
     STRIP_P = 625,
     SUBSCRIPTION = 626,
     SUBSTRING = 627,
     SYMMETRIC = 628,
     SYSID = 629,
     SYSTEM_P = 630,
     TABLE = 631,
     TABLES = 632,
     TABLESAMPLE = 633,
     TABLESPACE = 634,
     TEMP = 635,
     TEMPLATE = 636,
     TEMPORARY = 637,
     TEXT_P = 638,
     THEN = 639,
     TIME = 640,
     TIMESTAMP = 641,
     TO = 642,
     TRAILING = 643,
     TRANSACTION = 644,
     TRANSFORM = 645,
     TREAT = 646,
     TRIGGER = 647,
     TRIM = 648,
     TRUE_P = 649,
     TRUNCATE = 650,
     TRUSTED = 651,
     TYPE_P = 652,
     TYPES_P = 653,
     UNBOUNDED = 654,
     UNCOMMITTED = 655,
     UNENCRYPTED = 656,
     UNION = 657,
     UNIQUE = 658,
     UNKNOWN = 659,
     UNLISTEN = 660,
     UNLOGGED = 661,
     UNTIL = 662,
     UPDATE = 663,
     USER = 664,
     USING = 665,
     VACUUM = 666,
     VALID = 667,
     VALIDATE = 668,
     VALIDATOR = 669,
     VALUE_P = 670,
     VALUES = 671,
     VARCHAR = 672,
     VARIADIC = 673,
     VARYING = 674,
     VERBOSE = 675,
     VERSION_P = 676,
     VIEW = 677,
     VIEWS = 678,
     VOLATILE = 679,
     WHEN = 680,
     WHERE = 681,
     WHITESPACE_P = 682,
     WINDOW = 683,
     WITH = 684,
     WITHIN = 685,
     WITHOUT = 686,
     WORK = 687,
     WRAPPER = 688,
     WRITE_P = 689,
     XML_P = 690,
     XMLATTRIBUTES = 691,
     XMLCONCAT = 692,
     XMLELEMENT = 693,
     XMLEXISTS = 694,
     XMLFOREST = 695,
     XMLNAMESPACES = 696,
     XMLPARSE = 697,
     XMLPI = 698,
     XMLROOT = 699,
     XMLSERIALIZE = 700,
     XMLTABLE = 701,
     YEAR_P = 702,
     YES_P = 703,
     ZONE = 704,
     NOT_LA = 705,
     NULLS_LA = 706,
     WITH_LA = 707,
     POSTFIXOP = 708,
     UMINUS = 709
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DETACH 376
#define DICTIONARY 377
#define DISABLE_P 378
#define DISCARD 379
#define DISTINCT 380
#define DO 381
#define DOCUMENT_P 382
#define DOMAIN_P 383
#define DOUBLE_P 384
#define DROP 385
#define EACH 386
#define ELSE 387
#define ENABLE_P 388
#define ENCODING 389
#define ENCRYPTED 390
#define END_P 391
#define ENUM_P 392
#define ESCAPE 393
#define EVENT 394
#define EXCEPT 395
#define EXCLUDE 396
#define EXCLUDING 397
#define EXCLUSIVE 398
#define EXECUTE 399
#define EXISTS 400
#define EXPLAIN 401
#define EXTENSION 402
#define EXTERNAL 403
#define EXTRACT 404
#define FALSE_P 405
#define FAMILY 406
#define FETCH 407
#define FILTER 408
#define FIRST_P 409
#define FLOAT_P 410
#define FOLLOWING 411
#define FOR 412
#define FORCE 413
#define FOREIGN 414
#define FORWARD 415
#define FREEZE 416
#define FROM 417
#define FULL 418
#define FUNCTION 419
#define FUNCTIONS 420
#define GENERATED 421
#define GLOBAL 422
#define GRANT 423
#define GRANTED 424
#define GREATEST 425
#define GROUP_P 426
#define GROUPING 427
#define HANDLER 428
#define HAVING 429
#define HEADER_P 430
#define HOLD 431
#define HOUR_P 432
#define IDENTITY_P 433
#define IF_P 434
#define ILIKE 435
#define IMMEDIATE 436
#define IMMUTABLE 437
#define IMPLICIT_P 438
#define IMPORT_P 439
#define IN_P 440
#define INCLUDING 441
#define INCREMENT 442
#define INDEX 443
#define INDEXES 444
#define INHERIT 445
#define INHERITS 446
#define INITIALLY 447
#define INLINE_P 448
#define INNER_P 449
#define INOUT 450
#define INPUT_P 451
#define INSENSITIVE 452
#define INSERT 453
#define INSTEAD 454
#define INT_P 455
#define INTEGER 456
#define INTERSECT 457
#define INTERVAL 458
#define INTO 459
#define INVOKER 460
#define IS 461
#define ISNULL 462
#define ISOLATION 463
#define JOIN 464
#define KEY 465
#define LABEL 466
#define LANGUAGE 467
#define LARGE_P 468
#define LAST_P 469
#define LATERAL_P 470
#define LEADING 471
#define LEAKPROOF 472
#define LEAST 473
#define LEFT 474
#define LEVEL 475
#define LIKE 476
#define LIMIT 477
#define LISTEN 478
#define LOAD 479
#define LOCAL 480
#define LOCALTIME 481
#define LOCALTIMESTAMP 482
#define LOCATION 483
#define LOCK_P 484
#define LOCKED 485
#define LOGGED 486
#define MAPPING 487
#define MATCH 488
#define MATERIALIZED 489
#define MAXVALUE 490
#define METHOD 491
#define MINUTE_P 492
#define MINVALUE 493
#define MODE 494
#define MONTH_P 495
#define MOVE 496
#define NAME_P 497
#define NAMES 498
#define NATIONAL 499
#define NATURAL 500
#define NCHAR 501
#define NEW 502
#define NEXT 503
#define NO 504
#define NONE 505
#define NOT 506
#define NOTHING 507
#define NOTIFY 508
#define NOTNULL 509
#define NOWAIT 510
#define NULL_P 511
#define NULLIF 512
#define NULLS_P 513
#define NUMERIC 514
#define OBJECT_P 515
#define OF 516
#define OFF 517
#define OFFSET 518
#define OIDS 519
#define OLD 520
#define ON 521
#define ONLY 522
#define OPERATOR 523
#define OPTION 524
#define OPTIONS 525
#define OR 526
#define ORDER 527
#define ORDINALITY 528
#define OUT_P 529
#define OUTER_P 530
#define OVER 531
#define OVERLAPS 532
#define OVERLAY 533
#define OVERRIDING 534
#define OWNED 535
#define OWNER 536
#define PARALLEL 537
#define PARSER 538
#define PARTIAL 539
#define PARTITION 540
#define PASSING 541
#define PASSWORD 542
#define PLACING 543
#define PLANS 544
#define POLICY 545
#define POSITION 546
#define PRECEDING 547
#define PRECISION 548
#define PREPARE 549
#define PREPARED 550
#define PRESERVE 551
#define PRIMARY 552
#define PRIOR 553
#define PRIVILEGES 554
#define PROCEDURAL 555
#define PROCEDURE 556
#define PROGRAM 557
#define PUBLICATION 558
#define QUOTE 559
#define RANGE 560
#define READ_P 561
#define REAL 562
#define REASSIGN 563
#define RECHECK 564
#define RECURSIVE 565
#define REF 566
#define REFERENCES 567
#define REFERENCING 568
#define REFRESH 569
#define REINDEX 570
#define RELATIVE_P 571
#define RELEASE 572
#define RENAME 573
#define REPEATABLE 574
#define REPLACE 575
#define REPLICA 576
#define RESET 577
#define RESTART 578
#define RESTRICT 579
#define RETURNING 580
#define RETURNS 581
#define REVOKE 582
#define RIGHT 583
#define ROLE 584
#define ROLLBACK 585
#define ROLLUP 586
#define ROW 587
#define ROWS 588
#define RULE 589
#define SAVEPOINT 590
#define SCHEMA 591
#define SCHEMAS 592
#define SCROLL 593
#define SEARCH 594
#define SECOND_P 595
#define SECURITY 596
#define SELECT 597
#define SEQUENCE 598
#define SEQUENCES 599
#define SERIALIZABLE 600
#define SERVER 601
#define SESSION 602
#define SESSION_USER 603
#define SET 604
#define SETOF 605
#define SETS 606
#define SHARE 607
#define SHOW 608
#define SIMILAR 609
#define SIMPLE 610
#define SKIP 611
#define SMALLINT 612
#define SNAPSHOT 613
#define SOME 614
#define SQL_P 615
#define STABLE 616
#define STANDALONE_P 617
#define START 618
#define STATEMENT 619
#define STATISTICS 620
#define STDIN 621
#define STDOUT 622
#define STORAGE 623
#define STRICT_P 624
#define STRIP_P 625
#define SUBSCRIPTION 626
#define SUBSTRING 627
#define SYMMETRIC 628
#define SYSID 629
#define SYSTEM_P 630
#define TABLE 631
#define TABLES 632
#define TABLESAMPLE 633
#define TABLESPACE 634
#define TEMP 635
#define TEMPLATE 636
#define TEMPORARY 637
#define TEXT_P 638
#define THEN 639
#define TIME 640
#define TIMESTAMP 641
#define TO 642
#define TRAILING 643
#define TRANSACTION 644
#define TRANSFORM 645
#define TREAT 646
#define TRIGGER 647
#define TRIM 648
#define TRUE_P 649
#define TRUNCATE 650
#define TRUSTED 651
#define TYPE_P 652
#define TYPES_P 653
#define UNBOUNDED 654
#define UNCOMMITTED 655
#define UNENCRYPTED 656
#define UNION 657
#define UNIQUE 658
#define UNKNOWN 659
#define UNLISTEN 660
#define UNLOGGED 661
#define UNTIL 662
#define UPDATE 663
#define USER 664
#define USING 665
#define VACUUM 666
#define VALID 667
#define VALIDATE 668
#define VALIDATOR 669
#define VALUE_P 670
#define VALUES 671
#define VARCHAR 672
#define VARIADIC 673
#define VARYING 674
#define VERBOSE 675
#define VERSION_P 676
#define VIEW 677
#define VIEWS 678
#define VOLATILE 679
#define WHEN 680
#define WHERE 681
#define WHITESPACE_P 682
#define WINDOW 683
#define WITH 684
#define WITHIN 685
#define WITHOUT 686
#define WORK 687
#define WRAPPER 688
#define WRITE_P 689
#define XML_P 690
#define XMLATTRIBUTES 691
#define XMLCONCAT 692
#define XMLELEMENT 693
#define XMLEXISTS 694
#define XMLFOREST 695
#define XMLNAMESPACES 696
#define XMLPARSE 697
#define XMLPI 698
#define XMLROOT 699
#define XMLSERIALIZE 700
#define XMLTABLE 701
#define YEAR_P 702
#define YES_P 703
#define ZONE 704
#define NOT_LA 705
#define NULLS_LA 706
#define WITH_LA 707
#define POSTFIXOP 708
#define UMINUS 709




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"


/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "parser/parse_expr.hpp"
#include "utils/datetime.hpp"

#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeAArrayExpr(PGList *elements, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static PGRangeVar *makeRangeVarFromAnyName(PGList *names, int position, core_yyscan_t yyscanner);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 173 "third_party/libpg_query/grammar/grammar.y.tmp"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1218 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1243 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  508
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   43822

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  473
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  336
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1542
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2582

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   709

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   461,     2,     2,
     466,   467,   459,   457,   470,   458,   468,   460,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   472,   469,
     453,   455,   454,   471,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   464,     2,   465,   462,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   456,   463
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    68,    73,    80,    85,    92,    97,
     104,   109,   116,   118,   121,   125,   128,   130,   134,   137,
     141,   143,   147,   150,   156,   160,   167,   172,   179,   186,
     193,   199,   205,   212,   222,   227,   233,   241,   248,   253,
     262,   267,   270,   275,   279,   286,   291,   294,   297,   300,
     303,   305,   308,   309,   311,   314,   317,   320,   322,   326,
     331,   334,   335,   338,   342,   345,   349,   356,   363,   372,
     379,   388,   395,   404,   411,   420,   429,   440,   449,   460,
     462,   463,   471,   473,   478,   483,   491,   494,   496,   500,
     505,   509,   510,   512,   513,   516,   520,   526,   535,   541,
     542,   548,   554,   562,   565,   566,   568,   570,   572,   576,
     579,   580,   582,   583,   585,   589,   591,   595,   597,   601,
     604,   610,   619,   621,   622,   626,   636,   649,   653,   654,
     659,   666,   668,   671,   673,   675,   676,   678,   681,   684,
     686,   689,   692,   694,   697,   701,   704,   707,   710,   713,
     717,   721,   725,   727,   731,   733,   734,   736,   739,   742,
     745,   748,   751,   754,   757,   760,   762,   764,   765,   775,
     788,   789,   792,   794,   796,   798,   800,   802,   804,   808,
     809,   811,   814,   816,   818,   821,   824,   828,   830,   832,
     835,   838,   840,   843,   847,   853,   856,   862,   868,   871,
     875,   877,   879,   882,   885,   886,   891,   892,   896,   901,
     906,   907,   911,   914,   915,   919,   921,   923,   925,   927,
     929,   931,   933,   935,   937,   939,   943,   947,   949,   952,
     955,   958,   961,   964,   967,   968,   972,   976,   980,   981,
     983,   986,   988,   991,   994,   997,  1000,  1005,  1007,  1011,
    1013,  1017,  1019,  1021,  1023,  1025,  1029,  1031,  1034,  1035,
    1037,  1038,  1040,  1044,  1045,  1048,  1049,  1053,  1057,  1059,
    1065,  1069,  1071,  1075,  1077,  1082,  1088,  1094,  1101,  1105,
    1113,  1118,  1130,  1132,  1136,  1139,  1142,  1145,  1146,  1150,
    1152,  1154,  1157,  1160,  1163,  1166,  1168,  1169,  1171,  1174,
    1181,  1186,  1193,  1198,  1205,  1214,  1216,  1218,  1220,  1223,
    1225,  1228,  1230,  1232,  1234,  1238,  1242,  1246,  1250,  1253,
    1256,  1258,  1262,  1264,  1266,  1268,  1270,  1274,  1276,  1278,
    1279,  1281,  1283,  1285,  1294,  1306,  1316,  1318,  1320,  1324,
    1325,  1327,  1331,  1333,  1334,  1336,  1337,  1339,  1340,  1342,
    1346,  1348,  1350,  1352,  1356,  1357,  1360,  1363,  1364,  1367,
    1368,  1370,  1371,  1373,  1375,  1377,  1381,  1385,  1387,  1389,
    1393,  1397,  1401,  1405,  1410,  1414,  1417,  1419,  1421,  1423,
    1425,  1427,  1431,  1433,  1435,  1439,  1443,  1445,  1448,  1453,
    1458,  1461,  1465,  1471,  1477,  1479,  1481,  1491,  1501,  1503,
    1506,  1511,  1516,  1521,  1524,  1527,  1531,  1533,  1537,  1544,
    1547,  1548,  1552,  1556,  1561,  1566,  1571,  1576,  1580,  1583,
    1585,  1587,  1588,  1590,  1592,  1593,  1595,  1601,  1603,  1604,
    1606,  1607,  1611,  1613,  1617,  1622,  1626,  1628,  1630,  1631,
    1634,  1637,  1638,  1641,  1644,  1646,  1648,  1650,  1651,  1654,
    1659,  1665,  1670,  1673,  1677,  1679,  1681,  1683,  1685,  1688,
    1691,  1693,  1695,  1697,  1699,  1701,  1703,  1707,  1708,  1710,
    1714,  1716,  1718,  1721,  1724,  1725,  1727,  1731,  1733,  1734,
    1736,  1739,  1743,  1746,  1751,  1754,  1758,  1761,  1762,  1764,
    1767,  1768,  1773,  1779,  1782,  1783,  1785,  1789,  1792,  1796,
    1799,  1803,  1806,  1810,  1812,  1817,  1821,  1826,  1832,  1837,
    1843,  1848,  1854,  1857,  1862,  1864,  1866,  1867,  1869,  1874,
    1880,  1885,  1886,  1889,  1892,  1895,  1897,  1899,  1900,  1905,
    1908,  1910,  1913,  1916,  1921,  1928,  1933,  1934,  1937,  1944,
    1947,  1949,  1953,  1958,  1959,  1962,  1963,  1966,  1967,  1969,
    1973,  1977,  1980,  1981,  1984,  1988,  1994,  2001,  2004,  2008,
    2012,  2017,  2018,  2020,  2022,  2024,  2026,  2028,  2031,  2036,
    2038,  2040,  2042,  2044,  2047,  2051,  2055,  2056,  2058,  2060,
    2062,  2064,  2066,  2069,  2072,  2075,  2078,  2081,  2083,  2087,
    2088,  2090,  2092,  2094,  2096,  2102,  2105,  2107,  2109,  2111,
    2113,  2118,  2120,  2123,  2126,  2128,  2132,  2136,  2139,  2141,
    2142,  2148,  2151,  2157,  2160,  2162,  2166,  2170,  2171,  2173,
    2175,  2177,  2179,  2181,  2183,  2187,  2191,  2195,  2199,  2203,
    2207,  2211,  2212,  2214,  2219,  2221,  2225,  2229,  2235,  2238,
    2241,  2245,  2249,  2253,  2257,  2261,  2265,  2269,  2273,  2277,
    2281,  2285,  2289,  2293,  2296,  2299,  2303,  2307,  2310,  2313,
    2317,  2323,  2328,  2335,  2339,  2345,  2350,  2357,  2362,  2369,
    2375,  2383,  2387,  2390,  2395,  2398,  2402,  2406,  2411,  2415,
    2420,  2424,  2429,  2435,  2442,  2449,  2457,  2464,  2472,  2479,
    2487,  2491,  2496,  2501,  2508,  2510,  2512,  2516,  2519,  2522,
    2526,  2530,  2534,  2538,  2542,  2546,  2550,  2554,  2558,  2562,
    2566,  2570,  2574,  2577,  2580,  2586,  2593,  2600,  2608,  2610,
    2612,  2615,  2618,  2623,  2625,  2627,  2629,  2632,  2635,  2639,
    2645,  2652,  2661,  2668,  2675,  2680,  2685,  2687,  2689,  2691,
    2697,  2699,  2701,  2706,  2708,  2713,  2715,  2720,  2722,  2727,
    2729,  2731,  2733,  2735,  2737,  2739,  2746,  2751,  2756,  2761,
    2766,  2773,  2779,  2785,  2791,  2796,  2803,  2808,  2813,  2818,
    2824,  2825,  2831,  2832,  2835,  2836,  2838,  2842,  2846,  2849,
    2852,  2853,  2860,  2862,  2863,  2867,  2868,  2871,  2874,  2875,
    2877,  2882,  2885,  2888,  2891,  2894,  2897,  2902,  2906,  2912,
    2914,  2916,  2918,  2920,  2922,  2924,  2926,  2928,  2930,  2932,
    2934,  2936,  2938,  2940,  2942,  2944,  2946,  2948,  2953,  2955,
    2960,  2962,  2967,  2969,  2972,  2974,  2977,  2979,  2983,  2985,
    2989,  2991,  2995,  2997,  3001,  3005,  3007,  3011,  3015,  3016,
    3018,  3020,  3022,  3024,  3026,  3028,  3030,  3032,  3037,  3041,
    3044,  3048,  3049,  3053,  3057,  3060,  3063,  3065,  3066,  3069,
    3072,  3076,  3079,  3081,  3083,  3087,  3093,  3095,  3098,  3103,
    3106,  3107,  3109,  3110,  3112,  3115,  3118,  3121,  3125,  3131,
    3133,  3134,  3136,  3139,  3140,  3143,  3145,  3146,  3148,  3149,
    3151,  3155,  3159,  3162,  3164,  3166,  3168,  3172,  3174,  3177,
    3179,  3183,  3185,  3187,  3189,  3192,  3194,  3196,  3198,  3200,
    3202,  3205,  3212,  3215,  3219,  3225,  3232,  3234,  3236,  3238,
    3240,  3242,  3244,  3246,  3248,  3250,  3252,  3254,  3256,  3259,
    3262,  3266,  3270,  3271,  3273,  3275,  3277,  3279,  3281,  3283,
    3289,  3293,  3294,  3296,  3298,  3300,  3302,  3307,  3315,  3318,
    3319,  3321,  3323,  3325,  3327,  3341,  3358,  3360,  3363,  3364,
    3366,  3367,  3369,  3370,  3373,  3374,  3376,  3377,  3384,  3393,
    3400,  3409,  3416,  3425,  3427,  3430,  3435,  3439,  3445,  3447,
    3448,  3450,  3452,  3453,  3455,  3457,  3459,  3461,  3463,  3465,
    3467,  3469,  3471,  3473,  3475,  3477,  3481,  3483,  3485,  3487,
    3489,  3491,  3493,  3496,  3498,  3500,  3503,  3507,  3511,  3513,
    3517,  3521,  3524,  3528,  3532,  3536,  3540,  3542,  3544,  3546,
    3548,  3552,  3558,  3560,  3562,  3564,  3566,  3570,  3573,  3575,
    3580,  3586,  3592,  3597,  3604,  3606,  3608,  3610,  3612,  3614,
    3616,  3617,  3619,  3623,  3625,  3626,  3634,  3636,  3639,  3643,
    3646,  3647,  3650,  3651,  3654,  3659,  3662,  3664,  3666,  3668,
    3671,  3675,  3678,  3682,  3687,  3690,  3692,  3696,  3706,  3718,
    3731,  3746,  3750,  3755,  3760,  3761,  3769,  3780,  3783,  3787,
    3788,  3793,  3795,  3797,  3799,  3801,  3803,  3805,  3807,  3809,
    3811,  3813,  3815,  3817,  3819,  3821,  3823,  3825,  3827,  3829,
    3831,  3833,  3835,  3837,  3839,  3841,  3843,  3845,  3847,  3849,
    3851,  3853,  3855,  3857,  3859,  3861,  3863,  3865,  3867,  3869,
    3871,  3873,  3875,  3877,  3879,  3881,  3883,  3885,  3887,  3889,
    3891,  3893,  3895,  3897,  3899,  3901,  3903,  3905,  3907,  3909,
    3911,  3913,  3915,  3917,  3919,  3921,  3923,  3925,  3927,  3929,
    3931,  3933,  3935,  3937,  3939,  3941,  3943,  3945,  3947,  3949,
    3951,  3953,  3955,  3957,  3959,  3961,  3963,  3965,  3967,  3969,
    3971,  3973,  3975,  3977,  3979,  3981,  3983,  3985,  3987,  3989,
    3991,  3993,  3995,  3997,  3999,  4001,  4003,  4005,  4007,  4009,
    4011,  4013,  4015,  4017,  4019,  4021,  4023,  4025,  4027,  4029,
    4031,  4033,  4035,  4037,  4039,  4041,  4043,  4045,  4047,  4049,
    4051,  4053,  4055,  4057,  4059,  4061,  4063,  4065,  4067,  4069,
    4071,  4073,  4075,  4077,  4079,  4081,  4083,  4085,  4087,  4089,
    4091,  4093,  4095,  4097,  4099,  4101,  4103,  4105,  4107,  4109,
    4111,  4113,  4115,  4117,  4119,  4121,  4123,  4125,  4127,  4129,
    4131,  4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,  4149,
    4151,  4153,  4155,  4157,  4159,  4161,  4163,  4165,  4167,  4169,
    4171,  4173,  4175,  4177,  4179,  4181,  4183,  4185,  4187,  4189,
    4191,  4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,  4209,
    4211,  4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,  4229,
    4231,  4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,  4249,
    4251,  4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,  4269,
    4271,  4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,  4289,
    4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,  4309,
    4311,  4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,  4329,
    4331,  4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,  4349,
    4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,  4369,
    4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,  4389,
    4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,  4409,
    4411,  4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,  4429,
    4431,  4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,  4449,
    4451,  4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,  4469,
    4471,  4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,  4489,
    4491,  4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,  4509,
    4511,  4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,  4529,
    4531,  4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,  4549,
    4551,  4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,  4569,
    4571,  4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,  4589,
    4591,  4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,  4609,
    4611,  4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,  4629,
    4631,  4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,  4649,
    4651,  4653,  4655
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     474,     0,    -1,   475,    -1,   475,   469,   476,    -1,   476,
      -1,   764,    -1,   513,    -1,   477,    -1,   794,    -1,   765,
      -1,   575,    -1,   802,    -1,   754,    -1,   509,    -1,   522,
      -1,   488,    -1,   790,    -1,   568,    -1,   511,    -1,   766,
      -1,   757,    -1,   491,    -1,   783,    -1,   751,    -1,   489,
      -1,   592,    -1,   520,    -1,   574,    -1,   785,    -1,   795,
      -1,   777,    -1,   798,    -1,   800,    -1,    -1,    28,   376,
     645,   485,    -1,    28,   376,   179,   145,   645,   485,    -1,
      28,   188,   736,   485,    -1,    28,   188,   179,   145,   736,
     485,    -1,    28,   343,   736,   485,    -1,    28,   343,   179,
     145,   736,   485,    -1,    28,   422,   736,   485,    -1,    28,
     422,   179,   145,   736,   485,    -1,   480,    -1,   478,   480,
      -1,   349,   111,   680,    -1,   130,   111,    -1,   323,    -1,
     323,   515,   516,    -1,   349,   517,    -1,   349,   166,   567,
      -1,   484,    -1,   481,   470,   484,    -1,    22,   547,    -1,
      22,   179,   251,   145,   547,    -1,    22,    73,   547,    -1,
      22,    73,   179,   251,   145,   547,    -1,    28,   490,   744,
     479,    -1,    28,   490,   744,   130,   251,   256,    -1,    28,
     490,   744,   349,   251,   256,    -1,    28,   490,   744,   349,
     365,   519,    -1,    28,   490,   744,   349,   535,    -1,    28,
     490,   744,   322,   535,    -1,    28,   490,   744,   349,   368,
     744,    -1,    28,   490,   744,    22,   166,   567,    35,   178,
     525,    -1,    28,   490,   744,   478,    -1,    28,   490,   744,
     130,   178,    -1,    28,   490,   744,   130,   178,   179,   145,
      -1,   130,   490,   179,   145,   744,   572,    -1,   130,   490,
     744,   572,    -1,    28,   490,   744,   487,   397,   657,   656,
     483,    -1,    28,   490,   744,   486,    -1,    22,   537,    -1,
      28,    83,   738,   523,    -1,   413,    83,   738,    -1,   130,
      83,   179,   145,   738,   572,    -1,   130,    83,   738,   572,
      -1,   349,   231,    -1,   349,   406,    -1,   349,   535,    -1,
     322,   535,    -1,   486,    -1,   410,   680,    -1,    -1,   530,
      -1,   349,   530,    -1,    22,   530,    -1,   130,   545,    -1,
     482,    -1,   485,   470,   482,    -1,   270,   466,   481,   467,
      -1,   349,   104,    -1,    -1,   107,   738,    -1,   107,   294,
     738,    -1,   107,    26,    -1,   107,   294,    26,    -1,    28,
     336,   738,   318,   387,   738,    -1,    28,   376,   645,   318,
     387,   738,    -1,    28,   376,   179,   145,   645,   318,   387,
     738,    -1,    28,   343,   736,   318,   387,   738,    -1,    28,
     343,   179,   145,   736,   318,   387,   738,    -1,    28,   422,
     736,   318,   387,   738,    -1,    28,   422,   179,   145,   736,
     318,   387,   738,    -1,    28,   188,   736,   318,   387,   738,
      -1,    28,   188,   179,   145,   736,   318,   387,   738,    -1,
      28,   376,   645,   318,   490,   738,   387,   738,    -1,    28,
     376,   179,   145,   645,   318,   490,   738,   387,   738,    -1,
      28,   376,   645,   318,    83,   738,   387,   738,    -1,    28,
     376,   179,   145,   645,   318,    83,   738,   387,   738,    -1,
      73,    -1,    -1,   495,   198,   204,   493,   492,   498,   500,
      -1,   592,    -1,   279,   501,   415,   592,    -1,   466,   505,
     467,   592,    -1,   466,   505,   467,   279,   501,   415,   592,
      -1,   111,   416,    -1,   736,    -1,   736,    35,   744,    -1,
     466,   507,   467,   653,    -1,   266,    83,   738,    -1,    -1,
     597,    -1,    -1,   744,   730,    -1,   508,   455,   680,    -1,
     466,   502,   467,   455,   680,    -1,   266,    81,   494,   126,
     408,   349,   506,   653,    -1,   266,    81,   494,   126,   252,
      -1,    -1,   744,   503,   504,   610,   611,    -1,   685,   503,
     504,   610,   611,    -1,   466,   680,   467,   503,   504,   610,
     611,    -1,   325,   733,    -1,    -1,   409,    -1,   375,    -1,
     508,    -1,   502,   470,   508,    -1,    71,   746,    -1,    -1,
     746,    -1,    -1,   496,    -1,   505,   470,   496,    -1,   497,
      -1,   506,   470,   497,    -1,   499,    -1,   507,   470,   499,
      -1,   744,   730,    -1,    90,   566,   343,   736,   510,    -1,
      90,   566,   343,   179,   251,   145,   736,   510,    -1,   514,
      -1,    -1,   144,   738,   512,    -1,    90,   566,   376,   804,
      35,   144,   738,   512,   803,    -1,    90,   566,   376,   179,
     251,   145,   804,    35,   144,   738,   512,   803,    -1,   466,
     707,   467,    -1,    -1,    28,   343,   736,   514,    -1,    28,
     343,   179,   145,   736,   514,    -1,   517,    -1,   514,   517,
      -1,   429,    -1,   452,    -1,    -1,     4,    -1,   457,     4,
      -1,   458,     4,    -1,   519,    -1,    35,   659,    -1,    54,
     516,    -1,   103,    -1,   249,   103,    -1,   187,   518,   516,
      -1,   235,   516,    -1,   238,   516,    -1,   249,   235,    -1,
     249,   238,    -1,   280,    53,   746,    -1,   343,   242,   746,
      -1,   363,   515,   516,    -1,   323,    -1,   323,   515,   516,
      -1,    53,    -1,    -1,   742,    -1,   457,   742,    -1,   458,
     742,    -1,    18,   521,    -1,    46,   521,    -1,   363,   521,
      -1,    77,   521,    -1,   136,   521,    -1,   330,   521,    -1,
     432,    -1,   389,    -1,    -1,    90,   566,   376,   736,   466,
     554,   467,   542,   534,    -1,    90,   566,   376,   179,   251,
     145,   736,   466,   554,   467,   542,   534,    -1,    -1,   523,
     546,    -1,   561,    -1,   808,    -1,   704,    -1,   516,    -1,
     743,    -1,   250,    -1,   466,   514,   467,    -1,    -1,   743,
      -1,   249,    21,    -1,   324,    -1,    56,    -1,   349,   256,
      -1,   349,   111,    -1,    83,   738,   529,    -1,   529,    -1,
     541,    -1,    71,   746,    -1,   251,   256,    -1,   256,    -1,
     403,   553,    -1,   297,   210,   553,    -1,    65,   466,   680,
     467,   536,    -1,   111,   681,    -1,   166,   567,    35,   178,
     525,    -1,   312,   736,   556,   564,   532,    -1,   545,   526,
      -1,   266,   408,   527,    -1,   531,    -1,   558,    -1,   531,
     558,    -1,   558,   531,    -1,    -1,   270,   466,   548,   467,
      -1,    -1,   266,    77,   130,    -1,   266,    77,   116,   333,
      -1,   266,    77,   296,   333,    -1,    -1,   466,   539,   467,
      -1,   249,   190,    -1,    -1,    83,   738,   562,    -1,   562,
      -1,    76,    -1,    84,    -1,   112,    -1,   178,    -1,   189,
      -1,   365,    -1,   368,    -1,    26,    -1,   559,    -1,   539,
     470,   559,    -1,   410,   188,   550,    -1,   113,    -1,   251,
     113,    -1,   192,   114,    -1,   192,   181,    -1,   429,   535,
      -1,   429,   264,    -1,   431,   264,    -1,    -1,   466,   549,
     467,    -1,   544,   186,   538,    -1,   544,   142,   538,    -1,
      -1,   750,    -1,   251,   113,    -1,   113,    -1,   192,   181,
      -1,   192,   114,    -1,   251,   412,    -1,   249,   190,    -1,
     744,   657,   533,   557,    -1,   530,    -1,   548,   470,   530,
      -1,   552,    -1,   549,   470,   552,    -1,   744,    -1,   547,
      -1,   565,    -1,   537,    -1,   750,   455,   524,    -1,   750,
      -1,   429,   543,    -1,    -1,   563,    -1,    -1,   744,    -1,
     466,   560,   467,    -1,    -1,   557,   528,    -1,    -1,   266,
     116,   527,    -1,   750,   455,   524,    -1,   750,    -1,   750,
     468,   750,   455,   524,    -1,   750,   468,   750,    -1,   555,
      -1,   560,   470,   555,    -1,   657,    -1,   745,   747,   461,
     397,    -1,   350,   745,   747,   461,   397,    -1,    65,   466,
     680,   467,   523,    -1,   403,   466,   560,   467,   553,   523,
      -1,   403,   540,   523,    -1,   297,   210,   466,   560,   467,
     553,   523,    -1,   297,   210,   540,   523,    -1,   159,   210,
     466,   560,   467,   312,   736,   556,   564,   532,   523,    -1,
     551,    -1,   563,   470,   551,    -1,   233,   163,    -1,   233,
     284,    -1,   233,   355,    -1,    -1,   221,   736,   544,    -1,
     382,    -1,   380,    -1,   225,   382,    -1,   225,   380,    -1,
     167,   382,    -1,   167,   380,    -1,   406,    -1,    -1,    29,
      -1,    53,   111,    -1,   130,   569,   179,   145,   571,   572,
      -1,   130,   569,   571,   572,    -1,   130,   570,   179,   145,
     737,   572,    -1,   130,   570,   737,   572,    -1,   130,   573,
     738,   266,   746,   572,    -1,   130,   573,   179,   145,   738,
     266,   746,   572,    -1,   376,    -1,   343,    -1,   422,    -1,
     234,   422,    -1,   188,    -1,   159,   376,    -1,    72,    -1,
      87,    -1,   365,    -1,   383,   339,   283,    -1,   383,   339,
     122,    -1,   383,   339,   381,    -1,   383,   339,    80,    -1,
      20,   236,    -1,   139,   392,    -1,   147,    -1,   159,   104,
     433,    -1,   303,    -1,   336,    -1,   346,    -1,   746,    -1,
     571,   470,   746,    -1,    56,    -1,   324,    -1,    -1,   290,
      -1,   334,    -1,   392,    -1,   495,   408,   791,   349,   506,
     635,   792,   500,    -1,    88,   587,   736,   556,   585,   576,
     581,   590,   577,   515,   582,    -1,    88,   466,   753,   467,
     387,   581,   590,   515,   582,    -1,   162,    -1,   387,    -1,
     579,   118,   743,    -1,    -1,   589,    -1,   578,   470,   589,
      -1,   410,    -1,    -1,    35,    -1,    -1,   302,    -1,    -1,
     586,    -1,   466,   591,   467,    -1,   774,    -1,   516,    -1,
     459,    -1,   466,   578,   467,    -1,    -1,   750,   583,    -1,
     429,   264,    -1,    -1,   586,   588,    -1,    -1,    49,    -1,
      -1,    49,    -1,   264,    -1,   161,    -1,   117,   580,   743,
      -1,   256,   580,   743,    -1,    92,    -1,   175,    -1,   304,
     580,   743,    -1,   138,   580,   743,    -1,   158,   304,   560,
      -1,   158,   304,   459,    -1,   158,   251,   256,   560,    -1,
     158,   256,   560,    -1,   134,   743,    -1,   774,    -1,   743,
      -1,   366,    -1,   367,    -1,   584,    -1,   591,   470,   584,
      -1,   594,    -1,   593,    -1,   466,   594,   467,    -1,   466,
     593,   467,    -1,   596,    -1,   595,   607,    -1,   595,   606,
     627,   613,    -1,   595,   606,   612,   628,    -1,   597,   595,
      -1,   597,   595,   607,    -1,   597,   595,   606,   627,   613,
      -1,   597,   595,   606,   612,   628,    -1,   596,    -1,   593,
      -1,   342,   605,   732,   600,   635,   653,   622,   626,   689,
      -1,   342,   604,   733,   600,   635,   653,   622,   626,   689,
      -1,   634,    -1,   376,   645,    -1,   595,   402,   603,   595,
      -1,   595,   202,   603,   595,    -1,   595,   140,   603,   595,
      -1,   429,   598,    -1,   452,   598,    -1,   429,   310,   598,
      -1,   599,    -1,   598,   470,   599,    -1,   738,   748,    35,
     466,   753,   467,    -1,   204,   601,    -1,    -1,   382,   602,
     736,    -1,   380,   602,   736,    -1,   225,   382,   602,   736,
      -1,   225,   380,   602,   736,    -1,   167,   382,   602,   736,
      -1,   167,   380,   602,   736,    -1,   406,   602,   736,    -1,
     376,   736,    -1,   736,    -1,   376,    -1,    -1,    26,    -1,
     125,    -1,    -1,   125,    -1,   125,   266,   466,   707,   467,
      -1,    26,    -1,    -1,   607,    -1,    -1,   272,    53,   608,
      -1,   609,    -1,   608,   470,   609,    -1,   680,   410,   704,
     611,    -1,   680,   610,   611,    -1,    36,    -1,   120,    -1,
      -1,   451,   154,    -1,   451,   214,    -1,    -1,   614,   615,
      -1,   615,   614,    -1,   614,    -1,   615,    -1,   612,    -1,
      -1,   222,   616,    -1,   222,   616,   470,   617,    -1,   152,
     621,   618,   620,   267,    -1,   152,   621,   620,   267,    -1,
     263,   617,    -1,   263,   618,   620,    -1,   680,    -1,    26,
      -1,   680,    -1,   682,    -1,   457,   619,    -1,   458,   619,
      -1,   742,    -1,     4,    -1,   332,    -1,   333,    -1,   154,
      -1,   248,    -1,   171,    53,   623,    -1,    -1,   624,    -1,
     623,   470,   624,    -1,   680,    -1,   625,    -1,   466,   467,
      -1,   174,   680,    -1,    -1,   629,    -1,   157,   306,   267,
      -1,   627,    -1,    -1,   630,    -1,   629,   630,    -1,   631,
     632,   633,    -1,   157,   408,    -1,   157,   249,   210,   408,
      -1,   157,   352,    -1,   157,   210,   352,    -1,   261,   735,
      -1,    -1,   255,    -1,   356,   230,    -1,    -1,   416,   466,
     707,   467,    -1,   634,   470,   466,   707,   467,    -1,   162,
     636,    -1,    -1,   637,    -1,   636,   470,   637,    -1,   645,
     640,    -1,   645,   640,   646,    -1,   648,   641,    -1,   215,
     648,   641,    -1,   593,   640,    -1,   215,   593,   640,    -1,
     638,    -1,   466,   638,   467,   639,    -1,   466,   638,   467,
      -1,   637,    91,   209,   637,    -1,   637,   642,   209,   637,
     644,    -1,   637,   209,   637,   644,    -1,   637,   245,   642,
     209,   637,    -1,   637,   245,   209,   637,    -1,    35,   744,
     466,   737,   467,    -1,    35,   744,    -1,   744,   466,   737,
     467,    -1,   744,    -1,   639,    -1,    -1,   639,    -1,    35,
     466,   654,   467,    -1,    35,   744,   466,   654,   467,    -1,
     744,   466,   654,   467,    -1,    -1,   163,   643,    -1,   219,
     643,    -1,   328,   643,    -1,   194,    -1,   275,    -1,    -1,
     410,   466,   737,   467,    -1,   266,   680,    -1,   736,    -1,
     736,   459,    -1,   267,   736,    -1,   267,   466,   736,   467,
      -1,   378,   740,   466,   707,   467,   647,    -1,   319,   466,
     680,   467,    -1,    -1,   685,   652,    -1,   333,   162,   466,
     650,   467,   652,    -1,   685,   651,    -1,   649,    -1,   650,
     470,   649,    -1,    35,   466,   654,   467,    -1,    -1,   452,
     273,    -1,    -1,   426,   680,    -1,    -1,   655,    -1,   654,
     470,   655,    -1,   744,   657,   656,    -1,    71,   746,    -1,
      -1,   659,   658,    -1,   350,   659,   658,    -1,   659,    34,
     464,   742,   465,    -1,   350,   659,    34,   464,   742,   465,
      -1,   659,    34,    -1,   350,   659,    34,    -1,   658,   464,
     465,    -1,   658,   464,   742,   465,    -1,    -1,   661,    -1,
     663,    -1,   665,    -1,   669,    -1,   675,    -1,   676,   678,
      -1,   676,   466,   742,   467,    -1,   663,    -1,   666,    -1,
     670,    -1,   675,    -1,   745,   662,    -1,   745,   747,   662,
      -1,   466,   707,   467,    -1,    -1,   200,    -1,   201,    -1,
     357,    -1,    48,    -1,   307,    -1,   155,   664,    -1,   129,
     293,    -1,   109,   662,    -1,   108,   662,    -1,   259,   662,
      -1,    51,    -1,   466,   742,   467,    -1,    -1,   667,    -1,
     668,    -1,   667,    -1,   668,    -1,    50,   674,   466,   707,
     467,    -1,    50,   674,    -1,   671,    -1,   672,    -1,   671,
      -1,   672,    -1,   673,   466,   742,   467,    -1,   673,    -1,
      63,   674,    -1,    62,   674,    -1,   417,    -1,   244,    63,
     674,    -1,   244,    62,   674,    -1,   246,   674,    -1,   419,
      -1,    -1,   386,   466,   742,   467,   677,    -1,   386,   677,
      -1,   385,   466,   742,   467,   677,    -1,   385,   677,    -1,
     203,    -1,   452,   385,   449,    -1,   431,   385,   449,    -1,
      -1,   447,    -1,   240,    -1,   106,    -1,   177,    -1,   237,
      -1,   679,    -1,   447,   387,   240,    -1,   106,   387,   177,
      -1,   106,   387,   237,    -1,   106,   387,   679,    -1,   177,
     387,   237,    -1,   177,   387,   679,    -1,   237,   387,   679,
      -1,    -1,   340,    -1,   340,   466,   742,   467,    -1,   682,
      -1,   680,    11,   657,    -1,   680,    71,   746,    -1,   680,
      40,   385,   449,   680,    -1,   457,   680,    -1,   458,   680,
      -1,   680,   457,   680,    -1,   680,   458,   680,    -1,   680,
     459,   680,    -1,   680,   460,   680,    -1,   680,   461,   680,
      -1,   680,   462,   680,    -1,   680,   453,   680,    -1,   680,
     454,   680,    -1,   680,   455,   680,    -1,   680,    15,   680,
      -1,   680,    16,   680,    -1,   680,    17,   680,    -1,   680,
     703,   680,    -1,   703,   680,    -1,   680,   703,    -1,   680,
      32,   680,    -1,   680,   271,   680,    -1,   251,   680,    -1,
     450,   680,    -1,   680,   221,   680,    -1,   680,   221,   680,
     138,   680,    -1,   680,   450,   221,   680,    -1,   680,   450,
     221,   680,   138,   680,    -1,   680,   180,   680,    -1,   680,
     180,   680,   138,   680,    -1,   680,   450,   180,   680,    -1,
     680,   450,   180,   680,   138,   680,    -1,   680,   354,   387,
     680,    -1,   680,   354,   387,   680,   138,   680,    -1,   680,
     450,   354,   387,   680,    -1,   680,   450,   354,   387,   680,
     138,   680,    -1,   680,   206,   256,    -1,   680,   207,    -1,
     680,   206,   251,   256,    -1,   680,   254,    -1,   699,   277,
     699,    -1,   680,   206,   394,    -1,   680,   206,   251,   394,
      -1,   680,   206,   150,    -1,   680,   206,   251,   150,    -1,
     680,   206,   404,    -1,   680,   206,   251,   404,    -1,   680,
     206,   125,   162,   680,    -1,   680,   206,   251,   125,   162,
     680,    -1,   680,   206,   261,   466,   710,   467,    -1,   680,
     206,   251,   261,   466,   710,   467,    -1,   680,    47,   731,
     681,    32,   680,    -1,   680,   450,    47,   731,   681,    32,
     680,    -1,   680,    47,   373,   681,    32,   680,    -1,   680,
     450,    47,   373,   681,    32,   680,    -1,   680,   185,   720,
      -1,   680,   450,   185,   720,    -1,   680,   705,   700,   593,
      -1,   680,   705,   700,   466,   680,   467,    -1,   111,    -1,
     682,    -1,   681,    11,   657,    -1,   457,   681,    -1,   458,
     681,    -1,   681,   457,   681,    -1,   681,   458,   681,    -1,
     681,   459,   681,    -1,   681,   460,   681,    -1,   681,   461,
     681,    -1,   681,   462,   681,    -1,   681,   453,   681,    -1,
     681,   454,   681,    -1,   681,   455,   681,    -1,   681,    15,
     681,    -1,   681,    16,   681,    -1,   681,    17,   681,    -1,
     681,   703,   681,    -1,   703,   681,    -1,   681,   703,    -1,
     681,   206,   125,   162,   681,    -1,   681,   206,   251,   125,
     162,   681,    -1,   681,   206,   261,   466,   710,   467,    -1,
     681,   206,   251,   261,   466,   710,   467,    -1,   726,    -1,
     741,    -1,   471,   730,    -1,    10,   730,    -1,   466,   680,
     467,   730,    -1,   721,    -1,   684,    -1,   593,    -1,   593,
     729,    -1,   145,   593,    -1,   740,   466,   467,    -1,   740,
     466,   708,   606,   467,    -1,   740,   466,   418,   709,   606,
     467,    -1,   740,   466,   708,   470,   418,   709,   606,   467,
      -1,   740,   466,    26,   708,   606,   467,    -1,   740,   466,
     125,   708,   606,   467,    -1,   740,   466,   459,   467,    -1,
     683,   687,   688,   692,    -1,   686,    -1,   683,    -1,   686,
      -1,    72,   157,   466,   680,   467,    -1,    96,    -1,    99,
      -1,    99,   466,   742,   467,    -1,   100,    -1,   100,   466,
     742,   467,    -1,   226,    -1,   226,   466,   742,   467,    -1,
     227,    -1,   227,   466,   742,   467,    -1,    97,    -1,   101,
      -1,   348,    -1,   409,    -1,    95,    -1,    98,    -1,    59,
     466,   680,    35,   657,   467,    -1,   149,   466,   711,   467,
      -1,   278,   466,   713,   467,    -1,   291,   466,   715,   467,
      -1,   372,   466,   716,   467,    -1,   391,   466,   680,    35,
     657,   467,    -1,   393,   466,    52,   719,   467,    -1,   393,
     466,   216,   719,   467,    -1,   393,   466,   388,   719,   467,
      -1,   393,   466,   719,   467,    -1,   257,   466,   680,   470,
     680,   467,    -1,    70,   466,   707,   467,    -1,   170,   466,
     707,   467,    -1,   218,   466,   707,   467,    -1,   430,   171,
     466,   607,   467,    -1,    -1,   153,   466,   426,   680,   467,
      -1,    -1,   428,   690,    -1,    -1,   691,    -1,   690,   470,
     691,    -1,   744,    35,   693,    -1,   276,   693,    -1,   276,
     744,    -1,    -1,   466,   694,   695,   606,   696,   467,    -1,
     744,    -1,    -1,   285,    53,   707,    -1,    -1,   305,   697,
      -1,   333,   697,    -1,    -1,   698,    -1,    47,   698,    32,
     698,    -1,   399,   292,    -1,   399,   156,    -1,    94,   332,
      -1,   680,   292,    -1,   680,   156,    -1,   332,   466,   707,
     467,    -1,   332,   466,   467,    -1,   466,   707,   470,   680,
     467,    -1,    33,    -1,   359,    -1,    26,    -1,     8,    -1,
     702,    -1,   457,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,   462,    -1,   453,    -1,   454,    -1,   455,    -1,
      15,    -1,    16,    -1,    17,    -1,     8,    -1,   268,   466,
     706,   467,    -1,   701,    -1,   268,   466,   706,   467,    -1,
     701,    -1,   268,   466,   706,   467,    -1,   221,    -1,   450,
     221,    -1,   180,    -1,   450,   180,    -1,   701,    -1,   744,
     468,   706,    -1,   680,    -1,   707,   470,   680,    -1,   709,
      -1,   708,   470,   709,    -1,   680,    -1,   749,    13,   680,
      -1,   749,    14,   680,    -1,   657,    -1,   710,   470,   657,
      -1,   712,   162,   680,    -1,    -1,     3,    -1,   447,    -1,
     240,    -1,   106,    -1,   177,    -1,   237,    -1,   340,    -1,
     743,    -1,   680,   714,   717,   718,    -1,   680,   714,   717,
      -1,   288,   680,    -1,   681,   185,   681,    -1,    -1,   680,
     717,   718,    -1,   680,   718,   717,    -1,   680,   717,    -1,
     680,   718,    -1,   707,    -1,    -1,   162,   680,    -1,   157,
     680,    -1,   680,   162,   707,    -1,   162,   707,    -1,   707,
      -1,   593,    -1,   466,   707,   467,    -1,    58,   725,   722,
     724,   136,    -1,   723,    -1,   722,   723,    -1,   425,   680,
     384,   680,    -1,   132,   680,    -1,    -1,   680,    -1,    -1,
     744,    -1,   744,   729,    -1,   468,   739,    -1,   468,   459,
      -1,   464,   680,   465,    -1,   464,   728,   472,   728,   465,
      -1,   680,    -1,    -1,   727,    -1,   729,   727,    -1,    -1,
     730,   727,    -1,    39,    -1,    -1,   733,    -1,    -1,   734,
      -1,   733,   470,   734,    -1,   680,    35,   750,    -1,   680,
       3,    -1,   680,    -1,   459,    -1,   736,    -1,   735,   470,
     736,    -1,   744,    -1,   744,   729,    -1,   738,    -1,   737,
     470,   738,    -1,   744,    -1,   750,    -1,   745,    -1,   744,
     729,    -1,   742,    -1,     4,    -1,   743,    -1,     6,    -1,
       7,    -1,   740,   743,    -1,   740,   466,   708,   606,   467,
     743,    -1,   660,   743,    -1,   676,   743,   678,    -1,   676,
     466,   742,   467,   743,    -1,   676,   466,   471,   467,   471,
     678,    -1,   394,    -1,   150,    -1,   256,    -1,     9,    -1,
       5,    -1,     3,    -1,   805,    -1,   806,    -1,     3,    -1,
     805,    -1,   807,    -1,   744,    -1,   744,   747,    -1,   468,
     739,    -1,   747,   468,   739,    -1,   466,   737,   467,    -1,
      -1,   745,    -1,     3,    -1,   805,    -1,   806,    -1,   807,
      -1,   808,    -1,   294,   738,   752,    35,   753,    -1,   466,
     710,   467,    -1,    -1,   592,    -1,   491,    -1,   574,    -1,
     790,    -1,    90,   336,   744,   755,    -1,    90,   336,   179,
     251,   145,   744,   755,    -1,   755,   756,    -1,    -1,   522,
      -1,   757,    -1,   509,    -1,   800,    -1,    90,   763,   188,
     760,   761,   266,   736,   759,   466,   507,   467,   762,   653,
      -1,    90,   763,   188,   760,   179,   251,   145,   550,   266,
     736,   759,   466,   507,   467,   762,   653,    -1,   744,    -1,
     410,   758,    -1,    -1,    79,    -1,    -1,   550,    -1,    -1,
     429,   535,    -1,    -1,   403,    -1,    -1,    28,   376,   645,
     349,   336,   738,    -1,    28,   376,   179,   145,   645,   349,
     336,   738,    -1,    28,   343,   736,   349,   336,   738,    -1,
      28,   343,   179,   145,   736,   349,   336,   738,    -1,    28,
     422,   736,   349,   336,   738,    -1,    28,   422,   179,   145,
     736,   349,   336,   738,    -1,    66,    -1,   146,   769,    -1,
     146,   773,   767,   769,    -1,   146,   420,   769,    -1,   146,
     466,   772,   467,   769,    -1,   420,    -1,    -1,   774,    -1,
     516,    -1,    -1,   592,    -1,   491,    -1,   574,    -1,   790,
      -1,   802,    -1,     3,    -1,   805,    -1,   806,    -1,   807,
      -1,   770,    -1,   743,    -1,   775,    -1,   772,   470,   775,
      -1,    31,    -1,    30,    -1,   394,    -1,   150,    -1,   266,
      -1,   771,    -1,   776,   768,    -1,   770,    -1,   773,    -1,
     349,   778,    -1,   349,   225,   778,    -1,   349,   347,   778,
      -1,   779,    -1,   799,   162,    94,    -1,   385,   449,   781,
      -1,   336,   743,    -1,   799,   387,   782,    -1,   799,   455,
     782,    -1,   799,   387,   111,    -1,   799,   455,   111,    -1,
     774,    -1,   516,    -1,   743,    -1,     3,    -1,   676,   743,
     678,    -1,   676,   466,   742,   467,   743,    -1,   516,    -1,
     111,    -1,   225,    -1,   780,    -1,   782,   470,   780,    -1,
     224,   784,    -1,   743,    -1,   411,   787,   789,   767,    -1,
     411,   787,   789,   767,   736,    -1,   411,   787,   789,   767,
     794,    -1,   411,   466,   788,   467,    -1,   411,   466,   788,
     467,   736,   748,    -1,   773,    -1,   420,    -1,   161,    -1,
     163,    -1,     3,    -1,   163,    -1,    -1,   786,    -1,   788,
     470,   786,    -1,   161,    -1,    -1,   495,   116,   162,   791,
     793,   792,   500,    -1,   645,    -1,   645,   744,    -1,   645,
      35,   744,    -1,   426,   680,    -1,    -1,   410,   636,    -1,
      -1,   773,   767,    -1,   773,   767,   736,   748,    -1,   322,
     797,    -1,   799,    -1,    26,    -1,   796,    -1,   385,   449,
      -1,   389,   208,   220,    -1,   353,   799,    -1,   353,   385,
     449,    -1,   353,   389,   208,   220,    -1,   353,    26,    -1,
     744,    -1,   799,   468,   744,    -1,    90,   566,   422,   736,
     556,   762,    35,   592,   801,    -1,    90,   271,   320,   566,
     422,   736,   556,   762,    35,   592,   801,    -1,    90,   566,
     310,   422,   736,   466,   560,   467,   762,    35,   592,   801,
      -1,    90,   271,   320,   566,   310,   422,   736,   466,   560,
     467,   762,    35,   592,   801,    -1,   429,    65,   269,    -1,
     429,    57,    65,   269,    -1,   429,   225,    65,   269,    -1,
      -1,    90,   566,   376,   804,    35,   592,   803,    -1,    90,
     566,   376,   179,   251,   145,   804,    35,   592,   803,    -1,
     429,   104,    -1,   429,   249,   104,    -1,    -1,   736,   556,
     542,   534,    -1,    18,    -1,    19,    -1,    20,    -1,    21,
      -1,    22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,
      -1,    28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,
      -1,    41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,
      -1,    53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,
      -1,    60,    -1,    61,    -1,    64,    -1,    66,    -1,    67,
      -1,    68,    -1,    69,    -1,    74,    -1,    75,    -1,    76,
      -1,    77,    -1,    78,    -1,    80,    -1,    81,    -1,    82,
      -1,    84,    -1,    85,    -1,    86,    -1,    87,    -1,    88,
      -1,    89,    -1,    92,    -1,    93,    -1,    94,    -1,   102,
      -1,   103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,
      -1,   110,    -1,   112,    -1,   114,    -1,   115,    -1,   116,
      -1,   117,    -1,   118,    -1,   119,    -1,   121,    -1,   122,
      -1,   123,    -1,   124,    -1,   127,    -1,   128,    -1,   129,
      -1,   130,    -1,   131,    -1,   133,    -1,   134,    -1,   135,
      -1,   137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,
      -1,   143,    -1,   144,    -1,   146,    -1,   147,    -1,   148,
      -1,   151,    -1,   153,    -1,   154,    -1,   156,    -1,   158,
      -1,   160,    -1,   164,    -1,   165,    -1,   166,    -1,   167,
      -1,   169,    -1,   173,    -1,   175,    -1,   176,    -1,   177,
      -1,   178,    -1,   179,    -1,   181,    -1,   182,    -1,   183,
      -1,   184,    -1,   186,    -1,   187,    -1,   188,    -1,   189,
      -1,   190,    -1,   191,    -1,   193,    -1,   196,    -1,   197,
      -1,   198,    -1,   199,    -1,   205,    -1,   208,    -1,   210,
      -1,   211,    -1,   212,    -1,   213,    -1,   214,    -1,   217,
      -1,   220,    -1,   223,    -1,   224,    -1,   225,    -1,   228,
      -1,   229,    -1,   230,    -1,   231,    -1,   232,    -1,   233,
      -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,
      -1,   247,    -1,   248,    -1,   249,    -1,   252,    -1,   253,
      -1,   255,    -1,   258,    -1,   260,    -1,   261,    -1,   262,
      -1,   264,    -1,   265,    -1,   268,    -1,   269,    -1,   270,
      -1,   273,    -1,   276,    -1,   279,    -1,   280,    -1,   281,
      -1,   282,    -1,   283,    -1,   284,    -1,   285,    -1,   286,
      -1,   287,    -1,   289,    -1,   290,    -1,   292,    -1,   294,
      -1,   295,    -1,   296,    -1,   298,    -1,   299,    -1,   300,
      -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,   305,
      -1,   306,    -1,   308,    -1,   309,    -1,   310,    -1,   311,
      -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,   317,
      -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,   322,
      -1,   323,    -1,   324,    -1,   326,    -1,   327,    -1,   329,
      -1,   330,    -1,   331,    -1,   333,    -1,   334,    -1,   335,
      -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,   340,
      -1,   341,    -1,   343,    -1,   344,    -1,   345,    -1,   346,
      -1,   347,    -1,   349,    -1,   351,    -1,   352,    -1,   353,
      -1,   355,    -1,   356,    -1,   358,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,
      -1,   367,    -1,   368,    -1,   369,    -1,   370,    -1,   371,
      -1,   374,    -1,   375,    -1,   377,    -1,   379,    -1,   380,
      -1,   381,    -1,   382,    -1,   383,    -1,   389,    -1,   390,
      -1,   392,    -1,   395,    -1,   396,    -1,   397,    -1,   398,
      -1,   399,    -1,   400,    -1,   401,    -1,   404,    -1,   405,
      -1,   406,    -1,   407,    -1,   408,    -1,   411,    -1,   412,
      -1,   413,    -1,   414,    -1,   415,    -1,   419,    -1,   421,
      -1,   422,    -1,   423,    -1,   424,    -1,   427,    -1,   430,
      -1,   431,    -1,   432,    -1,   433,    -1,   434,    -1,   435,
      -1,   447,    -1,   448,    -1,   449,    -1,    47,    -1,    48,
      -1,    50,    -1,    51,    -1,    62,    -1,    63,    -1,    70,
      -1,   108,    -1,   109,    -1,   145,    -1,   149,    -1,   155,
      -1,   170,    -1,   172,    -1,   195,    -1,   200,    -1,   201,
      -1,   203,    -1,   218,    -1,   244,    -1,   246,    -1,   250,
      -1,   257,    -1,   259,    -1,   274,    -1,   278,    -1,   291,
      -1,   293,    -1,   307,    -1,   332,    -1,   350,    -1,   357,
      -1,   372,    -1,   385,    -1,   386,    -1,   391,    -1,   393,
      -1,   416,    -1,   417,    -1,   436,    -1,   437,    -1,   438,
      -1,   439,    -1,   440,    -1,   441,    -1,   442,    -1,   443,
      -1,   444,    -1,   445,    -1,   446,    -1,    43,    -1,    49,
      -1,    72,    -1,    79,    -1,    91,    -1,    98,    -1,   161,
      -1,   163,    -1,   180,    -1,   194,    -1,   206,    -1,   207,
      -1,   209,    -1,   219,    -1,   221,    -1,   245,    -1,   254,
      -1,   275,    -1,   277,    -1,   328,    -1,   354,    -1,   378,
      -1,   420,    -1,    26,    -1,    30,    -1,    31,    -1,    32,
      -1,    33,    -1,    34,    -1,    35,    -1,    36,    -1,    39,
      -1,    52,    -1,    58,    -1,    59,    -1,    65,    -1,    71,
      -1,    73,    -1,    83,    -1,    90,    -1,    95,    -1,    96,
      -1,    97,    -1,    99,    -1,   100,    -1,   101,    -1,   111,
      -1,   113,    -1,   120,    -1,   125,    -1,   126,    -1,   132,
      -1,   136,    -1,   140,    -1,   150,    -1,   152,    -1,   157,
      -1,   159,    -1,   162,    -1,   168,    -1,   171,    -1,   174,
      -1,   185,    -1,   192,    -1,   202,    -1,   204,    -1,   215,
      -1,   216,    -1,   222,    -1,   226,    -1,   227,    -1,   251,
      -1,   256,    -1,   263,    -1,   266,    -1,   267,    -1,   271,
      -1,   272,    -1,   288,    -1,   297,    -1,   312,    -1,   325,
      -1,   342,    -1,   348,    -1,   359,    -1,   373,    -1,   376,
      -1,   384,    -1,   387,    -1,   388,    -1,   394,    -1,   402,
      -1,   403,    -1,   409,    -1,   410,    -1,   418,    -1,   425,
      -1,   426,    -1,   428,    -1,   429,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   628,   628,   644,   656,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   694,   705,   714,   723,   732,   741,   750,
     759,   768,   781,   783,   789,   790,   795,   799,   803,   814,
     822,   826,   835,   844,   853,   862,   871,   880,   888,   896,
     905,   914,   923,   932,   949,   958,   967,   976,   986,   999,
    1014,  1023,  1031,  1046,  1054,  1064,  1074,  1081,  1088,  1096,
    1103,  1114,  1115,  1120,  1124,  1129,  1134,  1142,  1143,  1148,
    1152,  1153,  1162,  1168,  1174,  1180,  1193,  1202,  1212,  1222,
    1232,  1242,  1252,  1262,  1272,  1282,  1293,  1304,  1314,  1327,
    1328,  1338,  1351,  1357,  1364,  1370,  1377,  1387,  1391,  1400,
    1409,  1418,  1425,  1426,  1431,  1443,  1448,  1473,  1483,  1493,
    1499,  1510,  1521,  1536,  1537,  1543,  1544,  1549,  1550,  1556,
    1557,  1561,  1562,  1567,  1569,  1575,  1576,  1580,  1581,  1586,
    1604,  1614,  1627,  1628,  1637,  1644,  1661,  1681,  1682,  1693,
    1701,  1713,  1714,  1718,  1719,  1720,  1725,  1726,  1727,  1732,
    1736,  1740,  1744,  1748,  1752,  1756,  1760,  1764,  1768,  1772,
    1776,  1781,  1785,  1789,  1796,  1797,  1801,  1802,  1803,  1807,
    1814,  1820,  1826,  1833,  1840,  1850,  1851,  1852,  1861,  1875,
    1895,  1896,  1923,  1924,  1925,  1926,  1927,  1928,  1932,  1933,
    1938,  1943,  1944,  1945,  1946,  1947,  1952,  1959,  1960,  1961,
    1978,  1985,  1992,  2002,  2012,  2024,  2033,  2042,  2061,  2068,
    2073,  2075,  2077,  2079,  2082,  2087,  2088,  2092,  2093,  2094,
    2095,  2100,  2104,  2105,  2110,  2117,  2122,  2123,  2124,  2125,
    2126,  2127,  2128,  2129,  2135,  2136,  2140,  2145,  2152,  2159,
    2166,  2178,  2179,  2180,  2181,  2185,  2190,  2191,  2192,  2197,
    2202,  2203,  2204,  2205,  2206,  2207,  2212,  2235,  2239,  2246,
    2247,  2251,  2255,  2256,  2257,  2261,  2265,  2273,  2274,  2279,
    2280,  2284,  2292,  2293,  2298,  2299,  2303,  2308,  2312,  2316,
    2321,  2329,  2330,  2334,  2335,  2341,  2352,  2365,  2379,  2393,
    2407,  2421,  2444,  2448,  2455,  2459,  2467,  2472,  2479,  2489,
    2490,  2491,  2492,  2493,  2500,  2507,  2508,  2513,  2514,  2525,
    2535,  2545,  2555,  2565,  2575,  2589,  2590,  2591,  2592,  2593,
    2594,  2595,  2596,  2597,  2598,  2599,  2600,  2601,  2606,  2607,
    2608,  2609,  2610,  2611,  2612,  2617,  2618,  2623,  2624,  2625,
    2630,  2631,  2632,  2641,  2658,  2687,  2710,  2711,  2716,  2720,
    2725,  2729,  2737,  2738,  2742,  2743,  2748,  2749,  2753,  2754,
    2759,  2760,  2761,  2762,  2763,  2768,  2776,  2780,  2785,  2786,
    2791,  2795,  2800,  2804,  2808,  2812,  2816,  2820,  2824,  2828,
    2832,  2836,  2840,  2844,  2848,  2852,  2860,  2866,  2867,  2868,
    2873,  2877,  2929,  2930,  2934,  2935,  2950,  2951,  2958,  2966,
    2974,  2982,  2990,  2998,  3009,  3010,  3037,  3051,  3066,  3067,
    3086,  3090,  3094,  3111,  3118,  3125,  3135,  3136,  3139,  3151,
    3162,  3170,  3175,  3180,  3185,  3190,  3198,  3206,  3211,  3216,
    3223,  3224,  3228,  3229,  3230,  3237,  3238,  3242,  3243,  3247,
    3248,  3252,  3256,  3257,  3260,  3269,  3280,  3281,  3282,  3285,
    3286,  3287,  3291,  3292,  3293,  3294,  3298,  3299,  3303,  3305,
    3321,  3323,  3328,  3331,  3336,  3337,  3345,  3365,  3366,  3368,
    3373,  3374,  3378,  3379,  3382,  3383,  3408,  3409,  3413,  3414,
    3418,  3419,  3423,  3436,  3437,  3441,  3442,  3446,  3447,  3451,
    3452,  3456,  3467,  3468,  3469,  3470,  3474,  3475,  3480,  3481,
    3482,  3491,  3497,  3515,  3516,  3520,  3521,  3527,  3532,  3540,
    3547,  3555,  3590,  3615,  3619,  3645,  3649,  3661,  3674,  3688,
    3699,  3714,  3720,  3725,  3731,  3738,  3739,  3747,  3751,  3755,
    3761,  3768,  3773,  3774,  3775,  3776,  3780,  3781,  3793,  3794,
    3799,  3806,  3813,  3820,  3843,  3856,  3857,  3872,  3882,  3894,
    3899,  3900,  3903,  3904,  3907,  3908,  3913,  3914,  3919,  3923,
    3929,  3950,  3958,  3970,  3975,  3982,  3987,  3993,  3998,  4007,
    4009,  4012,  4016,  4017,  4018,  4019,  4020,  4021,  4026,  4046,
    4047,  4048,  4049,  4060,  4066,  4074,  4075,  4081,  4086,  4091,
    4096,  4101,  4106,  4111,  4116,  4122,  4128,  4134,  4141,  4163,
    4172,  4176,  4184,  4188,  4196,  4208,  4229,  4233,  4239,  4243,
    4256,  4264,  4274,  4276,  4278,  4280,  4282,  4284,  4289,  4290,
    4297,  4306,  4314,  4323,  4334,  4342,  4343,  4344,  4348,  4350,
    4352,  4354,  4356,  4358,  4360,  4365,  4370,  4376,  4384,  4389,
    4396,  4403,  4407,  4411,  4447,  4448,  4450,  4458,  4473,  4475,
    4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,
    4497,  4499,  4502,  4504,  4506,  4509,  4511,  4513,  4515,  4518,
    4523,  4531,  4536,  4544,  4549,  4557,  4562,  4571,  4579,  4587,
    4595,  4613,  4621,  4629,  4637,  4645,  4661,  4669,  4677,  4685,
    4693,  4701,  4709,  4713,  4717,  4721,  4725,  4733,  4741,  4749,
    4757,  4777,  4799,  4810,  4817,  4842,  4844,  4846,  4848,  4850,
    4852,  4854,  4856,  4858,  4860,  4862,  4864,  4866,  4868,  4870,
    4872,  4874,  4876,  4878,  4880,  4884,  4888,  4892,  4906,  4907,
    4908,  4920,  4935,  4947,  4949,  4951,  4962,  4986,  4999,  5003,
    5009,  5016,  5023,  5033,  5040,  5068,  5103,  5114,  5115,  5122,
    5128,  5132,  5136,  5140,  5144,  5148,  5152,  5156,  5160,  5164,
    5168,  5172,  5176,  5180,  5184,  5188,  5190,  5194,  5203,  5208,
    5215,  5230,  5237,  5241,  5245,  5249,  5253,  5260,  5268,  5283,
    5284,  5288,  5289,  5297,  5298,  5302,  5303,  5308,  5316,  5318,
    5332,  5335,  5362,  5363,  5366,  5367,  5378,  5396,  5403,  5412,
    5429,  5474,  5482,  5490,  5498,  5506,  5527,  5528,  5529,  5532,
    5533,  5534,  5537,  5538,  5541,  5542,  5543,  5544,  5545,  5546,
    5547,  5548,  5549,  5550,  5551,  5552,  5555,  5557,  5562,  5564,
    5569,  5571,  5573,  5575,  5577,  5579,  5593,  5595,  5599,  5603,
    5610,  5614,  5620,  5624,  5633,  5644,  5645,  5649,  5653,  5660,
    5661,  5662,  5663,  5664,  5665,  5666,  5667,  5677,  5681,  5688,
    5695,  5696,  5712,  5716,  5721,  5725,  5740,  5745,  5749,  5752,
    5755,  5756,  5757,  5760,  5767,  5777,  5791,  5792,  5796,  5807,
    5808,  5811,  5812,  5815,  5819,  5826,  5830,  5834,  5842,  5853,
    5854,  5858,  5859,  5863,  5864,  5867,  5868,  5878,  5879,  5883,
    5884,  5887,  5903,  5911,  5919,  5941,  5942,  5953,  5957,  5984,
    5986,  5991,  5993,  6003,  6005,  6016,  6020,  6024,  6028,  6032,
    6041,  6048,  6080,  6084,  6090,  6098,  6110,  6114,  6118,  6124,
    6125,  6141,  6142,  6143,  6148,  6149,  6150,  6153,  6154,  6157,
    6159,  6164,  6165,  6168,  6176,  6177,  6178,  6179,  6180,  6189,
    6200,  6201,  6205,  6206,  6207,  6208,  6217,  6226,  6244,  6251,
    6256,  6257,  6258,  6259,  6269,  6294,  6323,  6327,  6328,  6333,
    6334,  6339,  6340,  6344,  6345,  6350,  6351,  6360,  6369,  6378,
    6387,  6396,  6405,  6420,  6435,  6442,  6452,  6459,  6470,  6471,
    6476,  6477,  6478,  6483,  6484,  6485,  6486,  6487,  6491,  6492,
    6493,  6494,  6499,  6500,  6505,  6509,  6517,  6518,  6523,  6524,
    6525,  6531,  6536,  6544,  6545,  6557,  6563,  6569,  6579,  6580,
    6588,  6599,  6611,  6619,  6627,  6634,  6644,  6646,  6652,  6656,
    6660,  6675,  6682,  6683,  6684,  6688,  6689,  6698,  6707,  6716,
    6730,  6744,  6756,  6764,  6778,  6779,  6780,  6781,  6782,  6795,
    6796,  6801,  6802,  6806,  6807,  6816,  6830,  6834,  6841,  6852,
    6853,  6859,  6860,  6871,  6881,  6894,  6899,  6906,  6916,  6917,
    6924,  6935,  6941,  6947,  6953,  6962,  6963,  6974,  6987,  7000,
    7018,  7040,  7041,  7042,  7043,  7056,  7069,  7086,  7087,  7088,
    7093,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,  7107,
    7107,  7107,  7107,  7108,  7108,  7108,  7108,  7108,  7108,  7108,
    7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,
    7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,
    7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,
    7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,  7108,
    7108,  7108,  7108,  7109,  7109,  7109,  7109,  7109,  7109,  7109,
    7109,  7109,  7109,  7109,  7109,  7109,  7109,  7109,  7109,  7109,
    7109,  7109,  7109,  7109,  7109,  7109,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,  7110,
    7110,  7110,  7110
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT", "DO",
  "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P",
  "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT",
  "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GREATEST", "GROUP_P",
  "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEAST", "LEFT", "LEVEL", "LIKE", "LIMIT",
  "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION",
  "LOCK_P", "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED",
  "MAXVALUE", "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE",
  "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO",
  "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE",
  "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "CreateSeqStmt", "OptSeqOptList", "ExecuteStmt",
  "execute_param_clause", "AlterSeqStmt", "SeqOptList", "opt_with",
  "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst", "TransactionStmt",
  "opt_transaction", "CreateStmt", "ConstraintAttributeSpec", "def_arg",
  "OptParenthesizedSeqOptList", "generic_option_arg", "key_action",
  "ColConstraint", "ColConstraintElem", "generic_option_elem",
  "key_update", "key_actions", "create_generic_options", "OnCommitOption",
  "reloptions", "opt_no_inherit", "TableConstraint", "TableLikeOption",
  "reloption_list", "ExistingIndex", "ConstraintAttr", "OptWith",
  "definition", "TableLikeOptionList", "generic_option_name",
  "ConstraintAttributeElem", "columnDef", "generic_option_list",
  "def_list", "index_name", "TableElement", "def_elem", "opt_definition",
  "OptTableElementList", "columnElem", "opt_column_list", "ColQualList",
  "key_delete", "reloption_elem", "columnList", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "type_function_name", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "PrepareStmt",
  "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "var_name", "ViewStmt", "opt_check_option",
  "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,    60,    62,    61,   708,    43,    45,    42,
      47,    37,    94,   709,    91,    93,    40,    41,    46,    59,
      44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   473,   474,   475,   475,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   476,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   476,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   477,   477,   477,   477,   477,   477,
     477,   477,   478,   478,   479,   479,   480,   480,   480,   480,
     481,   481,   482,   482,   482,   482,   482,   482,   482,   482,
     482,   482,   482,   482,   482,   482,   482,   482,   482,   482,
     482,   482,   482,   482,   482,   482,   482,   482,   482,   482,
     482,   483,   483,   484,   484,   484,   484,   485,   485,   486,
     487,   487,   488,   488,   488,   488,   489,   489,   489,   489,
     489,   489,   489,   489,   489,   489,   489,   489,   489,   490,
     490,   491,   492,   492,   492,   492,   492,   493,   493,   494,
     494,   494,   495,   495,   496,   497,   497,   498,   498,   498,
     499,   499,   499,   500,   500,   501,   501,   502,   502,   503,
     503,   504,   504,   505,   505,   506,   506,   507,   507,   508,
     509,   509,   510,   510,   511,   511,   511,   512,   512,   513,
     513,   514,   514,   515,   515,   515,   516,   516,   516,   516,
     517,   517,   517,   517,   517,   517,   517,   517,   517,   517,
     517,   517,   517,   517,   518,   518,   519,   519,   519,   520,
     520,   520,   520,   520,   520,   521,   521,   521,   522,   522,
     523,   523,   524,   524,   524,   524,   524,   524,   525,   525,
     526,   527,   527,   527,   527,   527,   528,   528,   528,   528,
     529,   529,   529,   529,   529,   529,   529,   529,   530,   531,
     532,   532,   532,   532,   532,   533,   533,   534,   534,   534,
     534,   535,   536,   536,   537,   537,   538,   538,   538,   538,
     538,   538,   538,   538,   539,   539,   540,   541,   541,   541,
     541,   542,   542,   542,   542,   543,   544,   544,   544,   545,
     546,   546,   546,   546,   546,   546,   547,   548,   548,   549,
     549,   550,   551,   551,   551,   552,   552,   553,   553,   554,
     554,   555,   556,   556,   557,   557,   558,   559,   559,   559,
     559,   560,   560,   561,   561,   561,   562,   562,   562,   562,
     562,   562,   563,   563,   564,   564,   564,   564,   565,   566,
     566,   566,   566,   566,   566,   566,   566,   567,   567,   568,
     568,   568,   568,   568,   568,   569,   569,   569,   569,   569,
     569,   569,   569,   569,   569,   569,   569,   569,   570,   570,
     570,   570,   570,   570,   570,   571,   571,   572,   572,   572,
     573,   573,   573,   574,   575,   575,   576,   576,   577,   577,
     578,   578,   579,   579,   580,   580,   581,   581,   582,   582,
     583,   583,   583,   583,   583,   584,   585,   585,   586,   586,
     587,   587,   588,   588,   588,   588,   588,   588,   588,   588,
     588,   588,   588,   588,   588,   588,   589,   590,   590,   590,
     591,   591,   592,   592,   593,   593,   594,   594,   594,   594,
     594,   594,   594,   594,   595,   595,   596,   596,   596,   596,
     596,   596,   596,   597,   597,   597,   598,   598,   599,   600,
     600,   601,   601,   601,   601,   601,   601,   601,   601,   601,
     602,   602,   603,   603,   603,   604,   604,   605,   605,   606,
     606,   607,   608,   608,   609,   609,   610,   610,   610,   611,
     611,   611,   612,   612,   612,   612,   613,   613,   614,   614,
     614,   614,   615,   615,   616,   616,   617,   618,   618,   618,
     619,   619,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   625,   626,   626,   627,   627,   628,   628,   629,
     629,   630,   631,   631,   631,   631,   632,   632,   633,   633,
     633,   634,   634,   635,   635,   636,   636,   637,   637,   637,
     637,   637,   637,   637,   637,   638,   638,   638,   638,   638,
     638,   639,   639,   639,   639,   640,   640,   641,   641,   641,
     641,   641,   642,   642,   642,   642,   643,   643,   644,   644,
     645,   645,   645,   645,   646,   647,   647,   648,   648,   649,
     650,   650,   651,   651,   652,   652,   653,   653,   654,   654,
     655,   656,   656,   657,   657,   657,   657,   657,   657,   658,
     658,   658,   659,   659,   659,   659,   659,   659,   659,   660,
     660,   660,   660,   661,   661,   662,   662,   663,   663,   663,
     663,   663,   663,   663,   663,   663,   663,   663,   664,   664,
     665,   665,   666,   666,   667,   668,   669,   669,   670,   670,
     671,   672,   673,   673,   673,   673,   673,   673,   674,   674,
     675,   675,   675,   675,   676,   677,   677,   677,   678,   678,
     678,   678,   678,   678,   678,   678,   678,   678,   678,   678,
     678,   678,   679,   679,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   683,   683,
     683,   683,   683,   683,   683,   684,   684,   685,   685,   686,
     686,   686,   686,   686,   686,   686,   686,   686,   686,   686,
     686,   686,   686,   686,   686,   686,   686,   686,   686,   686,
     686,   686,   686,   686,   686,   686,   686,   686,   686,   687,
     687,   688,   688,   689,   689,   690,   690,   691,   692,   692,
     692,   693,   694,   694,   695,   695,   696,   696,   696,   697,
     697,   698,   698,   698,   698,   698,   699,   699,   699,   700,
     700,   700,   701,   701,   702,   702,   702,   702,   702,   702,
     702,   702,   702,   702,   702,   702,   703,   703,   704,   704,
     705,   705,   705,   705,   705,   705,   706,   706,   707,   707,
     708,   708,   709,   709,   709,   710,   710,   711,   711,   712,
     712,   712,   712,   712,   712,   712,   712,   713,   713,   714,
     715,   715,   716,   716,   716,   716,   716,   716,   717,   718,
     719,   719,   719,   720,   720,   721,   722,   722,   723,   724,
     724,   725,   725,   726,   726,   727,   727,   727,   727,   728,
     728,   729,   729,   730,   730,   731,   731,   732,   732,   733,
     733,   734,   734,   734,   734,   735,   735,   736,   736,   737,
     737,   738,   739,   740,   740,   741,   741,   741,   741,   741,
     741,   741,   741,   741,   741,   741,   741,   741,   741,   742,
     743,   744,   744,   744,   745,   745,   745,   746,   746,   747,
     747,   748,   748,   749,   750,   750,   750,   750,   750,   751,
     752,   752,   753,   753,   753,   753,   754,   754,   755,   755,
     756,   756,   756,   756,   757,   757,   758,   759,   759,   760,
     760,   761,   761,   762,   762,   763,   763,   764,   764,   764,
     764,   764,   764,   765,   766,   766,   766,   766,   767,   767,
     768,   768,   768,   769,   769,   769,   769,   769,   770,   770,
     770,   770,   771,   771,   772,   772,   773,   773,   774,   774,
     774,   774,   775,   776,   776,   777,   777,   777,   778,   778,
     778,   778,   779,   779,   779,   779,   780,   780,   781,   781,
     781,   781,   781,   781,   781,   782,   782,   783,   784,   785,
     785,   785,   785,   785,   786,   786,   786,   786,   786,   787,
     787,   788,   788,   789,   789,   790,   791,   791,   791,   792,
     792,   793,   793,   794,   794,   795,   796,   796,   797,   797,
     797,   798,   798,   798,   798,   799,   799,   800,   800,   800,
     800,   801,   801,   801,   801,   802,   802,   803,   803,   803,
     804,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   805,   805,   805,   805,   805,   805,   805,
     805,   805,   805,   806,   806,   806,   806,   806,   806,   806,
     806,   806,   806,   806,   806,   806,   806,   806,   806,   806,
     806,   806,   806,   806,   806,   806,   806,   806,   806,   806,
     806,   806,   806,   806,   806,   806,   806,   806,   806,   806,
     806,   806,   806,   806,   806,   806,   806,   806,   806,   806,
     806,   806,   806,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     4,     6,     4,     6,     4,     6,
       4,     6,     1,     2,     3,     2,     1,     3,     2,     3,
       1,     3,     2,     5,     3,     6,     4,     6,     6,     6,
       5,     5,     6,     9,     4,     5,     7,     6,     4,     8,
       4,     2,     4,     3,     6,     4,     2,     2,     2,     2,
       1,     2,     0,     1,     2,     2,     2,     1,     3,     4,
       2,     0,     2,     3,     2,     3,     6,     6,     8,     6,
       8,     6,     8,     6,     8,     8,    10,     8,    10,     1,
       0,     7,     1,     4,     4,     7,     2,     1,     3,     4,
       3,     0,     1,     0,     2,     3,     5,     8,     5,     0,
       5,     5,     7,     2,     0,     1,     1,     1,     3,     2,
       0,     1,     0,     1,     3,     1,     3,     1,     3,     2,
       5,     8,     1,     0,     3,     9,    12,     3,     0,     4,
       6,     1,     2,     1,     1,     0,     1,     2,     2,     1,
       2,     2,     1,     2,     3,     2,     2,     2,     2,     3,
       3,     3,     1,     3,     1,     0,     1,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     0,     9,    12,
       0,     2,     1,     1,     1,     1,     1,     1,     3,     0,
       1,     2,     1,     1,     2,     2,     3,     1,     1,     2,
       2,     1,     2,     3,     5,     2,     5,     5,     2,     3,
       1,     1,     2,     2,     0,     4,     0,     3,     4,     4,
       0,     3,     2,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     1,     2,     2,
       2,     2,     2,     2,     0,     3,     3,     3,     0,     1,
       2,     1,     2,     2,     2,     2,     4,     1,     3,     1,
       3,     1,     1,     1,     1,     3,     1,     2,     0,     1,
       0,     1,     3,     0,     2,     0,     3,     3,     1,     5,
       3,     1,     3,     1,     4,     5,     5,     6,     3,     7,
       4,    11,     1,     3,     2,     2,     2,     0,     3,     1,
       1,     2,     2,     2,     2,     1,     0,     1,     2,     6,
       4,     6,     4,     6,     8,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     8,    11,     9,     1,     1,     3,     0,
       1,     3,     1,     0,     1,     0,     1,     0,     1,     3,
       1,     1,     1,     3,     0,     2,     2,     0,     2,     0,
       1,     0,     1,     1,     1,     3,     3,     1,     1,     3,
       3,     3,     3,     4,     3,     2,     1,     1,     1,     1,
       1,     3,     1,     1,     3,     3,     1,     2,     4,     4,
       2,     3,     5,     5,     1,     1,     9,     9,     1,     2,
       4,     4,     4,     2,     2,     3,     1,     3,     6,     2,
       0,     3,     3,     4,     4,     4,     4,     3,     2,     1,
       1,     0,     1,     1,     0,     1,     5,     1,     0,     1,
       0,     3,     1,     3,     4,     3,     1,     1,     0,     2,
       2,     0,     2,     2,     1,     1,     1,     0,     2,     4,
       5,     4,     2,     3,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     3,
       1,     1,     2,     2,     0,     1,     3,     1,     0,     1,
       2,     3,     2,     4,     2,     3,     2,     0,     1,     2,
       0,     4,     5,     2,     0,     1,     3,     2,     3,     2,
       3,     2,     3,     1,     4,     3,     4,     5,     4,     5,
       4,     5,     2,     4,     1,     1,     0,     1,     4,     5,
       4,     0,     2,     2,     2,     1,     1,     0,     4,     2,
       1,     2,     2,     4,     6,     4,     0,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     3,     5,     6,     2,     3,     3,
       4,     0,     1,     1,     1,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     2,     1,     3,     0,
       1,     1,     1,     1,     5,     2,     1,     1,     1,     1,
       4,     1,     2,     2,     1,     3,     3,     2,     1,     0,
       5,     2,     5,     2,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     4,     1,     3,     3,     5,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     3,     3,     2,     2,     3,
       5,     4,     6,     3,     5,     4,     6,     4,     6,     5,
       7,     3,     2,     4,     2,     3,     3,     4,     3,     4,
       3,     4,     5,     6,     6,     7,     6,     7,     6,     7,
       3,     4,     4,     6,     1,     1,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     5,     6,     6,     7,     1,     1,
       2,     2,     4,     1,     1,     1,     2,     2,     3,     5,
       6,     8,     6,     6,     4,     4,     1,     1,     1,     5,
       1,     1,     4,     1,     4,     1,     4,     1,     4,     1,
       1,     1,     1,     1,     1,     6,     4,     4,     4,     4,
       6,     5,     5,     5,     4,     6,     4,     4,     4,     5,
       0,     5,     0,     2,     0,     1,     3,     3,     2,     2,
       0,     6,     1,     0,     3,     0,     2,     2,     0,     1,
       4,     2,     2,     2,     2,     2,     4,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     1,     4,
       1,     4,     1,     2,     1,     2,     1,     3,     1,     3,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     3,     2,
       3,     0,     3,     3,     2,     2,     1,     0,     2,     2,
       3,     2,     1,     1,     3,     5,     1,     2,     4,     2,
       0,     1,     0,     1,     2,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     6,     2,     3,     5,     6,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     1,     2,     4,     3,     5,     1,     0,
       1,     1,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     3,     3,     1,     3,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     5,     1,     1,     1,     1,     3,     2,     1,     4,
       5,     5,     4,     6,     1,     1,     1,     1,     1,     1,
       0,     1,     3,     1,     0,     7,     1,     2,     3,     2,
       0,     2,     0,     2,     4,     2,     1,     1,     1,     2,
       3,     2,     3,     4,     2,     1,     3,     9,    11,    12,
      14,     3,     4,     4,     0,     7,    10,     2,     3,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     123,   197,     0,  1027,  1026,   197,  1003,   197,   391,   326,
       0,     0,   197,     0,   123,     0,     0,     0,   197,   458,
       0,     0,   197,     0,  1070,     0,     0,     0,     0,     0,
       2,     4,     7,    15,    24,    21,     0,    13,    18,     6,
      26,    14,    17,    27,    10,    25,   425,   412,   460,   424,
     122,   428,    23,    12,    20,     5,     9,    19,  1009,    30,
      22,    28,    16,     8,    29,    31,    32,    11,   196,   195,
     189,     0,     0,     0,     0,     0,   190,   192,   390,   123,
       0,     0,     0,     0,     0,   320,   319,   995,   325,     0,
       0,   951,  1111,  1112,  1113,  1114,  1115,  1116,  1117,  1118,
      94,  1119,  1120,  1121,  1122,  1123,  1124,  1125,  1126,  1127,
    1128,  1129,  1393,  1394,  1395,  1396,  1130,  1131,  1132,  1133,
    1134,  1135,  1136,  1397,  1398,  1137,  1138,  1139,  1140,  1141,
    1399,  1142,  1143,  1144,  1145,  1146,  1147,  1148,  1149,  1150,
    1151,  1152,  1153,  1154,  1155,  1156,  1157,  1158,  1159,  1160,
    1161,  1162,  1163,  1164,  1400,  1401,  1165,  1166,  1167,  1168,
    1169,  1170,  1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,
    1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,  1187,  1188,
    1189,  1190,  1191,  1402,  1192,  1193,  1194,  1403,  1195,  1196,
    1197,  1404,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,
    1405,  1406,  1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,
    1214,  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1407,
    1223,  1224,  1225,  1226,  1408,  1409,  1410,  1227,  1228,  1229,
    1230,  1231,  1232,  1233,  1234,  1411,  1235,  1236,  1237,  1238,
    1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,  1247,  1248,
    1249,  1250,  1251,  1252,  1253,  1254,  1412,  1413,  1255,  1256,
    1257,  1414,  1258,  1259,  1260,  1415,  1261,  1416,  1262,  1263,
    1264,  1265,  1266,  1267,  1268,  1269,  1270,  1417,  1271,  1418,
    1272,  1273,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1281,
    1282,  1419,  1283,  1420,  1284,  1285,  1286,  1287,  1288,  1289,
    1290,  1291,  1292,  1293,  1294,  1295,  1421,  1296,  1297,  1298,
    1299,  1300,  1301,  1302,  1303,  1304,  1305,  1306,  1307,  1308,
    1309,  1310,  1311,  1312,  1313,  1314,  1315,  1316,  1422,  1317,
    1318,  1319,  1320,  1321,  1322,  1323,  1324,  1325,  1326,  1327,
    1328,  1329,  1330,  1331,  1423,  1332,  1333,  1334,  1335,  1336,
    1424,  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,  1349,  1425,  1350,  1351,  1352,  1353,  1354,
    1355,  1356,  1357,  1426,  1427,  1358,  1359,  1428,  1360,  1429,
    1361,  1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  1370,
    1371,  1372,  1373,  1374,  1375,  1376,  1377,  1430,  1431,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,
    1389,  1432,  1433,  1434,  1435,  1436,  1437,  1438,  1439,  1440,
    1441,  1442,  1390,  1391,  1392,    92,   931,   952,   953,     0,
     341,   342,     0,   350,     0,   339,     0,   360,   352,   361,
     353,   336,   354,   343,   335,     0,   362,   337,     0,     0,
       0,   193,  1284,   158,   326,   123,     0,  1014,  1015,  1013,
    1004,  1009,  1016,  1017,   950,  1058,  1057,   971,  1087,  1426,
    1358,  1095,  1088,  1085,  1086,   194,   457,   455,     0,   918,
    1238,  1320,  1330,  1426,  1035,  1038,     0,  1094,  1426,  1358,
    1091,   191,     0,   429,   560,   927,  1069,     0,  1074,     0,
    1298,   433,   436,   962,   434,   425,     0,     0,     1,   123,
       0,     0,     0,   454,   454,     0,   454,     0,   417,   425,
     420,   424,     0,  1008,  1083,  1211,     0,     0,  1211,     0,
    1211,     0,  1211,     0,   973,   974,   972,     0,   975,   293,
     324,   323,   322,   321,   326,  1211,   979,     0,     0,     0,
       0,   990,    95,    93,   348,   349,     0,   340,   338,     0,
    1211,   359,   957,   355,  1211,   359,   929,  1211,     0,     0,
     154,     0,  1006,  1018,  1443,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,
    1459,  1460,  1461,  1462,  1463,  1464,  1430,  1465,  1033,     0,
    1034,  1024,  1012,  1019,  1020,  1021,   123,     0,     0,  1089,
       0,     0,     0,   951,   936,   938,   939,   846,   949,   913,
    1394,  1395,  1396,   902,     0,  1397,  1398,  1399,  1445,   783,
     770,   779,   784,   771,   773,   780,  1400,  1401,   724,  1179,
    1402,  1403,   947,  1404,  1405,  1408,  1409,  1410,  1411,   775,
     777,  1412,  1413,     0,   948,  1415,  1416,  1267,  1418,  1419,
    1421,  1422,   781,  1424,  1425,  1426,  1427,  1428,  1429,   946,
     782,  1431,     0,     0,     0,   924,     0,   913,   755,     0,
     599,   600,   622,   623,   601,   628,   629,   631,   602,     0,
     923,   664,   800,   754,   766,     0,     0,   753,   748,   440,
     919,     0,   749,   935,   937,   903,   933,   952,   956,   440,
     917,  1036,  1041,  1037,     0,     0,     0,     0,  1092,     0,
       0,   562,   561,   910,     0,   911,   928,  1068,  1066,  1067,
    1065,  1064,  1071,     0,  1073,  1009,   858,     0,   435,     0,
       0,     0,   415,   414,     3,     0,     0,  1076,     0,   452,
     453,     0,     0,     0,     0,     0,     0,     0,     0,   508,
     474,   475,   477,   505,   509,   517,     0,   421,     0,   962,
       0,     0,   110,   110,     0,     0,     0,     0,     0,    87,
      36,    80,     0,     0,     0,     0,   172,   185,     0,     0,
       0,     0,     0,   182,     0,     0,   165,    38,   159,   161,
       0,   110,     0,    34,     0,     0,     0,    40,     0,     0,
     387,     0,     0,   976,     0,  1211,   153,  1211,   293,     0,
     293,   989,   992,   351,   347,   345,   344,   346,     0,   357,
     358,     0,   330,     0,   958,     0,     0,   332,     0,     0,
       0,     0,   123,     0,   166,  1029,  1030,  1028,     0,     0,
    1011,   169,   186,  1023,  1032,  1022,  1031,  1010,  1005,   954,
     610,   639,   617,   639,   639,   606,   606,   619,   607,   608,
     644,     0,   639,   606,   611,     0,   609,   647,   647,   634,
     865,   591,   592,   593,   594,   620,   621,   595,   626,   627,
     596,   661,     0,   606,   955,   123,  1090,  1096,     0,   751,
     638,   625,   901,     0,     0,   633,   632,     0,     0,     0,
       0,     0,   615,   614,   613,   757,   868,     0,   612,     0,
       0,     0,     0,   639,   639,   637,   687,     0,   616,     0,
       0,   881,     0,   887,     0,     0,     0,   643,     0,   641,
       0,     0,   688,   668,   669,   755,   858,     0,   750,   756,
     942,     0,     0,   661,   922,   846,     0,   843,   844,   845,
       0,     0,     0,   916,     0,   854,     0,     0,   702,   852,
     704,     0,     0,     0,     0,   840,   841,   842,   834,   835,
     836,   837,   838,   839,   850,   833,   684,     0,     0,   802,
       0,   683,     0,     0,   524,     0,   940,   904,   524,  1049,
    1053,  1054,  1052,     0,  1048,  1040,  1039,  1044,  1047,  1046,
    1055,  1042,  1045,  1043,  1093,     0,   909,     0,   964,  1466,
    1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,  1476,
    1477,  1478,  1479,  1480,  1481,  1482,  1483,  1484,  1485,  1486,
    1487,  1488,  1489,  1490,  1491,  1492,  1493,  1494,  1495,  1496,
    1497,  1498,  1499,  1500,  1501,  1502,  1503,  1504,  1505,  1506,
    1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,  1516,
    1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,   906,   905,   932,   965,
     966,   967,   968,   912,  1062,     0,  1059,   521,     0,   437,
       0,     0,  1082,     0,   117,     0,  1077,     0,   432,   431,
     461,   462,   468,   430,   494,   495,     0,     0,     0,     0,
     514,   512,   485,   478,   484,     0,     0,   482,     0,   486,
     664,   507,   419,   472,   473,   476,   418,     0,   510,     0,
     520,   508,   477,     0,  1084,     0,     0,     0,     0,     0,
    1211,     0,     0,    71,    52,   245,     0,   109,     0,     0,
       0,     0,     0,     0,     0,    79,    76,    77,    78,     0,
       0,     0,     0,   170,   171,   184,     0,   175,   176,   173,
     177,   178,     0,     0,   163,   164,     0,     0,     0,     0,
     162,     0,     0,     0,     0,     0,     0,     0,     0,   377,
     301,     0,   291,     0,     0,     0,     0,     0,   326,   982,
     980,   978,   981,   983,     0,     0,   150,   152,     0,   290,
     264,     0,   994,  1211,   991,   281,     0,   359,   356,   959,
       0,   359,   930,     0,   359,   157,  1211,   293,     0,  1007,
    1025,   167,   187,   168,   188,   591,   587,   583,   650,   651,
     652,   649,   662,   648,     0,   597,   653,   970,     0,   603,
     606,   969,     0,   914,     0,     0,   900,   896,     0,     0,
       0,     0,     0,     0,   869,   872,   873,   874,   871,   875,
     870,     0,     0,   876,     0,     0,     0,     0,     0,   636,
     635,     0,   832,   843,   844,   845,   840,   841,   842,   834,
     835,   836,   837,   838,   839,   856,     0,     0,     0,     0,
       0,     0,     0,     0,   725,     0,     0,   827,     0,   858,
     886,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   858,   892,     0,   913,     0,     0,     0,     0,   943,
     665,   679,   680,   681,   685,   921,     0,   915,     0,     0,
     666,   693,     0,   893,   720,     0,   708,     0,   701,     0,
     706,   710,   689,     0,   686,     0,   916,   855,     0,   853,
       0,   676,   677,   678,   670,   671,   672,   673,   674,   675,
     682,   831,   829,   830,     0,     0,     0,   810,     0,     0,
     705,  1204,  1238,     0,   451,   451,   451,   439,   449,   920,
       0,   577,     0,     0,     0,     0,   758,   862,   460,   860,
     933,     0,   577,     0,   661,     0,   563,   907,   910,   962,
    1072,  1060,  1061,   859,   961,   123,     0,  1080,     0,     0,
       0,   129,   112,     0,  1078,     0,   145,   524,     0,   913,
       0,   466,   467,     0,   471,  1422,  1317,     0,     0,     0,
       0,   487,   515,     0,   506,     0,   936,   488,   935,   489,
     492,   493,   483,   516,   925,   518,     0,   511,   423,   422,
     522,     0,    37,     0,  1211,    54,     0,     0,     0,     0,
       0,     0,   200,   236,   200,    91,  1211,   359,  1211,   359,
    1115,  1180,  1331,     0,    50,    83,     0,   269,   103,     0,
     254,   298,    73,    88,    96,     0,     0,    39,   160,   174,
     179,    99,   183,   180,   999,   181,   110,     0,    35,     0,
      97,     0,   997,     0,     0,    41,   101,  1001,   376,     0,
     292,     0,   386,   366,   367,   377,     0,   293,   979,     0,
       0,     0,     0,     0,   284,   282,   312,     0,   289,   283,
     291,     0,     0,   240,     0,  1109,     0,     0,     0,     0,
     329,   960,   331,     0,   333,     0,     0,   588,   584,     0,
       0,     0,     0,     0,     0,     0,     0,   866,   604,   456,
       0,     0,     0,   897,     0,     0,   796,     0,   772,   774,
     605,   786,     0,   618,   797,   798,   776,   778,     0,   847,
       0,     0,     0,   787,   727,   728,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   743,   742,   788,   826,     0,     0,   884,
     885,   789,   646,   645,   647,   647,     0,     0,   891,     0,
       0,     0,   794,   752,   859,   630,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   709,   703,     0,   707,   711,
       0,     0,     0,   697,     0,     0,   695,   721,   691,     0,
       0,   722,     0,     0,     0,   765,   451,   451,   451,   451,
     448,   450,     0,     0,     0,     0,  1317,     0,   546,   523,
     525,   533,   546,   551,   767,   575,   768,     0,   927,     0,
     497,   460,   460,   460,   764,     0,     0,   459,     0,     0,
     497,     0,  1050,  1056,   909,     0,  1063,     0,  1081,     0,
     134,   116,   136,   135,     0,   143,     0,   913,     0,   134,
     118,     0,   137,     0,  1080,     0,   149,   463,     0,   848,
     471,     0,   465,   491,   490,     0,   481,   513,   479,     0,
     519,     0,     0,     0,   244,     0,     0,     0,   200,     0,
       0,   308,     0,   295,    72,     0,     0,     0,    46,     0,
      64,    56,    42,    70,     0,     0,    75,     0,    68,    85,
      86,    84,    89,     0,   228,   210,   241,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   165,   407,   302,     0,     0,   994,   977,     0,
       0,   153,   293,     0,   268,   264,     0,   262,   261,   263,
       0,  1110,   158,     0,  1105,   993,     0,     0,   988,   359,
       0,     0,     0,   589,     0,   655,   656,   657,   658,   659,
     660,     0,   654,   598,   624,     0,   899,   895,     0,   769,
     867,     0,   857,   879,   878,   726,   738,   739,   740,   880,
       0,     0,     0,   735,   736,   737,   729,   730,   731,   732,
     733,   734,   741,   889,   888,   882,   883,   642,   640,     0,
     791,   792,   793,   890,   828,   661,   944,   667,     0,     0,
     694,   894,   712,     0,     0,     0,   690,   847,     0,     0,
       0,     0,     0,   699,     0,     0,     0,   813,   808,   809,
       0,     0,     0,     0,   442,   441,   447,   546,   551,     0,
       0,   425,     0,   533,     0,   545,   531,   544,     0,     0,
     557,   555,     0,   557,     0,   557,     0,   527,     0,   547,
     529,   544,     0,   567,     0,   928,   576,     0,   504,     0,
       0,     0,     0,     0,   861,   759,   863,   864,   504,     0,
     908,   438,  1079,     0,  1075,     0,     0,     0,   124,   121,
     111,     0,     0,   146,   134,   125,     0,   464,   469,   470,
     480,   926,   104,   200,     0,     0,    53,     0,   310,   256,
     288,   271,     0,     0,     0,   201,     0,   276,     0,    45,
      65,     0,    61,     0,    90,     0,     0,     0,     0,     0,
      48,    60,     0,    43,     0,   359,   359,    51,   255,   207,
    1267,     0,   834,   835,   205,   297,   202,   303,   204,   206,
     606,   203,   300,   100,  1000,     0,    98,     0,   998,   107,
     105,   102,  1002,   389,   369,     0,     0,  1211,     0,   994,
     151,   290,     0,   318,   240,   313,     0,  1109,  1107,     0,
    1104,     0,     0,     0,   334,     0,     0,   585,   590,   663,
     898,   785,   795,   877,     0,     0,     0,     0,   790,   945,
     718,   716,   713,     0,   714,   698,     0,     0,   696,   692,
       0,   723,   799,     0,   815,   812,   446,   445,   444,   443,
     532,   530,   934,     0,   535,   542,     0,   526,     0,   556,
     552,     0,   553,     0,     0,   554,     0,     0,   528,     0,
     542,     0,   574,   460,     0,     0,   804,   762,   763,   760,
     460,   941,   804,  1051,   133,   113,     0,   114,   144,     0,
       0,     0,     0,   138,   363,     0,   306,    55,     0,   288,
       0,   200,   273,   272,   275,   270,   274,   277,     0,     0,
       0,     0,     0,   257,     0,     0,     0,   221,     0,     0,
     288,   294,   217,   218,   327,     0,     0,     0,    57,    47,
      44,    49,    58,     0,     0,    59,    62,   582,    74,    67,
     606,   606,     0,     0,     0,     0,   365,   378,   372,   165,
       0,     0,     0,     0,   290,     0,     0,     0,  1109,     0,
       0,   198,     0,   237,     0,   155,  1108,     0,  1097,     0,
     986,   987,     0,     0,   586,   744,     0,     0,     0,   715,
     719,   717,   700,   801,     0,   460,   570,     0,   573,   534,
       0,     0,   536,     0,     0,   538,   540,     0,     0,     0,
       0,   578,     0,     0,     0,   931,     0,     0,   496,   498,
     501,   500,   503,     0,   427,     0,   426,     0,     0,     0,
     147,     0,   140,   140,     0,   126,   849,     0,   200,     0,
     287,   307,   235,     0,     0,   219,     0,   225,     0,   259,
     260,   258,   220,   288,   293,   222,   328,     0,    66,     0,
      82,   606,     0,   299,   108,   106,   410,     0,   384,   392,
     397,   375,     0,   375,     0,   394,   398,   375,   393,   375,
     388,   389,     0,   994,  1104,     0,     0,   264,   158,  1106,
     253,   246,   247,   248,   249,   250,   251,   252,   267,   266,
     238,   239,     0,     0,     0,   988,     0,   745,     0,   746,
       0,   818,   575,     0,     0,   569,     0,   543,   559,     0,
     539,   537,     0,   548,     0,   582,     0,   550,   759,   502,
       0,   803,   805,     0,   761,     0,   120,     0,   577,     0,
       0,   142,   142,   128,     0,   293,   309,     0,   279,   286,
     278,     0,     0,   216,     0,   223,   317,   209,   581,     0,
      69,     0,   304,   379,     0,   382,     0,   381,   385,   380,
     374,     0,   405,     0,     0,     0,     0,     0,     0,   364,
     368,     0,  1098,     0,  1104,   240,  1109,     0,  1101,     0,
       0,   994,   747,   814,     0,     0,     0,   568,   571,     0,
     541,     0,     0,   579,   580,   549,   499,     0,     0,   115,
     140,   119,   148,   139,   468,   141,   468,     0,   317,   265,
       0,     0,   243,   209,     0,   234,     0,    63,    81,   305,
     411,     0,   370,   406,   395,   400,     0,   404,   402,   401,
     396,   399,     0,   290,  1099,   199,   156,  1102,  1103,     0,
     577,  1393,  1158,  1365,     0,   816,   819,   817,   811,     0,
     558,   566,   806,   807,   142,   471,   471,   577,   234,   280,
     285,     0,   224,   226,   314,   315,   316,     0,   230,   227,
     231,     0,   383,     0,   403,  1104,     0,   984,     0,   823,
     822,   821,   825,   824,   572,     0,   564,   468,   131,   130,
     127,   200,   242,     0,     0,     0,   232,     0,   233,   208,
     371,  1100,   994,     0,     0,   471,   311,   213,     0,   212,
       0,   296,   229,   577,   820,     0,   132,   211,   215,   214,
     985,   565
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    29,    30,    31,    32,  1780,  1781,  1782,  1503,   779,
    2410,  1504,   780,   781,  1784,    33,    34,  1169,   457,  1441,
    1113,  2151,    36,  1735,  1446,  1739,  2280,  1974,  1734,  1741,
    2391,  2464,  1736,  1447,  2281,  1448,    37,  1226,    38,   570,
      39,  1227,  1196,  1008,   799,  1186,   851,    40,    70,    41,
    1771,  2035,  2477,  1794,  2571,  2181,  2182,  1505,  2528,  2529,
    1773,  1831,  1178,  2522,  1554,  2348,  1509,  1492,  2183,  1563,
    2290,  2063,  1506,  2005,  1555,  2168,  2397,  1234,  1556,  2398,
    2161,  1557,  1210,  1230,  2007,  2530,  1510,  1211,  2036,  1165,
    1558,  2475,  1559,    89,  2186,    42,   448,   449,   561,   832,
     450,   458,    44,  1545,  2209,  2481,  2210,  2421,  1539,  2206,
    2418,  2316,  1214,  2207,    80,  2330,  2482,  1812,  2317,   459,
     678,    47,    48,    49,   507,   501,   502,   994,  1407,  1692,
     751,   478,   479,   517,  1717,  1120,  1121,  1454,  1752,  1145,
    1146,   760,   761,  1133,  1137,  1138,  1467,  1460,  1126,  1958,
    2268,  2269,  2270,  2136,  1141,  1142,   763,   764,   765,  1150,
    1477,    51,  1411,  1699,  1700,  1701,  1935,  1936,  1950,  1946,
    2120,  2255,  1702,  2128,  2546,  1703,  2246,  2247,  2365,  1953,
    1710,  2260,  2261,  2310,   880,  1257,   881,   679,   882,  1269,
     680,   918,   884,   681,   682,   683,   887,   684,   685,   686,
     687,   901,   688,   689,   937,  1265,  1266,   736,  1323,   691,
     692,   693,  1705,   694,   989,  1397,  2274,  2381,  2382,  1685,
    1918,  2104,  2245,  2446,  2505,  2506,   695,  1394,   984,   985,
     696,  2038,   987,  1316,  1342,  1418,  1419,   892,  1291,  1292,
    1319,  1612,  1326,  1331,  1639,  1640,  1343,  1364,   697,  1276,
    1277,  1594,   903,   698,   725,  1017,   949,   899,  1359,   709,
     699,   700,  1473,   494,  2251,   566,  1097,   701,   702,   703,
     704,   705,   706,  2465,   834,   741,  1421,  1507,    52,   608,
     537,    53,   813,  1221,    54,  2231,  2073,   822,  1236,  1567,
      90,    55,    56,    57,   524,   854,   460,   855,   856,   599,
      58,  1009,   601,   602,    59,   484,   485,  1010,  1005,  1011,
      60,   466,    61,   732,   498,   733,   735,   462,   748,  1730,
    1437,    63,    64,   472,   473,    65,   486,    66,  2228,   463,
    1834,   819,   427,   428,   708,  1102
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2237
static const int yypact[] =
{
    4264,   -91,   676, -2237, -2237,   -91, -2237,   -91,   133,  1808,
   29530,  3772,   -91, 33553,  1615,   386, 33553, 29977,   -91,   513,
   34000, 30424,   -91, 30871,   109,   -21, 34447, 33553,   924,   667,
     234, -2237, -2237, -2237, -2237, -2237,   206, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237,   116, -2237,    72,   187,
     362,   245, -2237, -2237, -2237, -2237, -2237, -2237,   317, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, 34894, 33553, 35341, 31318, 35788, -2237, -2237, -2237,   924,
   33553,   578,   714,   433, 36235, -2237, -2237, -2237, -2237,   342,
     574, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, 31765, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,   532,
   -2237, -2237,   387, -2237,    81, -2237,   402, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237,   502, -2237, -2237, 36682, 37129,
   37576, -2237, -2237,   383,    19,   608, 17528, -2237, -2237, -2237,
   -2237,   317, -2237, -2237, -2237, -2237, -2237,   408, -2237,   419,
     673, -2237, -2237, -2237,   423, -2237, -2237,   640,  7352,  7352,
   38023,   386, 38023,   462, -2237, -2237,     3, -2237,   467,   717,
     423, -2237, 18428, -2237,   477,   412, -2237,   226,   779,  9697,
   33553,   475, -2237,   500,   475,   543,   569,   362, -2237,  4264,
     828,   847, 30871,   627,   627,  1002,   627,   670,   701, -2237,
     777, -2237,   597, -2237, 33553,   930,   560,   760,   970,  5065,
     982,  1071,   995,  1703, -2237, -2237, -2237,   677, -2237,   694,
   -2237, -2237, -2237, -2237,    19,   901, -2237,   744, 38470, 38917,
   33553,  1099, -2237, -2237, -2237, -2237,   752, -2237, -2237,   537,
    1046,    96,   729, -2237,  1066,   107, -2237,  1075,   961,  9697,
   -2237,   852, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237,   -21, -2237, -2237,  -155,
   -2237, -2237, 23963, -2237, -2237, -2237,   608, 42940,  1208, -2237,
    1029, 33553,   804,   118, -2237, -2237, -2237, -2237, -2237, -2237,
    1281,   129,  1289,  9697,   837,   129,   129,   854,  1164, -2237,
   -2237, -2237,   124,   860,   880, -2237,    92,    92, -2237,  1063,
     911,   926, -2237,   130,   942,  1356,  1395,   131,   967,   974,
     987,   585,   129,  9697, -2237,  1005,    92,  1012,  1013,  1014,
    1476,  1016, -2237,  1481,  1022,   115,   140,  1030,  1032, -2237,
   -2237,   145,  9697,  9697,  9697, -2237,  6414, -2237,   412,   386,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237,  1035, -2237,   149,
    4519, -2237,  1078, -2237, -2237,  1228,  9697, -2237, -2237,   -24,
   -2237,   152, -2237, -2237, -2237,   412, -2237,   128, -2237,  1305,
    1041, -2237, -2237, -2237,   168,  1419, 23069, 23516, -2237,  1295,
   33553, -2237, -2237,  9697, 22175, -2237,   412, -2237, -2237, -2237,
   -2237, -2237, -2237,   222, -2237,   317, 24977,   329,   475, 33553,
   33553,  1482, -2237, -2237, -2237, 30871, 33553, 39364,  1167, -2237,
   -2237,   362,   362,  9697,   362,   104,    24,  7821, 10166,  1361,
    1256,   111,   523,  1364, -2237,  1261,   670,   701,  9697,   500,
   33553, 28189,   686,   725,  1057,  1139,  1061,   -12,  1445, -2237,
    1059, -2237,  1144, 33553, 43373,   166, -2237,  1479,   166,   166,
     137,  1480,  1148,   193,  1294,   -47,   -43,  1059,  2184, -2237,
   30871,   105,   389,  1059, 33553,  1150,   429,  1059,  1151, 33553,
    1110,   -59,  1398,  1454, 33553,  1299,  2184,  1304,  1079,  1511,
     694, -2237, 39811, -2237, -2237, -2237, -2237, -2237, 33553, -2237,
   -2237, 33553, -2237, 25507,  1089, 33553, 33553, -2237, 33553, 33553,
     364, 40258,   608, 27295, -2237, -2237, -2237, -2237,   710,   746,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237,  1141, -2237,  1141,  1141,  1095,  1095,  1096, -2237, -2237,
   -2237,   585,  1141,  1095, -2237, 43373, -2237,   304,   413, -2237,
   -2237,  1529, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237,   614,   519,   262, -2237,   924, -2237, -2237,  9697,   412,
   -2237,  1100, 24977,  1143,  9697, -2237, -2237,  9697,  1103,  1566,
    1566,  9697, -2237, -2237, -2237, -2237,   223,  1566, -2237,  9697,
    9697,  1566,  1566,  1141,  1141, -2237, 25020,  9697, -2237, 20675,
    9697, 12511,  8290,  9697,  1193,  1194,  1566, -2237,  1566, -2237,
    9697,  6883, 25020,  1569,  1569,  2183,  4603,  1111,   412,   412,
   -2237,  1566,    83,    68, -2237,   174, 42940,  9697,  9697,  9697,
    9697, 25507,  1197,   122, 33553,  9697,  1117,   830, -2237,  9697,
   -2237,  1118,  9697,  1201,   687,  9697,  9697,  9697,  9697,  9697,
    9697,  9697,  9697,  9697, -2237, -2237, 14376,   273,  1418,  1437,
     -86,   220, 32212,  7352,  1432,  5476, -2237,   112,  1432, -2237,
   -2237, -2237, -2237,   153, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237,  1131, -2237,  1131, -2237,  1135, 21727,  1137, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, 33553,   226, 29083, -2237,  9697, -2237,
     531,  1146,  1200,   943,  1572, 33553, -2237, 18877,  1414, -2237,
    1153, -2237, 24407,  1414, -2237, -2237, 13438,  1272,  1415,  1363,
   -2237, -2237, -2237,  1158, 24977, 10635, 10635, -2237,   639, 24977,
     757, -2237, -2237, -2237, -2237, -2237, -2237,     4, -2237, 33553,
      66,  1361,   523,   535, -2237,  1720,  1168, 40705, 33553,  1425,
    1388,  1430,  -124, -2237, -2237, -2237, 42940, -2237, 33553, 33553,
   41152, 41599, 25954, 33553, 25507, -2237, -2237, -2237, -2237, 33553,
     891, 33553,  5077, -2237, -2237, -2237,   166, -2237, -2237, -2237,
   -2237, -2237, 33553, 33553, -2237, -2237,   166, 33553, 33553,   166,
   -2237,  1737, 33553, 33553, 33553, 33553,  1836, 33553, 33553,  1346,
   -2237,   548, -2237,  1387,    39,  1230, 33553, 33553,  1285, -2237,
   -2237, -2237, -2237, -2237,  1191,  1513, -2237,  2184,  1514, 28636,
     638,   -18,  1231,  1410, -2237, -2237,  1397,    96, -2237, -2237,
   25507,   107, -2237,  1400,   135, -2237,  1423,   694,  1634, -2237,
   -2237, -2237, -2237, -2237, -2237,  1641,  1212,  1214,  1293,  1310,
    1313, -2237,  1216,  1314,  1566, -2237, -2237, -2237, 42940, -2237,
     660, -2237,   556, -2237,  9697,  9697,    51, -2237, 24473,   568,
    9697,  1219,  1239,   609, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237,  1240,  1548, -2237,  1244,   633,   634,  1245,  1247, -2237,
   -2237,  3749, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237,  1248,  1249, 24517,  1253,
   12511, 12511,  6414,  1138, -2237, 12511,  1254, -2237,   643, 24420,
    1252,  1262,  1274,  1286,  1263,  1267, 24762,  8759,  9697,  8759,
    8759, 24775,  1252,  1270, -2237,  9697,  1271,  1273,  1276, -2237,
   -2237,  2459,  2459,  2459, 25020, -2237,  1290, -2237, 12511, 12511,
   -2237,  2391,  6414, -2237, -2237,  1579, -2237,   934, -2237,  1279,
   -2237, -2237,  3637, 20675,  5008,  9697,   237,  9697,  1117,  9697,
    1360,  2459,  2459,  2459,   248,   248,   108,   108,   108,   882,
     220, -2237, -2237, -2237,  1283,  1291,  1298,  1475,  1016,  9697,
   -2237,   950,  1001, 33553,  2398,  2618,  3271, -2237, -2237, -2237,
   15732,  1326,  9697,  9697,  9697,  1288, -2237, 24977,   -57, -2237,
    1107,  1119,  1326,  1566,    68, 23963, -2237, -2237,  9697,   500,
   -2237, -2237, -2237, 24977, -2237,   924, 15732,  1335,  1353,   -95,
   17978,  1510, -2237, 33553, -2237, 33553, -2237,     2,  1322, -2237,
    9697, -2237, -2237,  1160,  1327,  1518,  1520,   803,   803,   639,
    1522, -2237, -2237,  1372, -2237,  9697,   883, -2237,   906, -2237,
   -2237, -2237, -2237,  1311, -2237, -2237,  1560, -2237, -2237, -2237,
   -2237,  1404,  1059,  9697,  1541, -2237,   358,  1328,  1648,   -48,
    1607, 33553, -2237,  1527, -2237,   913,  1653,   135,  1654,   135,
   25507, 25507, 25507,   681, -2237, -2237,   386, -2237, -2237,   695,
   -2237,  -152, -2237, -2237, -2237,  1424,   526,  1059,  2184, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237,   144,   561,  1059,  1426,
   -2237,  1427, -2237,  1428,   563,  1059, -2237, -2237, -2237,   189,
   -2237, 33553, -2237, -2237, -2237,  1346, 33553,   694, -2237,   594,
   33553, 33553, 33553, 33553, -2237, -2237, -2237,  1354,  1352, -2237,
   42940,   -60,  1559,  1562, 33553,  1396,  1061,  1791,  1684, 33553,
   -2237, -2237, -2237, 33553, -2237,  1686,   924,  1368,  1214,  1566,
      79,    55,    44,  1494,  1566,  1596,  1370, -2237, -2237, -2237,
     697, 24933,  9697, -2237,  1704, 42940, -2237,  4830, -2237, -2237,
   -2237, -2237,  9697, -2237, -2237, -2237, -2237, -2237,  9697, -2237,
   20675,  9697,  1682, -2237,  1837,  1837,  4603, 42940, 12511, 12511,
   12511, 12511,   113,  1012, 12511, 12511, 12511, 12511, 12511, 12511,
   12511, 12511, 12511, 13907,   428, -2237, -2237,  9697,  9697,  1690,
    1682, -2237, -2237, -2237,   280,   280, 42940,  1384,  1252,  1386,
    1390,  9697, -2237,   412, 21130, -2237,  1381,   386,  9697,  1639,
    2520,  9697,   722,  9697,  1692, -2237, -2237,  1389, -2237, -2237,
   42940,  9697,  1393,  3925, 12511, 12511,  4113, -2237,  4293,  9697,
    6414, -2237,  1591,  1442, 19326, -2237,  1493,  1493,  1493,  1493,
   -2237, -2237, 33553, 33553, 33553, 16181,  1708, 15282, 32659,  1401,
    1280, -2237, 32659, 33106, -2237,  1420, -2237,  1407,   412,  9697,
    1713,   -56,   -56,  1591, -2237,  9228,  1421, -2237,  9697,  9697,
    1713,  1433, -2237, -2237, 24977,  1422, -2237,  1434,  1401,  9697,
    1561, -2237, -2237, -2237,  1470, -2237,   740, -2237,  1811,  1561,
   -2237,   789, -2237, 18877,  1335,  9697,   412, -2237,  1431, -2237,
    1327,   164, -2237, -2237, -2237,  1626, -2237, -2237, -2237, 33553,
   -2237, 33553, 21148,  1749, -2237, 33553, 33553, 33553, -2237, 33553,
     794,   610,  1436, -2237,   610,  1738,   159,  1061,   193,  4703,
     348, -2237, -2237, -2237,  1512, 33553, -2237, 33553, -2237, -2237,
   -2237, -2237, -2237, 25954, -2237, -2237, -2237, 25507, 20227, 25507,
   33553, 33553, 33553, 33553, 33553, 33553, 33553, 33553, 33553, 33553,
   -2237, -2237,   -43, -2237, -2237,   189,  1444,  1231,  1454, 42046,
     798,  2184,  1446,  1876, -2237,   638, 28636, -2237, -2237, -2237,
    1838, -2237,   383,   106, -2237, -2237,   924, 33553,  1504,   135,
   33553,  1566,  1460, -2237,  1462, -2237, -2237, -2237, -2237, -2237,
   -2237,  1452, -2237, -2237, -2237,  9697, 24977, -2237,  1464, -2237,
   24977, 21167, -2237, 24977,  1690, -2237,  1556,  1556,  1556,  3816,
    1775,    88,  1472,  1556,  1556,  1556,   314,   314,   100,   100,
     100,  1837,   428, 24977, 24977, -2237, -2237, -2237, -2237,  1474,
   -2237, -2237, -2237,  1252, -2237,    68, -2237,   267,  9697,  9697,
    3133, -2237, 25062,  9697, 42940,   817,  3133,   284,  9697,  3290,
    3672,  9697,  9697,  4687, 21201,  1485,  9697, 42493, -2237, -2237,
   33553, 33553, 33553, 33553, -2237, -2237, -2237, 32659, 33106,   412,
    1487, 14832,  1280,  1489, 33553, -2237, -2237,  1492, 15732,  1739,
    1671, -2237, 15732,  1671,  1149,  1671,  1750,  1582, 19775, -2237,
   -2237,  1495,  1689, -2237,  5476,   679, 24977,  1910,  1790,  9697,
    1498,  1501,  1505,  9697, -2237,   386, 24977, 24977,  1790,   386,
   -2237, -2237, 24977,  7352, -2237,   924,  1038, 33553,   412,   -61,
   -2237,  1519, 33553, -2237,  1561, 24977, 20675, -2237, -2237, -2237,
   -2237, -2237, -2237, -2237, 33553,   821, -2237,   823,   610, -2237,
    1547, -2237,   169,  1787,    49, -2237, 25507,  1778,   713, -2237,
    1800,  1724, -2237,   166, -2237,  9697,   713,  1725,   184, 33553,
   -2237, -2237,  2162, -2237, 42940,   135,   135, -2237, -2237, -2237,
    1431, 43373,   710,   746, -2237, -2237, -2237, -2237, -2237, -2237,
     262, -2237,  1534, -2237, -2237,  1595, -2237,  1597, -2237, -2237,
   -2237, -2237, -2237,  1526,   217, 33553,  1958,  1747,  1533,  1231,
   -2237, 28636,   921,   282,  1562, -2237,   132,  1396, -2237,  1902,
    1583,  1742, 33553,  1553, -2237,  1988,  1563, -2237, -2237, -2237,
   24977, -2237, -2237, -2237, 12511,  1862,  1564, 42940, -2237, -2237,
    3133,  3133, 25062,   832, -2237,  3133,  9697,  9697,  3133,  3133,
    9697, -2237, -2237, 21219,  1741, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237,   412, 26401, 32659,  1570, 33553,  1280, 15732, -2237,
   -2237,  1340, -2237, 15732,  1818, -2237, 15732, 27742, -2237, 33553,
    1571, 33553, -2237,   -57, 11104,  9697,  1604, -2237, -2237, -2237,
    1591, -2237,  1604, -2237,  1041, -2237,   -95, -2237, -2237,  1956,
   16630,  1914,  9697, -2237, -2237,  1574,   610, -2237,  1731,  1547,
    1580, -2237, -2237, -2237, -2237, -2237, -2237, -2237,   841,  1584,
   33553, 33553, 12511, -2237,   713,   179,   219, -2237,  1835, 33553,
    1547, -2237, -2237, -2237, -2237,  1937,  2014,  1909, -2237, -2237,
   24977, -2237, -2237,  1566,  1566, -2237, -2237,  1986, -2237, -2237,
     262,   515, 20227, 33553, 33553, 25507, -2237,  2504, -2237,   -43,
    1940,   843,   924,  1915, 28636,  2026,  1598, 33553,  1396,   933,
     933, -2237,  1730, -2237,  1735, -2237, -2237,   266, -2237, 33553,
   -2237, -2237, 16630,   924, -2237,  4310, 12511, 42940,   855, -2237,
    3133,  3133,  3133, -2237,  2011,  1591, -2237,   869,  2035, -2237,
   33553,   878, -2237,  9697,  1605, -2237, -2237, 15732,  1340,  1608,
     885, -2237, 42940, 33553,   887, 42940,  1609,  5945,  1610, -2237,
   -2237, 24977, 24977, 33553, -2237,  1611, -2237,  1662, 33553,  9697,
   -2237,   893,  2012,    73,    -5, 24977, -2237, 33553, -2237, 25507,
   -2237,   610, -2237, 25507,  9697, -2237,  1091,  3816,  2049, -2237,
   -2237, -2237, -2237,  1547,   694, -2237, -2237,  1904, -2237, 33553,
    1675,   545,  1691, -2237, -2237, -2237, -2237,   895, 17079, -2237,
   -2237,  2052,   386,  2052,    53, -2237, -2237,  2052, -2237,  2052,
   -2237,  1526,   386,  1231,  1583, 33553,   924,   638,   383, -2237,
   -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237, -2237,
   -2237, -2237,  2030,  1833,  2038,  1504,   899,  4310,   912, -2237,
    9697,   379,  1420, 26401,  1638, -2237,   927, -2237, 24977, 33553,
   -2237, -2237,  9697, -2237, 33553,  1986,   929, -2237, -2237, -2237,
   11104,  1635, -2237,  2073, -2237,   924, -2237, 21259,  1326, 16630,
   33553, 33553, 33553, -2237,  1760,   694,   610,   931, -2237,  1656,
   -2237, 21525,  1856, -2237,  1935, -2237,  1885,  1655, -2237,  9697,
   -2237,  1723, -2237, -2237, 25507, -2237, 26848, -2237, -2237, -2237,
   -2237,   386, -2237,   386,  1867, 33553, 22622,   386,   386, -2237,
   -2237,  2090, -2237,  1660,  1583,  1562,  1396,  1860, -2237,  1865,
    1665,  1231, -2237,  1252, 11573, 11573,  1668, -2237, -2237, 33553,
   -2237,   957,   962, -2237, -2237, -2237, -2237, 33553,  1670, -2237,
    2012, -2237, -2237, -2237,   214, -2237,   214, 18877,  1885, -2237,
   25507, 20227,  1888,  1655,   505,  1872,  2184, -2237, 24977, -2237,
   -2237,   968, -2237, -2237, -2237, -2237, 33553,  1669, -2237,  1669,
   -2237, -2237,   924, 28636, -2237, -2237, -2237, -2237, -2237, 16630,
    1326, 12980,  1809,    87, 24460, -2237, -2237, -2237, -2237,   980,
   -2237,  1821, -2237, -2237, 33553,  1327,  1327,  -144,  1872, -2237,
   -2237,  1952, -2237, -2237, -2237, -2237, -2237,   232,  1880, -2237,
    1882,  1177, -2237, 26848,  1669,  1583,   992, -2237,  2117, -2237,
   -2237, -2237, -2237, -2237, -2237,  1693, -2237,   214, -2237, -2237,
   -2237, -2237, -2237,   120,   120,  2040, -2237,  1752, -2237, -2237,
   -2237, -2237,  1231, 12042,  9697,  1327,   610, -2237,  2136, -2237,
     114, -2237, -2237,  1326, -2237, 21683, -2237, -2237, -2237, -2237,
   -2237, -2237
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2237, -2237, -2237,  1652, -2237, -2237, -2237,   384, -2237,   983,
   -2237,   369,  -424,   671, -2237, -2237, -2237,  -705,    20, -2237,
   -2237, -2237, -2237,   188,   426, -2237,  -215, -1544,    30, -2237,
   -2093, -2107, -2237,  -292, -2064, -1379,  -790,   357, -2237, -1749,
   -2237,  -525,  -787,  -565,  -785, -2237,   165, -2237,   956,  -772,
   -1432, -2035,  -291, -2237,  -370, -2237,  -110, -1420,  -341,  -327,
   -2237, -1917,  -709, -2237,  1429,   -28, -2237,   704, -2237, -1772,
   -2237, -2237,   693, -2237,  -736, -2237, -2237, -1517,   372,  -275,
   -1926, -1936,   658,  -533, -2237,  -322,   404, -1422, -2237,   721,
   -2237,  -260, -2237,  -404, -1808, -2237, -2237, -2237,  1382,  -550,
   -2237,    25, -2237, -2237, -2237, -2237, -2237, -1427,   664,  -114,
   -2237,  -193, -2237, -2237, -2237, -2237,  -310,   409, -2237,    10,
      29,   -27,    36,    52,    33,    64,  1486,  1517, -2237,  -270,
     800, -2237, -2237,  -461,   -41, -2237,   778, -1803, -1699,  -336,
    1077,  1466,  1471, -2237,   767,  1113, -1021,  -969, -2237,   516,
   -2237,  -143, -2237,   274,  -328,  1093, -2237,  1483, -2237, -2237,
   -2237, -2237,  -900,   811, -1591,   551, -1600, -1480,   322,   308,
    -482,    -4,    48, -2237, -2237,   558,  -107, -2237, -2237,  -105,
   -1392, -1847,  -113,  -115,  -895,  1008,  -748, -2237, -2237,  -598,
    -573, -2237, -2237, -2237,  -529,  -483, -2237, -2237,  -268,   550,
   -2237,   382,  1338,  -575,  -612,  -898,  -308,  2587, -1122,  1385,
   -1175, -2237, -1407,  -210, -2237, -2237,   125, -2237,  -191, -2237,
    -190, -2237, -2237, -2237,  -176, -2236,  1282, -2237,  -884, -2237,
    3037,   818, -2237, -1313,  -455, -1318, -1350, -1593, -2237, -2237,
   -2237, -2237, -2237, -2237,  -916, -1409,  -398,   892, -2237, -2237,
     997, -2237, -2237, -2237,  -707,   848,  -487,  -631,   904, -2237,
    -476,  1292, -2237,    80,  -433,    74,  -667, -1280, -2237,  2047,
     -15,     1,   900,  -443,  -867,  -713, -2237,  -712, -2237, -2237,
    -830, -2237,   727, -2237,  -771, -2237,   -74, -2237, -2237, -1765,
   -2237, -2237, -2237, -2237,  -302, -2237,  -342,  -313, -2237, -2237,
      26,  -600,  1439, -2237, -2237,   990, -2237,   858, -2237,  1567,
   -2237, -2237, -2237,  1185, -2237, -2237, -2237,    31,  1550,   549,
   -2237,  1186, -2237, -2237, -2237, -2237,   910,  -765, -2138,    70,
   -1949,  -792,  1756,  -363,  -116, -1735
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1449
static const yytype_int16 yytable[] =
{
     465,   506,   857,   710,   798,   563,   810,   518,   726,  1199,
      45,   426,  1098,  1200,   426,   837,   565,   426,   471,  1103,
      35,   471,   471,  1219,   495,    43,  1270,   426,   426,    46,
    1720,    62,   891,    50,   883,  1164,  1183,   850,   912,   913,
     461,  1220,  1222,    46,   737,  1315,   948,    50,  1223,  1248,
     571,  1987,  2056,  2064,   939,  1349,  1154,   505,   928,   766,
    1672,  1350,  1774,  2041,  1713,  1271,  1742,  1175,  1171,  1770,
      67,   493,   495,   426,   495,   495,   495,  1905,   885,   519,
    1789,   495,  1791,  2067,   425,   546,   520,   453,   618,   536,
     467,   504,   618,   604,  1711,  1712,  1204,  -606,  1422,   534,
     503,   503,   521,  1949,   535,   797,  1932,   803,    46,   807,
     538,  1617,    50,   572,   840,  1469,  -413,  -934,  2225,   956,
    -647,  1098,   531,  -954,   886,  2216,  1564,  1255,  1820, -1448,
    1707,  -954,  -954,  -955,  -639,  -619,  -644, -1448, -1448,  1003,
     811,  -955,  -955,   598,  2390,  -647,   527,  2221,   962,  1002,
    -634,   526,   829,   529,   464,   533,  1707,   464,   464,   606,
     539,  1357,  2165,   829,  1410,   715,  1239,  2313,  2356,  1472,
     844,   999,   844,   464,  1258,   618,  2567,   618,  1167,   964,
     992,   759,    78,  1592,  1176,   556,    81,  -416,  1202,   762,
    2392,   829,  1273,   618,   464,  1980,  2432,  -165,  1614,  1615,
    -832,  1543,  -165,  1634,  1827,  2149,  -413,  -832,  2191,   891,
    2068,   883,   513,  2085,  1127,   515,   515,  1167,   997,  1176,
    1184,   947,  1947,  1187,  1188,  2578,  1284,  1802,   464,   727,
    1885,   956,  1845,  2288,  1127,  1704,  1659,  1660,  1870,   604,
    1189,  1273,  1103,  2540,    82,  1259,  1398,  2393,  2222,  1355,
    1451,  1215,  1999,  1128,  2305,   885,     3,     4,  1124,   956,
     962,  1704,  2223,   755,   858,  2538,   939,   912,   913,  2339,
    2009,  1493,   496,  1128,   514,   928,  1357,  -416,   956,  1000,
    1732,  1848,  1709,  2162,  2264,  2466,  1490,  1232,   962,  1198,
    1103,   964,  1846,  2299,  2215,   426,  2494,  1862,    68,  1391,
     891,   886,   883,  1798,  2424,  1260,  1392,  1110,  1261,  2425,
    -851,  2093,   842,  1153,  1733,   843,  1799,  -851,  1988,   964,
    2071,  1475,   510,  2352,    19,  1617,  1743,  2574,  1949,  1285,
    1129,  2353,  2301,   757,  1452,  -373,  1998,  2010,   964,   888,
     605,    69,  1491,  1995,   515,  1997,   885,  2117,  2553,  2086,
    2163,  2121,  1125,   604,   604,  2069,  1130,  2426,    23,  1177,
    2300,  1100,  1490,  1216,  1871,  1964,  2298,  2514,   553,  2568,
    2579,   870,  1190,  1587,  1872,  1191,  1130,  2405,  1989,  2541,
    1399,   891,  -413,   883,  1262,   563,  1194,   728,  1238,   729,
     716,   464,   886,  1001,  1177,  1262,  1244,  2561,    25,    85,
    1286,    86,  1241,  2394,   511,  2150,  1174,  2547,  1262,  1195,
    2011,    26,  1131,  1715,  1959,  1707,  2376,  1707,  1767,  1174,
     830,  1485,  1476,  1156,  2219,    88,  1544,   885,  2224,   506,
    1151,   830,  1131,  1106,    27,  2536,  2520,  1469,  1152,  1617,
    2154,  -413,  1200,  1272,  2569,   499,   993,  2110,    28,   562,
     426,   426,  1279,  -416,  1174,  2083,  1283,   557,   717,   830,
    1287,  2166,  1511,  1288,  1295,  1296,   712,  2041,  2220,  2570,
    1100,   611,  1743,   886,   516,  2302,  1275,  1328,  1330,   767,
     604,   471,   600,   471,    46,   505,   605,  2496,    50,  1315,
    1755,  2354,  1203,   495,  2238,  1358,  1866,  1867,  1868,  1869,
    1249,   426,  1873,  1874,  1875,  1876,  1877,  1878,  1879,  1880,
    1881,  1882,  -416,   495,  2249,  1263,   888,  1159,  2495,    45,
    1704,  1360,  1704,   731,   568,   495,  1722,  2252,  1098,    35,
     598,  1803,  2256,  -832,    43,  2258,   519,   723,    46,   476,
      62,   724,    50,   520,  1843,  -413,   934,  1744,   900,   495,
     495,   495,  1909,  1910,  1347,  1810,  1811,  2216,   911,   521,
     747,  2156,  1632,  1289,   738,  2435,   831,   935,  2431,  1749,
     983,   934,   721,  1571,   503,   497,   723,   836,  -934,    67,
     724,   936,   771,  -413,  -954,  -413,  2167,   853,   772,  2436,
   -1448,   891,   935,   883,  -955,  -639,   917,  -644,  1100,    79,
     605,   605,  2509,  2153,   769,  1727,   938,   888,  1101,  1964,
    1674,  -634,   897,  2140,   512,   952,  -416,   824,   995,  1423,
    1176,  1519,  1194,   848,   849,   848,   849,  2208,   816,   818,
     820,  1522,  1393,  2211,  1525,    46,  2133,   885,   477,    50,
    2554,  2193,  2194,  -851,  2358,  1195,   730,   923,   924,   506,
    -165,  -165,   547,   749,  -416,  1161,  -416,  1518,  1707,   825,
    1176,  2515,  1707,  2516,   950,  1493,  2370,   508,  2524,   915,
    1290,  1778,  1588,  2155,   953,   755,  2500,   978,   979,   980,
     981,   982,   983,   886,  2444,   548,   996,  1570,   888,  1104,
     773,  1572,  1105,   891,  1574,   883,  1864,  2022,   454,  1004,
    1858,   853,   853,   509,    19,   945,  2248,   980,   981,   982,
     983,   934,  2445,  1653,  1251,   522,  1726,  1101,   549,   618,
    1258,   495,  1865,  2001,  1886,  1205,  1315,   605,   911,  2291,
     833,  1482,   935,  1200,  1376,   934,  2041,   523,    23,   885,
     426,   426,  2184,  2282,  2565,   757,   495,   495,  1116,  1520,
    1253,  1889,   750,   544,  1523,   618,   935,  1176,  1517,  1167,
    1823,  1162,   551,  1704,   550,  1208,  2185,  1704,   554,  1168,
     936,   495,  1166,  1629,  1630,  1631,  1632,  1528,    25,   555,
     519,   519,  1535,   519,   495,   886,   758,  1118,  1119,  2525,
    1123,  1259,  1176,   747,  1176,  1177,  1107,  2573,  1167,  1108,
    1015,   495,  2002,   521,   521,   495,   521,  1753,  1170,  1100,
    1212,  1100,   618,   503,  1549,   495,  2548,  2549,  1746,  1590,
     826,  1804,   755,  1235,   558,  2282,  1114,   756,    28,   562,
     774,  1245,   562,  1707,  1108,  1177,   426,   426,  1707,   426,
     562,   559,   495,  1707,   934,  1101,  1707,  2259,  1201,   569,
    1155,  1260,  1828,  -459,  1261,  1174,  2396,  1835,  -459,  2003,
    2526,  2004,  1801,  1182,    71,   935,  2576,  1377,   609,   600,
    1707,    46,  1378,  2400,   607,    50,   723,  1100,   775,   938,
     724,   610,   776,  1648,  1206,  1627,  1628,  1629,  1630,  1631,
    1632,   611,   757,   956,  1224,  1174,  2423,  1805,   888,  1809,
    2427,  1293,  2428,  2037,   547,   536,   612,  1662,  1379,   777,
    1242,   714,  1243,   771,  1749,   534,   718,   513,   827,   772,
     535,  1247,   962,  -459,    46,   719,   538,   474,    50,  -460,
    1317,   490,  1177,   758,  -460,  1775,   722,   548,  1704,  1647,
     734,  1649,  1650,  1704,   947,   739,  1273,  1786,  1704,  1788,
      19,  1704,  1707,   964,  1262,  1365,  2248,  1716,   540,  2340,
     541,    76,  2235,    77,  -459,   562,   740,  1177,   451,  1177,
    1819,  1470,  1471,   778,   475,  1704,  2312,  1707,   491,   514,
    1366,   911,  2282,  1240,    23,   891,  1267,   883,  1424,  1268,
     745,  2013,  1174,   495,  2020,  1363,  2461,  2089,  1434,  -460,
     888,   836,  1480,  2487,  2489,  1108,  2411,   905,   906,  2341,
     742,   911,    72,  1240,  1817,  1540,   550,  2342,  1541,    73,
     891,   773,   883,  1589,    25,  2053,  1108,  1174,  1219,  1174,
    1996,   885,  1887,  1888,   925,  1596,   743,    26,  1108,  1273,
    -460,  1380,   891,  1776,   883,  2343,  1220,  1222,  2075,   515,
    2297,   746,    74,  1223,  1438,   753,  1101,  1704,  1101,  1664,
      27,  1263,   604,   768,  2534,  2217,   885,  1561,  2012,  1562,
    2021,   891,  1408,   883,    28,   770,  1600,   886,   782,  1108,
    1264,  1367,  1704,  1707,  1665,  1511,  1368,  2042,   885,  -487,
    -487,  1369,  2282,   771,   542,   891,   543,   883,    75,   772,
    1604,  1605,  1315,  1108,  1108,   495,  1978,   495,  2537,  1707,
    1636,  2344,   886,  1108,  2357,   783,  1444,   885,  1449,  2566,
    -963,  -963,  2345,  1442,  1101,  2550,   911,   800,  1240,  2197,
    1839,   731,  1718,  1719,   886,  1693,  1694,  1100,  1100,  1100,
     804,   885,    46,   723,   808,  -934,   617,   724,  1792,  1617,
     495,  1793,   812,  1618,  1619,  1620,  2169,   889,  1166,   426,
     809,   774,  1796,   886,  1854,  1797,   814,  1108,  1302,   426,
    1495,   426,  1499,  2201,   426,  1303,  1304,  1305,   821,   516,
     426,  2580,   426,   774,  1429,   823,  1431,   886,  1704,  1901,
    1666,   828,  1108,   562,   426,  1667,  1893,   833,   562,   426,
    1706,   773,  2172,   426,   426,   426,   426,  1976,   426,   426,
    1977,   835,   784,   776,  1704,  -491,  -491,   495,  1548,  1707,
     838,  1955,  1439,   891,  1370,   883,  1706,   839,   841,  1474,
    1560,   785,  1486,  2034,  1371,  1777,  1778,  2020,  -490,  -490,
     777,  1565,  1494,   895,  1497,   905,   906,  1508,  1103,   896,
    1960,  1961,  1962,  1512,   925,  1514,  1981,  2174,  2157,  1982,
      46,  2000,  1779,    19,  1541,  2059,    19,  1521,  1541,   885,
     898,  1273,  1524,  1847,  1849,  1850,  1529,  1530,  1531,  1532,
     786,  1536,  1537,  1255,  2094,    19,  -610,  1268,  2158,  2074,
    2159,  1541,   888,  1541,  -617,   506,  1547,    23,  2346,  2239,
      23,  2347,  1268,   904,   778,  1299,  1300,  2037,  2292,   605,
    2333,  2293,  1940,  1541,   752,   886,   754,  2146,  1749,    23,
     907,   908,  2359,  1621,  1704,  1268,   909,   888,  1668,   891,
    1686,   883,  1687,  2311,   889,   506,  2362,    25,  1669,  2363,
      25,   774,  2402,  1941,  1622,  2367,   910,  2177,   836,   888,
      26,   945,  2373,    26,  2377,  2374,   914,  2374,  2123,    25,
    2388,  -607,  2413,  2389,   787,  2414,  2441,  2375,  1943,  2389,
    2375,  1939,    26,    27,  1317,   885,    27,    28,   888,  2442,
      19,  1688,  1268,  1689,  1101,  1101,  1101,    28,  2178,   801,
      28,   945,   916,   776,  2450,    27,  2455,   836,  2469,  2374,
    -608,  2470,   888,  2179,   495,  1103,  1623,  1363,   919,  1440,
     853,  1708,   788,   506,    23,   789,  1920,  1921,  1922,  1923,
     802,   886,  2331,  1681,  2510,   889,   790,   836,  1748,  2511,
    1100,  1939,  1108,   920,  1100,  2532,  1100,  1708,  2533,  1698,
     921,  1737,  2112,  1940,  1740,   536,  1449,  2544,  2189,   891,
    2374,   883,    81,   922,    25,   534,   891,   791,   883,  2562,
     535,  2122,  2389,  2125,    46,  1698,   538,    26,    50,   505,
     711,   927,   713,  -996,  1941,  2198,  2199,  1945,   929,   930,
     931,  -611,   932,  1690,   778,  1706,  -609,  1706,   933,  1942,
      27,  1795,  1212,  2318,  2180,   885,   940,  2144,   941,  1943,
     793,   951,   885,  1940,    28,   990,   889,   893,   988,   992,
      82,   993,   891,  1006,   883,  1014,  1117,  1111,   756,   758,
     794,  1147,  1149,  1172,  1813,  1944,  1173,  1174,  1179,  1180,
     888,  1181,  1185,  1192,  1941,  1193,  1197,  1207,  1209,  1213,
     796,   886,  1212,  1217,  1218,  1229,  1231,   495,   886,  1942,
    1225,  1212,   495,   495,   495,  1228,    83,  1240,   885,  1943,
     900,   911,   917,  1256,   617,   426,  1274,  1617,  1275,  1280,
     495, -1449, -1449, -1449,   562,   618,  2037,  2399,  1332,  1333,
     956,  1345,  1356,  1362,  1373,  1944,  1565,  1749,  1375,  1395,
    1396,  1624,  1625,  1626,  1410,  1627,  1628,  1629,  1630,  1631,
    1632,  1425,  1426,  1588,   886,    46,  2253,  1443,  1945,  1428,
    1436,  1317,  1435,  1306,  1307,  1308,   514,  1309,  1310,  1311,
    1312,  1313,  1314,  1450,  1462,  1463,  1816,   891,  1465,   883,
    1464,  1821,  1822,  1824,  1483,  1487,   888,  2034,  1832,  1488,
    1489,  1915,  1896,  1100,  2559,     3,     4,   617,  1538,  1838,
    1617,  1542,  1546,   506,  1618,  1619,  1620,  1550,  1551,  1552,
    1566,  1568,   891,  1569,   883,    85,  1573,    86,  1945,  1576,
     506,  1898,  2266,   885,  1575,  1577,  1579,  1101,  1580,  2275,
    1581,  1101,  1584,  1101,   893,  1919,  1598,   891,    87,   883,
     891,    88,   883,   495,   495,   495,  1929,  1582,  1708,  1937,
    1583,  1585,  2318,  1937,  1951,   454,  1599,  1601,   885,   945,
    1602,  1603,  1606,  1588,  1607,  1609,   889,  1610,  2419,   886,
    1613,  1635,  1108,  1642,  1927,   771,  1931,  2295,  1706,  1641,
    1644,   772,  1706,   885,  1645,  1643,   885,  1652,  1655,  1658,
    1656,  1663,   771,  1657,  1449,  1670,  1200,  1679,   772,  1680,
    2254,  1684,  1709,  2417,   886,  1714,   888,  1682,  2399,   771,
     495,  1729,   426,   888,  1683,   772,  1212,  1166,  1212,  1731,
    1235,  2406,  1924,  1925,  1926,   893,  1738,  1745,  1751,   886,
    1757,  1759,   886,  2039,  2361,  -492,   426,  -493,  2026,  1756,
    1760,  1761,  1763,  1766,  1765,  1769,  2112,  1772,  1785,  1787,
    1813,   426,   426,   426,   426,   426,   426,   426,   426,   426,
     426,  1800,   947,  1806,  1807,  1808,  2483,  2366,   889,   888,
     495,  1825,  1826,  1829,  1623,  1833,  1836,  1166,  1830,  1837,
    2366,  1840,  1841,   773,  1262,  1992,  1852,  1853,  1235,  1991,
    1857,   495,  1100,  2169,  1638,  1622,  2070,  1637,  1617,  2170,
     773,  1890,  1895,  1891,  1903,  1904,   893,  1892,   771,  2025,
    1907,  2171,  2468,   515,   772,    46,  2408,   773,  1916,  1691,
    1930,  1938,  1952,  1954,  2043,  2044,  2045,  2046,  2047,  2048,
    2049,  2050,  2051,  2052,  1957,  1975,  1973,  1970,  1965,  2172,
    1101,  2173,  1979,  1990,  1994,  1420,   891,  1986,   883,  2058,
    1969,  1971,  2006,  1706,  2008,  2443,  2034,  1623,  1706,  2024,
    2055,  2062,  2061,  1706,  2072,  2066,  1706,  2452,  2105,  2079,
    1247,   495,   495,   495,   495,  2077,  1100,  2078,  1937,  1951,
    1100,  2081,  1937,  2483,   888,  2115,  2451,  2084,  2087,  1708,
    1706,  2088,   885,  1708,  2174,   890,  2119,  2463,  2118,  2130,
    2141,  2531,  2102,  2113,  2143,   604,  2114,    19,  2116,  2126,
    2127,  2131,  2132,  2134,  2135,  2137,   773,  1698,  2138,   888,
    2175,  1698,  2139,   774,  2152,    81,  2160,  2164,  1737,  2187,
    2188,  2192,  2203,  1449,  2204,  2145,  2147,  1317,   886,  2202,
     774,    23,  2205,  2212,   888,  1166,  -996,   888,  2213,  2214,
    2106,  2107,  2108,  2109,    46,    46,  2226,   774,  2229, -1449,
   -1449, -1449,  2227,  1627,  1628,  1629,  1630,  1631,  1632,  2232,
    2196,   805,  1706,  2233,  2236,   776,  2244,  2257,  2234,  2176,
    2237,    25,  2273,    82,  2177,   455,  2250,  2263,  1481,  2278,
    2284,  2286,   776,  2287,    26,  2303,  2289,  1706,  2306,  2307,
    2294,  1100,   806,   604,  2308,  1526,  1212,  2309,  2332,   776,
    2335,  2336,  1560,  2350,  2360,  2337,   893,    27,  2351,   777,
    2364,  2369,  2218,  2230,  2372,  2178,  2378,  2385,  2384,    83,
    2380,   456,  2407,  2390,  2404,  2409,  1527,  2420,  2412,  1101,
    2179,    46,  1624,  1625,  1626,  2437,  1627,  1628,  1629,  1630,
    1631,  1632,  2438,  2439,  2449,  2457,   774,  1100,  2458,  2467,
     889,  2471,  2302,  2473,  1929,  1937,   778,   426,  2474,  1708,
    2479,  2476,   890,  2486,  1708,  2492,  2493,  1708,  1929,  2497,
    2262,  2499,  2265,   778,  2498,  2508,  1917,  2521,  2527,  1541,
    2545,  2539,  2552,  1140,    84,   889,  2555,  1698,  2557,  2563,
     778,  2283,  1698,  1706,  1533,  1698,  2553,  2577,   776,  2564,
    2554,   744,  2027,  1513,  2023,  2148,  1783,   889,   893,  1983,
     604,   562,   426,  1101,  2462,  2517,  2277,  1101,  2060,  1706,
     495,  2180,  2523,  2195,  2572,  1534,  2403,  2039,    85,  2558,
      86,  2551,  2349,  1768,  1790,  2519,   889,   784,  2065,  1814,
    1163,  2028,   605,   888,   426,   426,  2556,  1764,  2518,  1815,
    1237,    87,   603,   890,    88,  1166,   785,  2429,   426,   784,
     889,  2480,  2334,  2560,  2054,  1109,   998,  1144,  1747,  1479,
     495,  1143,  1758,  2283,   707,   707,  1968,  2456,   785,  1459,
     506,    46,  2142,  2218,  1478,  2296,  1148,  1728,  1933,   778,
    2111,   426,  2124,  1928,  2371,   707,  2448,  2447,  1708,  2304,
    2454,  2453,    46,  1578,  2265,   786,  2512,  2276,  2513,  2507,
    1677,  1750,  1400,  1593,  2383,  1818,  1725,  2314,  2315,   426,
    1675,  2440,  1250,  1723,  1013,  1409,  1698,   786,   495,  1706,
    1430,  2338,  1432,  1984,   890,  1112,   945,     0,  1101,     0,
     605,     0,     0,   853,     0,     0,     0,  2422,     0,  2355,
     562,     0,  1420,  1420,  1420,     0,  1324,  2430,     0,     0,
       0,     0,     0,  -425,     0,   707,     0,     0,  2016,     0,
       0,     0,     0,     0,     0,  -425,   495,     0,     0,     0,
    -425,     0,     0,     0,     0,     0,  2434,     0,   889,   787,
       0,     0,  2386,     0,  1101,     0,     0,     0,   603,     0,
       0,     0,     0,   894,  1929,    46,     0,  2395,     0,     0,
     426,   787,     0,     0,     0,  2262,     0,     0,     0,   707,
       0,     0,     0,     0,     0,  -425,     0,     0,     0,     0,
    2283,   562,   562,   562,     0,  2459,     0,   788, -1354,   955,
     789,   853,   956,     0,     0,  -425,  2484,     0,  2485,   707,
       0,   790,  2490,  2491,    46,  2433,     0,   605,     0,   788,
       0,     0,   789,     0,     0,     0,  1212,  1212,   707,   707,
     707,   962,   707,   790,     0,     0,     0,     0, -1449,     0,
       0,     0,   791,     0,     0,     0,  -425,     0,     0,     0,
    2262,     0,   707,     0,   889,  -425,  2039,     0,  2383,     0,
     893,     0,   964,     0,   791,     0,     0,   955,  1449,     0,
     956,     0,   603,   603, -1449, -1449, -1449,     0,     0,   707,
    1099,     0,     0,     0,     0,   793,     0,  1212, -1354,     0,
       0,     0,     0,     0,  1166,   893,     0,     0,     0,   962,
    2283,     0,  2535,     0,   890,   794,   963,   793,     0,   707,
       0,  1461,     0,   707,   707,   562,     0,   893,   853,     0,
       0,    46,     0,     0,   707,   796,     0,   794,   617,  1661,
     964,  1617,     0,     0,     0,  1618,  1619,  1620, -1354,     0,
     894,     0,     0,     0,     0,     0,   893,   796,     0,     0,
   -1354,     0,  1899,  2319,     0, -1354,     0,     0,     0,     0,
   -1354,     0,     0,     0,     0,     0,     0,     0,     0, -1354,
     893, -1449, -1354,     0,   889,     0, -1449,     0,     0,     0,
       0,   889,     0,     0,     0,  -425,     0,     0,     0,  1099,
       0,     0,     0,     0,     0,     0,  2320,     0,     0,   603,
   -1354,     0,     0,     0,     0,     0,   890,     0,     0,     0,
       0,     0, -1449,     0,     0,  1420,     0,     0, -1356,     0,
   -1354,  2321,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   894,     0,     0,     0,     0,     0,   889,  2322,   965,
       0,     0,  2323,     0,   966,     0,     0,   723,     0,   852,
     742,   724,     0,     0,   707,     0,     0,     0,     0,   971,
     707, -1354,  2324,   707, -1354,  2325,     0,   707,     0,     0,
   -1354,     0,     0,     0,     0,   707,   707,     0,     0,  2326,
     969,     0,     0,   707,     0,     0,   707,   707,   707,   707,
       0,     0,     0,     0,     0,     0,   707,   707,  2040,     0,
       0,     0,     0,     0,     0,  1324,  1324,     0, -1356,     0,
    1324,     0,   894,   707,   707,   707,   707,  1099,     0,     0,
       0,   707,     0, -1354,     0,   707,  1622,   971,   707,     0,
       0,   707,   707,   707,   707,   707,   707,   707,   707,   707,
       0,     0,   707,  1324,  1324, -1449,     0,     0,     0,   707,
       0,   707,   889,     0,     0,     0,     0,     0, -1356,     0,
    2327,   852,     0,   852,   852,     0,     0,     0,  2328,     0,
   -1356,     0,     0,     0,  1691, -1356,     0,     0,     0,     0,
   -1356,     0,     0,     0,     0,     0,     0,   889,  1623, -1356,
       0,     0, -1356,     0,     0,     0,     0,     0,     0,     0,
   -1354,     0,     0,     0,   893,     0,     0,     0,  2329,     0,
       0,     0,   889,   973,     0,   889,     0,     0,     0,     0,
   -1356,     0,     0,     0, -1354,     0, -1354, -1354,     0,     0,
       0,     0,   852,     0,     0,   852,   852,     0,     0,     0,
   -1356, -1449,     0,     0,     0,     0,     0,     0,   978,   979,
     980,   981,   982,   983,  1420,     0,     0,     0,     0,  1420,
       0,     0, -1354,  1420,   707, -1354, -1354, -1354,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1356,   707,     0, -1356,     0,     0,     0,     0,     0,
   -1356,   707,   707,     0,     0,  1252,  1254,     0,   890,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   974,
       0,     0, -1449, -1449, -1449,     0,   978,   979,   980,   981,
     982,   983,   894,     0,   893,     0,     0,     0,  1099,     0,
    1099,  2200,     0,   890,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1356,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   890,  1281,  1282,     0,     0,
       0,     0,     0,     0,  1294,     0,     0,     0,  1297,  1298,
       0,     0,     0,  1624,  1625,  1626,     0,  1627,  1628,  1629,
    1630,  1631,  1632,  1334,   890,  1335,     0,   893,     0,     0,
       0,     0,     0,     0,  1691,     0,  1099,     0,  1346,  1348,
       0,     0,     0,  1324,  1324,  1324,  1324,     0,   890,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,     0,
   -1356,   889,     0,     0,   894,     0,     0,     0,     0,     0,
     707,   707,     0,     0,     0,     0,   707,     0,     0,     0,
       0,     0,     0,     0, -1356,     0, -1356, -1356,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1324,
    1324,     0,     0,     0,     0,   690,   690,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   707,   707,   707,     0,
       0,   707, -1356,     0,     0, -1356, -1356, -1356,     0,     0,
       0,     0,     0,   707,   707,   707,   707,     0,     0,     0,
       0,   707,  2040,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   707,   707,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   707,     0,   707,     0,   707,   890,   893,     0,     0,
       0,   955,     0,     0,   956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   707,     0,     0,     0,     0,
       0,     0,   893,     0,     0,   893,   707,     0,   707,   707,
     707,     0,     0,   962,     0,     0,     0,     0,     0,     0,
   -1449,   603,  1468,  1468,   707,     0,     0,     0,     0,     0,
       0,     0,   707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   964,     0,   707,     0,     0,     0,
     902,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   707,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   852,     0,     0,     0,     0,     0,   707,
     926,     0,   890,   852,     0,     0,   852,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1099,  1099,  1099,   942,
     943,   944,     0,   946,     0,     0,     0,     0,     0,     0,
       0, -1370,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   991,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   617,     0,
       0,  1617,     0,     0,     0,  1618,  1619,  1620,     0,     0,
    1016,  1586,     0, -1449,     0,     0,   894,     0, -1449,     0,
       0,     0,  2096,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1122,     0,     0,     0,  1134,  1139,     0,     0,   707,     0,
       0,   894,     0,     0, -1449,     0,     0,     0,   707,     0,
       0, -1370,   890,     0,   707,     0,     0,   707,     0,   890,
       0,  2040,     0,   894,   707,   707,   707,   707,     0,     0,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
       0,     0,     0,   707,   707,     0,     0,     0,     0,     0,
       0,   971,   894,     0,     0,     0,     0,   707,     0,     0,
       0, -1370,     0,     0,   707,     0,     0,   707,     0,   707,
       0,     0,     0, -1370,     0,   890,   894,   707, -1370,     0,
     707,   707,     0, -1370,     0,   707,   707,     0,     0,     0,
       0,     0, -1370,     0,     0, -1370,     0,     0,     0,     0,
       0,   707,     0,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   707,     0,     0,     0,  1324,
    1721,   707,   852, -1370,   707,   707,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   707,     0, -1449,     0,     0,
       0,  1278,     0, -1370,     0,     0,  1622,     0,     0,     0,
       0,   707,     0,     0,  1754,  1754,     0,     0,     0,     0,
       0,     0,     0,     0,  1301,     0,     0,  1318,     0,     0,
    1329,     0,     0,     0,     0,     0,     0,  1336,  1341,     0,
       0,     0,     0,     0, -1370,     0,     0, -1370,     0,     0,
     890,     0,     0, -1370,  1351,  1352,  1353,  1354,     0,  1099,
       0,     0,  1361,  1099,   894,  1099,  1372,  1324,  1623,  1374,
       0,     0,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,
    1389,     0,     0,  1390,     0,   890,     0,     0,     0,     0,
     690,     0,  1417, -1449,     0,     0,     0,     0,     0,     0,
     978,   979,   980,   981,   982,   983, -1370,     0,     0,     0,
     890,     0,     0,   890,     0,     0,     0,     0,     0,     0,
       0,   707,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1324,     0,     0,     0,     0,  1842,  1844,     0,     0,
       0,  1851,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   955,     0,  1691,   956,     0,
       0,     0,     0,     0,   707,   707,     0,     0,     0,   707,
     894,     0,     0,     0,   707,     0,     0,   707,   707,     0,
       0,     0,   707, -1370,     0,     0,     0,   962,     0,     0,
     617,     0,     0,  1617, -1449,     0,     0,  1618,  1619,  1620,
       0,     0,     0,     0,   707,  1433,     0, -1370,   707, -1370,
   -1370,     0,     0,     0,  2097,     0,     0,     0,   964,     0,
     707,     0,     0,     0,     0,   707,     0,     0,     0,   707,
       0,     0,   943,   944,     0,     0,     0,   986,     0,   707,
       0,     0,     0,     0,     0, -1370,     0,     0, -1370, -1370,
   -1370,     0,     0,  1624,  1625,  1626,     0,  1627,  1628,  1629,
    1630,  1631,  1632,     0,     0,     0,     0,   955,     0,     0,
     956,     0,  1099,     0,   957,   958,   959,     0,     0,     0,
       0,   707,     0,   986,     0,  1671,     0,     0,     0,     0,
     894,   960,     0,     0,     0,     0,     0,   894,     0,   962,
       0,     0,   429,     0,     0,     0,   963,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   890,
       0,     0,     0,     0,     0,     0,     0, -1449,     0,     0,
     964,     0, -1449,     0,   617,     0,     0,  1617,     0,     0,
       0,  1618,  1619,  1620,     0,     0,     0,     0,     0,     0,
     707,     0,     0,   894,   430,   852,     0,     0,     0,     0,
       0,     0,   707,   707,     0,     0,   707,     0, -1449,   431,
       0,     0,  1591,     0,     0,     0,     0,  1597,     0,   707,
       0,     0,     0,     0,   707,     0,     0,     0,  1622,   707,
       0,     0,   707,   707,     0,     0,     0,     0,  2076,     0,
     707,   707,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   971,   707,     0,   707,  1616,
       0,   432,     0,     0,     0,     0,     0,     0,     0,   433,
       0,     0,     0,     0,  1341,     0,  1341,  1341,   707,   965,
       0,   434,  1654,   955,   966,     0,   956,     0,     0,   986,
    1623,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   967,   968,     0,   894,     0,
     435,  1099,  1673,   986,  1676,   962,  1678,     0,  1325,     0,
     969,     0, -1449,     0,     0,     0,     0,     0,     0,   986,
     986,   986,     0,   986,     0,     0,     0,     0,   707,     0,
       0, -1449,   707,   894,     0,     0,   964,     0,     0,  1417,
    1417,  1417,     0,   970,     0,     0,   436,     0,     0,   707,
       0,     0,     0,   707,     0,  1724,     0,   971,   894,     0,
     972,   894,  1622,   707,     0,     0,     0,     0,   986,     0,
       0,     0,     0,     0,     0,   707,     0,  1122,     0,     0,
       0,     0,     0,     0,     0,  1099,     0,     0,     0,  1099,
     707,     0,  1139,   986,     0,     0,     0,     0,     0,     0,
     852,     0,   437,  1908,     0,   852,     0,     0,     0,     0,
    1762,     0,     0,     0,   603,   438,     0,     0,     0,  1252,
    1254,     0,     0,     0,  1623,     0,     0, -1449,     0,     0,
       0,     0,     0,     0,   978,   979,   980,   981,   982,   983,
       0,     0,     0,   973,     0, -1449,   439,     0,   440,     0,
   -1449,     0,     0,     0,     0,   441,   707,     0,   442,   707,
       0,   955,     0,     0,   956,  1624,  1625,  1626,   707,  1627,
    1628,  1629,  1630,  1631,  1632,     0,   707,   443,     0,     0,
       0,     0,     0,     0,     0,   707, -1449,     0,   444,     0,
       0,     0,     0,   962,     0,   445,     0,     0,     0,   986,
   -1449,     0,     0,     0,   446,   707,     0,     0,     0,     0,
    1099,   986,   603,     0,     0,     0,   986,     0,     0,  1856,
       0,     0,     0,     0,   964,     0,     0,     0,     0,  1860,
       0,     0,     0,   971,   447,  1861,     0,     0,  1863,   974,
     707,   707,   975,   976,   977,     0,   978,   979,   980,   981,
     982,   983,     0,     0,     0,     0,     0,     0,     0,  1608,
       0,     0,     0,     0,  1883,  1884,  1099,   894,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1252,  1254,     0,     0,     0,  1897,     0,     0,  1900,   852,
    1902,  1911,     0,     0,     0,   707,     0,   707,  1906,     0,
       0,     0,     0,     0,   -33,     0,  1913,  1914,     0,  1624,
    1625,  1626,     0,  1627,  1628,  1629,  1630,  1631,  1632, -1449,
       0,     0,     1,     0,     0,     0,     0,     0,     0,   603,
       0,     0,     2, -1449,     3,     4,  1956,     0, -1449,     0,
       0,   955,  1417,     0,   956,  1966,  1967,     0,     0,     0,
       5,     0,     0,     0,     0,   986,  1972,     0,   617,   707,
     707,  1617,     0,     0,     0,  1618,  1619,  1620,     0,     0,
       6,     0,  1985,   962, -1449,     0,     0,     0,   986,     0,
   -1449,     7,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     9,   986,     0,  1325,  1325,     0,
    1633,     0,  1325,     0,   964,   852,   986,     0,     0,     0,
       0,    10,     0,   986,     0, -1449,     0,     0,   986,     0,
       0,   971,   978,   979,   980,   981,   982,   983,   986,   986,
     986,   986,     0,     0,    11,  1325,  1325,     0,   986,     0,
      12,     0,     0,     0,     0,     0,     0,     0,    13,   986,
      14,   986,     0,     0,     0,     0,     0,     0,   986,   986,
     986,   986,   986,   986,   986,   986,   986,   986,     0,     0,
       0,  1912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2080,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   986,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1449,     0,     0,
     986,     0,     0, -1449,     0,     0,     0,     0, -1449,     0,
       0,     0,     0,     0,     0,  2090,  2091,     0,    15,     0,
    2092,     0,     0,     0,     0,  2095,     0,     0,  2098,  2099,
       0,     0,     0,  2103,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1449,     0, -1449,     0,   852,     0,
       0,     0,   954,     0,     0,     0,     0,   955,     0,     0,
     956,     0,     0,     0,   957,   958,   959,     0,     0,     0,
       0,  1417,     0,     0,     0,     0,  1417,     0,     0,     0,
    1417,   960,     0,     0,   961,     0,     0,     0,    16,   962,
     690,   971,     0, -1449,     0,     0,   963,     0,     0,     0,
     978,   979,   980,   981,   982,   983,     0,     0,  1623,     0,
       0,     0,     0,     0,     0,     0,    17,     0,     0,     0,
     964,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,  2190,     0,     0,     0,    19,     0,     0,     0,
       0,   955,     0,    20,   956,     0,     0,    21,   957,   958,
     959,     0,     0,     0,     0,     0,     0,    22,   986,     0,
       0,     0,     0,     0,   986,   960,     0,     0,     0,     0,
      23,     0,     0,   962,     0,     0,     0, -1449,     0,     0,
     963,  1633,  1633,   986,     0,  1325,  1325,  1325,  1325,     0,
       0,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,
    1325,  1633,     0,     0,   964,    24,     0,     0,     0,     0,
      25,     0,     0,  2240,  2241,     0,     0,  2242,     0,     0,
       0,   986,     0,    26,     0,   955,  1633,  1633,   956,   965,
       0,     0,     0,     0,   966,     0,     0,     0,     0,     0,
     986,  1325,  1325,   986,     0,   986,    27,     0,     0,     0,
       0,  2271,  2272,     0,     0,   967,   968,   962,     0,     0,
      28,     0,     0,   -33, -1449,     0,     0,     0,   784,  2285,
     969,     0,     0, -1449,     0,     0,     0,     0,     0,     0,
     978,   979,   980,   981,   982,   983,     0,   785,   964,     0,
       0,   986,     0,  1624,  1625,  1626,     0,  1627,  1628,  1629,
    1630,  1631,  1632,   970,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   965,     0,     0,     0,   971,   966,     0,
     972,     0,     0,     0,     0,     0,     0,     0,     0,   986,
       0,     0,     0,     0,     0,     0,   786,  2014,     0,   967,
     968,     0,     0,     0,  2015,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   969,  2100,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   955,     0,
    2368,   956,     0,     0,     0,   957,   958,   959,     0,     0,
       0,     0,     0,     0,   946,     0,     0,   970,     0,     0,
       0,     0,   960,     0,     0,     0,  2387, -1449,     0,  2016,
     962,   971, -1449,   973,   972,     0,     0,   963,     0,     0,
       0,  2401,     0,     0,     0,     0,     0,     0,     0,     0,
     787,     0,     0,   986,     0,     0,     0,   986,   986,     0,
     986,   964,     0,  1633,  1633,  1633,  1633,     0, -1449,     0,
    1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,  1633,
     986,   986,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   986,     0,     0,   986,   788,   986,
       0,   789,     0,   986,     0,     0,  1633,  1633,     0,     0,
     986,   986,   790,     0,  2017,   971,     0,   973,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2271,     0,   974,
       0,     0,   975,   976,   977,     0,   978,   979,   980,   981,
     982,   983,     0,   791,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   986,     0,     0,  2478,     0,     0,     0,
       0,     0,     0,   986,   986,     0,     0,     0,     0,   986,
     965,     0,     0,     0,     0,   966,   955,     0,     0,   956,
       0,     0,   986,   957,   958,   959,   793,     0,     0,     0,
       0,  2504,  2504,     0,     0,     0,   967,   968,     0,     0,
     960, -1449,     0,     0,     0,     0,   794,     0,   962,     0,
       0,   969,     0,   974,     0,   963,   975,   976,   977,     0,
     978,   979,   980,   981,   982,   983,   796,     0,  2018,     0,
    1344,  2019,     0,     0,     0,     0,     0,     0,     0,   964,
       0,     0,     0,     0,   970,     0,     0,   771,  2504,     0,
       0,     0,     0,   772,     0,     0,     0,     0,   971,   771,
     784,   972,     0,     0,     0,   772,     0,     0,     0,     0,
       0,     0,   784,     0,     0,     0,     0,   986,     0,   785,
       0,  1325,     0,     0,     0,     0,     0,   986,   986,   986,
       0,   785,   986,     0,     0,   986,   986, -1449,     0,     0,
     986,     0,     0,     0,   978,   979,   980,   981,   982,   983,
    2504,  2575,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   786,  1174,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     786,     0,     0,     0,   973,     0,     0,     0,   965,     0,
       0,     0,     0,   966,     0,   773,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   773,     0,  1325,
       0,     0,     0,     0,   967,   968,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   986,     0,   969,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   787,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   970,     0,   787,     0,     0,     0,     0,     0,
       0,     0,  1633,  1325,     0,     0,   971,   986,   986,   986,
     974,     0,     0,   975,   976,   977,     0,   978,   979,   980,
     981,   982,   983,     0,     0,     0,     0,  1859,     0,     0,
     788,     0,     0,   789,     0,     0,     0,     0,   986,   986,
       0,     0,   788,     0,   790,   789,     0,     0,     0,     0,
       0,     0,   986,     0,     0,     0,   790,     0,     0,     0,
       0,     0,     0,     0,  1633,   774,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   791,     0,   774,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   791,     0,     0,
       0,     0,   973,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   792,     0,     0,     0,   776,   793,     0,
       0,     0,     0,     0,  1633,  1515,     0,     0,     0,   776,
     793,     0,     0,     0,     0,   986,     0,     0,   794,     0,
       0,     0,     0,     0,   795,     0,     0,     0,     0,     0,
     794,     0,     0,     0,   986,     0,  1516,     0,   796,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   986,     0,
     796,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   974,     0,
       0,   975,   976,   977,     0,   978,   979,   980,   981,   982,
     983,     0,     0,     0,     0,     0,     0,     0,   778,   613,
     614,   464,   615,   616,   617,   618,   619,     0,     0,     0,
     778,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,  1412,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,   986,   106,   107,   108,   574,
     109,   110,   111,   112,   620,   575,   621,   622,     0,   116,
     117,   118,   119,   120,   623,   624,   121,   122,   625,   626,
     125,   986,   126,   127,   128,   129,   627,     0,   628,     0,
     131,   132,   133,   134,   135,   577,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   578,   145,   146,
     147,   629,   630,   631,   632,   633,   634,   635,   148,   149,
     150,   151,   152,   153,   636,   637,   156,   638,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,  1413,     0,   168,   169,   639,   171,   172,     0,   173,
     174,   175,   986,   176,   177,   178,     0,   179,   180,   181,
     182,   640,   184,   185,   186,   641,   642,   188,     0,   189,
     190,   643,   192,     0,   193,     0,   194,   580,     0,   581,
     195,   196,   197,   198,     0,   199,   644,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   582,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     583,   219,   220,   221,   222,   223,   645,   646,     0,   647,
       0,   227,   584,   585,   228,   586,   229,   230,   231,   232,
     233,     0,     0,   234,   648,   587,   236,   588,     0,   237,
     238,   239,   649,   650,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     651,   589,   652,   258,   259,   260,   261,   653,   262,   263,
     590,   264,   654,   655,   266,   656,   268,   269,   270,     0,
     271,   272,     0,     0,   657,   274,   275,     0,     0,   276,
     277,   591,   278,   592,   658,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   659,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   660,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   593,   325,   326,   327,   661,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   662,   343,   344,   345,   346,   347,
     594,   348,   349,   663,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   664,     0,
     365,   366,     0,   367,   595,   368,   369,   370,   371,   372,
       0,   665,   666,     0,     0,   375,   376,   667,   378,   668,
     669,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,   670,     0,   392,   393,   394,
     395,   396,   397,   671,  1414,   399,   597,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   672,     0,     0,     0,
       0,     0,     0,   673,   674,  1415,     0,     0,     0,     0,
       0,     0,   676,  1416,     0,     0,     0,   677,   613,   614,
     464,   615,   616,   617,   618,   619,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,   574,   109,
     110,   111,   112,   620,   575,   621,   622,     0,   116,   117,
     118,   119,   120,   623,   624,   121,   122,   625,   626,   125,
       0,   126,   127,   128,   129,   627,     0,   628,     0,   131,
     132,   133,   134,   135,   577,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   578,   145,   146,   147,
     629,   630,   631,   632,   633,   634,   635,   148,   149,   150,
     151,   152,   153,   636,   637,   156,   638,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   639,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     640,   184,   185,   186,   641,   642,   188,     0,   189,   190,
     643,   192,     0,   193,     0,   194,   580,     0,   581,   195,
     196,   197,   198,     0,   199,   644,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   582,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   583,
     219,   220,   221,   222,   223,   645,   646,     0,   647,     0,
     227,   584,   585,   228,   586,   229,   230,   231,   232,   233,
       0,     0,   234,   648,   587,   236,   588,     0,   237,   238,
     239,   649,   650,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   651,
     589,   652,   258,   259,   260,   261,   653,   262,   263,   590,
     264,   654,   655,   266,   656,   268,   269,   270,     0,   271,
     272,     0,     0,   657,   274,   275,     0,     0,   276,   277,
     591,   278,   592,   658,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   659,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   660,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   593,   325,   326,   327,   661,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    19,   338,   339,
     340,   341,   342,   662,   343,   344,   345,   346,   347,   594,
     348,   349,   663,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   664,     0,   365,
     366,    23,   367,   595,   368,   369,   370,   371,   372,     0,
     665,   666,     0,     0,   375,   376,   667,   378,   668,   669,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,   670,     0,   392,   393,   394,   395,
     396,   596,   671,     0,   399,   597,   400,   401,   402,   403,
       0,     0,   404,     0,    26,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   672,     0,    27,     0,     0,
       0,     0,   673,   674,     0,     0,     0,     0,     0,     0,
       0,   676,  2379,     0,     0,     0,   677,   613,   614,   464,
     615,   616,   617,   618,   619,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,   574,   109,   110,
     111,   112,   620,   575,   621,   622,     0,   116,   117,   118,
     119,   120,   623,   624,   121,   122,   625,   626,   125,     0,
     126,   127,   128,   129,   627,     0,   628,     0,   131,   132,
     133,   134,   135,   577,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   578,   145,   146,   147,   629,
     630,   631,   632,   633,   634,   635,   148,   149,   150,   151,
     152,   153,   636,   637,   156,   638,   157,     0,   158,   159,
     160,   161,   162,   163,     0,   164,   165,   166,   167,     0,
       0,   168,   169,   639,   171,   172,     0,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,   182,   640,
     184,   185,   186,   641,   642,   188,     0,   189,   190,   643,
     192,     0,   193,     0,   194,   580,     0,   581,   195,   196,
     197,   198,     0,   199,   644,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   582,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   583,   219,
     220,   221,   222,   223,   645,   646,     0,   647,     0,   227,
     584,   585,   228,   586,   229,   230,   231,   232,   233,     0,
       0,   234,   648,   587,   236,   588,     0,   237,   238,   239,
     649,   650,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   651,   589,
     652,   258,   259,   260,   261,   653,   262,   263,   590,   264,
     654,   655,   266,   656,   268,   269,   270,     0,   271,   272,
       0,     0,   657,   274,   275,     0,     0,   276,   277,   591,
     278,   592,   658,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   659,   292,   293,   452,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   660,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   593,   325,   326,   327,   661,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    19,   338,   339,   340,
     341,   342,   662,   343,   344,   345,   346,   347,   594,   348,
     349,   663,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   664,     0,   365,   366,
      23,   367,   595,   368,   369,   370,   371,   372,     0,   665,
     666,     0,     0,   375,   376,   667,   378,   668,   669,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,   388,
     389,   390,   391,   670,     0,   392,   393,   394,   395,   396,
     596,   671,     0,   399,   597,   400,   401,   402,   403,     0,
       0,   404,     0,    26,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   672,     0,    27,     0,     0,     0,
       0,   673,   674,     0,     0,     0,     0,     0,     0,     0,
     676,     0,     0,     0,     0,   677,   613,   614,   464,   615,
     616,   617,   618,   619,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   574,   109,   110,   111,
     112,   620,   575,   621,   622,  1337,   116,   117,   118,   119,
     120,   623,   624,   121,   122,   625,   626,   125,     0,   126,
     127,   128,   129,   627,     0,   628,     0,   131,   132,   133,
     134,   135,   577,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   578,   145,   146,   147,   629,   630,
     631,   632,   633,   634,   635,   148,   149,   150,   151,   152,
     153,   636,   637,   156,   638,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   639,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   640,   184,
     185,   186,   641,   642,   188,     0,   189,   190,   643,   192,
       0,   193,     0,   194,   580,  1338,   581,   195,   196,   197,
     198,     0,   199,   644,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   582,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   583,   219,   220,
     221,   222,   223,   645,   646,     0,   647,     0,   227,   584,
     585,   228,   586,   229,   230,   231,   232,   233,     0,  1339,
     234,   648,   587,   236,   588,     0,   237,   238,   239,   649,
     650,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   651,   589,   652,
     258,   259,   260,   261,   653,   262,   263,   590,   264,   654,
     655,   266,   656,   268,   269,   270,     0,   271,   272,     0,
       0,   657,   274,   275,     0,     0,   276,   277,   591,   278,
     592,   658,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   659,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     660,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   593,   325,   326,   327,   661,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   662,   343,   344,   345,   346,   347,   594,   348,   349,
     663,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   664,     0,   365,   366,     0,
     367,   595,   368,   369,   370,   371,   372,     0,   665,   666,
       0,  1340,   375,   376,   667,   378,   668,   669,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,   670,     0,   392,   393,   394,   395,   396,   397,
     671,     0,   399,   597,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   672,     0,     0,     0,     0,     0,     0,
     673,   674,     0,     0,     0,     0,     0,     0,     0,   676,
       0,     0,     0,     0,   677,   613,   614,   464,   615,   616,
     617,   618,   619,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   574,   109,   110,   111,   112,
     620,   575,   621,   622,     0,   116,   117,   118,   119,   120,
     623,   624,   121,   122,   625,   626,   125,     0,   126,   127,
     128,   129,   627,     0,   628,     0,   131,   132,   133,   134,
     135,   577,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   578,   145,   146,   147,   629,   630,   631,
     632,   633,   634,   635,   148,   149,   150,   151,   152,   153,
     636,   637,   156,   638,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   639,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   640,   184,   185,
     186,   641,   642,   188,     0,   189,   190,   643,   192,     0,
     193,     0,   194,   580,     0,   581,   195,   196,   197,   198,
       0,   199,   644,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   582,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   583,   219,   220,   221,
     222,   223,   645,   646,     0,   647,     0,   227,   584,   585,
     228,   586,   229,   230,   231,   232,   233,     0,     0,   234,
     648,   587,   236,   588,     0,   237,   238,   239,   649,   650,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   651,   589,   652,   258,
     259,   260,   261,   653,   262,   263,   590,   264,   654,   655,
     266,   656,   268,   269,   270,     0,   271,   272,     0,     0,
     657,   274,   275,     0,     0,   276,   277,   591,   278,   592,
     658,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   659,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   660,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     593,   325,   326,   327,   661,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     662,   343,   344,   345,   346,   347,   594,   348,   349,   663,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   664,     0,   365,   366,     0,   367,
     595,   368,   369,   370,   371,   372,     0,   665,   666,     0,
       0,   375,   376,   667,   378,   668,   669,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,   670,     0,   392,   393,   394,   395,   396,   397,   671,
       0,   399,   597,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   672,     0,     0,     0,     0,     0,     0,   673,
     674,   675,     0,     0,     0,     0,     0,     0,   676,     0,
       0,     0,     0,   677,   613,   614,   464,   615,   616,   617,
     618,   619,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,  1132,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   574,   109,   110,   111,   112,   620,
     575,   621,   622,     0,   116,   117,   118,   119,   120,   623,
     624,   121,   122,   625,   626,   125,     0,   126,   127,   128,
     129,   627,     0,   628,     0,   131,   132,   133,   134,   135,
     577,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   578,   145,   146,   147,   629,   630,   631,   632,
     633,   634,   635,   148,   149,   150,   151,   152,   153,   636,
     637,   156,   638,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     639,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   640,   184,   185,   186,
     641,   642,   188,     0,   189,   190,   643,   192,     0,   193,
       0,   194,   580,     0,   581,   195,   196,   197,   198,     0,
     199,   644,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   582,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   583,   219,   220,   221,   222,
     223,   645,   646,     0,   647,     0,   227,   584,   585,   228,
     586,   229,   230,   231,   232,   233,     0,     0,   234,   648,
     587,   236,   588,     0,   237,   238,   239,   649,   650,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   651,   589,   652,   258,   259,
     260,   261,   653,   262,   263,   590,   264,   654,   655,   266,
     656,   268,   269,   270,     0,   271,   272,     0,     0,   657,
     274,   275,     0,     0,   276,   277,   591,   278,   592,   658,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   659,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   660,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   593,
     325,   326,   327,   661,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   662,
     343,   344,   345,   346,   347,   594,   348,   349,   663,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   664,     0,   365,   366,     0,   367,   595,
     368,   369,   370,   371,   372,     0,   665,   666,     0,     0,
     375,   376,   667,   378,   668,   669,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
     670,     0,   392,   393,   394,   395,   396,   397,   671,     0,
     399,   597,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   672,     0,     0,     0,     0,     0,     0,   673,   674,
       0,     0,     0,     0,     0,     0,     0,   676,     0,     0,
       0,     0,   677,   613,   614,   464,   615,   616,   617,   618,
     619,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   574,   109,   110,   111,   112,   620,   575,
     621,   622,     0,   116,   117,   118,   119,   120,   623,   624,
     121,   122,   625,   626,   125,     0,   126,   127,   128,   129,
     627,     0,   628,     0,   131,   132,   133,   134,   135,   577,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   578,   145,   146,   147,   629,   630,   631,   632,   633,
     634,   635,   148,   149,   150,   151,   152,   153,   636,   637,
     156,   638,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   639,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   640,   184,   185,   186,   641,
     642,   188,     0,   189,   190,   643,   192,     0,   193,     0,
     194,   580,     0,   581,   195,   196,   197,   198,     0,   199,
     644,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     582,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   583,   219,   220,   221,   222,   223,
     645,   646,     0,   647,     0,   227,   584,   585,   228,   586,
     229,   230,   231,   232,   233,     0,     0,   234,   648,   587,
     236,   588,     0,   237,   238,   239,   649,   650,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   651,   589,   652,   258,   259,   260,
     261,   653,   262,   263,   590,   264,   654,   655,   266,   656,
     268,   269,   270,     0,   271,   272,     0,     0,   657,   274,
     275,     0,     0,   276,   277,   591,   278,   592,   658,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   659,   292,   293,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   660,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   593,   325,
     326,   327,   661,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   662,   343,
     344,   345,   346,   347,   594,   348,   349,   663,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   664,     0,   365,   366,     0,   367,   595,   368,
     369,   370,   371,   372,     0,   665,   666,     0,     0,   375,
     376,   667,   378,   668,   669,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,   670,
       0,   392,   393,   394,   395,   396,   397,   671,     0,   399,
     597,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     672,     0,     0,     0,     0,     0,     0,   673,   674,     0,
       0,     0,     0,     0,     0,     0,   676,  1327,     0,     0,
       0,   677,   613,   614,   464,   615,   616,   617,   618,   619,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,   574,   109,   110,   111,   112,   620,   575,   621,
     622,     0,   116,   117,   118,   119,   120,   623,   624,   121,
     122,   625,   626,   125,     0,   126,   127,   128,   129,   627,
       0,   628,     0,   131,   132,   133,   134,   135,   577,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     578,   145,   146,   147,   629,   630,   631,   632,   633,   634,
     635,   148,   149,   150,   151,   152,   153,   636,   637,   156,
     638,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   639,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   640,   184,   185,   186,   641,   642,
     188,     0,   189,   190,   643,   192,     0,   193,     0,   194,
     580,  1338,   581,   195,   196,   197,   198,     0,   199,   644,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   582,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   583,   219,   220,   221,   222,   223,   645,
     646,     0,   647,     0,   227,   584,   585,   228,   586,   229,
     230,   231,   232,   233,     0,     0,   234,   648,   587,   236,
     588,     0,   237,   238,   239,   649,   650,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   651,   589,   652,   258,   259,   260,   261,
     653,   262,   263,   590,   264,   654,   655,   266,   656,   268,
     269,   270,     0,   271,   272,     0,     0,   657,   274,   275,
       0,     0,   276,   277,   591,   278,   592,   658,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     659,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   660,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   593,   325,   326,
     327,   661,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,   662,   343,   344,
     345,   346,   347,   594,   348,   349,   663,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   664,     0,   365,   366,     0,   367,   595,   368,   369,
     370,   371,   372,     0,   665,   666,     0,     0,   375,   376,
     667,   378,   668,   669,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,   670,     0,
     392,   393,   394,   395,   396,   397,   671,     0,   399,   597,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   672,
       0,     0,     0,     0,     0,     0,   673,   674,     0,     0,
       0,     0,     0,     0,     0,   676,     0,     0,     0,     0,
     677,   613,   614,   464,   615,   616,   617,   618,   619,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   574,   109,   110,   111,   112,   620,   575,   621,   622,
       0,   116,   117,   118,   119,   120,   623,   624,   121,   122,
     625,   626,   125,     0,   126,   127,   128,   129,   627,     0,
     628,     0,   131,   132,   133,   134,   135,   577,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   578,
     145,   146,   147,   629,   630,   631,   632,   633,   634,   635,
     148,   149,   150,   151,   152,   153,   636,   637,   156,   638,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   639,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   640,   184,   185,   186,   641,   642,   188,
       0,   189,   190,   643,   192,     0,   193,     0,   194,   580,
       0,   581,   195,   196,   197,   198,     0,   199,   644,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   582,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   583,   219,   220,   221,   222,   223,   645,   646,
       0,   647,     0,   227,   584,   585,   228,   586,   229,   230,
     231,   232,   233,     0,     0,   234,   648,   587,   236,   588,
       0,   237,   238,   239,   649,   650,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   651,   589,   652,   258,   259,   260,   261,   653,
     262,   263,   590,   264,   654,   655,   266,   656,   268,   269,
     270,     0,   271,   272,     0,     0,   657,   274,   275,     0,
       0,   276,   277,   591,   278,   592,   658,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   659,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   660,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   593,   325,   326,   327,
     661,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   662,   343,   344,   345,
     346,   347,   594,   348,   349,   663,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     664,     0,   365,   366,     0,   367,   595,   368,   369,   370,
     371,   372,     0,   665,   666,     0,     0,   375,   376,   667,
     378,   668,   669,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,   670,     0,   392,
     393,   394,   395,   396,   397,   671,  1963,   399,   597,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   672,     0,
       0,     0,     0,     0,     0,   673,   674,     0,     0,     0,
       0,     0,     0,     0,   676,     0,     0,     0,     0,   677,
     613,   614,   464,   615,   616,   617,   618,   619,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     574,   109,   110,   111,   112,   620,   575,   621,   622,     0,
     116,   117,   118,   119,   120,   623,   624,   121,   122,   625,
     626,   125,     0,   126,   127,   128,   129,   627,     0,   628,
       0,   131,   132,   133,   134,   135,   577,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   578,   145,
     146,   147,   629,   630,   631,   632,   633,   634,   635,   148,
     149,   150,   151,   152,   153,   636,   637,   156,   638,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   639,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   640,   184,   185,   186,   641,   642,   188,     0,
     189,   190,   643,   192,     0,   193,     0,   194,   580,     0,
     581,   195,   196,   197,   198,     0,   199,   644,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   582,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   583,   219,   220,   221,   222,   223,   645,   646,     0,
     647,     0,   227,   584,   585,   228,   586,   229,   230,   231,
     232,   233,     0,     0,   234,   648,   587,   236,   588,     0,
     237,   238,   239,   649,   650,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   651,   589,   652,   258,   259,   260,   261,   653,   262,
     263,   590,   264,   654,   655,   266,   656,   268,   269,   270,
       0,   271,   272,     0,     0,   657,   274,   275,     0,     0,
     276,   277,   591,   278,   592,   658,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   659,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   660,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   593,   325,   326,   327,   661,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   662,   343,   344,   345,   346,
     347,   594,   348,   349,   663,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   664,
       0,   365,   366,     0,   367,   595,   368,   369,   370,   371,
     372,     0,   665,   666,     0,     0,   375,   376,   667,   378,
     668,   669,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,   670,     0,   392,   393,
     394,   395,   396,   397,   671,     0,   399,   597,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   672,     0,     0,
       0,     0,     0,     0,   673,   674,     0,     0,     0,     0,
       0,     0,     0,   676,     0,     0,     0,     0,   677,   613,
     614,   464,   615,   616,   617,   618,   619,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,   574,
     109,   110,   111,   112,   620,   575,   621,   622,     0,   116,
     117,   118,   119,   120,   623,   624,   121,   122,   625,   626,
     125,     0,   126,   127,   128,   129,   627,     0,   628,     0,
     131,   132,   133,   134,   135,   577,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   578,   145,   146,
     147,   629,   630,   631,   632,   633,   634,   635,   148,   149,
     150,   151,   152,   153,   636,   637,   156,   638,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   639,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   640,   184,   185,   186,   641,   642,   188,     0,   189,
     190,   643,   192,     0,   193,     0,   194,   580,     0,   581,
     195,   196,   197,   198,     0,   199,   644,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   582,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     583,   219,   220,   221,   222,   223,   645,   646,     0,   647,
       0,   227,   584,   585,   228,   586,   229,   230,   231,   232,
     233,     0,     0,   234,   648,   587,   236,   588,     0,   237,
     238,   239,   649,   650,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     651,   589,   652,   258,   259,   260,   261,   653,   262,   263,
     590,   264,   654,   655,   266,   656,   268,   269,   270,     0,
     271,   272,     0,     0,   657,   274,   275,     0,     0,   276,
     277,   591,   278,   592,   658,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   659,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   660,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   593,   325,   326,   327,   661,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   662,   343,   344,   345,   346,   347,
     594,   348,   349,   663,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   664,     0,
     365,   366,     0,   367,   595,   368,   369,   370,   371,   372,
       0,   665,   666,     0,     0,   375,   376,   667,   378,   668,
     669,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,   670,     0,   392,   393,   394,
     395,   396,   397,   671,     0,   399,   597,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   672,     0,     0,     0,
       0,     0,     0,  1135,  1136,     0,     0,     0,     0,     0,
       0,     0,   676,     0,     0,     0,     0,   677,   613,  1466,
     464,   615,   616,   617,   618,   619,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,   574,   109,
     110,   111,   112,   620,   575,   621,   622,     0,   116,   117,
     118,   119,   120,   623,   624,   121,   122,   625,   626,   125,
       0,   126,   127,   128,   129,   627,     0,   628,     0,   131,
     132,   133,   134,   135,   577,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   578,   145,   146,   147,
     629,   630,   631,   632,   633,   634,   635,   148,   149,   150,
     151,   152,   153,   636,   637,   156,   638,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   639,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     640,   184,   185,   186,   641,   642,   188,     0,   189,   190,
     643,   192,     0,   193,     0,   194,   580,     0,   581,   195,
     196,   197,   198,     0,   199,   644,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   582,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   583,
     219,   220,   221,   222,   223,   645,   646,     0,   647,     0,
     227,   584,   585,   228,   586,   229,   230,   231,   232,   233,
       0,     0,   234,   648,   587,   236,   588,     0,   237,   238,
     239,   649,   650,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   651,
     589,   652,   258,   259,   260,   261,   653,   262,   263,   590,
     264,   654,   655,   266,   656,   268,   269,   270,     0,   271,
     272,     0,     0,   657,   274,   275,     0,     0,   276,   277,
     591,   278,   592,   658,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   659,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   660,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   593,   325,   326,   327,   661,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,   662,   343,   344,   345,   346,   347,   594,
     348,   349,   663,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   664,     0,   365,
     366,     0,   367,   595,   368,   369,   370,   371,   372,     0,
     665,   666,     0,     0,   375,   376,   667,   378,   668,   669,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,   670,     0,   392,   393,   394,   395,
     396,   397,   671,     0,   399,   597,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   672,     0,     0,     0,     0,
       0,     0,   673,   674,     0,     0,     0,     0,     0,     0,
       0,   676,     0,     0,     0,     0,   677,   613,   614,   464,
     615,   616,   617,   618,   619,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,   574,   109,   110,
     111,   112,   620,   575,   621,   622,     0,   116,   117,   118,
     119,   120,   623,   624,   121,   122,   625,   626,   125,     0,
     126,   127,   128,   129,   627,     0,   628,     0,   131,   132,
     133,   134,   135,   577,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,   578,   145,   146,   147,   629,
     630,   631,   632,   633,   634,   635,   148,   149,   150,   151,
     152,   153,   636,   637,   156,   638,   157,     0,   158,   159,
     160,   161,   162,   163,     0,   164,   165,   166,   167,     0,
       0,   168,   169,   639,   171,   172,     0,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,   182,   640,
     184,   185,   186,   641,   642,   188,     0,   189,   190,   643,
     192,     0,   193,     0,   194,   580,     0,   581,   195,   196,
     197,   198,     0,   199,   644,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   582,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,   583,   219,
     220,   221,   222,   223,   645,   646,     0,   647,     0,   227,
     584,   585,   228,   586,   229,   230,   231,   232,   233,     0,
       0,   234,   648,   587,   236,   588,     0,   237,   238,   239,
     649,   650,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   651,   589,
     652,   258,   259,   260,   261,   653,   262,   263,   590,   264,
     654,   655,   266,   656,   268,   269,   270,     0,   271,   272,
       0,     0,   657,   274,   275,     0,     0,   276,   277,   591,
     278,   592,   658,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   659,   292,   293,   452,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   660,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,   593,   325,   326,   327,   661,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,   662,   343,   344,   345,   346,   347,   594,   348,
     349,   663,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   664,     0,   365,   366,
       0,   367,   595,   368,   369,   370,   371,   372,     0,   665,
     666,     0,     0,   375,   376,   667,   378,   668,   669,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,   388,
     389,   390,   391,   670,     0,   392,   393,   394,   395,   396,
     397,   671,     0,   399,   597,   400,   401,   402,   403,     0,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   672,     0,     0,     0,     0,     0,
       0,   673,   674,     0,     0,     0,     0,     0,     0,     0,
    2267,     0,     0,     0,     0,   677,   613,   614,   464,   615,
     616,   617,   618,   619,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   574,   109,   110,   111,
    2501,   620,   575,   621,   622,     0,   116,   117,   118,   119,
     120,   623,   624,   121,   122,   625,   626,   125,     0,   126,
     127,   128,   129,   627,     0,   628,     0,   131,   132,   133,
     134,   135,   577,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   578,   145,   146,  2502,   629,   630,
     631,   632,   633,   634,   635,   148,   149,   150,   151,   152,
     153,   636,   637,   156,   638,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   639,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   640,   184,
     185,   186,   641,   642,   188,     0,   189,   190,   643,   192,
       0,   193,     0,   194,   580,     0,   581,   195,   196,   197,
     198,     0,   199,   644,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   582,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   583,   219,   220,
     221,   222,   223,   645,   646,     0,   647,     0,   227,   584,
     585,   228,   586,   229,   230,   231,   232,   233,     0,     0,
     234,   648,   587,   236,   588,     0,   237,   238,   239,   649,
     650,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   651,   589,   652,
     258,   259,   260,   261,   653,   262,   263,   590,   264,   654,
     655,   266,   656,   268,   269,   270,     0,   271,   272,     0,
       0,   657,   274,   275,     0,     0,   276,   277,   591,   278,
     592,   658,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   659,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     660,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   593,   325,   326,   327,   661,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,   662,   343,   344,   345,   346,   347,   594,   348,   349,
     663,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   664,     0,   365,   366,     0,
     367,   595,   368,   369,   370,   371,   372,     0,   665,   666,
       0,     0,   375,   376,   667,   378,   668,   669,   380,   381,
     382,   383,  2503,   385,   386,     0,     0,   387,   388,   389,
     390,   391,   670,     0,   392,   393,   394,   395,   396,   397,
     671,     0,   399,   597,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   672,     0,     0,     0,     0,     0,     0,
     673,   674,     0,     0,     0,     0,     0,     0,     0,   676,
       0,     0,     0,     0,   677,   613,   614,   464,   615,   616,
     617,   618,   619,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   574,   109,   110,   111,   112,
     620,   575,   621,   622,     0,   116,   117,   118,   119,   120,
     623,   624,   121,   122,   625,   626,   125,     0,   126,   127,
     128,   129,   627,     0,   628,     0,   131,   132,   133,   134,
     135,   577,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   578,   145,   146,  2502,   629,   630,   631,
     632,   633,   634,   635,   148,   149,   150,   151,   152,   153,
     636,   637,   156,   638,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   639,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   640,   184,   185,
     186,   641,   642,   188,     0,   189,   190,   643,   192,     0,
     193,     0,   194,   580,     0,   581,   195,   196,   197,   198,
       0,   199,   644,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   582,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   583,   219,   220,   221,
     222,   223,   645,   646,     0,   647,     0,   227,   584,   585,
     228,   586,   229,   230,   231,   232,   233,     0,     0,   234,
     648,   587,   236,   588,     0,   237,   238,   239,   649,   650,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   651,   589,   652,   258,
     259,   260,   261,   653,   262,   263,   590,   264,   654,   655,
     266,   656,   268,   269,   270,     0,   271,   272,     0,     0,
     657,   274,   275,     0,     0,   276,   277,   591,   278,   592,
     658,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   659,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   660,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     593,   325,   326,   327,   661,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     662,   343,   344,   345,   346,   347,   594,   348,   349,   663,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   664,     0,   365,   366,     0,   367,
     595,   368,   369,   370,   371,   372,     0,   665,   666,     0,
       0,   375,   376,   667,   378,   668,   669,   380,   381,   382,
     383,  2503,   385,   386,     0,     0,   387,   388,   389,   390,
     391,   670,     0,   392,   393,   394,   395,   396,   397,   671,
       0,   399,   597,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   672,     0,     0,     0,     0,     0,     0,   673,
     674,     0,     0,     0,     0,     0,     0,     0,   676,     0,
       0,     0,     0,   677,   613,   614,   464,   615,   616,   617,
     618,   619,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   574,   109,   110,   111,   112,   620,
     575,   621,   622,     0,   116,   117,   118,   119,   120,   623,
     624,   121,   122,   625,   626,   125,     0,   126,   127,   128,
     129,   627,     0,   628,     0,   131,   132,   133,   134,   135,
     577,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   578,   145,   146,   147,   629,   630,   631,   632,
     633,   634,   635,   148,   149,   150,   151,   152,   153,   636,
     637,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     639,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   640,   184,   185,   186,
     641,   642,   188,     0,   189,   190,   643,   192,     0,   193,
       0,   194,   580,     0,   581,   195,   196,   197,   198,     0,
     199,   644,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   582,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   583,   219,   220,   221,   222,
     223,   645,   646,     0,   647,     0,   227,   584,   585,   228,
     586,   229,   230,   231,   232,   233,     0,     0,   234,   648,
     587,   236,   588,     0,   237,   238,   239,   649,   650,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   651,   589,   652,   258,   259,
     260,   261,     0,   262,   263,   590,   264,   654,   655,   266,
     656,   268,   269,   270,     0,   271,   272,     0,     0,   657,
     274,   275,     0,     0,   276,   277,   591,   278,   592,   658,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   659,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   660,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   593,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   662,
     343,   344,   345,   346,   347,   594,   348,   349,   663,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   664,     0,   365,   366,     0,   367,   595,
     368,   369,   370,   371,   372,     0,   665,   666,     0,     0,
     375,   376,   667,   378,   668,   669,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
     670,     0,   392,   393,   394,   395,   396,   397,   671,     0,
     399,   597,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,     0,     0,     0,     0,     0,  1320,  1321,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,     0,
       0,     0,   677,   613,   614,   464,   615,   616,   617,   618,
     619,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   574,   109,   110,   111, -1449,   620,   575,
     621,   622,     0,   116,   117,   118,   119,   120,   623,   624,
     121,   122,   625,   626,   125,     0,   126,   127,   128,   129,
     627,     0,   628,     0,   131,   132,   133,   134,   135,   577,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   578,   145,   146,  2502,   629,   630,   631,   632,   633,
     634,   635,   148,   149,   150,   151,   152,   153,   636,   637,
     156,   638,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   639,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   640,   184,   185,   186,   641,
     642,   188,     0,   189,   190,   643,   192,     0,   193,     0,
     194,   580,     0,   581,   195,   196,   197,   198,     0,   199,
     644,     0,   201,   202,     0,   203,   204,   205,   206,   207,
   -1449,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   583,   219,   220,   221,   222,   223,
     645,   646,     0,   647,     0,   227,     0,     0,   228,   586,
     229,   230,   231,   232,   233,     0,     0,   234,   648,   587,
     236, -1449,     0,   237,   238,   239,   649,   650,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   651,   589,   652,   258,   259,   260,
     261,   653,   262,   263,     0,   264,   654,   655,   266,   656,
     268,   269,   270,     0,   271,   272,     0,     0,   657,   274,
     275,     0,     0,   276,   277,   591,   278,   592,   658,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   659,   292,   293,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   660,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   593,   325,
     326,   327,   661,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   662,   343,
     344,   345,   346,   347, -1449,   348,   349,   663,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   664,     0,   365,   366,     0,   367,   595,   368,
     369,   370,   371,   372,     0,   665,   666,     0,     0,   375,
     376,   667,   378,   668,   669,   380,   381,   382,   383,  2503,
     385,   386,     0,     0,   387,   388,   389,   390,   391,   670,
       0,   392,   393,   394,   395,   396,   397,   671,     0,   399,
     597,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
   -1449,     0,     0,     0,     0,     0,     0,   673,   674,     0,
       0,   613,   614,   464,   615,   616,   676,   618,   619,     0,
       0,   677,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   574,   109,   110,   111,   112,   620,   575,   621,   622,
       0,   116,   117,   118,   119,   120,   623,   624,   121,   122,
     625,   626,   125,     0,   126,   127,   128,   129,   627,     0,
     628,     0,   131,   132,   133,   134,   135,   577,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   578,
     145,   146,   147,   629,   630,   631,   632,   633,   634,   635,
     148,   149,   150,   151,   152,   153,   636,   637,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   639,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   640,   184,   185,   186,   641,   642,   188,
       0,   189,   190,   643,   192,     0,   193,     0,   194,   580,
       0,   581,   195,   196,   197,   198,     0,   199,   644,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   582,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   583,   219,   220,   221,   222,   223,   645,   646,
       0,   647,     0,   227,   584,   585,   228,   586,   229,   230,
     231,   232,   233,     0,     0,   234,   648,   587,   236,   588,
       0,   237,   238,   239,   649,   650,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   651,   589,   652,   258,   259,   260,   261,     0,
     262,   263,   590,   264,   654,   655,   266,   656,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,   591,   278,   592,   658,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   659,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   660,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   593,   325,   326,   327,
    1455,  1456,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,   662,   343,   344,   345,
     346,   347,   594,   348,   349,   663,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     664,     0,   365,   366,     0,   367,   595,   368,   369,   370,
     371,   372,     0,   665,   666,     0,     0,   375,   376,   667,
     378,   668,   669,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,   670,     0,   392,
     393,   394,   395,   396,   397,   671,     0,   399,   597,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
       0,     0,     0,     0,     0,  1457,  1458,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,   677,
     613,   614,   464,   615,   616,   617,   618,   619,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     574,   109,   110,   111,   112,   620,   575,   621,   622,     0,
     116,   117,   118,   119,   120,   623,   624,   121,   122,   625,
     626,   125,     0,   126,   127,   128,   129,   627,     0,   628,
       0,   131,   132,   133,   134,   135,   577,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,   578,   145,
     146,   147,   629,   630,   631,   632,   633,   634,   635,   148,
     149,   150,   151,   152,   153,   636,   637,   156,     0,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   639,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   640,   184,   185,   186,   641,   642,   188,     0,
     189,   190,   643,   192,     0,   193,     0,   194,   580,     0,
     581,   195,   196,   197,   198,     0,   199,   644,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   582,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,   583,   219,   220,   221,   222,   223,   645,   646,     0,
     647,     0,   227,     0,   585,   228,   586,   229,   230,   231,
     232,   233,     0,     0,   234,   648,   587,   236,   588,     0,
     237,   238,   239,   649,   650,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   651,   589,   652,   258,   259,   260,   261,     0,   262,
     263,   590,   264,   654,   655,   266,   656,   268,   269,   270,
       0,   271,   272,     0,     0,   657,   274,   275,     0,     0,
     276,   277,   591,   278,   592,   658,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   659,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   660,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,   593,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,   662,   343,   344,   345,   346,
     347,   594,   348,   349,   663,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   664,
       0,   365,   366,     0,   367,   595,   368,   369,   370,   371,
     372,     0,   665,   666,     0,     0,   375,   376,   667,   378,
     668,   669,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,   670,     0,   392,   393,
     394,   395,   396,   397,   671,     0,   399,   597,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,     0,
       0,     0,     0,     0,  1320,  1321,     0,     0,     0,     0,
       0,     0,     0,  1322,     0,     0,     0,     0,   677,   613,
     614,   464,   615,   616,   617,   618,   619,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,   574,
     109,   110,   111,     0,   620,   575,   621,   622,     0,   116,
     117,   118,   119,   120,   623,   624,   121,   122,   625,   626,
     125,     0,   126,   127,   128,   129,   627,     0,   628,     0,
     131,   132,   133,   134,   135,   577,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   578,   145,   146,
     147,   629,   630,   631,   632,   633,   634,   635,   148,   149,
     150,   151,   152,   153,   636,   637,   156,   638,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   639,   171,   172,     0,   173,
     174,   175,     0,   176,     0,   178,     0,   179,   180,   181,
     182,   640,   184,   185,   186,   641,   642,   188,     0,   189,
     190,   643,   192,     0,   193,     0,   194,   580,     0,   581,
     195,   196,   197,   198,     0,   199,   644,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     583,   219,   220,   221,   222,   223,   645,   646,     0,   647,
       0,   227,     0,     0,   228,   586,   229,   230,   231,   232,
     233,     0,     0,   234,   648,   587,   236,     0,     0,   237,
     238,   239,   649,   650,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     651,   589,   652,   258,   259,   260,   261,   653,   262,   263,
       0,   264,   654,   655,   266,   656,   268,   269,   270,     0,
     271,   272,     0,     0,   657,   274,   275,     0,     0,   276,
     277,   591,   278,   592,   658,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   659,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   660,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   593,   325,   326,   327,   661,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,   662,   343,   344,   345,   346,   347,
       0,   348,   349,   663,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   664,     0,
     365,   366,     0,   367,   595,   368,   369,   370,   371,   372,
       0,   665,   666,     0,     0,   375,   376,   667,   378,   668,
     669,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,   670,     0,   392,   393,   394,
     395,   396,   397,   671,     0,   399,   597,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,     0,     0,
       0,     0,     0,   673,   674,    91,     0,     0,     0,     0,
       0,     0,   676,     0,     0,     0,     0,   677,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,  1934,     0,   104,
     105,     0,   106,   107,   108,     0,   109,   110,   111,   112,
     113,     0,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,  -546,   145,   146,   147,     0,     0,     0,
       0,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,     0,     0,  -546,   195,   196,   197,   198,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,     0,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,  -546,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,     0,     0,
     228,  -546,   229,   230,   231,   232,   233,     0,     0,   234,
     235,  -546,   236,     0,     0,   237,   238,   239,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,  -546,   257,   258,
     259,   260,   261,     0,   262,   263,     0,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
    -546,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   367,
       0,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,     0,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,     0,   613,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   742,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   574,   109,   110,   111,   112,
     113,   575,   114,   115,     0,   116,   117,   118,   119,   120,
       0,   624,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   627,     0,   628,     0,   131,   132,   133,   134,
     135,   577,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   578,   145,   146,   147,   629,   630,   631,
     632,   633,   634,   635,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   641,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,   580,     0,   581,   195,   196,   197,   198,
       0,   199,   644,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   582,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   583,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,   584,   585,
     228,   586,   229,   230,   231,   232,   233,  1695,     0,   234,
     648,   587,   236,   588,     0,   237,   238,   239,   649,   650,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   589,   257,   258,
     259,   260,   261,     0,   262,   263,   590,   264,     0,   655,
     266,   267,   268,   269,   270,     0,   271,   272,     0,   492,
     273,   274,   275,     0,     0,   276,   277,   591,   278,   592,
     658,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   659,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     593,   325,   326,   327,   328,  1696,   330,   331,   332,   333,
     334,   335,   336,   337,    19,   338,   339,   340,   341,   342,
     662,   343,   344,   345,   346,   347,   594,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   664,     0,   365,   366,    23,   367,
     595,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   667,   378,   668,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,   670,     0,   392,   393,   394,   395,   396,   596,   398,
       0,   399,   597,   400,   401,   402,   403,     0,     0,   404,
       0,    26,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,    27,   613,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1697,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   574,   109,   110,   111,   112,
     113,   575,   114,   115,     0,   116,   117,   118,   119,   120,
       0,   624,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   627,     0,   628,     0,   131,   132,   133,   134,
     135,   577,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   578,   145,   146,   147,   629,   630,   631,
     632,   633,   634,   635,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   641,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,   580,     0,   581,   195,   196,   197,   198,
       0,   199,   644,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   582,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   583,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,   584,   585,
     228,   586,   229,   230,   231,   232,   233,  1695,     0,   234,
     648,   587,   236,   588,     0,   237,   238,   239,   649,   650,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   589,   257,   258,
     259,   260,   261,     0,   262,   263,   590,   264,     0,   655,
     266,   267,   268,   269,   270,     0,   271,   272,     0,   492,
     273,   274,   275,     0,     0,   276,   277,   591,   278,   592,
     658,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   659,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     593,   325,   326,   327,   328,  1696,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
     662,   343,   344,   345,   346,   347,   594,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   664,     0,   365,   366,     0,   367,
     595,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   667,   378,   668,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,   670,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   597,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,     0,     0,   613,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1697,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   574,   109,   110,   111,   112,   113,
     575,   114,   115,     0,   116,   117,   118,   119,   120,     0,
     624,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   627,     0,   628,     0,   131,   132,   133,   134,   135,
     577,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   578,   145,   146,   147,   629,   630,   631,   632,
     633,   634,   635,   148,   149,   150,   151,   152,   153,   154,
     155,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     170,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     641,     0,   188,     0,   189,   190,   191,   192,     0,   193,
       0,   194,   580,     0,   581,   195,   196,   197,   198,     0,
     199,   644,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   582,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   583,   219,   220,   221,   222,
     223,   224,   225,     0,   226,     0,   227,   584,   585,   228,
     586,   229,   230,   231,   232,   233,     0,     0,   234,   648,
     587,   236,   588,     0,   237,   238,   239,   649,   650,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   589,   257,   258,   259,
     260,   261,     0,   262,   263,   590,   264,     0,   655,   266,
     267,   268,   269,   270,     0,   271,   272,     0,     0,   273,
     274,   275,     0,     0,   276,   277,   591,   278,   592,   658,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   659,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   593,
     325,   326,   327,   328,  1696,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   662,
     343,   344,   345,   346,   347,   594,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   664,     0,   365,   366,     0,   367,   595,
     368,   369,   370,   371,   372,     0,   373,   374,     0,     0,
     375,   376,   667,   378,   668,     0,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
     670,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   597,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,     0,     0,   613,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   574,   109,   110,   111,   112,   113,   575,
     114,   115,     0,   116,   117,   118,   119,   120,     0,   624,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     627,     0,   628,     0,   131,   132,   133,   134,   135,   577,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   578,   145,   146,   147,   629,   630,   631,   632,   633,
     634,   635,   148,   149,   150,   151,   152,   153,   154,   155,
     156,     0,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   170,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   641,
       0,   188,     0,   189,   190,   191,   192,     0,   193,     0,
     194,   580,     0,   581,   195,   196,   197,   198,     0,   199,
     644,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     582,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   583,   219,   220,   221,   222,   223,
     224,   225,     0,   226,     0,   227,   584,   585,   228,   586,
     229,   230,   231,   232,   233,     0,     0,   234,   648,   587,
     236,   588,     0,   237,   238,   239,   649,   650,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   589,   257,   258,   259,   260,
     261,     0,   262,   263,   590,   264,     0,   655,   266,   267,
     268,   269,   270,     0,   271,   272,     0,     0,   273,   274,
     275,     0,     0,   276,   277,   591,   278,   592,   658,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   659,   292,   293,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   593,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,   662,   343,
     344,   345,   346,   347,   594,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   664,     0,   365,   366,     0,   367,   595,   368,
     369,   370,   371,   372,     0,   373,   374,     0,     0,   375,
     376,   667,   378,   668,     0,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,   670,
       0,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     597,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
       0,     0,   573,   844,   464,     0,     0,     0,   618,     0,
       0,     0,     0,     0,     0,     0,  2279,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,   574,   109,   110,   111,   112,   113,   575,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,   576,     0,   131,   132,   133,   134,   135,   577,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     578,   145,   146,   147,     0,     0,     0,   579,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
       0,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   845,
     188,     0,   189,   190,   191,   192,     0,   193,     0,   194,
     580,     0,   581,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   582,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   583,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,   584,   585,   228,   586,   229,
     230,   231,   232,   233,     0,     0,   234,   235,   587,   236,
     588,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   589,   257,   258,   259,   260,   261,
       0,   262,   263,   590,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   846,     0,   273,   274,   275,
       0,     0,   276,   277,   591,   278,   592,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   593,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   594,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,   595,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,   847,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   597,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,     0,
       0,   573,     0,     0,     0,     0,   848,   849,  2415,     0,
       0,     0,     0,     0,     0,  2416,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     3,     4,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   574,   109,   110,   111,   112,   113,   575,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
     576,     0,   131,   132,   133,   134,   135,   577,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   578,
     145,   146,   147,     0,     0,     0,   579,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,   580,
       0,   581,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   582,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   583,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,   584,   585,   228,   586,   229,   230,
     231,   232,   233,     0,     0,   234,   235,   587,   236,   588,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   589,   257,   258,   259,   260,   261,     0,
     262,   263,   590,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,   591,   278,   592,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   593,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      19,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   594,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,    23,   367,   595,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   596,   398,     0,   399,   597,   400,
     401,   402,   403,     0,     0,   404,     0,    26,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
      27,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   109,   110,   111,   112,   113,     0,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,     0,
       0,     0,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,     0,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,     0,     0,   228,     0,   229,   230,
     231,   232,   233,     0,     0,   234,   235,     0,   236,     0,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     262,   263,     0,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      19,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,    23,   367,     0,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   596,   398,     0,   399,     0,   400,
     401,   402,   403,     0,     0,   404,     0,    26,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
      27,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   109,   110,   111,   112,   113,     0,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,     0,
       0,     0,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,     0,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,     0,     0,   228,     0,   229,   230,
     231,   232,   233,     0,     0,   234,   235,     0,   236,     0,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     262,   263,     0,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   367,     0,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   399,     0,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,     0,     0,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   109,   110,   111,   112,   113,     0,   114,   115,     0,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   145,
     146,   147,     0,     0,     0,     0,     0,     0,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,     0,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   170,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,     0,
     189,   190,   191,   192,     0,   193,     0,   194,     0,     0,
       0,   195,   196,   197,   198,     0,   199,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     226,     0,   227,     0,     0,   228,     0,   229,   230,   231,
     232,   233,     0,     0,   234,   235,     0,   236,     0,     0,
     237,   238,   239,     0,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,   262,
     263,     0,   264,     0,   265,   266,   267,   268,   269,   270,
       0,   271,   272,     0,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   367,     0,   368,   369,   370,   371,
     372,     0,   373,   374,     0,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   399,     0,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,     0,     0,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1445,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     109,   110,   111,   112,   113,     0,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   145,   146,
     147,     0,     0,     0,     0,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,     0,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,     0,   193,     0,   194,     0,     0,     0,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,     0,     0,   228,     0,   229,   230,   231,   232,
     233,     0,     0,   234,   235,     0,   236,     0,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   262,   263,
       0,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,     0,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,     0,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,     0,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,     0,     0,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1917,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   109,
     110,   111,   112,   113,     0,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   145,   146,   147,
       0,     0,     0,     0,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,     0,     0,     0,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,     0,     0,   228,     0,   229,   230,   231,   232,   233,
       0,     0,   234,   235,     0,   236,     0,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,   262,   263,     0,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,     0,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,     0,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,     0,     0,     0,
     859,   844,   464,     0,     0,  1302,   618,     0,     0,     0,
       0,  2129,  1303,  1304,  1305,    92,    93,    94,    95,    96,
      97,    98,    99,  1019,   101,   102,   103,  1020,  1021,  1022,
    1023,  1024,  1025,  1026,   104,   105,  1027,   106,   107,   108,
     574,   109,   110,   111,     0,   860,   575,   861,   862,  1028,
     116,   117,   118,   119,   120,  1029,  1030,   121,   122,   863,
     864,   125,  1031,   126,   127,   128,   129,     0,  1032,   576,
    1033,   131,   132,   133,   134,   135,   577,   136,   137,   138,
    1034,   139,   140,   141,   142,   143,   144,  1035,   578,   145,
     146,   147,  1036,  1037,  1038,   579,  1039,  1040,  1041,   148,
     149,   150,   151,   152,   153,   865,   866,   156,  1042,   157,
    1043,   158,   159,   160,   161,   162,   163,  1044,   164,   165,
     166,   167,  1045,  1046,   168,   169,   639,   171,   172,  1047,
     173,   174,   175,  1048,   176,   177,   178,  1049,   179,   180,
     181,   182,     0,   184,   185,   186,     0,  1050,   188,  1051,
     189,   190,   867,   192,  1052,   193,  1053,   194,   580,  1054,
     581,   195,   196,   197,   198,  1055,   199,     0,  1056,     0,
     202,  1057,   203,   204,   205,   206,   207,   582,   208,   209,
     210,   211,  1058,   212,   213,   214,   215,   216,   217,  1059,
     218,   583,     0,   220,   221,   222,   223,   868,   869,  1060,
     870,  1061,   227,   584,   585,   228,   586,   229,   230,   231,
     232,   233,  1062,  1063,   234,     0,   587,   236,   588,  1064,
     237,   238,   239,  1065,  1066,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   871,   589,   872,   258,   259,   260,  2029,  1067,   262,
     263,   590,   264,  1068,     0,   266,   873,   268,   269,   270,
    1069,   271,   272,  1070,  1071,  2030,   274,   275,  1072,  1073,
     276,     0,   591,   278,   592,     0,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1074,   289,   290,     0,   292,
       0,   452,   295,   296,  1075,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   874,   307,   308,   309,   310,  1076,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,  1077,   323,   324,   593,   325,   326,   327,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,  1078,
     338,   339,   340,   341,   342,  1079,   343,  2031,   345,   346,
     347,   594,   348,   349,   876,   351,  1080,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
    1081,   365,   366,  1082,   367,   595,   368,   369,   370,   371,
     372,  1083,   877,   878,  1084,  1085,   375,   376,     0,   378,
       0,  1086,   380,   381,   382,   383,   384,   385,   386,  1087,
    1088,   387,   388,   389,   390,   391,  1089,  1090,   392,   393,
     394,   395,   396,     0,   879,  1091,   399,   597,   400,   401,
     402,   403,  1092,  1093,   404,  1094,  1095,   405,   406,   407,
     408,   409,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   422,   423,   424,     0,    91,     0,
    1306,  1307,  1308,  1302,  2032,  2033,  1311,  1312,  1313,  1314,
    1303,  1304,  1305,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   109,
     110,   111,   112,   113,     0,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   145,   146,   147,
       0,     0,     0,     0,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,     0,     0,     0,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,     0,     0,   228,     0,   229,   230,   231,   232,   233,
       0,     0,   234,   235,     0,   236,     0,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,   262,   263,     0,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,     0,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,     0,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,     0,     0,     0,  1306,  1307,
    1308,     0,  1309,  1310,  1311,  1312,  1313,  1314,   955,     0,
       0,   956,     0,     0,     0,   957,   958,   959,     0,     0,
       0,     0,     0,     0,     0,     0,   955,     0,     0,   956,
       0,     0,   960,   957,   958,   959,     0,     0,     0,     0,
     962,     0,     0,     0,     0,   955,     0,   963,   956,     0,
     960,     0,   957,   958,   959,     0,     0,     0,   962,     0,
       0,     0,     0,     0,     0,   963,     0,     0,     0,   960,
       0,   964,     0,     0,     0,     0,     0,   962,     0,   955,
       0,     0,   956,     0,   963,     0,   957,   958,   959,   964,
       0,     0,     0,     0,     0,     0,     0,   955,     0,     0,
     956,     0,     0,   960,   957,   958,   959,     0,   964,     0,
       0,   962,     0,     0,     0,     0,     0,     0,   963,     0,
       0,   960,     0,     0,     0,     0,     0,     0,     0,   962,
       0,     0,     0,     0,     0,     0,   963,   955,     0,     0,
     956,     0,   964,     0,   957,   958,   959,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     964,   960,     0,     0,     0,     0,     0,     0,     0,   962,
       0,     0,     0,     0,     0,     0,   963,     0,     0,     0,
     965,     0,     0,     0,     0,   966,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   965,     0,
     964,     0,     0,   966,     0,     0,   967,   968,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   965,     0,     0,
       0,   969,   966,     0,   967,   968,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   969,
       0,     0,     0,   967,   968,     0,     0,     0,     0,     0,
       0,   965,     0,     0,   970,     0,   966,     0,   969,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   971,   965,
       0,   972,   970,     0,   966,     0,     0,   967,   968,     0,
       0,     0,     0,     0,     0,     0,   971,     0,     0,   972,
       0,   970,   969,     0,     0,   967,   968,     0,     0,     0,
       0,     0,     0,     0,     0,   971,     0,     0,   972,   965,
     969,     0,     0,     0,   966,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   970,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   967,   968,     0,     0,   971,
       0,     0,   972,   970,     0,     0,     0,     0,     0,     0,
     969,     0,     0,     0,   973,     0,     0,   971,     0,     0,
     972,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   973,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   970,     0,     0,     0,     0,     0,     0,
       0,   973,     0,     0,     0,     0,     0,   971,     0,     0,
     972,     0,     0,   955,     0,     0,   956,     0,     0,     0,
     957,   958,   959,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   973,     0,   960,     0,     0,
       0,     0,     0,     0,     0,   962,     0,     0,     0,     0,
       0,     0,   963,   973,     0,     0,     0,     0,     0,     0,
     974,     0,     0,   975,   976,   977,     0,   978,   979,   980,
     981,   982,   983,     0,     0,     0,   964,  1894,   974,     0,
       0,   975,   976,   977,     0,   978,   979,   980,   981,   982,
     983,     0,     0,   973,     0,  1993,     0,   974,     0,     0,
     975,   976,   977,     0,   978,   979,   980,   981,   982,   983,
       0,     0,     0,     0,  2082,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   974,     0,     0,   975,   976,   977,     0,   978,   979,
     980,   981,   982,   983,     0,     0,     0,     0,  2101,   974,
       0,     0,   975,   976,   977,     0,   978,   979,   980,   981,
     982,   983,     0,     0,     0,     0,  2243,     0,     0,     0,
       0,   955,     0,     0,   956,     0,     0,     0,   957,   958,
     959,     0,     0,     0,     0,   965,     0,     0,     0,   974,
     966,     0,   975,   976,   977,   960,   978,   979,   980,   981,
     982,   983,     0,   962,     0,     0,  2460,     0,     0,     0,
     963,   967,   968,     0,     0,   955,     0,     0,   956,     0,
       0,     0,   957,   958,   959,     0,   969,     0,     0,     0,
       0,     0,     0,     0,   964,     0,     0,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,   962,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,     0,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   971,     0,     0,   972,     0,   964,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   965,     0,     0,     0,     0,   966,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   967,
     968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   969,     0,     0,   965,     0,     0,
       0,     0,   966,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,   968,     0,     0,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   969,     0,
       0,   971,     0,     0,   972,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   974,     0,     0,   975,   976,
     977,   970,   978,   979,   980,   981,   982,   983,     0,     0,
       0,     0,  2472,     0,     0,   971,     0,     0,   972,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   973,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   973,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   974,     0,     0,   975,   976,   977,     0,
     978,   979,   980,   981,   982,   983,     0,     0,     0,     0,
    2581,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   974,  1018,     0,
     975,   976,   977,     0,   978,   979,   980,   981,   982,   983,
       0,     0,  1427,    92,    93,    94,    95,    96,    97,    98,
      99,  1019,   101,   102,   103,  1020,  1021,  1022,  1023,  1024,
    1025,  1026,   104,   105,  1027,   106,   107,   108,   574,   109,
     110,   111,   112,   113,   575,   114,   115,  1028,   116,   117,
     118,   119,   120,  1029,  1030,   121,   122,   123,   124,   125,
    1031,   126,   127,   128,   129,   130,  1032,   576,  1033,   131,
     132,   133,   134,   135,   577,   136,   137,   138,  1034,   139,
     140,   141,   142,   143,   144,  1035,   578,   145,   146,   147,
    1036,  1037,  1038,   579,  1039,  1040,  1041,   148,   149,   150,
     151,   152,   153,   154,   155,   156,  1042,   157,  1043,   158,
     159,   160,   161,   162,   163,  1044,   164,   165,   166,   167,
    1045,  1046,   168,   169,   170,   171,   172,  1047,   173,   174,
     175,  1048,   176,   177,   178,  1049,   179,   180,   181,   182,
     183,   184,   185,   186,   187,  1050,   188,  1051,   189,   190,
     191,   192,  1052,   193,  1053,   194,   580,  1054,   581,   195,
     196,   197,   198,  1055,   199,   200,  1056,   201,   202,  1057,
     203,   204,   205,   206,   207,   582,   208,   209,   210,   211,
    1058,   212,   213,   214,   215,   216,   217,  1059,   218,   583,
     219,   220,   221,   222,   223,   224,   225,  1060,   226,  1061,
     227,   584,   585,   228,   586,   229,   230,   231,   232,   233,
    1062,  1063,   234,   235,   587,   236,   588,  1064,   237,   238,
     239,  1065,  1066,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     589,   257,   258,   259,   260,   261,  1067,   262,   263,   590,
     264,  1068,   265,   266,   267,   268,   269,   270,  1069,   271,
     272,  1070,  1071,   273,   274,   275,  1072,  1073,   276,   277,
     591,   278,   592,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,  1074,   289,   290,   291,   292,   293,   452,
     295,   296,  1075,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,  1076,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
    1077,   323,   324,   593,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,  1078,   338,   339,
     340,   341,   342,  1079,   343,   344,   345,   346,   347,   594,
     348,   349,   350,   351,  1080,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,  1081,   365,
     366,  1082,   367,   595,   368,   369,   370,   371,   372,  1083,
     373,   374,  1084,  1085,   375,   376,   377,   378,   379,  1086,
     380,   381,   382,   383,   384,   385,   386,  1087,  1088,   387,
     388,   389,   390,   391,  1089,  1090,   392,   393,   394,   395,
     396,   397,   398,  1091,   399,   597,   400,   401,   402,   403,
    1092,  1093,   404,  1094,  1095,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    91,     0,     0,     0,     0,
       0,     0,     0,     0,  1096,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   109,   110,   111,   112,
     113,     0,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   145,   146,   147,     0,     0,     0,
       0,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,     0,     0,     0,   195,   196,   197,   198,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,     0,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,     0,     0,
     228,     0,   229,   230,   231,   232,   233,     0,     0,   234,
     235,     0,   236,     0,     0,   237,   238,   239,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   262,   263,     0,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   367,
       0,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,     0,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   573,   844,   464,     0,     0,     0,   618,     0,
       0,  2488,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,   574,   109,   110,   111,   112,   113,   575,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,   576,     0,   131,   132,   133,   134,   135,   577,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
     578,   145,   146,   147,     0,     0,     0,   579,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
    1007,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   845,
     188,     0,   189,   190,   191,   192,     0,   193,     0,   194,
     580,     0,   581,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   582,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,   583,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,   584,   585,   228,   586,   229,
     230,   231,   232,   233,     0,     0,   234,   235,   587,   236,
     588,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   589,   257,   258,   259,   260,   261,
       0,   262,   263,   590,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   846,     0,   273,   274,   275,
       0,     0,   276,   277,   591,   278,   592,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,   593,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,   594,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,   595,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,   847,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   597,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   573,
     844,   464,     0,     0,     0,   618,   848,   849,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,   574,
     109,   110,   111,   112,   113,   575,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,   576,     0,
     131,   132,   133,   134,   135,   577,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,   578,   145,   146,
     147,     0,     0,     0,   579,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,  1012,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   845,   188,     0,   189,
     190,   191,   192,     0,   193,     0,   194,   580,     0,   581,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   582,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
     583,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,   584,   585,   228,   586,   229,   230,   231,   232,
     233,     0,     0,   234,   235,   587,   236,   588,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   589,   257,   258,   259,   260,   261,     0,   262,   263,
     590,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,   846,     0,   273,   274,   275,     0,     0,   276,
     277,   591,   278,   592,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,   593,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
     594,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,   595,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
     847,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   597,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   573,   844,   464,     0,
       0,     0,   618,   848,   849,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   574,   109,   110,   111,
     112,   113,   575,   114,   115,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,   576,     0,   131,   132,   133,
     134,   135,   577,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   578,   145,   146,   147,     0,     0,
       0,   579,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   170,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   845,   188,     0,   189,   190,   191,   192,
       0,   193,     0,   194,   580,     0,   581,   195,   196,   197,
     198,     0,   199,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   582,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   583,   219,   220,
     221,   222,   223,   224,   225,     0,   226,     0,   227,   584,
     585,   228,   586,   229,   230,   231,   232,   233,     0,     0,
     234,   235,   587,   236,   588,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   589,   257,
     258,   259,   260,   261,     0,   262,   263,   590,   264,     0,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   846,
       0,   273,   274,   275,     0,     0,   276,   277,   591,   278,
     592,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   593,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,   594,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     367,   595,   368,   369,   370,   371,   372,     0,   373,   374,
       0,     0,   375,   376,   377,   378,   379,   847,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   597,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,     0,     0,   955,     0,     0,   956,     0,
     848,   849,   957,   958,   959,     0,     0,     0,   955,     0,
       0,   956,     0,     0,     0,   957,   958,   959,     0,   960,
       0,     0,     0,  1451,     0,     0,     0,   962,     0,     0,
       0,     0,   960,     0,   963,     0,     0,     0,     0,     0,
     962,     0,     0,     0,     0,     0,     0,   963,   955,     0,
       0,   956,     0,     0,     0,   957,   958,   959,   964,     0,
       0,   955,     0,     0,   956,     0,     0,     0,   957,   958,
     959,   964,   960,     0,     0,     0,     0,     0,     0,     0,
     962,     0,     0,     0,     0,   960,     0,   963,  1595,     0,
       0,     0,     0,   962,     0,     0,     0,     0,     0,     0,
     963,     0,     0,     0,     0,   955,     0,  1452,   956,     0,
       0,   964,   957,   958,   959,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   964,     0,     0,     0,     0,   960,
       0,     0,     0,     0,     0,     0,     0,   962,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1637,     0,     0,
       0,     0,  1638,     0,     0,     0,     0,   965,   964,     0,
       0,     0,   966,     0,     0,     0,     0,     0,     0,     0,
     965,     0,     0,     0,     0,   966,     0,     0,     0,     0,
       0,     0,     0,   967,   968,     0,  2542,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   967,   968,   969,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     965,   969,     0,     0,     0,   966,     0,     0,     0,     0,
       0,     0,     0,   965,     0,     0,     0,     0,   966,     0,
       0,   970,     0,     0,     0,     0,   967,   968,     0,     0,
       0,     0,     0,     0,   970,   971,     0,     0,   972,   967,
     968,   969,     0,     0,     0,     0,     0,     0,   971,     0,
       0,   972,     0,     0,   969,     0,     0,   965,     0,     0,
       0,     0,   966,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   970,     0,     0,     0,     0,     0,
       0,     0,     0,   967,   968,     0,     0,   970,   971,     0,
       0,   972,     0,     0,     0,     0,     0,     0,   969,     0,
       0,   971,     0,     0,   972,     0,     0,     0,     0,     0,
       0,     0,  2543,     0,     0,     0,     0,     0,     0,     0,
       0,   973,     0,     0,     0,     0,     0,     0,     0,     0,
     955,   970,     0,   956,   973,     0,     0,   957,   958,   959,
       0,     0,     0,   955,     0,   971,   956,     0,   972,     0,
     957,   958,   959,     0,   960,     0,     0,  1646,     0,     0,
       0,     0,   962,     0,     0,  1611,     0,   960,     0,   963,
       0,     0,     0,     0,   973,   962,     0,  1453,     0,     0,
       0,     0,   963,     0,     0,     0,     0,   973,     0,     0,
       0,     0,     0,   964,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   964,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   974,     0,     0,
     975,   976,   977,     0,   978,   979,   980,   981,   982,   983,
     974,   973,     0,   975,   976,   977,     0,   978,   979,   980,
     981,   982,   983,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     974,     0,     0,   975,   976,   977,     0,   978,   979,   980,
     981,   982,   983,   974,     0,     0,   975,   976,   977,     0,
     978,   979,   980,   981,   982,   983,     0,  1651,     0,     0,
       0,   955,   965,     0,   956,     0,     0,   966,   957,   958,
     959,     0,     0,     0,     0,   965,     0,     0,     0,     0,
     966,     0,     0,     0,     0,   960,     0,   974,   967,   968,
     975,   976,   977,   962,   978,   979,   980,   981,   982,   983,
     963,   967,   968,   969,     0,   955,     0,     0,   956,     0,
       0,     0,   957,   958,   959,     0,   969,     0,     0,     0,
       0,     0,     0,     0,   964,     0,     0,     0,     0,   960,
       0,     0,     0,     0,     0,     0,   970,   962,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,   955,   970,
     971,   956,     0,   972,     0,   957,   958,   959,     0,     0,
       0,     0,     0,   971,     0,     0,   972,     0,   964,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     962,     0,     0,     0,     0,     0,     0,   963,     0,     0,
     955,     0,     0,   956,     0,     0,     0,   957,   958,   959,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   964,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   962,     0,     0,     0,     0,     0,     0,   963,
       0,     0,     0,   965,     0,     0,   973,     0,   966,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,     0,   964,     0,     0,     0,     0,     0,   967,
     968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   969,     0,     0,   965,     0,     0,
       0,     0,   966,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,   968,     0,     0,   970,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   969,     0,
     965,   971,     0,     0,   972,   966,     0,     0,     0,     0,
       0,     0,   974,     0,     0,   975,   976,   977,     0,   978,
     979,   980,   981,   982,   983,   974,   967,   968,   975,   976,
     977,   970,   978,   979,   980,   981,   982,   983,     0,     0,
       0,   969,   965,     0,     0,   971,     0,   966,   972,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1449, -1449,
       0,     0,     0,     0,   970,     0,     0,     0,     0,     0,
       0,     0,     0,   969,     0,     0,     0,   973,   971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1449,  1855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     971,   973,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   973,     0,     0,     0,     0,     0,
       0,     0,     0,   974,     0,     0,   975,   976,   977,     0,
     978,   979,   980,   981,   982,   983,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   973,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   974,     0,     0,
     975,   976,   977,     0,   978,   979,   980,   981,   982,   983,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     974,     0,     0,   975,   976,   977,     0,   978,   979,   980,
     981,   982,   983,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1018,     0,   974,     0,     0,   975,   976,   977,     0,   978,
     979,   980,   981,   982,   983,    92,    93,    94,    95,    96,
      97,    98,    99,  1019,   101,   102,   103,  1020,  1021,  1022,
    1023,  1024,  1025,  1026,   104,   105,  1027,   106,   107,   108,
     574,   109,   110,   111,   112,   113,   575,   114,   115,  1028,
     116,   117,   118,   119,   120,  1029,  1030,   121,   122,   123,
     124,   125,  1031,   126,   127,   128,   129,   130,  1032,   576,
    1033,   131,   132,   133,   134,   135,   577,   136,   137,   138,
    1034,   139,   140,   141,   142,   143,   144,  1035,   578,   145,
     146,   147,  1036,  1037,  1038,   579,  1039,  1040,  1041,   148,
     149,   150,   151,   152,   153,   154,   155,   156,  1042,   157,
    1043,   158,   159,   160,   161,   162,   163,  1044,   164,   165,
     166,   167,  1045,  1046,   168,   169,   170,   171,   172,  1047,
     173,   174,   175,  1048,   176,   177,   178,  1049,   179,   180,
     181,   182,   183,   184,   185,   186,   187,  1050,   188,  1051,
     189,   190,   191,   192,  1052,   193,  1053,   194,   580,  1054,
     581,   195,   196,   197,   198,  1055,   199,   200,  1056,   201,
     202,  1057,   203,   204,   205,   206,   207,   582,   208,   209,
     210,   211,  1058,   212,   213,   214,   215,   216,   217,  1059,
     218,   583,   219,   220,   221,   222,   223,   224,   225,  1060,
     226,  1061,   227,   584,   585,   228,   586,   229,   230,   231,
     232,   233,  1062,  1063,   234,   235,   587,   236,   588,  1064,
     237,   238,   239,  1065,  1066,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   589,   257,   258,   259,   260,   261,  1067,   262,
     263,   590,   264,  1068,   265,   266,   267,   268,   269,   270,
    1069,   271,   272,  1070,  1071,   273,   274,   275,  1072,  1073,
     276,   277,   591,   278,   592,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,  1074,   289,   290,   291,   292,
     293,   452,   295,   296,  1075,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,  1076,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,  1077,   323,   324,   593,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,  1078,
     338,   339,   340,   341,   342,  1079,   343,   344,   345,   346,
     347,   594,   348,   349,   350,   351,  1080,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
    1081,   365,   366,  1082,   367,   595,   368,   369,   370,   371,
     372,  1083,   373,   374,  1084,  1085,   375,   376,   377,   378,
     379,  1086,   380,   381,   382,   383,   384,   385,   386,  1087,
    1088,   387,   388,   389,   390,   391,  1089,  1090,   392,   393,
     394,   395,   396,   397,   398,  1091,   399,   597,   400,   401,
     402,   403,  1092,  1093,   404,  1094,  1095,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,  1018,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,  1500,    97,    98,    99,
    1019,   101,   102,   103,  1020,  1021,  1022,  1023,  1024,  1025,
    1026,   104,   105,  1027,   106,   107,   108,   574,   109,   110,
     111,   112,   113,   575,   114,   115,  1028,   116,   117,   118,
     119,   120,  1029,  1030,   121,   122,   123,   124,   125,  1031,
     126,   127,   128,   129,   130,  1032,   576,  1033,   131,   132,
     133,   134,   135,   577,   136,   137,   138,  1034,   139,   140,
     141,   142,   143,   144,  1035,   578,   145,   146,   147,  1036,
    1037,  1038,   579,  1039,  1040,  1041,   148,   149,   150,   151,
     152,   153,   154,   155,   156,  1042,   157,  1043,   158,   159,
     160,   161,   162,   163,  1044,   164,   165,   166,   167,  1045,
    1046,   168,   169,   170,  1501,   172,  1047,   173,   174,   175,
    1048,   176,   177,   178,  1049,   179,   180,   181,   182,   183,
     184,   185,   186,   187,  1050,   188,  1051,   189,   190,   191,
     192,  1052,   193,  1053,   194,   580,  1054,   581,   195,   196,
     197,   198,  1055,   199,   200,  1056,   201,   202,  1057,   203,
     204,   205,   206,   207,   582,   208,   209,   210,   211,  1058,
     212,   213,   214,   215,   216,   217,  1059,   218,   583,   219,
     220,   221,   222,   223,   224,   225,  1060,   226,  1061,   227,
     584,   585,   228,   586,   229,   230,   231,   232,   233,  1062,
    1063,   234,   235,   587,   236,   588,  1064,   237,   238,   239,
    1065,  1066,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   589,
     257,   258,   259,   260,   261,  1067,   262,   263,   590,   264,
    1068,   265,   266,   267,   268,   269,   270,  1069,   271,   272,
    1070,  1071,   273,   274,   275,  1072,  1073,   276,   277,   591,
     278,   592,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,  1074,   289,   290,   291,   292,   293,   452,   295,
     296,  1075,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,  1076,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,  1077,
     323,   324,   593,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,  1078,   338,   339,   340,
     341,   342,  1079,  1502,   344,   345,   346,   347,   594,   348,
     349,   350,   351,  1080,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,  1081,   365,   366,
    1082,   367,   595,   368,   369,   370,   371,   372,  1083,   373,
     374,  1084,  1085,   375,   376,   377,   378,   379,  1086,   380,
     381,   382,   383,   384,   385,   386,  1087,  1088,   387,   388,
     389,   390,   391,  1089,  1090,   392,   393,   394,   395,   396,
     397,   398,  1091,   399,   597,   400,   401,   402,   403,  1092,
    1093,   404,  1094,  1095,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   613,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   574,   109,   110,   111,   112,   113,
     575,   114,   115,     0,   116,   117,   118,   119,   120,     0,
     624,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   627,     0,   628,     0,   131,   132,   133,   134,   135,
     577,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,   578,   145,   146,   147,   629,   630,   631,   632,
     633,   634,   635,   148,   149,   150,   151,   152,   153,   154,
     155,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     170,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     641,     0,   188,     0,   189,   190,   191,   192,     0,   193,
       0,   194,   580,     0,   581,   195,   196,   197,   198,     0,
     199,   644,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   582,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,   583,   219,   220,   221,   222,
     223,   224,   225,     0,   226,     0,   227,   584,   585,   228,
     586,   229,   230,   231,   232,   233,     0,     0,   234,   648,
     587,   236,   588,     0,   237,   238,   239,   649,   650,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   589,   257,   258,   259,
     260,   261,     0,   262,   263,   590,   264,     0,   655,   266,
     267,   268,   269,   270,     0,   271,   272,     0,     0,   273,
     274,   275,     0,     0,   276,   277,   591,   278,   592,   658,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   659,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,   593,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,   662,
     343,   344,   345,   346,   347,   594,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   664,     0,   365,   366,     0,   367,   595,
     368,   369,   370,   371,   372,     0,   373,   374,     0,     0,
     375,   376,   667,   378,   668,     0,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
     670,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   597,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   573,     0,   464,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   574,   109,   110,   111,   112,   113,   575,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
     576,     0,   131,   132,   133,   134,   135,   577,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,   578,
     145,   146,   147,     0,     0,     0,   579,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   845,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,   580,
       0,   581,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   582,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,   583,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,   584,   585,   228,   586,   229,   230,
     231,   232,   233,     0,     0,   234,   235,   587,   236,   588,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   589,   257,   258,   259,   260,   261,     0,
     262,   263,   590,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   846,     0,   273,   274,   275,     0,
       0,   276,   277,   591,   278,   592,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,   593,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,   594,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   367,   595,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,   847,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   597,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   573,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     3,     4,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,   574,   109,
     110,   111,   112,   113,   575,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,   576,     0,   131,
     132,   133,   134,   135,   577,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,   578,   145,   146,   147,
       0,     0,     0,   579,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,   580,     0,   581,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   582,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,   583,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,   584,   585,   228,   586,   229,   230,   231,   232,   233,
       0,     0,   234,   235,   587,   236,   588,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     589,   257,   258,   259,   260,   261,     0,   262,   263,   590,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
     591,   278,   592,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,   593,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,   594,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,   595,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   597,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   613,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   574,   109,   110,   111,   112,
     113,   575,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,   576,     0,   131,   132,   133,   134,
     135,   577,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,   578,   145,   146,   147,     0,     0,     0,
     579,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,   580,     0,   581,   195,   196,   197,   198,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   582,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,   583,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,   584,   585,
     228,   586,   229,   230,   231,   232,   233,     0,     0,   234,
     235,   587,   236,   588,     0,   237,   238,   239,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   589,   257,   258,
     259,   260,   261,     0,   262,   263,   590,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,   591,   278,   592,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
     593,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,   594,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   367,
     595,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   597,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   109,   110,   111,   112,   113,     0,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,  1156,   126,   127,   128,   129,   130,
       0,     0,  1157,   131,   132,   133,   134,   135,     0,   136,
     137,   138,  1158,   139,   140,   141,   142,   143,   144,     0,
       0,   145,   146,   147,     0,     0,     0,     0,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
       0,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,     0,   189,   190,   191,   192,     0,   193,  1159,   194,
       0,     0,     0,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,  1160,     0,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,     0,     0,   228,     0,   229,
     230,   231,   232,   233,     0,     0,   234,   235,     0,   236,
       0,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,   261,
       0,   262,   263,     0,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,     0,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,  1161,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,     0,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,     0,  1162,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,     0,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     109,   110,   111,   112,   113,     0,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,  1156,   126,   127,   128,   129,   130,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   136,   137,   138,  1158,
     139,   140,   141,   142,   143,   144,     0,     0,   145,   146,
     147,     0,     0,     0,     0,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,     0,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,     0,   193,  1159,   194,     0,     0,     0,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,     0,     0,   228,     0,   229,   230,   231,   232,
     233,     0,     0,   234,   235,     0,   236,  1553,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   262,   263,
       0,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,     0,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,  1161,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,     0,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,  1162,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,     0,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    91,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     3,     4,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   109,   110,   111,
     112,   113,     0,   114,   115,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   145,   146,   147,     0,     0,
       0,     0,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   170,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,     0,   189,   190,   191,   192,
       0,   193,     0,   194,     0,     0,     0,   195,   196,   197,
     198,     0,   199,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   226,     0,   227,     0,
       0,   228,     0,   229,   230,   231,   232,   233,     0,     0,
     234,   235,     0,   236,     0,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,   261,     0,   262,   263,     0,   264,     0,
     265,   266,   267,   268,   269,   270,     0,   271,   272,     0,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     367,     0,   368,   369,   370,   371,   372,     0,   373,   374,
       0,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   399,     0,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    91,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   109,   110,   111,   112,   113,     0,
     114,   115,     0,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   145,   146,   147,     0,     0,     0,     0,     0,
       0,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,     0,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   170,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,     0,   193,     0,
     194,     0,     0,     0,   195,   196,   197,   198,     0,   199,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
       0,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   226,     0,   227,     0,     0,   228,     0,
     229,   230,   231,   232,   233,     0,     0,   234,   235,     0,
     236,     0,     0,   237,   238,   239,     0,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   262,   263,     0,   264,     0,   265,   266,   267,
     268,   269,   270,     0,   271,   272,     0,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   293,   294,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   367,     0,   368,
     369,   370,   371,   372,     0,   373,   374,     0,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,     0,   399,
       0,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,   468,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   109,   110,   111,   112,   113,     0,   114,   115,     0,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   145,
     146,   147,     0,     0,     0,     0,     0,     0,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,     0,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   170,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,     0,
     189,   190,   191,   192,     0,   193,     0,   194,     0,     0,
       0,   195,   196,   197,   198,     0,   199,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     226,     0,   227,     0,     0,   228,     0,   229,   230,   231,
     232,   233,     0,     0,   234,   235,     0,   236,     0,     0,
     237,   238,   239,     0,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,   262,
     263,     0,   264,     0,   265,   266,   267,   268,   269,   270,
       0,   271,   272,     0,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   367,     0,   368,   369,   370,   371,
     372,     0,   469,   374,     0,     0,   470,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   399,     0,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    91,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
     487,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   109,   110,
     111,   112,   113,     0,   114,   115,     0,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   145,   146,   147,     0,
       0,     0,     0,     0,     0,     0,   148,   149,   150,   151,
     152,   153,   154,   155,   156,     0,   157,     0,   158,   159,
     160,   161,   162,   163,     0,   164,   165,   166,   167,     0,
       0,   168,   169,   170,   171,   172,     0,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,     0,   193,     0,   194,     0,     0,     0,   195,   196,
     197,   198,     0,   199,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,     0,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   226,     0,   227,
       0,     0,   228,     0,   229,   230,   231,   232,   233,     0,
       0,   234,   235,     0,   236,     0,     0,   237,   238,   239,
       0,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   262,   263,     0,   264,
       0,   265,   266,   267,   268,   269,   270,     0,   271,   272,
       0,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   291,   292,   293,   452,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
       0,   367,     0,   368,   369,   370,   371,   372,     0,   488,
     374,     0,     0,   489,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,   388,
     389,   390,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,     0,   399,     0,   400,   401,   402,   403,     0,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   109,   110,   111,   112,   113,
       0,   114,   115,     0,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   145,   146,   147,     0,     0,     0,     0,
       0,     0,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     170,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,     0,   189,   190,   191,   192,     0,   193,
       0,   194,     0,     0,     0,   195,   196,   197,   198,     0,
     199,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   226,     0,   227,     0,     0,   228,
       0,   229,   230,   231,   232,   233,     0,     0,   234,   235,
       0,   236,     0,     0,   237,   238,   239,     0,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,     0,   257,   258,   259,
     260,   261,     0,   262,   263,     0,   264,     0,   265,   266,
     267,   268,   269,   270,     0,   271,   272,     0,   492,   273,
     274,   275,     0,     0,   276,   277,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   291,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   367,     0,
     368,   369,   370,   371,   372,     0,   373,   374,     0,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     399,     0,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   109,   110,   111,   112,   113,     0,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,     0,
       0,     0,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   530,     0,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,     0,     0,   228,     0,   229,   230,
     231,   232,   233,     0,     0,   234,   235,     0,   236,     0,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     262,   263,     0,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,   492,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   367,     0,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   399,     0,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,   552,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   109,
     110,   111,   112,   113,     0,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   145,   146,   147,
       0,     0,     0,     0,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,     0,     0,     0,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,     0,     0,   228,     0,   229,   230,   231,   232,   233,
       0,     0,   234,   235,     0,   236,     0,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,   262,   263,     0,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,     0,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,     0,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   109,   110,   111,   112,
     113,     0,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   145,   146,   147,     0,     0,     0,
       0,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,     0,     0,     0,   195,   196,   197,  1401,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,     0,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,     0,     0,
     228,     0,   229,   230,   231,   232,   233,     0,     0,   234,
     235,     0,   236,     0,     0,   237,   238,  1402,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   262,   263,     0,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,  1403,   367,
       0,   368,  1404,   370,  1405,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,  1406,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,     0,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,  1934,     0,   104,   105,     0,   106,
     107,   108,     0,   109,   110,   111,   112,   113,     0,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   145,   146,   147,     0,     0,     0,     0,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
       0,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,     0,   189,   190,   191,   192,     0,   193,     0,   194,
       0,     0,     0,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,     0,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,     0,     0,   228,     0,   229,
     230,   231,   232,   233,     0,     0,   234,   235,     0,   236,
       0,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,   261,
       0,   262,   263,     0,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,     0,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,     0,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,     0,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,  1948,     0,   104,   105,     0,   106,   107,   108,     0,
     109,   110,   111,   112,   113,     0,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   145,   146,
     147,     0,     0,     0,     0,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,     0,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,     0,   193,     0,   194,     0,     0,     0,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,     0,     0,   228,     0,   229,   230,   231,   232,
     233,     0,     0,   234,   235,     0,   236,     0,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   262,   263,
       0,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,     0,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,     0,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,     0,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    91,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   109,   110,   111,
     112,   113,     0,   114,   115,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   145,   146,   147,     0,     0,
       0,     0,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   170,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,     0,   189,   190,   191,   192,
       0,   193,     0,   194,     0,     0,     0,   195,   196,   197,
     198,     0,   199,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   226,     0,   227,     0,
       0,   228,     0,   229,   230,   231,   232,   233,     0,     0,
     234,   235,     0,   236,     0,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,   261,     0,   262,   263,     0,   264,     0,
     265,   266,   267,   268,   269,   270,     0,   271,   272,     0,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     367,     0,   368,   369,   370,   371,   372,     0,   373,   374,
       0,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   399,     0,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    91,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   109,   110,   111,   112,   113,     0,
     114,   115,     0,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   145,   146,   147,     0,     0,     0,     0,     0,
       0,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,     0,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   170,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,     0,   193,     0,
     194,     0,     0,     0,   195,   196,   197,   198,     0,   199,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
       0,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   226,     0,   227,     0,     0,   228,     0,
     229,   230,   231,   232,   233,     0,     0,   234,   235,     0,
     236,     0,     0,   237,   238,   480,     0,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   262,   263,     0,   264,     0,   265,   266,   267,
     268,   269,   270,     0,   271,   272,     0,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   293,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   481,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   482,     0,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   367,     0,   368,
     369,   370,   371,   372,     0,   483,   374,     0,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,     0,   399,
       0,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   109,   110,   111,   112,   113,     0,   114,   115,     0,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   145,
     146,   147,     0,     0,     0,     0,     0,     0,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,     0,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   170,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,     0,
     189,   190,   191,   192,     0,   193,     0,   194,     0,     0,
       0,   195,   196,   197,   198,     0,   199,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     226,     0,   227,     0,     0,   228,     0,   229,   230,   231,
     232,   233,     0,     0,   234,   235,     0,   236,     0,     0,
     237,   238,   239,     0,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,   262,
     263,     0,   264,     0,   265,   266,   267,   268,   269,   270,
       0,   271,   272,     0,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   500,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   367,     0,   368,   369,   370,   371,
     372,     0,   373,   374,     0,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   399,     0,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    91,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   109,   110,
     111,   112,   113,     0,   114,   115,     0,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   145,   146,   147,     0,
       0,     0,     0,     0,     0,     0,   148,   149,   150,   151,
     152,   153,   154,   155,   156,     0,   157,     0,   158,   159,
     160,   161,   162,   163,     0,   164,   165,   166,   167,     0,
       0,   168,   169,   170,   171,   172,     0,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,     0,   193,     0,   194,     0,     0,     0,   195,   196,
     197,   198,     0,   199,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   525,     0,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   226,     0,   227,
       0,     0,   228,     0,   229,   230,   231,   232,   233,     0,
       0,   234,   235,     0,   236,     0,     0,   237,   238,   239,
       0,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   262,   263,     0,   264,
       0,   265,   266,   267,   268,   269,   270,     0,   271,   272,
       0,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   291,   292,   293,   452,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,     0,   343,   344,   345,   346,   347,     0,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
       0,   367,     0,   368,   369,   370,   371,   372,     0,   373,
     374,     0,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,   388,
     389,   390,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,     0,   399,     0,   400,   401,   402,   403,     0,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   109,   110,   111,   112,   113,
       0,   114,   115,     0,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   145,   146,   147,     0,     0,     0,     0,
       0,     0,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     170,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,     0,   189,   190,   191,   192,     0,   193,
       0,   194,     0,     0,     0,   195,   196,   197,   198,     0,
     199,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     528,     0,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   226,     0,   227,     0,     0,   228,
       0,   229,   230,   231,   232,   233,     0,     0,   234,   235,
       0,   236,     0,     0,   237,   238,   239,     0,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,     0,   257,   258,   259,
     260,   261,     0,   262,   263,     0,   264,     0,   265,   266,
     267,   268,   269,   270,     0,   271,   272,     0,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   291,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   367,     0,
     368,   369,   370,   371,   372,     0,   373,   374,     0,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     399,     0,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   109,   110,   111,   112,   113,     0,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,     0,
       0,     0,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   532,     0,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,     0,     0,   228,     0,   229,   230,
     231,   232,   233,     0,     0,   234,   235,     0,   236,     0,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     262,   263,     0,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   367,     0,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   399,     0,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   109,
     110,   111,   112,   113,     0,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   145,   146,   147,
       0,     0,     0,     0,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,     0,     0,     0,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   545,     0,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,     0,     0,   228,     0,   229,   230,   231,   232,   233,
       0,     0,   234,   235,     0,   236,     0,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,   262,   263,     0,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,     0,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,     0,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   109,   110,   111,   112,
     113,     0,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   145,   146,   147,     0,     0,     0,
       0,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,     0,     0,     0,   195,   196,   197,   198,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   560,     0,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,     0,     0,
     228,     0,   229,   230,   231,   232,   233,     0,     0,   234,
     235,     0,   236,     0,     0,   237,   238,   239,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   262,   263,     0,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   367,
       0,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,     0,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   109,   110,   111,   112,   113,     0,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   145,   146,   147,     0,     0,     0,     0,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
       0,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,     0,   189,   190,   191,   192,     0,   193,     0,   194,
       0,     0,     0,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   564,     0,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,     0,     0,   228,     0,   229,
     230,   231,   232,   233,     0,     0,   234,   235,     0,   236,
       0,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,   261,
       0,   262,   263,     0,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,     0,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,     0,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,     0,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     109,   110,   111,   112,   113,     0,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   145,   146,
     147,     0,     0,     0,     0,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,     0,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,     0,   193,     0,   194,     0,     0,     0,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   567,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,     0,     0,   228,     0,   229,   230,   231,   232,
     233,     0,     0,   234,   235,     0,   236,     0,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   262,   263,
       0,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,     0,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,     0,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,     0,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    91,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   109,   110,   111,
     112,   113,     0,   114,   115,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   145,   146,   147,     0,     0,
       0,     0,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   170,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,     0,   189,   190,   191,   192,
       0,   193,     0,   194,     0,     0,     0,   195,   196,   197,
     198,     0,   199,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   226,     0,   227,     0,
       0,   228,     0,   229,   230,   231,   232,   233,     0,     0,
     234,   235,     0,   236,     0,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,   261,     0,   262,   263,     0,   264,     0,
     265,   266,   267,   268,   269,   270,     0,   271,   272,     0,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   481,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     367,     0,   368,   369,   370,   371,   372,     0,   483,   374,
       0,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   399,     0,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    91,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   109,   110,   111,   112,   113,     0,
     114,   115,     0,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,     0,   145,   146,   147,     0,     0,     0,     0,     0,
       0,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,     0,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   170,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,   183,   184,   185,   186,   187,
       0,   188,     0,   189,   190,   191,   192,     0,   193,     0,
     194,     0,     0,     0,   195,   196,   197,   198,     0,   199,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   815,
       0,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,     0,   219,   220,   221,   222,   223,
     224,   225,     0,   226,     0,   227,     0,     0,   228,     0,
     229,   230,   231,   232,   233,     0,     0,   234,   235,     0,
     236,     0,     0,   237,   238,   239,     0,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,     0,   257,   258,   259,   260,
     261,     0,   262,   263,     0,   264,     0,   265,   266,   267,
     268,   269,   270,     0,   271,   272,     0,     0,   273,   274,
     275,     0,     0,   276,   277,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,   291,   292,   293,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,     0,   343,
     344,   345,   346,   347,     0,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,     0,   367,     0,   368,
     369,   370,   371,   372,     0,   373,   374,     0,     0,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,     0,   399,
       0,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
      91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    92,    93,    94,    95,    96,
      97,    98,    99,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   109,   110,   111,   112,   113,     0,   114,   115,     0,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   136,   137,   138,
       0,   139,   140,   141,   142,   143,   144,     0,     0,   145,
     146,   147,     0,     0,     0,     0,     0,     0,     0,   148,
     149,   150,   151,   152,   153,   154,   155,   156,     0,   157,
       0,   158,   159,   160,   161,   162,   163,     0,   164,   165,
     166,   167,     0,     0,   168,   169,   170,   171,   172,     0,
     173,   174,   175,     0,   176,   177,   178,     0,   179,   180,
     181,   182,   183,   184,   185,   186,   187,     0,   188,     0,
     189,   190,   191,   192,     0,   193,     0,   194,     0,     0,
       0,   195,   196,   197,   198,     0,   199,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   817,     0,   208,   209,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     218,     0,   219,   220,   221,   222,   223,   224,   225,     0,
     226,     0,   227,     0,     0,   228,     0,   229,   230,   231,
     232,   233,     0,     0,   234,   235,     0,   236,     0,     0,
     237,   238,   239,     0,     0,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,     0,   257,   258,   259,   260,   261,     0,   262,
     263,     0,   264,     0,   265,   266,   267,   268,   269,   270,
       0,   271,   272,     0,     0,   273,   274,   275,     0,     0,
     276,   277,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   452,   295,   296,     0,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,     0,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,     0,
     338,   339,   340,   341,   342,     0,   343,   344,   345,   346,
     347,     0,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,     0,   367,     0,   368,   369,   370,   371,
     372,     0,   373,   374,     0,     0,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
       0,   387,   388,   389,   390,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   399,     0,   400,   401,
     402,   403,     0,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    91,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    92,    93,    94,    95,    96,    97,    98,    99,
       0,   101,   102,   103,     0,     0,     0,     0,     0,  1115,
       0,   104,   105,     0,   106,   107,   108,     0,   109,   110,
     111,   112,   113,     0,   114,   115,     0,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   136,   137,   138,     0,   139,   140,
     141,   142,   143,   144,     0,     0,   145,   146,   147,     0,
       0,     0,     0,     0,     0,     0,   148,   149,   150,   151,
     152,   153,   154,   155,   156,     0,   157,     0,   158,   159,
     160,   161,   162,   163,     0,   164,   165,   166,   167,     0,
       0,   168,   169,   170,   171,   172,     0,   173,   174,   175,
       0,   176,   177,   178,     0,   179,   180,   181,   182,   183,
     184,   185,   186,   187,     0,   188,     0,   189,   190,   191,
     192,     0,   193,     0,   194,     0,     0,     0,   195,   196,
     197,   198,     0,   199,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,     0,   208,   209,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   218,     0,   219,
     220,   221,   222,   223,   224,   225,     0,   226,     0,   227,
       0,     0,   228,     0,   229,   230,   231,   232,   233,     0,
       0,   234,   235,     0,   236,     0,     0,   237,   238,   239,
       0,     0,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,     0,
     257,   258,   259,   260,   261,     0,   262,   263,     0,   264,
       0,   265,   266,   267,   268,   269,   270,     0,   271,   272,
       0,     0,   273,   274,   275,     0,     0,   276,   277,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,     0,   289,   290,   291,   292,   293,   452,   295,
     296,     0,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,     0,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,     0,   338,   339,   340,
     341,   342,     0,     0,   344,   345,   346,   347,     0,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
       0,   367,     0,   368,   369,   370,   371,   372,     0,   373,
     374,     0,     0,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,     0,     0,   387,   388,
     389,   390,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,     0,   399,     0,   400,   401,   402,   403,     0,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,    91,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    92,
      93,    94,    95,    96,    97,    98,    99,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   109,   110,   111,   112,   113,
       0,   114,   115,     0,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   136,   137,   138,     0,   139,   140,   141,   142,   143,
     144,     0,     0,   145,   146,   147,     0,     0,     0,     0,
       0,     0,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,     0,   157,     0,   158,   159,   160,   161,   162,
     163,     0,   164,   165,   166,   167,     0,     0,   168,   169,
     170,   171,   172,     0,   173,   174,   175,     0,   176,   177,
     178,     0,   179,   180,   181,   182,   183,   184,   185,   186,
     187,     0,   188,     0,   189,   190,   191,   192,     0,   193,
       0,   194,     0,     0,     0,   195,   196,   197,   198,     0,
     199,   200,     0,   201,   202,     0,   203,   204,   205,   206,
    1233,     0,   208,   209,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   218,     0,   219,   220,   221,   222,
     223,   224,   225,     0,   226,     0,   227,     0,     0,   228,
       0,   229,   230,   231,   232,   233,     0,     0,   234,   235,
       0,   236,     0,     0,   237,   238,   239,     0,     0,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,     0,   257,   258,   259,
     260,   261,     0,   262,   263,     0,   264,     0,   265,   266,
     267,   268,   269,   270,     0,   271,   272,     0,     0,   273,
     274,   275,     0,     0,   276,   277,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,     0,
     289,   290,   291,   292,   293,   452,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,     0,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,     0,   338,   339,   340,   341,   342,     0,
     343,   344,   345,   346,   347,     0,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,     0,   367,     0,
     368,   369,   370,   371,   372,     0,   373,   374,     0,     0,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,     0,   387,   388,   389,   390,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     399,     0,   400,   401,   402,   403,     0,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    91,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    92,    93,    94,    95,
      96,    97,    98,    99,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   109,   110,   111,   112,   113,     0,   114,   115,
       0,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   136,   137,
     138,     0,   139,   140,   141,   142,   143,   144,     0,     0,
     145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,     0,
     157,     0,   158,   159,   160,   161,   162,   163,     0,   164,
     165,   166,   167,     0,     0,   168,   169,   170,   171,   172,
       0,   173,   174,   175,     0,   176,   177,   178,     0,   179,
     180,   181,   182,   183,   184,   185,   186,   187,     0,   188,
       0,   189,   190,   191,   192,     0,   193,     0,   194,     0,
       0,     0,   195,   196,   197,   198,     0,   199,   200,     0,
     201,   202,     0,   203,   204,   205,   206,  1246,     0,   208,
     209,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   218,     0,   219,   220,   221,   222,   223,   224,   225,
       0,   226,     0,   227,     0,     0,   228,     0,   229,   230,
     231,   232,   233,     0,     0,   234,   235,     0,   236,     0,
       0,   237,   238,   239,     0,     0,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,     0,   257,   258,   259,   260,   261,     0,
     262,   263,     0,   264,     0,   265,   266,   267,   268,   269,
     270,     0,   271,   272,     0,     0,   273,   274,   275,     0,
       0,   276,   277,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   452,   295,   296,     0,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,     0,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
       0,   338,   339,   340,   341,   342,     0,   343,   344,   345,
     346,   347,     0,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,     0,   367,     0,   368,   369,   370,
     371,   372,     0,   373,   374,     0,     0,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,     0,   387,   388,   389,   390,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   399,     0,   400,
     401,   402,   403,     0,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,    91,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    92,    93,    94,    95,    96,    97,    98,
      99,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   109,
     110,   111,   112,   113,     0,   114,   115,     0,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   136,   137,   138,     0,   139,
     140,   141,   142,   143,   144,     0,     0,   145,   146,   147,
       0,     0,     0,     0,     0,     0,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,     0,   157,     0,   158,
     159,   160,   161,   162,   163,     0,   164,   165,   166,   167,
       0,     0,   168,   169,   170,   171,   172,     0,   173,   174,
     175,     0,   176,   177,   178,     0,   179,   180,   181,   182,
     183,   184,   185,   186,   187,     0,   188,     0,   189,   190,
     191,   192,     0,   193,     0,   194,     0,     0,     0,   195,
     196,   197,   198,     0,   199,   200,     0,   201,   202,     0,
     203,   204,   205,   206,  1484,     0,   208,   209,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   218,     0,
     219,   220,   221,   222,   223,   224,   225,     0,   226,     0,
     227,     0,     0,   228,     0,   229,   230,   231,   232,   233,
       0,     0,   234,   235,     0,   236,     0,     0,   237,   238,
     239,     0,     0,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
       0,   257,   258,   259,   260,   261,     0,   262,   263,     0,
     264,     0,   265,   266,   267,   268,   269,   270,     0,   271,
     272,     0,     0,   273,   274,   275,     0,     0,   276,   277,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   452,
     295,   296,     0,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
       0,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,     0,   338,   339,
     340,   341,   342,     0,   343,   344,   345,   346,   347,     0,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,     0,   367,     0,   368,   369,   370,   371,   372,     0,
     373,   374,     0,     0,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,     0,   387,
     388,   389,   390,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   399,     0,   400,   401,   402,   403,
       0,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    91,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      92,    93,    94,    95,    96,    97,    98,    99,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   109,   110,   111,   112,
     113,     0,   114,   115,     0,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   136,   137,   138,     0,   139,   140,   141,   142,
     143,   144,     0,     0,   145,   146,   147,     0,     0,     0,
       0,     0,     0,     0,   148,   149,   150,   151,   152,   153,
     154,   155,   156,     0,   157,     0,   158,   159,   160,   161,
     162,   163,     0,   164,   165,   166,   167,     0,     0,   168,
     169,   170,   171,   172,     0,   173,   174,   175,     0,   176,
     177,   178,     0,   179,   180,   181,   182,   183,   184,   185,
     186,   187,     0,   188,     0,   189,   190,   191,   192,     0,
     193,     0,   194,     0,     0,     0,   195,   196,   197,   198,
       0,   199,   200,     0,   201,   202,     0,   203,   204,   205,
     206,  1496,     0,   208,   209,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   218,     0,   219,   220,   221,
     222,   223,   224,   225,     0,   226,     0,   227,     0,     0,
     228,     0,   229,   230,   231,   232,   233,     0,     0,   234,
     235,     0,   236,     0,     0,   237,   238,   239,     0,     0,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,     0,   257,   258,
     259,   260,   261,     0,   262,   263,     0,   264,     0,   265,
     266,   267,   268,   269,   270,     0,   271,   272,     0,     0,
     273,   274,   275,     0,     0,   276,   277,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   452,   295,   296,     0,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,     0,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,     0,   338,   339,   340,   341,   342,
       0,   343,   344,   345,   346,   347,     0,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,     0,   367,
       0,   368,   369,   370,   371,   372,     0,   373,   374,     0,
       0,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,     0,     0,   387,   388,   389,   390,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   399,     0,   400,   401,   402,   403,     0,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,    91,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    92,    93,    94,
      95,    96,    97,    98,    99,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   109,   110,   111,   112,   113,     0,   114,
     115,     0,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   136,
     137,   138,     0,   139,   140,   141,   142,   143,   144,     0,
       0,   145,   146,   147,     0,     0,     0,     0,     0,     0,
       0,   148,   149,   150,   151,   152,   153,   154,   155,   156,
       0,   157,     0,   158,   159,   160,   161,   162,   163,     0,
     164,   165,   166,   167,     0,     0,   168,   169,   170,   171,
     172,     0,   173,   174,   175,     0,   176,   177,   178,     0,
     179,   180,   181,   182,   183,   184,   185,   186,   187,     0,
     188,     0,   189,   190,   191,   192,     0,   193,     0,   194,
       0,     0,     0,   195,   196,   197,   198,     0,   199,   200,
       0,   201,   202,     0,   203,   204,   205,   206,  1498,     0,
     208,   209,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   218,     0,   219,   220,   221,   222,   223,   224,
     225,     0,   226,     0,   227,     0,     0,   228,     0,   229,
     230,   231,   232,   233,     0,     0,   234,   235,     0,   236,
       0,     0,   237,   238,   239,     0,     0,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,     0,   257,   258,   259,   260,   261,
       0,   262,   263,     0,   264,     0,   265,   266,   267,   268,
     269,   270,     0,   271,   272,     0,     0,   273,   274,   275,
       0,     0,   276,   277,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   452,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,     0,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,     0,   338,   339,   340,   341,   342,     0,   343,   344,
     345,   346,   347,     0,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,     0,   367,     0,   368,   369,
     370,   371,   372,     0,   373,   374,     0,     0,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,     0,     0,   387,   388,   389,   390,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   399,     0,
     400,   401,   402,   403,     0,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,    91,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    92,    93,    94,    95,    96,    97,
      98,    99,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     109,   110,   111,   112,   113,     0,   114,   115,     0,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   136,   137,   138,     0,
     139,   140,   141,   142,   143,   144,     0,     0,   145,   146,
     147,     0,     0,     0,     0,     0,     0,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,     0,   157,     0,
     158,   159,   160,   161,   162,   163,     0,   164,   165,   166,
     167,     0,     0,   168,   169,   170,   171,   172,     0,   173,
     174,   175,     0,   176,   177,   178,     0,   179,   180,   181,
     182,   183,   184,   185,   186,   187,     0,   188,     0,   189,
     190,   191,   192,     0,   193,     0,   194,     0,     0,     0,
     195,   196,   197,   198,     0,   199,   200,     0,   201,   202,
       0,   203,   204,   205,   206,  2057,     0,   208,   209,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   218,
       0,   219,   220,   221,   222,   223,   224,   225,     0,   226,
       0,   227,     0,     0,   228,     0,   229,   230,   231,   232,
     233,     0,     0,   234,   235,     0,   236,     0,     0,   237,
     238,   239,     0,     0,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,     0,   257,   258,   259,   260,   261,     0,   262,   263,
       0,   264,     0,   265,   266,   267,   268,   269,   270,     0,
     271,   272,     0,     0,   273,   274,   275,     0,     0,   276,
     277,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,     0,   289,   290,   291,   292,   293,
     452,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,     0,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,     0,   338,
     339,   340,   341,   342,     0,   343,   344,   345,   346,   347,
       0,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,     0,   367,     0,   368,   369,   370,   371,   372,
       0,   373,   374,     0,     0,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,     0,
     387,   388,   389,   390,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   399,     0,   400,   401,   402,
     403,     0,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,    91,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   109,   110,   111,
     112,   113,     0,   114,   115,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,     0,   145,   146,   147,     0,     0,
       0,     0,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   154,   155,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   170,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,   183,   184,
     185,   186,   187,     0,   188,     0,   189,   190,   191,   192,
       0,   193,     0,   194,     0,     0,     0,   195,   196,   197,
     198,     0,   199,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,     0,   219,   220,
     221,   222,   223,   224,   225,     0,   226,     0,   227,     0,
       0,   228,     0,   229,   230,   231,   232,   233,     0,     0,
     234,   235,     0,   236,     0,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,     0,   257,
     258,   259,   260,   261,     0,   262,   263,     0,   264,     0,
     265,   266,   267,   268,   269,   270,     0,   271,   272,     0,
       0,   273,   274,   275,     0,     0,   276,   277,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,     0,   287,
     288,     0,   289,   290,   291,   292,   293,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,     0,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,     0,   325,   326,   327,   328,     0,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,   344,   345,   346,   347,     0,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,     0,
     367,     0,   368,   369,   370,   371,   372,     0,   373,   374,
       0,     0,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   399,     0,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   859,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    92,    93,
      94,    95,    96,    97,    98,    99,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   574,   109,   110,   111,     0,   860,   575,
     861,   862,     0,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   863,   864,   125,     0,   126,   127,   128,   129,
       0,     0,   576,     0,   131,   132,   133,   134,   135,   577,
     136,   137,   138,     0,   139,   140,   141,   142,   143,   144,
       0,   578,   145,   146,   147,     0,     0,     0,   579,     0,
       0,     0,   148,   149,   150,   151,   152,   153,   865,   866,
     156,     0,   157,     0,   158,   159,   160,   161,   162,   163,
       0,   164,   165,   166,   167,     0,     0,   168,   169,   639,
     171,   172,     0,   173,   174,   175,     0,   176,   177,   178,
       0,   179,   180,   181,   182,     0,   184,   185,   186,     0,
       0,   188,     0,   189,   190,   867,   192,     0,   193,     0,
     194,   580,     0,   581,   195,   196,   197,   198,     0,   199,
       0,     0,     0,   202,     0,   203,   204,   205,   206,   207,
     582,   208,   209,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   218,   583,     0,   220,   221,   222,   223,
     868,   869,     0,   870,     0,   227,   584,   585,   228,   586,
     229,   230,   231,   232,   233,     0,     0,   234,     0,   587,
     236,   588,     0,   237,   238,   239,     0,     0,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   871,   589,   872,   258,   259,   260,
       0,     0,   262,   263,   590,   264,     0,     0,   266,   873,
     268,   269,   270,     0,   271,   272,     0,     0,   273,   274,
     275,     0,     0,   276,     0,   591,   278,   592,     0,   280,
     281,   282,   283,   284,   285,   286,   287,   288,     0,   289,
     290,     0,   292,     0,   452,   295,   296,     0,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   874,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,     0,   323,   324,   593,   325,
     326,   327,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,     0,   338,   339,   340,   341,   342,     0,   343,
     875,   345,   346,   347,   594,   348,   349,   876,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,     0,   365,   366,     0,   367,   595,   368,
     369,   370,   371,   372,     0,   877,   878,     0,     0,   375,
     376,     0,   378,     0,     0,   380,   381,   382,   383,   384,
     385,   386,     0,     0,   387,   388,   389,   390,   391,     0,
       0,   392,   393,   394,   395,   396,     0,   879,     0,   399,
     597,   400,   401,   402,   403,     0,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   859,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   422,   423,   424,
       0,    92,    93,    94,    95,    96,    97,    98,    99,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   574,   109,   110,   111,
       0,   860,   575,   861,   862,     0,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   863,   864,   125,     0,   126,
     127,   128,   129,     0,     0,   576,     0,   131,   132,   133,
     134,   135,   577,   136,   137,   138,     0,   139,   140,   141,
     142,   143,   144,     0,   578,   145,   146,   147,     0,     0,
       0,   579,     0,     0,     0,   148,   149,   150,   151,   152,
     153,   865,   866,   156,     0,   157,     0,   158,   159,   160,
     161,   162,   163,     0,   164,   165,   166,   167,     0,     0,
     168,   169,   639,   171,   172,     0,   173,   174,   175,     0,
     176,   177,   178,     0,   179,   180,   181,   182,     0,   184,
     185,   186,     0,     0,   188,     0,   189,   190,   867,   192,
       0,   193,     0,   194,   580,     0,   581,   195,   196,   197,
     198,     0,   199,     0,     0,     0,   202,     0,   203,   204,
     205,   206,   207,   582,   208,   209,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   218,   583,     0,   220,
     221,   222,   223,   868,   869,     0,   870,     0,   227,   584,
     585,   228,   586,   229,   230,   231,   232,   233,     0,     0,
     234,     0,   587,   236,   588,     0,   237,   238,   239,     0,
       0,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   871,   589,   872,
     258,   259,   260,     0,     0,   262,   263,   590,   264,     0,
       0,   266,   873,   268,   269,   270,     0,   271,   272,     0,
       0,   273,   274,   275,     0,     0,   276,     0,   591,   278,
     592,     0,   280,   281,   282,   283,   284,   285,   286,   287,
     288,     0,   289,   290,     0,   292,     0,   452,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     874,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,     0,   323,
     324,   593,   325,   326,   327,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,     0,   338,   339,   340,   341,
     342,     0,   343,     0,   345,   346,   347,   594,   348,   349,
     876,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,     0,   365,   366,     0,
     367,   595,   368,   369,   370,   371,   372,     0,   877,   878,
       0,     0,   375,   376,     0,   378,     0,     0,   380,   381,
     382,   383,   384,   385,   386,     0,     0,   387,   388,   389,
     390,   391,     0,     0,   392,   393,   394,   395,   396,     0,
     879,     0,   399,   597,   400,   401,   402,   403,     0,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     422,   423,   424
};

static const yytype_int16 yycheck[] =
{
      15,    28,   602,   479,   529,   448,   539,    48,   495,   796,
       0,    10,   724,   798,    13,   565,   449,    16,    17,   726,
       0,    20,    21,   813,    23,     0,   893,    26,    27,     0,
    1422,     0,   607,     0,   607,   771,   784,   602,   636,   637,
      14,   813,   813,    14,   499,   929,   677,    14,   813,   841,
     454,  1750,  1817,  1825,   666,   953,   769,    28,   656,   520,
    1373,   956,  1494,  1798,  1414,   895,  1445,   776,   773,  1491,
       0,    23,    71,    72,    73,    74,    75,  1670,   607,    50,
    1500,    80,  1502,  1832,    10,    84,    50,    13,     9,    79,
      16,    27,     9,   456,  1412,  1413,   801,     5,   998,    79,
      26,    27,    50,  1703,    79,   529,  1697,   531,    79,   533,
      79,    11,    79,   455,   569,  1136,     0,     5,  2067,    11,
       5,   833,    74,     5,   607,  2061,   144,   875,  1550,     5,
    1410,    13,    14,     5,     5,     5,     5,    13,    14,   714,
     544,    13,    14,   456,    71,     5,    72,  2064,    40,   714,
       5,    71,    56,    73,     5,    75,  1436,     5,     5,   461,
      80,    39,   113,    56,   162,   162,   833,  2202,  2232,  1138,
       4,     3,     4,     5,   106,     9,    56,     9,    73,    71,
     204,   517,    49,   132,   231,   104,   167,     0,    83,   517,
    2283,    56,   899,     9,     5,  1739,  2334,     4,  1320,  1321,
      26,   162,     9,  1325,   264,   266,    90,    33,  2016,   784,
     104,   784,   140,   125,   210,   272,   272,    73,   705,   231,
     785,   676,  1702,   788,   789,   111,     3,    83,     5,     3,
    1639,    11,   177,  2159,   210,  1410,  1358,  1359,   125,   602,
     103,   948,   949,   156,   225,   177,   332,   252,   116,   961,
      36,   310,  1769,   249,  2180,   784,    30,    31,   154,    11,
      40,  1436,   130,   152,   606,  2501,   878,   865,   866,  2218,
     111,  1166,   163,   249,   202,   873,    39,    90,    11,   111,
     375,   237,   426,   114,  2131,  2392,   410,   820,    40,   336,
     997,    71,   237,   114,  2059,   294,  2434,  1610,   389,    26,
     875,   784,   875,   455,   251,   237,    33,   740,   240,   256,
      26,  1904,   467,   768,   409,   470,   468,    33,   154,    71,
    1837,   255,   116,    57,   342,    11,   470,  2563,  1928,   106,
     306,    65,   113,   222,   120,   118,  1768,   178,    71,   607,
     456,   432,   466,  1765,   272,  1767,   875,  1938,   116,   261,
     181,  1942,   248,   716,   717,   249,   352,   304,   376,   406,
     181,   724,   410,   422,   251,  1715,  2174,  2460,   294,   249,
     256,   203,   235,  1268,   261,   238,   352,  2303,   214,   292,
     466,   956,   266,   956,   340,   828,   429,   161,   831,   163,
     387,     5,   875,   225,   406,   340,   839,  2535,   416,   380,
     177,   382,   835,   408,   198,   466,   466,  2514,   340,   452,
     251,   429,   408,   470,   470,  1695,  2263,  1697,   466,   466,
     324,  1157,   356,    65,   142,   406,   387,   956,   296,   456,
     766,   324,   408,   735,   452,  2499,  2471,  1458,   766,    11,
    1984,   325,  1227,   898,   324,   466,   470,  1927,   466,   448,
     449,   450,   907,   266,   466,  1864,   911,   376,   455,   324,
     237,   412,  1174,   240,   919,   920,   481,  2202,   186,   349,
     833,   468,   470,   956,   402,   256,   425,   932,   933,   520,
     843,   480,   456,   482,   455,   456,   602,  2436,   455,  1373,
    1459,   225,   387,   492,  2087,   373,  1618,  1619,  1620,  1621,
     842,   500,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,
    1632,  1633,   325,   512,  2114,   447,   784,   159,  2435,   509,
    1695,   964,  1697,   497,   450,   524,  1424,  2118,  1240,   509,
     843,   387,  2123,   359,   509,  2126,   507,   464,   509,    26,
     509,   468,   509,   507,   465,   429,   431,  1447,   419,   548,
     549,   550,  1674,  1675,   471,   366,   367,  2493,   466,   507,
     512,  1993,   462,   340,   500,  2337,   470,   452,  2333,  1453,
     462,   431,   492,  1240,   500,   466,   464,   470,   466,   509,
     468,   466,    22,   467,   466,   469,  2006,   602,    28,  2338,
     466,  1166,   452,  1166,   466,   466,   466,   466,   961,   466,
     716,   717,  2449,  1982,   524,  1435,   466,   875,   724,  1959,
     373,   466,   611,  1963,   408,   466,   429,    80,   466,   466,
     231,  1186,   429,   457,   458,   457,   458,   410,   548,   549,
     550,  1196,   359,  2055,  1199,   606,  1954,  1166,   125,   606,
     408,   457,   458,   359,  2237,   452,   420,    62,    63,   676,
     457,   458,   310,    26,   467,   297,   469,  1182,  1938,   122,
     231,  2464,  1942,  2466,   679,  1560,  2257,     0,   163,   640,
     447,   323,  1270,  1986,   689,   152,  2441,   457,   458,   459,
     460,   461,   462,  1166,   305,   343,   701,  1237,   956,   467,
     130,  1241,   470,  1268,  1244,  1268,  1612,   349,    90,   714,
    1595,   716,   717,   469,   342,   676,  2113,   459,   460,   461,
     462,   431,   333,  1344,     4,   470,  1429,   833,   376,     9,
     106,   720,  1617,   113,  1640,   336,  1610,   843,   466,  2161,
     468,  1155,   452,  1518,    47,   431,  2471,   420,   376,  1268,
     739,   740,    29,  2150,  2547,   222,   745,   746,   747,  1192,
       4,  1646,   125,   320,  1197,     9,   452,   231,  1182,    73,
    1552,   403,   188,  1938,   422,   336,    53,  1942,   236,    83,
     466,   770,   771,   459,   460,   461,   462,  1201,   416,   392,
     751,   752,  1206,   754,   783,  1268,   263,   751,   752,   284,
     754,   177,   231,   745,   231,   406,   467,  2562,    73,   470,
     720,   800,   192,   751,   752,   804,   754,     4,    83,  1172,
     809,  1174,     9,   739,  1218,   814,  2515,  2516,  1449,  1274,
     283,  1526,   152,   822,   422,  2232,   746,   157,   466,   828,
     270,   467,   831,  2113,   470,   406,   835,   836,  2118,   838,
     839,   339,   841,  2123,   431,   961,  2126,  2127,   800,   466,
     770,   237,  1561,   152,   240,   466,  2288,  1566,   157,   249,
     355,   251,   336,   783,   188,   452,  2565,   180,   449,   843,
    2150,   842,   185,  2293,   466,   842,   464,  1240,   318,   466,
     468,   208,   322,  1338,   804,   457,   458,   459,   460,   461,
     462,   468,   222,    11,   814,   466,  2323,   336,  1166,   336,
    2327,   916,  2329,  1798,   310,   895,   266,  1362,   221,   349,
     836,   449,   838,    22,  1798,   895,   449,   140,   381,    28,
     895,   841,    40,   222,   895,   208,   895,    17,   895,   152,
     929,    21,   406,   263,   157,    22,   459,   343,  2113,  1337,
     161,  1339,  1340,  2118,  1399,   470,  1653,  1497,  2123,  1499,
     342,  2126,  2232,    71,   340,   125,  2363,  1418,   380,    26,
     382,     5,  2084,     7,   263,   964,   466,   406,    12,   406,
     376,   332,   333,   413,    18,  2150,   461,  2257,    22,   202,
     150,   466,  2389,   468,   376,  1560,   467,  1560,  1003,   470,
     162,  1778,   466,   992,  1779,   966,  2388,  1895,   467,   222,
    1268,   470,   467,  2425,  2426,   470,   461,   625,   626,    76,
     467,   466,   336,   468,  1547,   467,   422,    84,   470,   343,
    1595,   130,  1595,   467,   416,  1812,   470,   466,  1818,   466,
    1766,  1560,  1644,  1645,   652,   467,   467,   429,   470,  1746,
     263,   354,  1617,   130,  1617,   112,  1818,  1818,  1840,   272,
    2172,   204,   376,  1818,   111,    53,  1172,  2232,  1174,   125,
     452,   447,  1425,   466,  2486,   144,  1595,   429,  1777,   431,
    1779,  1646,   992,  1646,   466,   145,   467,  1560,   318,   470,
     466,   251,  2257,  2363,   150,  1797,   256,  1799,  1617,   332,
     333,   261,  2499,    22,   380,  1670,   382,  1670,   422,    28,
     467,   467,  1986,   470,   470,  1104,  1737,  1106,  2500,  2389,
     467,   178,  1595,   470,  2236,   145,  1115,  1646,  1117,  2551,
      13,    14,   189,  1113,  1240,  2517,   466,   145,   468,  2024,
    1573,  1105,    13,    14,  1617,  1405,  1406,  1500,  1501,  1502,
     145,  1670,  1113,   464,   467,   466,     8,   468,   467,    11,
    1149,   470,   251,    15,    16,    17,    65,   607,  1157,  1158,
     466,   270,   467,  1646,   467,   470,   422,   470,     8,  1168,
    1169,  1170,  1171,  2040,  1173,    15,    16,    17,    79,   402,
    1179,  2573,  1181,   270,  1104,   433,  1106,  1670,  2363,   467,
     256,   145,   470,  1192,  1193,   261,  1651,   468,  1197,  1198,
    1410,   130,   111,  1202,  1203,  1204,  1205,   467,  1207,  1208,
     470,   145,    35,   322,  2389,   332,   333,  1216,  1217,  2499,
     145,  1708,   279,  1798,   394,  1798,  1436,   266,   376,  1149,
    1229,    54,  1158,  1798,   404,   322,   323,  2022,   332,   333,
     349,  1231,  1168,    35,  1170,   863,   864,  1173,  1955,   220,
    1711,  1712,  1713,  1179,   872,  1181,   467,   166,  1994,   470,
    1231,   467,   349,   342,   470,   467,   342,  1193,   470,  1798,
     466,  1978,  1198,  1581,  1582,  1583,  1202,  1203,  1204,  1205,
     103,  1207,  1208,  2031,   467,   342,     5,   470,   467,  1839,
     467,   470,  1560,   470,     5,  1322,  1216,   376,   365,   467,
     376,   368,   470,   466,   413,   923,   924,  2202,   467,  1425,
     467,   470,   163,   470,   514,  1798,   516,   279,  2202,   376,
     466,   157,   467,   185,  2499,   470,   466,  1595,   394,  1904,
     380,  1904,   382,  2200,   784,  1362,   467,   416,   404,   470,
     416,   270,   251,   194,   206,   467,   466,   256,   470,  1617,
     429,  1322,   467,   429,   467,   470,   293,   470,   209,   416,
     467,     5,   467,   470,   187,   470,   467,  2262,   219,   470,
    2265,    91,   429,   452,  1373,  1904,   452,   466,  1646,   467,
     342,   380,   470,   382,  1500,  1501,  1502,   466,   297,   318,
     466,  1362,   466,   322,   467,   452,   467,   470,   467,   470,
       5,   470,  1670,   312,  1403,  2112,   268,  1378,   466,   466,
    1425,  1410,   235,  1440,   376,   238,  1686,  1687,  1688,  1689,
     349,  1904,  2209,  1394,   467,   875,   249,   470,   268,   467,
    1793,    91,   470,   466,  1797,   467,  1799,  1436,   470,  1410,
     466,  1440,  1929,   163,  1443,  1435,  1445,   467,  2013,  2024,
     470,  2024,   167,   466,   416,  1435,  2031,   280,  2031,   467,
    1435,  1943,   470,  1945,  1435,  1436,  1435,   429,  1435,  1440,
     480,   466,   482,   188,   194,  2025,  2026,   328,   466,   466,
     466,     5,   466,  1403,   413,  1695,     5,  1697,   466,   209,
     452,  1506,  1491,  2205,   403,  2024,   466,  1973,   466,   219,
     323,   466,  2031,   163,   466,   277,   956,   607,   430,   204,
     225,   470,  2087,    94,  2087,   220,   349,    35,   157,   263,
     343,   157,   261,   466,  1539,   245,   387,   466,    83,   470,
    1798,   387,    53,    53,   194,   387,   242,   387,   387,   429,
     363,  2024,  1541,   145,    90,   466,    35,  1546,  2031,   209,
     251,  1550,  1551,  1552,  1553,   251,   271,   468,  2087,   219,
     419,   466,   466,    34,     8,  1564,   466,    11,   425,   466,
    1569,    15,    16,    17,  1573,     9,  2471,  2289,   385,   385,
      11,   470,   385,   466,   466,   245,  1576,  2471,   387,   171,
     153,   453,   454,   455,   162,   457,   458,   459,   460,   461,
     462,   470,   467,  2201,  2087,  1576,   266,    35,   328,   472,
     410,  1610,   466,   453,   454,   455,   202,   457,   458,   459,
     460,   461,   462,   470,   352,   210,  1546,  2202,   470,  2202,
     267,  1551,  1552,  1553,   466,   210,  1904,  2202,  1564,   251,
     210,  1682,  1657,  2006,   467,    30,    31,     8,   302,  1569,
      11,   264,   422,  1680,    15,    16,    17,   466,   145,   145,
     429,   251,  2237,   266,  2237,   380,   266,   382,   328,    35,
    1697,    32,  2133,  2202,   251,    34,   464,  1793,   464,  2140,
     387,  1797,   466,  1799,   784,  1684,   467,  2262,   403,  2262,
    2265,   406,  2265,  1692,  1693,  1694,  1695,   387,  1697,  1698,
     387,   387,  2414,  1702,  1703,    90,   467,   467,  2237,  1680,
     162,   467,   467,  2311,   467,   467,  1166,   468,  2318,  2202,
     467,   467,   470,   449,  1695,    22,  1697,  2170,  1938,   467,
     467,    28,  1942,  2262,   467,   449,  2265,   467,   467,   449,
     467,   162,    22,   467,  1743,   466,  2531,   387,    28,   466,
     410,   276,   426,  2318,  2237,   467,  2024,   466,  2470,    22,
    1759,   426,  1761,  2031,   466,    28,  1765,  1766,  1767,   416,
    1769,  2304,  1692,  1693,  1694,   875,   266,   455,   451,  2262,
     408,   470,  2265,  1798,  2245,   267,  1785,   267,  1787,   267,
     230,   387,   251,   145,   466,   188,  2283,   270,   145,   145,
    1815,  1800,  1801,  1802,  1803,  1804,  1805,  1806,  1807,  1808,
    1809,   387,  2267,   387,   387,   387,  2416,  2250,  1268,  2087,
    1819,   467,   470,   264,   268,   429,    35,  1826,   266,   145,
    2263,   145,   464,   130,   340,  1761,   240,   467,  1837,  1759,
     136,  1840,  2205,    65,   162,   206,  1836,   157,    11,    71,
     130,   467,   471,   467,   162,   466,   956,   467,    22,  1785,
     467,    83,  2395,   272,    28,  1836,  2309,   130,   426,   376,
     162,   470,   452,   466,  1800,  1801,  1802,  1803,  1804,  1805,
    1806,  1807,  1808,  1809,   171,   415,   325,   465,   467,   111,
    2006,   113,    81,   267,   145,   995,  2471,   466,  2471,  1819,
     467,   467,   466,  2113,   166,  2360,  2471,   268,  2118,   397,
     466,    35,   466,  2123,   410,    77,  2126,  2372,  1917,   467,
    1840,  1920,  1921,  1922,  1923,   465,  2289,   465,  1927,  1928,
    2293,   467,  1931,  2533,  2202,  1934,  2369,   162,   466,  1938,
    2150,   467,  2471,  1942,   166,   607,   275,  2390,   209,  1948,
    1965,  2476,   467,   466,  1969,  2318,   467,   342,   466,   209,
     378,   466,   273,    53,   174,   467,   130,  1938,   467,  2237,
     192,  1942,   467,   270,   455,   167,   429,   190,  1977,   179,
     256,   256,   387,  1982,   387,  1975,  1976,  1986,  2471,   455,
     270,   376,   466,    35,  2262,  1994,   188,  2265,   251,   466,
    1920,  1921,  1922,  1923,  1975,  1976,   104,   270,   266,   453,
     454,   455,   429,   457,   458,   459,   460,   461,   462,   466,
    2019,   318,  2232,    35,   162,   322,   285,   209,   465,   251,
     466,   416,   428,   225,   256,   420,   466,   466,   318,    83,
     126,   467,   322,   312,   429,   210,   466,  2257,   111,    35,
     466,  2414,   349,  2416,   145,   318,  2055,    71,   118,   322,
     145,    35,  2061,   333,    53,   467,  1166,   452,   333,   349,
      35,   466,  2062,  2072,   466,   297,   467,   415,   467,   271,
     470,   466,   178,    71,    35,   410,   349,    35,   397,  2205,
     312,  2062,   453,   454,   455,    65,   457,   458,   459,   460,
     461,   462,   269,    65,   466,   470,   270,  2470,    35,   349,
    1560,   455,   256,   178,  2113,  2114,   413,  2116,   233,  2118,
     397,   466,   784,   256,  2123,    35,   466,  2126,  2127,   269,
    2129,   466,  2131,   413,   269,   467,   466,   249,   266,   470,
     319,   332,   190,   758,   336,  1595,   266,  2118,   266,    32,
     413,  2150,  2123,  2363,   318,  2126,   116,    21,   322,   466,
     408,   509,  1793,  1180,  1780,  1977,  1495,  1617,  1268,  1743,
    2533,  2170,  2171,  2289,  2389,  2467,  2146,  2293,  1821,  2389,
    2179,   403,  2473,  2018,  2554,   349,  2296,  2202,   380,  2530,
     382,  2518,  2220,  1489,  1501,  2470,  1646,    35,  1826,  1541,
     771,  1797,  2318,  2471,  2203,  2204,  2528,  1486,  2468,  1545,
     828,   403,   456,   875,   406,  2214,    54,  2331,  2217,    35,
    1670,  2414,  2212,  2533,  1815,   739,   709,   761,  1450,  1152,
    2229,   760,  1465,  2232,   478,   479,  1720,  2380,    54,  1126,
    2267,  2212,  1968,  2233,  1151,  2171,   763,  1436,  1697,   413,
    1928,  2250,  1944,  1695,  2258,   499,  2363,  2362,  2257,  2179,
    2375,  2374,  2233,  1255,  2263,   103,  2457,  2142,  2458,  2445,
    1378,  1453,   990,  1276,  2273,  1548,  1428,  2203,  2204,  2278,
    1376,  2355,   843,  1425,   717,   993,  2257,   103,  2287,  2499,
    1105,  2217,  1106,  1744,   956,   745,  2267,    -1,  2414,    -1,
    2416,    -1,    -1,  2318,    -1,    -1,    -1,  2322,    -1,  2229,
    2309,    -1,  1412,  1413,  1414,    -1,   931,  2332,    -1,    -1,
      -1,    -1,    -1,   140,    -1,   569,    -1,    -1,   166,    -1,
      -1,    -1,    -1,    -1,    -1,   152,  2335,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,    -1,  2336,    -1,  1798,   187,
      -1,    -1,  2278,    -1,  2470,    -1,    -1,    -1,   602,    -1,
      -1,    -1,    -1,   607,  2363,  2336,    -1,  2287,    -1,    -1,
    2369,   187,    -1,    -1,    -1,  2374,    -1,    -1,    -1,   623,
      -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,    -1,
    2389,  2390,  2391,  2392,    -1,  2385,    -1,   235,     0,     8,
     238,  2416,    11,    -1,    -1,   222,  2421,    -1,  2423,   653,
      -1,   249,  2427,  2428,  2385,  2335,    -1,  2533,    -1,   235,
      -1,    -1,   238,    -1,    -1,    -1,  2425,  2426,   672,   673,
     674,    40,   676,   249,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,   280,    -1,    -1,    -1,   263,    -1,    -1,    -1,
    2449,    -1,   696,    -1,  1904,   272,  2471,    -1,  2457,    -1,
    1560,    -1,    71,    -1,   280,    -1,    -1,     8,  2467,    -1,
      11,    -1,   716,   717,    15,    16,    17,    -1,    -1,   723,
     724,    -1,    -1,    -1,    -1,   323,    -1,  2486,    90,    -1,
      -1,    -1,    -1,    -1,  2493,  1595,    -1,    -1,    -1,    40,
    2499,    -1,  2492,    -1,  1166,   343,    47,   323,    -1,   753,
      -1,  1126,    -1,   757,   758,  2514,    -1,  1617,  2533,    -1,
      -1,  2492,    -1,    -1,   768,   363,    -1,   343,     8,   138,
      71,    11,    -1,    -1,    -1,    15,    16,    17,   140,    -1,
     784,    -1,    -1,    -1,    -1,    -1,  1646,   363,    -1,    -1,
     152,    -1,    32,    49,    -1,   157,    -1,    -1,    -1,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
    1670,   180,   174,    -1,  2024,    -1,   185,    -1,    -1,    -1,
      -1,  2031,    -1,    -1,    -1,   402,    -1,    -1,    -1,   833,
      -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,   843,
     202,    -1,    -1,    -1,    -1,    -1,  1268,    -1,    -1,    -1,
      -1,    -1,   221,    -1,    -1,  1715,    -1,    -1,     0,    -1,
     222,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   875,    -1,    -1,    -1,    -1,    -1,  2087,   134,   180,
      -1,    -1,   138,    -1,   185,    -1,    -1,   464,    -1,   602,
     467,   468,    -1,    -1,   898,    -1,    -1,    -1,    -1,   268,
     904,   263,   158,   907,   266,   161,    -1,   911,    -1,    -1,
     272,    -1,    -1,    -1,    -1,   919,   920,    -1,    -1,   175,
     221,    -1,    -1,   927,    -1,    -1,   930,   931,   932,   933,
      -1,    -1,    -1,    -1,    -1,    -1,   940,   941,  1798,    -1,
      -1,    -1,    -1,    -1,    -1,  1320,  1321,    -1,    90,    -1,
    1325,    -1,   956,   957,   958,   959,   960,   961,    -1,    -1,
      -1,   965,    -1,   325,    -1,   969,   206,   268,   972,    -1,
      -1,   975,   976,   977,   978,   979,   980,   981,   982,   983,
      -1,    -1,   986,  1358,  1359,   354,    -1,    -1,    -1,   993,
      -1,   995,  2202,    -1,    -1,    -1,    -1,    -1,   140,    -1,
     256,   714,    -1,   716,   717,    -1,    -1,    -1,   264,    -1,
     152,    -1,    -1,    -1,   376,   157,    -1,    -1,    -1,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,  2237,   268,   171,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     402,    -1,    -1,    -1,  1904,    -1,    -1,    -1,   304,    -1,
      -1,    -1,  2262,   354,    -1,  2265,    -1,    -1,    -1,    -1,
     202,    -1,    -1,    -1,   426,    -1,   428,   429,    -1,    -1,
      -1,    -1,   785,    -1,    -1,   788,   789,    -1,    -1,    -1,
     222,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,  1954,    -1,    -1,    -1,    -1,  1959,
      -1,    -1,   464,  1963,  1108,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,  1126,    -1,   266,    -1,    -1,    -1,    -1,    -1,
     272,  1135,  1136,    -1,    -1,   848,   849,    -1,  1560,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,  1166,    -1,  2024,    -1,    -1,    -1,  1172,    -1,
    1174,  2031,    -1,  1595,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   325,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1617,   909,   910,    -1,    -1,
      -1,    -1,    -1,    -1,   917,    -1,    -1,    -1,   921,   922,
      -1,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   936,  1646,   938,    -1,  2087,    -1,    -1,
      -1,    -1,    -1,    -1,   376,    -1,  1240,    -1,   951,   952,
      -1,    -1,    -1,  1618,  1619,  1620,  1621,    -1,  1670,  1624,
    1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,    -1,
     402,  2471,    -1,    -1,  1268,    -1,    -1,    -1,    -1,    -1,
    1274,  1275,    -1,    -1,    -1,    -1,  1280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   426,    -1,   428,   429,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1674,
    1675,    -1,    -1,    -1,    -1,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1320,  1321,  1322,    -1,
      -1,  1325,   464,    -1,    -1,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,  1337,  1338,  1339,  1340,    -1,    -1,    -1,
      -1,  1345,  2202,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1358,  1359,    -1,    -1,  1362,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1375,    -1,  1377,    -1,  1379,  1798,  2237,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1399,    -1,    -1,    -1,    -1,
      -1,    -1,  2262,    -1,    -1,  2265,  1410,    -1,  1412,  1413,
    1414,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,  1425,  1135,  1136,  1428,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,  1450,    -1,    -1,    -1,
     623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1186,    -1,    -1,    -1,    -1,    -1,  1483,
     653,    -1,  1904,  1196,    -1,    -1,  1199,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1500,  1501,  1502,   672,
     673,   674,    -1,   676,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   696,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
     723,  1264,    -1,   180,    -1,    -1,  1560,    -1,   185,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     753,    -1,    -1,    -1,   757,   758,    -1,    -1,  1592,    -1,
      -1,  1595,    -1,    -1,   221,    -1,    -1,    -1,  1602,    -1,
      -1,    90,  2024,    -1,  1608,    -1,    -1,  1611,    -1,  2031,
      -1,  2471,    -1,  1617,  1618,  1619,  1620,  1621,    -1,    -1,
    1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,
      -1,    -1,    -1,  1637,  1638,    -1,    -1,    -1,    -1,    -1,
      -1,   268,  1646,    -1,    -1,    -1,    -1,  1651,    -1,    -1,
      -1,   140,    -1,    -1,  1658,    -1,    -1,  1661,    -1,  1663,
      -1,    -1,    -1,   152,    -1,  2087,  1670,  1671,   157,    -1,
    1674,  1675,    -1,   162,    -1,  1679,  1680,    -1,    -1,    -1,
      -1,    -1,   171,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,  1695,    -1,  1697,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1709,    -1,    -1,    -1,  2084,
    1423,  1715,  1425,   202,  1718,  1719,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1729,    -1,   354,    -1,    -1,
      -1,   904,    -1,   222,    -1,    -1,   206,    -1,    -1,    -1,
      -1,  1745,    -1,    -1,  1457,  1458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   927,    -1,    -1,   930,    -1,    -1,
     933,    -1,    -1,    -1,    -1,    -1,    -1,   940,   941,    -1,
      -1,    -1,    -1,    -1,   263,    -1,    -1,   266,    -1,    -1,
    2202,    -1,    -1,   272,   957,   958,   959,   960,    -1,  1793,
      -1,    -1,   965,  1797,  1798,  1799,   969,  2172,   268,   972,
      -1,    -1,   975,   976,   977,   978,   979,   980,   981,   982,
     983,    -1,    -1,   986,    -1,  2237,    -1,    -1,    -1,    -1,
     993,    -1,   995,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,   325,    -1,    -1,    -1,
    2262,    -1,    -1,  2265,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1855,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2236,    -1,    -1,    -1,    -1,  1579,  1580,    -1,    -1,
      -1,  1584,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,   376,    11,    -1,
      -1,    -1,    -1,    -1,  1898,  1899,    -1,    -1,    -1,  1903,
    1904,    -1,    -1,    -1,  1908,    -1,    -1,  1911,  1912,    -1,
      -1,    -1,  1916,   402,    -1,    -1,    -1,    40,    -1,    -1,
       8,    -1,    -1,    11,    47,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,  1938,  1108,    -1,   426,  1942,   428,
     429,    -1,    -1,    -1,    32,    -1,    -1,    -1,    71,    -1,
    1954,    -1,    -1,    -1,    -1,  1959,    -1,    -1,    -1,  1963,
      -1,    -1,  1135,  1136,    -1,    -1,    -1,   690,    -1,  1973,
      -1,    -1,    -1,    -1,    -1,   464,    -1,    -1,   467,   468,
     469,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,  2006,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,  2015,    -1,   736,    -1,   138,    -1,    -1,    -1,    -1,
    2024,    32,    -1,    -1,    -1,    -1,    -1,  2031,    -1,    40,
      -1,    -1,    20,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2471,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,
      71,    -1,   185,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
    2084,    -1,    -1,  2087,    72,  1798,    -1,    -1,    -1,    -1,
      -1,    -1,  2096,  2097,    -1,    -1,  2100,    -1,   221,    87,
      -1,    -1,  1275,    -1,    -1,    -1,    -1,  1280,    -1,  2113,
      -1,    -1,    -1,    -1,  2118,    -1,    -1,    -1,   206,  2123,
      -1,    -1,  2126,  2127,    -1,    -1,    -1,    -1,  1841,    -1,
    2134,  2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,  2150,    -1,  2152,  1322,
      -1,   139,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,
      -1,    -1,    -1,    -1,  1337,    -1,  1339,  1340,  2172,   180,
      -1,   159,  1345,     8,   185,    -1,    11,    -1,    -1,   902,
     268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   206,   207,    -1,  2202,    -1,
     188,  2205,  1375,   926,  1377,    40,  1379,    -1,   931,    -1,
     221,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   942,
     943,   944,    -1,   946,    -1,    -1,    -1,    -1,  2232,    -1,
      -1,   354,  2236,  2237,    -1,    -1,    71,    -1,    -1,  1412,
    1413,  1414,    -1,   254,    -1,    -1,   234,    -1,    -1,  2253,
      -1,    -1,    -1,  2257,    -1,  1428,    -1,   268,  2262,    -1,
     271,  2265,   206,  2267,    -1,    -1,    -1,    -1,   991,    -1,
      -1,    -1,    -1,    -1,    -1,  2279,    -1,  1450,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2289,    -1,    -1,    -1,  2293,
    2294,    -1,  1465,  1016,    -1,    -1,    -1,    -1,    -1,    -1,
    2013,    -1,   290,   138,    -1,  2018,    -1,    -1,    -1,    -1,
    1483,    -1,    -1,    -1,  2318,   303,    -1,    -1,    -1,  2032,
    2033,    -1,    -1,    -1,   268,    -1,    -1,   450,    -1,    -1,
      -1,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,   354,    -1,   180,   334,    -1,   336,    -1,
     185,    -1,    -1,    -1,    -1,   343,  2360,    -1,   346,  2363,
      -1,     8,    -1,    -1,    11,   453,   454,   455,  2372,   457,
     458,   459,   460,   461,   462,    -1,  2380,   365,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2389,   221,    -1,   376,    -1,
      -1,    -1,    -1,    40,    -1,   383,    -1,    -1,    -1,  1122,
      47,    -1,    -1,    -1,   392,  2409,    -1,    -1,    -1,    -1,
    2414,  1134,  2416,    -1,    -1,    -1,  1139,    -1,    -1,  1592,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,  1602,
      -1,    -1,    -1,   268,   422,  1608,    -1,    -1,  1611,   450,
    2444,  2445,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,
      -1,    -1,    -1,    -1,  1637,  1638,  2470,  2471,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2193,  2194,    -1,    -1,    -1,  1658,    -1,    -1,  1661,  2202,
    1663,   138,    -1,    -1,    -1,  2499,    -1,  2501,  1671,    -1,
      -1,    -1,    -1,    -1,     0,    -1,  1679,  1680,    -1,   453,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   354,
      -1,    -1,    18,    -1,    -1,    -1,    -1,    -1,    -1,  2533,
      -1,    -1,    28,   180,    30,    31,  1709,    -1,   185,    -1,
      -1,     8,  1715,    -1,    11,  1718,  1719,    -1,    -1,    -1,
      46,    -1,    -1,    -1,    -1,  1278,  1729,    -1,     8,  2563,
    2564,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      66,    -1,  1745,    40,   221,    -1,    -1,    -1,  1301,    -1,
      47,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    90,  1318,    -1,  1320,  1321,    -1,
    1323,    -1,  1325,    -1,    71,  2318,  1329,    -1,    -1,    -1,
      -1,   107,    -1,  1336,    -1,   450,    -1,    -1,  1341,    -1,
      -1,   268,   457,   458,   459,   460,   461,   462,  1351,  1352,
    1353,  1354,    -1,    -1,   130,  1358,  1359,    -1,  1361,    -1,
     136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,  1372,
     146,  1374,    -1,    -1,    -1,    -1,    -1,    -1,  1381,  1382,
    1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,    -1,    -1,
      -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1855,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1417,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,
    1433,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,  1898,  1899,    -1,   224,    -1,
    1903,    -1,    -1,    -1,    -1,  1908,    -1,    -1,  1911,  1912,
      -1,    -1,    -1,  1916,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,   206,    -1,  2471,    -1,
      -1,    -1,     3,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,  1954,    -1,    -1,    -1,    -1,  1959,    -1,    -1,    -1,
    1963,    32,    -1,    -1,    35,    -1,    -1,    -1,   294,    40,
    1973,   268,    -1,   450,    -1,    -1,    47,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,    -1,
      71,    -1,    -1,    -1,   330,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2015,    -1,    -1,    -1,   342,    -1,    -1,    -1,
      -1,     8,    -1,   349,    11,    -1,    -1,   353,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,   363,  1591,    -1,
      -1,    -1,    -1,    -1,  1597,    32,    -1,    -1,    -1,    -1,
     376,    -1,    -1,    40,    -1,    -1,    -1,   354,    -1,    -1,
      47,  1614,  1615,  1616,    -1,  1618,  1619,  1620,  1621,    -1,
      -1,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,
    1633,  1634,    -1,    -1,    71,   411,    -1,    -1,    -1,    -1,
     416,    -1,    -1,  2096,  2097,    -1,    -1,  2100,    -1,    -1,
      -1,  1654,    -1,   429,    -1,     8,  1659,  1660,    11,   180,
      -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
    1673,  1674,  1675,  1676,    -1,  1678,   452,    -1,    -1,    -1,
      -1,  2134,  2135,    -1,    -1,   206,   207,    40,    -1,    -1,
     466,    -1,    -1,   469,    47,    -1,    -1,    -1,    35,  2152,
     221,    -1,    -1,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,    -1,    54,    71,    -1,
      -1,  1724,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,   268,   185,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1762,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,    -1,   206,
     207,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
    2253,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,  2267,    -1,    -1,   254,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,  2279,   180,    -1,   166,
      40,   268,   185,   354,   271,    -1,    -1,    47,    -1,    -1,
      -1,  2294,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,    -1,  1856,    -1,    -1,    -1,  1860,  1861,    -1,
    1863,    71,    -1,  1866,  1867,  1868,  1869,    -1,   221,    -1,
    1873,  1874,  1875,  1876,  1877,  1878,  1879,  1880,  1881,  1882,
    1883,  1884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1897,    -1,    -1,  1900,   235,  1902,
      -1,   238,    -1,  1906,    -1,    -1,  1909,  1910,    -1,    -1,
    1913,  1914,   249,    -1,   251,   268,    -1,   354,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2380,    -1,   450,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1956,    -1,    -1,  2409,    -1,    -1,    -1,
      -1,    -1,    -1,  1966,  1967,    -1,    -1,    -1,    -1,  1972,
     180,    -1,    -1,    -1,    -1,   185,     8,    -1,    -1,    11,
      -1,    -1,  1985,    15,    16,    17,   323,    -1,    -1,    -1,
      -1,  2444,  2445,    -1,    -1,    -1,   206,   207,    -1,    -1,
      32,   354,    -1,    -1,    -1,    -1,   343,    -1,    40,    -1,
      -1,   221,    -1,   450,    -1,    47,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   363,    -1,   365,    -1,
     467,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    22,  2501,    -1,
      -1,    -1,    -1,    28,    -1,    -1,    -1,    -1,   268,    22,
      35,   271,    -1,    -1,    -1,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    -1,    -1,  2080,    -1,    54,
      -1,  2084,    -1,    -1,    -1,    -1,    -1,  2090,  2091,  2092,
      -1,    54,  2095,    -1,    -1,  2098,  2099,   450,    -1,    -1,
    2103,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
    2563,  2564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   466,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,    -1,    -1,    -1,   354,    -1,    -1,    -1,   180,    -1,
      -1,    -1,    -1,   185,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,    -1,  2172,
      -1,    -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2190,    -1,   221,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   254,    -1,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2235,  2236,    -1,    -1,   268,  2240,  2241,  2242,
     450,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,   467,    -1,    -1,
     235,    -1,    -1,   238,    -1,    -1,    -1,    -1,  2271,  2272,
      -1,    -1,   235,    -1,   249,   238,    -1,    -1,    -1,    -1,
      -1,    -1,  2285,    -1,    -1,    -1,   249,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2297,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   270,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,    -1,    -1,    -1,   322,   323,    -1,
      -1,    -1,    -1,    -1,  2357,   318,    -1,    -1,    -1,   322,
     323,    -1,    -1,    -1,    -1,  2368,    -1,    -1,   343,    -1,
      -1,    -1,    -1,    -1,   349,    -1,    -1,    -1,    -1,    -1,
     343,    -1,    -1,    -1,  2387,    -1,   349,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2401,    -1,
     363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
     413,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,  2478,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,  2504,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,  2575,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,   466,   467,    -1,    -1,    -1,   471,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,   452,    -1,    -1,
      -1,    -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,    -1,    -1,    -1,   471,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,   452,    -1,    -1,    -1,
      -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,    -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,   216,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,
     458,   459,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      -1,    -1,    -1,   471,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,
      -1,    -1,   471,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,
      -1,   471,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,    -1,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,
     471,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,   409,    -1,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,    -1,
      -1,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,    -1,
     163,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,    -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,    -1,    -1,    -1,    -1,   471,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,    -1,   163,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,    -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,
     458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      -1,    -1,    -1,   471,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,
      -1,    -1,   471,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,    -1,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,    -1,
      -1,     3,     4,     5,     6,     7,   466,     9,    10,    -1,
      -1,   471,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,   409,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,    -1,
     163,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,   219,   220,   221,    -1,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,    -1,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,    -1,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
      -1,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   458,     3,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,    -1,    -1,   471,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,   221,    -1,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,    -1,   163,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
      -1,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,    -1,
      -1,     3,    -1,    -1,    -1,    -1,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,    -1,    -1,
     452,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,
      -1,   466,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    -1,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,    -1,   146,   147,   148,    -1,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,   277,    -1,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,    -1,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,    -1,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
      -1,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   447,   448,   449,    -1,     3,    -1,
     453,   454,   455,     8,   457,   458,   459,   460,   461,   462,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,    -1,    -1,    -1,   453,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,     8,    -1,    47,    11,    -1,
      32,    -1,    15,    16,    17,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    32,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    40,    -1,     8,
      -1,    -1,    11,    -1,    47,    -1,    15,    16,    17,    71,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    32,    15,    16,    17,    -1,    71,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,     8,    -1,    -1,
      11,    -1,    71,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      71,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
     180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   180,    -1,
      71,    -1,    -1,   185,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,
      -1,   221,   185,    -1,   206,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,   254,    -1,   185,    -1,   221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   180,
      -1,   271,   254,    -1,   185,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,
      -1,   254,   221,    -1,    -1,   206,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,   271,   180,
     221,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   206,   207,    -1,    -1,   268,
      -1,    -1,   271,   254,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,    -1,    -1,   354,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   354,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   354,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,   354,    -1,    -1,    -1,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    71,   467,   450,    -1,
      -1,   453,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,    -1,    -1,   354,    -1,   467,    -1,   450,    -1,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,    -1,    -1,    -1,    -1,   467,   450,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,    -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,   450,
     185,    -1,   453,   454,   455,    32,   457,   458,   459,   460,
     461,   462,    -1,    40,    -1,    -1,   467,    -1,    -1,    -1,
      47,   206,   207,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,   221,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,   254,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,   180,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,    -1,   254,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,   254,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,   467,    -1,    -1,   268,    -1,    -1,   271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,
     467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,     3,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,   465,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   459,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,   459,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,    -1,   163,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
      -1,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,    -1,   268,   269,   270,
      -1,    -1,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
       4,     5,    -1,    -1,    -1,     9,   457,   458,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,    -1,   163,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,     4,     5,    -1,
      -1,    -1,     9,   457,   458,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,   266,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,    -1,    -1,     8,    -1,    -1,    11,    -1,
     457,   458,    15,    16,    17,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    32,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    71,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    71,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    32,    -1,    47,    35,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,     8,    -1,   120,    11,    -1,
      -1,    71,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,
      -1,    -1,   162,    -1,    -1,    -1,    -1,   180,    71,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,   156,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   206,   207,   221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   221,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,
      -1,   254,    -1,    -1,    -1,    -1,   206,   207,    -1,    -1,
      -1,    -1,    -1,    -1,   254,   268,    -1,    -1,   271,   206,
     207,   221,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,   271,    -1,    -1,   221,    -1,    -1,   180,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,    -1,   254,   268,    -1,
      -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,   254,    -1,    11,   354,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,     8,    -1,   268,    11,    -1,   271,    -1,
      15,    16,    17,    -1,    32,    -1,    -1,    35,    -1,    -1,
      -1,    -1,    40,    -1,    -1,   288,    -1,    32,    -1,    47,
      -1,    -1,    -1,    -1,   354,    40,    -1,   410,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,   354,    -1,    -1,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     450,   354,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   450,    -1,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    -1,   162,    -1,    -1,
      -1,     8,   180,    -1,    11,    -1,    -1,   185,    15,    16,
      17,    -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,
     185,    -1,    -1,    -1,    -1,    32,    -1,   450,   206,   207,
     453,   454,   455,    40,   457,   458,   459,   460,   461,   462,
      47,   206,   207,   221,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,   221,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,   254,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,     8,   254,
     268,    11,    -1,   271,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,   180,    -1,    -1,   354,    -1,   185,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,   180,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,    -1,   254,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
     180,   268,    -1,    -1,   271,   185,    -1,    -1,    -1,    -1,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   450,   206,   207,   453,   454,
     455,   254,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,   221,   180,    -1,    -1,   268,    -1,   185,   271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,   207,
      -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   221,    -1,    -1,    -1,   354,   268,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   254,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,    -1,   163,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,   221,    -1,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
      -1,   163,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,    -1,   163,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,    -1,   163,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      -1,    -1,    73,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,   159,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,   159,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,   267,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    35,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,   145,   146,   147,   148,   149,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,    -1,    -1,   127,   128,   129,   130,   131,    -1,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,   144,   145,   146,   147,   148,   149,    -1,   151,    -1,
     153,   154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,
      -1,   164,   165,   166,   167,    -1,   169,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,    -1,
      -1,   127,   128,   129,   130,   131,    -1,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,   144,   145,
     146,   147,   148,   149,    -1,   151,    -1,   153,   154,   155,
     156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,
     166,   167,    -1,   169,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,    -1,    -1,   127,   128,
     129,   130,   131,    -1,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,   144,   145,   146,   147,   148,
     149,    -1,   151,    -1,   153,   154,   155,   156,    -1,   158,
      -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,    -1,
     169,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
      -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,    -1,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,    -1,    -1,   127,   128,   129,   130,   131,
      -1,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,   144,   145,   146,   147,   148,   149,    -1,   151,
      -1,   153,   154,   155,   156,    -1,   158,    -1,   160,    -1,
      -1,    -1,   164,   165,   166,   167,    -1,   169,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
      -1,    -1,   127,   128,   129,   130,   131,    -1,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,   144,
     145,   146,   147,   148,   149,    -1,   151,    -1,   153,   154,
     155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,   164,
     165,   166,   167,    -1,   169,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,    -1,    -1,   127,
     128,   129,   130,   131,    -1,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,    -1,   153,   154,   155,   156,    -1,
     158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,   167,
      -1,   169,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,    -1,    -1,   127,   128,   129,   130,
     131,    -1,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,   144,   145,   146,   147,   148,   149,    -1,
     151,    -1,   153,   154,   155,   156,    -1,   158,    -1,   160,
      -1,    -1,    -1,   164,   165,   166,   167,    -1,   169,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,    -1,   220,
      -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,    -1,   246,   247,   248,   249,   250,
      -1,   252,   253,    -1,   255,    -1,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,    -1,   268,   269,   270,
      -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,    -1,    -1,   127,   128,   129,   130,   131,    -1,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,    -1,   153,
     154,   155,   156,    -1,   158,    -1,   160,    -1,    -1,    -1,
     164,   165,   166,   167,    -1,   169,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,   145,   146,
     147,   148,   149,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,    -1,    -1,    -1,   164,   165,   166,
     167,    -1,   169,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,    -1,   246,
     247,   248,   249,   250,    -1,   252,   253,    -1,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,   276,
      -1,   278,   279,   280,   281,   282,   283,   284,    -1,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      -1,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,    -1,    -1,   127,   128,   129,
     130,   131,    -1,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,   144,    -1,   146,   147,   148,    -1,
      -1,   151,    -1,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,    -1,   163,   164,   165,   166,   167,    -1,   169,
      -1,    -1,    -1,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
      -1,    -1,   252,   253,   254,   255,    -1,    -1,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,    -1,   275,   276,   277,    -1,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,    -1,   292,    -1,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,    -1,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,    -1,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,    -1,   392,    -1,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,   448,   449,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    -1,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,    -1,    -1,
     127,   128,   129,   130,   131,    -1,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,   144,    -1,   146,
     147,   148,    -1,    -1,   151,    -1,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,    -1,   163,   164,   165,   166,
     167,    -1,   169,    -1,    -1,    -1,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,    -1,   252,   253,   254,   255,    -1,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,    -1,   275,   276,
     277,    -1,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,    -1,   292,    -1,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,    -1,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,    -1,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    -1,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,    -1,   392,    -1,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     447,   448,   449
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   130,   136,   144,   146,   224,   294,   322,   330,   342,
     349,   353,   363,   376,   411,   416,   429,   452,   466,   474,
     475,   476,   477,   488,   489,   491,   495,   509,   511,   513,
     520,   522,   568,   574,   575,   592,   593,   594,   595,   596,
     597,   634,   751,   754,   757,   764,   765,   766,   773,   777,
     783,   785,   790,   794,   795,   798,   800,   802,   389,   432,
     521,   188,   336,   343,   376,   422,   521,   521,    49,   466,
     587,   167,   225,   271,   336,   380,   382,   403,   406,   566,
     763,     3,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    37,    38,    40,    41,    42,    44,
      45,    46,    47,    48,    50,    51,    53,    54,    55,    56,
      57,    60,    61,    62,    63,    64,    66,    67,    68,    69,
      70,    74,    75,    76,    77,    78,    80,    81,    82,    84,
      85,    86,    87,    88,    89,    92,    93,    94,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   112,   114,   115,
     116,   117,   118,   119,   121,   122,   123,   124,   127,   128,
     129,   130,   131,   133,   134,   135,   137,   138,   139,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   151,   153,
     154,   155,   156,   158,   160,   164,   165,   166,   167,   169,
     170,   172,   173,   175,   176,   177,   178,   179,   181,   182,
     183,   184,   186,   187,   188,   189,   190,   191,   193,   195,
     196,   197,   198,   199,   200,   201,   203,   205,   208,   210,
     211,   212,   213,   214,   217,   218,   220,   223,   224,   225,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   246,   247,   248,
     249,   250,   252,   253,   255,   257,   258,   259,   260,   261,
     262,   264,   265,   268,   269,   270,   273,   274,   276,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   289,
     290,   291,   292,   293,   294,   295,   296,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   326,   327,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   343,   344,
     345,   346,   347,   349,   350,   351,   352,   353,   355,   356,
     357,   358,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   374,   375,   377,   379,   380,
     381,   382,   383,   385,   386,   389,   390,   391,   392,   393,
     395,   396,   397,   398,   399,   400,   401,   404,   405,   406,
     407,   408,   411,   412,   413,   414,   415,   416,   417,   419,
     421,   422,   423,   424,   427,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   738,   744,   805,   806,    20,
      72,    87,   139,   147,   159,   188,   234,   290,   303,   334,
     336,   343,   346,   365,   376,   383,   392,   422,   569,   570,
     573,   521,   294,   738,    90,   420,   466,   491,   574,   592,
     769,   773,   790,   802,     5,   743,   784,   738,    26,   385,
     389,   744,   796,   797,   799,   521,    26,   125,   604,   605,
     225,   336,   347,   385,   778,   779,   799,    26,   385,   389,
     799,   521,   267,   645,   736,   744,   163,   466,   787,   466,
     310,   598,   599,   738,   598,   593,   594,   597,     0,   469,
     116,   198,   408,   140,   202,   272,   402,   606,   607,   593,
     595,   596,   470,   420,   767,   179,   736,   738,   179,   736,
     179,   645,   179,   736,   491,   574,   592,   753,   790,   736,
     380,   382,   380,   382,   320,   179,   744,   310,   343,   376,
     422,   188,    26,   738,   236,   392,   104,   376,   422,   339,
     179,   571,   744,   746,   179,   737,   738,   179,   738,   466,
     512,   566,   769,     3,    43,    49,    72,    79,    91,    98,
     161,   163,   180,   194,   206,   207,   209,   219,   221,   245,
     254,   275,   277,   328,   354,   378,   416,   420,   770,   772,
     773,   775,   776,   805,   806,   807,   767,   466,   752,   449,
     208,   468,   266,     3,     4,     6,     7,     8,     9,    10,
      48,    50,    51,    58,    59,    62,    63,    70,    72,    95,
      96,    97,    98,    99,   100,   101,   108,   109,   111,   129,
     145,   149,   150,   155,   170,   200,   201,   203,   218,   226,
     227,   244,   246,   251,   256,   257,   259,   268,   278,   291,
     307,   332,   348,   357,   372,   385,   386,   391,   393,   394,
     409,   417,   450,   457,   458,   459,   466,   471,   593,   660,
     663,   666,   667,   668,   670,   671,   672,   673,   675,   676,
     680,   682,   683,   684,   686,   699,   703,   721,   726,   733,
     734,   740,   741,   742,   743,   744,   745,   805,   807,   732,
     733,   778,   743,   778,   449,   162,   387,   455,   449,   208,
     466,   736,   459,   464,   468,   727,   729,     3,   161,   163,
     420,   773,   786,   788,   161,   789,   680,   707,   598,   470,
     466,   748,   467,   467,   476,   162,   204,   645,   791,    26,
     125,   603,   603,    53,   603,   152,   157,   222,   263,   612,
     614,   615,   627,   629,   630,   631,   606,   607,   466,   736,
     145,    22,    28,   130,   270,   318,   322,   349,   413,   482,
     485,   486,   318,   145,    35,    54,   103,   187,   235,   238,
     249,   280,   318,   323,   343,   349,   363,   485,   514,   517,
     145,   318,   349,   485,   145,   318,   349,   485,   467,   466,
     556,   566,   251,   755,   422,   179,   736,   179,   736,   804,
     736,    79,   760,   433,    80,   122,   283,   381,   145,    56,
     324,   470,   572,   468,   747,   145,   470,   572,   145,   266,
     707,   376,   467,   470,     4,   150,   266,   394,   457,   458,
     516,   519,   742,   743,   768,   770,   771,   774,   769,     3,
      48,    50,    51,    62,    63,   108,   109,   155,   200,   201,
     203,   244,   246,   259,   307,   350,   357,   385,   386,   417,
     657,   659,   661,   663,   665,   667,   668,   669,   671,   672,
     675,   676,   710,   745,   805,    35,   220,   744,   466,   730,
     419,   674,   680,   725,   466,   674,   674,   466,   157,   466,
     466,   466,   662,   662,   293,   593,   466,   466,   664,   466,
     466,   466,   466,    62,    63,   674,   680,   466,   662,   466,
     466,   466,   466,   466,   431,   452,   466,   677,   466,   677,
     466,   466,   680,   680,   680,   593,   680,   707,   730,   729,
     743,   466,   466,   743,     3,     8,    11,    15,    16,    17,
      32,    35,    40,    47,    71,   180,   185,   206,   207,   221,
     254,   268,   271,   354,   450,   453,   454,   455,   457,   458,
     459,   460,   461,   462,   701,   702,   703,   705,   430,   687,
     277,   680,   204,   470,   600,   466,   743,   729,   600,     3,
     111,   225,   516,   676,   743,   781,    94,   111,   516,   774,
     780,   782,   111,   782,   220,   736,   680,   728,     3,    26,
      30,    31,    32,    33,    34,    35,    36,    39,    52,    58,
      59,    65,    71,    73,    83,    90,    95,    96,    97,    99,
     100,   101,   111,   113,   120,   125,   126,   132,   136,   140,
     150,   152,   157,   159,   162,   168,   171,   174,   185,   192,
     202,   204,   215,   216,   222,   226,   227,   251,   256,   263,
     266,   267,   271,   272,   288,   297,   312,   325,   342,   348,
     359,   373,   376,   384,   387,   388,   394,   402,   403,   409,
     410,   418,   425,   426,   428,   429,   459,   739,   750,   805,
     806,   807,   808,   727,   467,   470,   767,   467,   470,   599,
     737,    35,   791,   493,   736,    35,   744,   349,   595,   595,
     608,   609,   680,   595,   154,   248,   621,   210,   249,   306,
     352,   408,    26,   616,   680,   457,   458,   617,   618,   680,
     682,   627,   628,   615,   614,   612,   613,   157,   630,   261,
     632,   612,   627,   707,   748,   736,    65,    73,    83,   159,
     179,   297,   403,   537,   547,   562,   744,    73,    83,   490,
      83,   490,   466,   387,   466,   535,   231,   406,   535,    83,
     470,   387,   736,   659,   516,    53,   518,   516,   516,   103,
     235,   238,    53,   387,   429,   452,   515,   242,   336,   515,
     517,   645,    83,   387,   490,   336,   736,   387,   336,   387,
     555,   560,   744,   429,   585,   310,   422,   145,    90,   509,
     522,   756,   757,   800,   736,   251,   510,   514,   251,   466,
     556,    35,   556,   179,   550,   744,   761,   571,   746,   739,
     468,   737,   738,   738,   746,   467,   179,   736,   804,   769,
     775,     4,   742,     4,   742,   659,    34,   658,   106,   177,
     237,   240,   340,   447,   466,   678,   679,   467,   470,   662,
     747,   753,   707,   727,   466,   425,   722,   723,   680,   707,
     466,   742,   742,   707,     3,   106,   177,   237,   240,   340,
     447,   711,   712,   743,   742,   707,   707,   742,   742,   674,
     674,   680,     8,    15,    16,    17,   453,   454,   455,   457,
     458,   459,   460,   461,   462,   701,   706,   744,   680,   713,
     457,   458,   466,   681,   682,   703,   715,   467,   707,   680,
     707,   716,   385,   385,   742,   742,   680,    52,   162,   216,
     388,   680,   707,   719,   467,   470,   742,   471,   742,   678,
     657,   680,   680,   680,   680,   750,   385,    39,   373,   731,
     746,   680,   466,   593,   720,   125,   150,   251,   256,   261,
     394,   404,   680,   466,   680,   387,    47,   180,   185,   221,
     354,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     680,    26,    33,   359,   700,   171,   153,   688,   332,   466,
     699,   167,   225,   376,   380,   382,   406,   601,   736,   734,
     162,   635,    26,   125,   418,   459,   467,   680,   708,   709,
     745,   749,   635,   466,   743,   470,   467,   465,   472,   736,
     786,   736,   794,   680,   467,   466,   410,   793,   111,   279,
     466,   492,   592,    35,   744,   466,   497,   506,   508,   744,
     470,    36,   120,   410,   610,   332,   333,   457,   458,   618,
     620,   682,   352,   210,   267,   470,     4,   619,   742,   619,
     332,   333,   620,   735,   736,   255,   356,   633,   628,   613,
     467,   318,   485,   466,   179,   547,   738,   210,   251,   210,
     410,   466,   540,   657,   738,   744,   179,   738,   179,   744,
      22,   130,   349,   481,   484,   530,   545,   750,   738,   539,
     559,   750,   738,   482,   738,   318,   349,   485,   514,   516,
     746,   738,   516,   746,   738,   516,   318,   349,   485,   738,
     738,   738,   738,   318,   349,   485,   738,   738,   302,   581,
     467,   470,   264,   162,   387,   576,   422,   736,   744,   566,
     466,   145,   145,   221,   537,   547,   551,   554,   563,   565,
     744,   429,   431,   542,   144,   592,   429,   762,   251,   266,
     572,   739,   572,   266,   572,   251,    35,    34,   658,   464,
     464,   387,   387,   387,   466,   387,   742,   657,   662,   467,
     707,   680,   132,   723,   724,    35,   467,   680,   467,   467,
     467,   467,   162,   467,   467,   467,   467,   467,   470,   467,
     468,   288,   714,   467,   681,   681,   680,    11,    15,    16,
      17,   185,   206,   268,   453,   454,   455,   457,   458,   459,
     460,   461,   462,   703,   681,   467,   467,   157,   162,   717,
     718,   467,   449,   449,   467,   467,    35,   719,   707,   719,
     719,   162,   467,   730,   680,   467,   467,   467,   449,   681,
     681,   138,   707,   162,   125,   150,   256,   261,   394,   404,
     466,   138,   706,   680,   373,   731,   680,   720,   680,   387,
     466,   593,   466,   466,   276,   692,   380,   382,   380,   382,
     736,   376,   602,   602,   602,   215,   333,   466,   593,   636,
     637,   638,   645,   648,   683,   685,   686,   740,   744,   426,
     653,   708,   708,   709,   467,   470,   606,   607,    13,    14,
     653,   742,   678,   780,   680,   728,   748,   753,   636,   426,
     792,   416,   375,   409,   501,   496,   505,   744,   266,   498,
     744,   502,   508,   470,   635,   455,   730,   609,   268,   701,
     704,   451,   611,     4,   742,   620,   267,   408,   617,   470,
     230,   387,   680,   251,   562,   466,   145,   466,   540,   188,
     560,   523,   270,   533,   523,    22,   130,   322,   323,   349,
     478,   479,   480,   486,   487,   145,   572,   145,   572,   530,
     545,   530,   467,   470,   526,   743,   467,   470,   455,   468,
     387,   336,    83,   387,   490,   336,   387,   387,   387,   336,
     366,   367,   590,   743,   555,   581,   736,   556,   755,   376,
     560,   736,   736,   804,   736,   467,   470,   264,   535,   264,
     266,   534,   738,   429,   803,   535,    35,   145,   736,   746,
     145,   464,   742,   465,   742,   177,   237,   679,   237,   679,
     679,   742,   240,   467,   467,   384,   680,   136,   657,   467,
     680,   680,   706,   680,   717,   657,   681,   681,   681,   681,
     125,   251,   261,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   680,   680,   718,   717,   677,   677,   657,
     467,   467,   467,   707,   467,   471,   743,   680,    32,    32,
     680,   467,   680,   162,   466,   710,   680,   467,   138,   681,
     681,   138,   138,   680,   680,   607,   426,   466,   693,   744,
     602,   602,   602,   602,   736,   736,   736,   593,   648,   744,
     162,   593,   637,   638,    35,   639,   640,   744,   470,    91,
     163,   194,   209,   219,   245,   328,   642,   640,    35,   639,
     641,   744,   452,   652,   466,   729,   680,   171,   622,   470,
     606,   606,   606,   418,   709,   467,   680,   680,   622,   467,
     465,   467,   680,   325,   500,   415,   467,   470,   730,    81,
     500,   467,   470,   497,   792,   680,   466,   611,   154,   214,
     267,   736,   738,   467,   145,   560,   547,   560,   523,   550,
     467,   113,   192,   249,   251,   546,   466,   557,   166,   111,
     178,   251,   535,   515,   104,   111,   166,   251,   365,   368,
     517,   535,   349,   480,   397,   738,   744,   484,   559,   250,
     268,   350,   457,   458,   516,   524,   561,   657,   704,   743,
     745,   808,   750,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   515,   590,   466,   762,   179,   736,   467,
     510,   466,    35,   544,   542,   551,    77,   512,   104,   249,
     592,   550,   410,   759,   572,   804,   742,   465,   465,   467,
     680,   467,   467,   718,   162,   125,   261,   466,   467,   678,
     680,   680,   680,   710,   467,   680,    32,    32,   680,   680,
     138,   467,   467,   680,   694,   744,   736,   736,   736,   736,
     640,   641,   729,   466,   467,   744,   466,   637,   209,   275,
     643,   637,   643,   209,   642,   643,   209,   378,   646,   466,
     744,   466,   273,   708,    53,   174,   626,   467,   467,   467,
     709,   743,   626,   743,   733,   592,   279,   592,   496,   266,
     466,   494,   455,   508,   500,   706,   523,   547,   467,   467,
     429,   553,   114,   181,   190,   113,   412,   530,   548,    65,
      71,    83,   111,   113,   166,   192,   251,   256,   297,   312,
     403,   528,   529,   541,    29,    53,   567,   179,   256,   516,
     680,   567,   256,   457,   458,   519,   744,   657,   572,   572,
     745,   747,   455,   387,   387,   466,   582,   586,   410,   577,
     579,   560,    35,   251,   466,   762,   554,   144,   592,   142,
     186,   534,   116,   130,   296,   803,   104,   429,   801,   266,
     744,   758,   466,    35,   465,   681,   162,   466,   710,   467,
     680,   680,   680,   467,   285,   695,   649,   650,   685,   639,
     466,   737,   637,   266,   410,   644,   637,   209,   637,   740,
     654,   655,   744,   466,   654,   744,   606,   466,   623,   624,
     625,   680,   680,   428,   689,   606,   689,   501,    83,   466,
     499,   507,   685,   744,   126,   680,   467,   312,   553,   466,
     543,   523,   467,   470,   466,   746,   738,   681,   567,   114,
     181,   113,   256,   210,   736,   553,   111,    35,   145,    71,
     656,   747,   461,   524,   738,   738,   584,   591,   750,    49,
      92,   117,   134,   138,   158,   161,   175,   256,   264,   304,
     588,   515,   118,   467,   592,   145,    35,   467,   738,   803,
      26,    76,    84,   112,   178,   189,   365,   368,   538,   538,
     333,   333,    57,    65,   225,   736,   507,   681,   710,   467,
      53,   606,   467,   470,    35,   651,   737,   467,   680,   466,
     637,   644,   466,   467,   470,   657,   654,   467,   467,   467,
     470,   690,   691,   744,   467,   415,   738,   680,   467,   470,
      71,   503,   503,   252,   408,   736,   523,   549,   552,   750,
     530,   680,   251,   529,    35,   553,   556,   178,   746,   410,
     483,   461,   397,   467,   470,   459,   466,   516,   583,   774,
      35,   580,   743,   580,   251,   256,   304,   580,   580,   582,
     743,   762,   801,   736,   592,   542,   512,    65,   269,    65,
     759,   467,   467,   707,   305,   333,   696,   652,   649,   466,
     467,   737,   707,   655,   656,   467,   624,   470,    35,   592,
     467,   653,   499,   746,   504,   746,   504,   349,   556,   467,
     470,   455,   467,   178,   233,   564,   466,   525,   680,   397,
     584,   578,   589,   774,   743,   743,   256,   560,   459,   560,
     743,   743,    35,   466,   801,   534,   803,   269,   269,   466,
     762,    47,    94,   399,   680,   697,   698,   697,   467,   654,
     467,   467,   691,   693,   503,   610,   610,   506,   564,   552,
     524,   249,   536,   525,   163,   284,   355,   266,   531,   532,
     558,   514,   467,   470,   560,   592,   507,   653,   698,   332,
     156,   292,   156,   292,   467,   319,   647,   504,   611,   611,
     653,   532,   190,   116,   408,   266,   558,   266,   531,   467,
     589,   801,   467,    32,   466,   610,   523,    56,   249,   324,
     349,   527,   527,   762,   698,   680,   611,    21,   111,   256,
     653,   467
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 629 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 645 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 657 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 33:
#line 694 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 34:
#line 706 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 35:
#line 715 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 36:
#line 724 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 733 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 742 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 751 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 760 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 782 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 43:
#line 784 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 44:
#line 789 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 45:
#line 790 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 46:
#line 796 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 47:
#line 800 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 48:
#line 804 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 49:
#line 815 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 50:
#line 823 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 51:
#line 827 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 52:
#line 836 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 53:
#line 845 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 54:
#line 854 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 863 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 872 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 881 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 889 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 897 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 906 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 915 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 924 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 933 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 950 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 959 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 968 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 977 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 987 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 1000 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 1015 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 1024 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 1032 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 1047 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 1055 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 1065 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 1075 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 1082 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 1089 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 1097 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 1104 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 81:
#line 1114 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 82:
#line 1115 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 83:
#line 1121 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 84:
#line 1125 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 85:
#line 1130 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 86:
#line 1135 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 87:
#line 1142 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 88:
#line 1143 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 89:
#line 1148 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 90:
#line 1152 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 1; ;}
    break;

  case 91:
#line 1153 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 92:
#line 1163 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 93:
#line 1169 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 94:
#line 1175 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 1181 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 1194 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 97:
#line 1203 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 98:
#line 1213 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 1223 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 1233 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 1243 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 1253 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 1263 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 1273 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 1283 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 1294 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 1305 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 1315 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 1327 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 110:
#line 1328 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 111:
#line 1340 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 112:
#line 1352 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 113:
#line 1358 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 114:
#line 1365 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 115:
#line 1371 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 116:
#line 1378 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 117:
#line 1388 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 118:
#line 1392 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 119:
#line 1401 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 120:
#line 1410 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 121:
#line 1418 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 122:
#line 1425 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 123:
#line 1426 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.with) = NULL; ;}
    break;

  case 124:
#line 1432 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 125:
#line 1444 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 126:
#line 1449 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 127:
#line 1474 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 128:
#line 1484 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 129:
#line 1493 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 130:
#line 1500 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 131:
#line 1511 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 132:
#line 1522 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 133:
#line 1536 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 134:
#line 1537 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 135:
#line 1543 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 136:
#line 1544 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 137:
#line 1549 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 138:
#line 1550 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 139:
#line 1556 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 140:
#line 1557 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 141:
#line 1561 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 142:
#line 1562 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 143:
#line 1568 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 144:
#line 1570 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 145:
#line 1575 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 146:
#line 1576 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 147:
#line 1580 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 148:
#line 1581 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 149:
#line 1587 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 150:
#line 1605 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 151:
#line 1615 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 152:
#line 1627 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 153:
#line 1628 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 154:
#line 1638 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 155:
#line 1646 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 156:
#line 1663 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 157:
#line 1681 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 158:
#line 1682 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 159:
#line 1694 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 1702 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 161:
#line 1713 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 162:
#line 1714 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 163:
#line 1718 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 164:
#line 1719 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 165:
#line 1720 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 166:
#line 1725 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 167:
#line 1726 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 168:
#line 1728 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 169:
#line 1732 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 170:
#line 1737 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 171:
#line 1741 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 172:
#line 1745 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 173:
#line 1749 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 174:
#line 1753 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 175:
#line 1757 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 1761 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 177:
#line 1765 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 1769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 1773 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 180:
#line 1777 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 181:
#line 1782 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 182:
#line 1786 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 183:
#line 1790 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 184:
#line 1796 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 185:
#line 1797 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 186:
#line 1801 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 187:
#line 1802 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 188:
#line 1803 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 189:
#line 1808 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 190:
#line 1815 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 191:
#line 1821 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 192:
#line 1827 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 193:
#line 1834 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 1841 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 1850 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 196:
#line 1851 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 197:
#line 1852 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 198:
#line 1863 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 1878 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 1895 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 201:
#line 1897 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 202:
#line 1923 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 203:
#line 1924 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 204:
#line 1925 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 205:
#line 1926 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 206:
#line 1927 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 207:
#line 1928 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 208:
#line 1932 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 209:
#line 1933 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 210:
#line 1938 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 211:
#line 1943 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 212:
#line 1944 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 213:
#line 1945 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 214:
#line 1946 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 215:
#line 1947 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 216:
#line 1953 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 217:
#line 1959 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 218:
#line 1960 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 219:
#line 1962 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 220:
#line 1979 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 221:
#line 1986 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 222:
#line 1993 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 223:
#line 2003 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 224:
#line 2013 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 225:
#line 2025 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 226:
#line 2034 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 2043 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 2062 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 229:
#line 2068 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 230:
#line 2074 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 231:
#line 2076 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 232:
#line 2078 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 233:
#line 2080 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 234:
#line 2082 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 235:
#line 2087 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 236:
#line 2088 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 237:
#line 2092 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 238:
#line 2093 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 239:
#line 2094 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 240:
#line 2095 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 241:
#line 2100 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 242:
#line 2104 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.boolean) = true; ;}
    break;

  case 243:
#line 2105 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.boolean) = false; ;}
    break;

  case 244:
#line 2111 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 245:
#line 2117 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 246:
#line 2122 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 247:
#line 2123 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 248:
#line 2124 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 249:
#line 2125 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 250:
#line 2126 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 251:
#line 2127 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 252:
#line 2128 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 253:
#line 2129 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 254:
#line 2135 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 255:
#line 2136 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 256:
#line 2140 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 257:
#line 2146 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 258:
#line 2153 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 259:
#line 2160 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 260:
#line 2167 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 261:
#line 2178 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 262:
#line 2179 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 263:
#line 2180 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 264:
#line 2181 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 265:
#line 2185 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 266:
#line 2190 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 267:
#line 2191 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 268:
#line 2192 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 269:
#line 2197 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 270:
#line 2202 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 271:
#line 2203 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 272:
#line 2204 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 273:
#line 2205 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 274:
#line 2206 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 275:
#line 2207 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 276:
#line 2213 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 2236 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 278:
#line 2240 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 279:
#line 2246 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 280:
#line 2247 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 281:
#line 2251 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 282:
#line 2255 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 283:
#line 2256 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 284:
#line 2257 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 285:
#line 2262 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 286:
#line 2266 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 287:
#line 2273 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 288:
#line 2274 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 289:
#line 2279 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 290:
#line 2280 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 291:
#line 2285 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 292:
#line 2292 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 293:
#line 2293 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 294:
#line 2298 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 295:
#line 2299 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 296:
#line 2303 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 297:
#line 2309 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 298:
#line 2313 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 299:
#line 2317 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 300:
#line 2322 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 301:
#line 2329 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 302:
#line 2330 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 303:
#line 2334 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 304:
#line 2336 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 305:
#line 2342 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 306:
#line 2353 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 307:
#line 2367 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 308:
#line 2380 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 309:
#line 2395 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 310:
#line 2408 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 311:
#line 2423 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 2445 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 313:
#line 2449 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 314:
#line 2456 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 315:
#line 2460 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 316:
#line 2468 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 317:
#line 2472 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 318:
#line 2480 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 2489 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 320:
#line 2490 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 321:
#line 2491 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 322:
#line 2492 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 323:
#line 2494 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 324:
#line 2501 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 325:
#line 2507 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 326:
#line 2508 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 327:
#line 2513 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 328:
#line 2514 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 329:
#line 2526 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 2536 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 2546 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 2556 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 2566 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 334:
#line 2576 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 335:
#line 2589 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 336:
#line 2590 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 337:
#line 2591 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 338:
#line 2592 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 339:
#line 2593 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 340:
#line 2594 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 341:
#line 2595 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 342:
#line 2596 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 343:
#line 2597 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 344:
#line 2598 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 345:
#line 2599 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 346:
#line 2600 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 347:
#line 2601 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 348:
#line 2606 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 349:
#line 2607 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 350:
#line 2608 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 351:
#line 2609 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 352:
#line 2610 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 353:
#line 2611 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 354:
#line 2612 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 355:
#line 2617 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 356:
#line 2618 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 357:
#line 2623 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 358:
#line 2624 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 359:
#line 2625 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 360:
#line 2630 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 361:
#line 2631 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 362:
#line 2632 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 363:
#line 2646 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 364:
#line 2660 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 365:
#line 2688 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 366:
#line 2710 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 367:
#line 2711 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 368:
#line 2717 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 369:
#line 2720 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 370:
#line 2726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 371:
#line 2730 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 372:
#line 2737 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 373:
#line 2738 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 374:
#line 2742 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 375:
#line 2743 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 376:
#line 2748 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 377:
#line 2749 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 378:
#line 2753 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 379:
#line 2754 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 380:
#line 2759 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 381:
#line 2760 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 382:
#line 2761 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 383:
#line 2762 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 384:
#line 2763 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 385:
#line 2769 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 386:
#line 2777 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 387:
#line 2780 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 388:
#line 2785 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 389:
#line 2786 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 390:
#line 2792 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 391:
#line 2795 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.defelt) = NULL; ;}
    break;

  case 392:
#line 2801 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 393:
#line 2805 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 394:
#line 2809 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 395:
#line 2813 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 396:
#line 2817 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 397:
#line 2821 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 2825 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 2829 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 400:
#line 2833 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 401:
#line 2837 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 402:
#line 2841 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 403:
#line 2845 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 404:
#line 2849 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 405:
#line 2853 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 406:
#line 2860 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 407:
#line 2866 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 408:
#line 2867 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 409:
#line 2868 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 410:
#line 2874 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 411:
#line 2878 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 414:
#line 2934 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 415:
#line 2935 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 416:
#line 2950 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 417:
#line 2952 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 418:
#line 2959 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 419:
#line 2967 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 420:
#line 2975 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 421:
#line 2983 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 422:
#line 2991 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 423:
#line 2999 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 424:
#line 3009 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 425:
#line 3010 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 426:
#line 3040 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 427:
#line 3054 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 428:
#line 3066 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 429:
#line 3068 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 430:
#line 3087 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 431:
#line 3091 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 432:
#line 3095 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 433:
#line 3112 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 434:
#line 3119 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 435:
#line 3126 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 436:
#line 3135 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 437:
#line 3136 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 438:
#line 3140 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 439:
#line 3152 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 440:
#line 3162 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.into) = NULL; ;}
    break;

  case 441:
#line 3171 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 442:
#line 3176 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 443:
#line 3181 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 444:
#line 3186 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 445:
#line 3191 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 446:
#line 3199 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 447:
#line 3207 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 448:
#line 3212 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 449:
#line 3217 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 450:
#line 3223 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 451:
#line 3224 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 452:
#line 3228 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 453:
#line 3229 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 454:
#line 3230 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 455:
#line 3237 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 456:
#line 3238 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 457:
#line 3242 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL;;}
    break;

  case 458:
#line 3243 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 459:
#line 3247 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 460:
#line 3248 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 461:
#line 3252 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 462:
#line 3256 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 463:
#line 3257 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 464:
#line 3261 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 465:
#line 3270 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 466:
#line 3280 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 467:
#line 3281 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 468:
#line 3282 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 469:
#line 3285 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 470:
#line 3286 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = SORTBY_NULLS_LAST; ;}
    break;

  case 471:
#line 3287 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 472:
#line 3291 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 473:
#line 3292 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 474:
#line 3293 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 475:
#line 3294 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 476:
#line 3298 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 477:
#line 3299 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 478:
#line 3304 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 479:
#line 3306 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 480:
#line 3322 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 481:
#line 3324 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 482:
#line 3329 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 483:
#line 3332 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 484:
#line 3336 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 485:
#line 3338 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 486:
#line 3345 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 487:
#line 3365 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 488:
#line 3367 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 489:
#line 3369 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 490:
#line 3373 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 491:
#line 3374 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 492:
#line 3378 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 493:
#line 3379 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 494:
#line 3382 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 495:
#line 3383 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = 0; ;}
    break;

  case 496:
#line 3408 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 497:
#line 3409 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 498:
#line 3413 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 499:
#line 3414 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 500:
#line 3418 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 501:
#line 3419 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 502:
#line 3424 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 503:
#line 3436 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 504:
#line 3437 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 505:
#line 3441 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 506:
#line 3442 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 507:
#line 3446 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 508:
#line 3447 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 509:
#line 3451 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 510:
#line 3452 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 511:
#line 3457 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 512:
#line 3467 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 513:
#line 3468 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 514:
#line 3469 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 515:
#line 3470 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 516:
#line 3474 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 517:
#line 3475 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 518:
#line 3480 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 519:
#line 3481 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 520:
#line 3482 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 521:
#line 3492 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 522:
#line 3498 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 523:
#line 3515 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 524:
#line 3516 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 525:
#line 3520 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 526:
#line 3521 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 527:
#line 3528 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 528:
#line 3533 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 529:
#line 3541 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 530:
#line 3548 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 531:
#line 3556 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 532:
#line 3591 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 533:
#line 3616 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 534:
#line 3620 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 535:
#line 3646 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 536:
#line 3650 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 537:
#line 3662 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 538:
#line 3675 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 539:
#line 3689 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 540:
#line 3700 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 541:
#line 3715 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 542:
#line 3721 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 543:
#line 3726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 544:
#line 3732 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 545:
#line 3738 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 546:
#line 3739 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.alias) = NULL; ;}
    break;

  case 547:
#line 3748 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 548:
#line 3752 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 549:
#line 3756 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 550:
#line 3762 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 551:
#line 3768 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 552:
#line 3773 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 553:
#line 3774 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 554:
#line 3775 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 555:
#line 3776 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 556:
#line 3780 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 557:
#line 3781 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 558:
#line 3793 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 559:
#line 3794 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 560:
#line 3800 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 561:
#line 3807 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 562:
#line 3814 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 563:
#line 3821 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 564:
#line 3844 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 3856 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 566:
#line 3857 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 567:
#line 3873 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 568:
#line 3883 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 3895 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 570:
#line 3899 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 571:
#line 3900 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 572:
#line 3903 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 573:
#line 3904 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 574:
#line 3907 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 575:
#line 3908 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 576:
#line 3913 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 577:
#line 3914 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 578:
#line 3920 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 579:
#line 3924 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 580:
#line 3930 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 581:
#line 3951 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 582:
#line 3958 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 583:
#line 3971 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 584:
#line 3976 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 585:
#line 3983 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 586:
#line 3988 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 587:
#line 3994 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 588:
#line 3999 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 589:
#line 4008 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 590:
#line 4010 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 591:
#line 4012 "third_party/libpg_query/grammar/grammar.y.tmp"
    {  (yyval.list) = NIL; ;}
    break;

  case 592:
#line 4016 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 593:
#line 4017 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 594:
#line 4018 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 595:
#line 4019 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 596:
#line 4020 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 597:
#line 4022 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 598:
#line 4027 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 599:
#line 4046 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 4047 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 4048 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 602:
#line 4049 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 603:
#line 4061 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 604:
#line 4067 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 605:
#line 4074 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 606:
#line 4075 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 607:
#line 4082 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 608:
#line 4087 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 609:
#line 4092 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 610:
#line 4097 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 611:
#line 4102 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 612:
#line 4107 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 613:
#line 4112 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 614:
#line 4117 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 615:
#line 4123 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 616:
#line 4129 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 617:
#line 4135 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 618:
#line 4142 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 619:
#line 4163 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 620:
#line 4173 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 621:
#line 4177 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 622:
#line 4185 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 623:
#line 4189 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 624:
#line 4197 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 625:
#line 4209 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 626:
#line 4230 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 4234 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 628:
#line 4240 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 629:
#line 4244 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 630:
#line 4257 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 631:
#line 4265 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 632:
#line 4275 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 633:
#line 4277 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 634:
#line 4279 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 635:
#line 4281 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 636:
#line 4283 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 637:
#line 4285 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 638:
#line 4289 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 639:
#line 4290 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 640:
#line 4298 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 641:
#line 4307 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 642:
#line 4315 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 643:
#line 4324 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 644:
#line 4335 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 4342 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 646:
#line 4343 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 647:
#line 4344 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 648:
#line 4349 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 649:
#line 4351 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 650:
#line 4353 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 651:
#line 4355 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 652:
#line 4357 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 653:
#line 4359 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 654:
#line 4361 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 655:
#line 4366 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 656:
#line 4371 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 657:
#line 4377 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 658:
#line 4385 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 659:
#line 4390 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 660:
#line 4397 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 661:
#line 4403 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 662:
#line 4408 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 663:
#line 4412 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 664:
#line 4447 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 665:
#line 4449 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 666:
#line 4451 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 667:
#line 4459 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 668:
#line 4474 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 669:
#line 4476 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 670:
#line 4478 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 671:
#line 4480 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 672:
#line 4482 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 673:
#line 4484 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 674:
#line 4486 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 675:
#line 4488 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 676:
#line 4490 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 4492 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 4494 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 4496 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 4498 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 4500 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 4503 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 4505 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 684:
#line 4507 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 685:
#line 4510 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 4512 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 4514 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 688:
#line 4516 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 689:
#line 4519 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 690:
#line 4524 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 691:
#line 4532 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 692:
#line 4537 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 693:
#line 4545 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 694:
#line 4550 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 695:
#line 4558 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 696:
#line 4563 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 697:
#line 4572 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 698:
#line 4580 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 699:
#line 4588 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 700:
#line 4596 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 701:
#line 4614 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 702:
#line 4622 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 703:
#line 4630 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 704:
#line 4638 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 705:
#line 4646 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 706:
#line 4662 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 707:
#line 4670 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 708:
#line 4678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 709:
#line 4686 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 710:
#line 4694 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 711:
#line 4702 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 712:
#line 4710 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 713:
#line 4714 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 714:
#line 4718 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 715:
#line 4722 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 716:
#line 4726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 717:
#line 4734 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 718:
#line 4742 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 719:
#line 4750 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 720:
#line 4758 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 721:
#line 4778 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 722:
#line 4800 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 723:
#line 4811 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 724:
#line 4818 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 725:
#line 4843 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 726:
#line 4845 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 4847 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 728:
#line 4849 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 729:
#line 4851 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 4853 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 4855 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 4857 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 4859 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 4861 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 4863 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 4865 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 4867 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 4869 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 4871 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 4873 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 4875 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 4877 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 743:
#line 4879 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 744:
#line 4881 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 745:
#line 4885 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 746:
#line 4889 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 747:
#line 4893 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 748:
#line 4906 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 749:
#line 4907 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 750:
#line 4909 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 751:
#line 4921 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 752:
#line 4936 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 753:
#line 4948 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 754:
#line 4950 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 755:
#line 4952 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 4963 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 757:
#line 4987 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 5000 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 759:
#line 5004 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 760:
#line 5010 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 761:
#line 5017 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 762:
#line 5024 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 763:
#line 5034 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 5041 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 5069 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 766:
#line 5104 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 767:
#line 5114 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 768:
#line 5115 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 769:
#line 5123 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 770:
#line 5129 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 771:
#line 5133 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 772:
#line 5137 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 773:
#line 5141 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 774:
#line 5145 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 775:
#line 5149 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 776:
#line 5153 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 777:
#line 5157 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 778:
#line 5161 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 779:
#line 5165 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 780:
#line 5169 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 781:
#line 5173 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 782:
#line 5177 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 783:
#line 5181 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 784:
#line 5185 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 5189 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 786:
#line 5191 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 787:
#line 5195 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 788:
#line 5204 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 789:
#line 5209 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 790:
#line 5216 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 791:
#line 5231 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 792:
#line 5238 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 793:
#line 5242 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 794:
#line 5246 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 5250 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 796:
#line 5254 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 797:
#line 5261 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = PG_IS_GREATEST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 798:
#line 5269 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGMinMaxExpr *v = makeNode(PGMinMaxExpr);
					v->args = (yyvsp[(3) - (4)].list);
					v->op = IS_LEAST;
					v->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)v;
				;}
    break;

  case 799:
#line 5283 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 800:
#line 5284 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 801:
#line 5288 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 802:
#line 5289 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 803:
#line 5297 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 804:
#line 5298 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 805:
#line 5302 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 806:
#line 5304 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 807:
#line 5309 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 808:
#line 5317 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 809:
#line 5319 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 810:
#line 5332 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.windef) = NULL; ;}
    break;

  case 811:
#line 5337 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 812:
#line 5362 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 813:
#line 5363 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 814:
#line 5366 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 815:
#line 5367 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 816:
#line 5379 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 817:
#line 5397 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 818:
#line 5403 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 819:
#line 5413 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 820:
#line 5430 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 821:
#line 5475 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 5483 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 5491 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 5499 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 5507 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 5527 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 827:
#line 5528 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 828:
#line 5529 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 829:
#line 5532 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 830:
#line 5533 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 831:
#line 5534 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 832:
#line 5537 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 833:
#line 5538 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 834:
#line 5541 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "+"; ;}
    break;

  case 835:
#line 5542 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "-"; ;}
    break;

  case 836:
#line 5543 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "*"; ;}
    break;

  case 837:
#line 5544 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "/"; ;}
    break;

  case 838:
#line 5545 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "%"; ;}
    break;

  case 839:
#line 5546 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "^"; ;}
    break;

  case 840:
#line 5547 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<"; ;}
    break;

  case 841:
#line 5548 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = ">"; ;}
    break;

  case 842:
#line 5549 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "="; ;}
    break;

  case 843:
#line 5550 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<="; ;}
    break;

  case 844:
#line 5551 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = ">="; ;}
    break;

  case 845:
#line 5552 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 846:
#line 5556 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 847:
#line 5558 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 848:
#line 5563 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 849:
#line 5565 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 850:
#line 5570 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 851:
#line 5572 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 852:
#line 5574 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 853:
#line 5576 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 854:
#line 5578 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 855:
#line 5580 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 856:
#line 5594 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 857:
#line 5596 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 858:
#line 5600 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 859:
#line 5604 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 860:
#line 5611 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 861:
#line 5615 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 862:
#line 5621 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 863:
#line 5625 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 864:
#line 5634 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 865:
#line 5644 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 866:
#line 5645 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 867:
#line 5650 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 868:
#line 5653 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 869:
#line 5660 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 870:
#line 5661 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 871:
#line 5662 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 872:
#line 5663 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 873:
#line 5664 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 874:
#line 5665 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 875:
#line 5666 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 876:
#line 5667 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 877:
#line 5678 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 878:
#line 5682 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 879:
#line 5689 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 880:
#line 5695 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 881:
#line 5696 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 882:
#line 5713 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 883:
#line 5717 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 884:
#line 5722 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 885:
#line 5726 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 886:
#line 5741 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 887:
#line 5745 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 888:
#line 5749 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 889:
#line 5752 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 890:
#line 5755 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 891:
#line 5756 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 892:
#line 5757 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 893:
#line 5761 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 894:
#line 5767 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 895:
#line 5778 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 896:
#line 5791 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 897:
#line 5792 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 898:
#line 5797 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 899:
#line 5807 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 900:
#line 5808 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 901:
#line 5811 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 902:
#line 5812 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 903:
#line 5816 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 904:
#line 5820 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 905:
#line 5827 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 906:
#line 5831 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 907:
#line 5835 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 908:
#line 5843 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 909:
#line 5853 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 910:
#line 5854 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 911:
#line 5858 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 912:
#line 5859 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 913:
#line 5863 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 914:
#line 5864 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 917:
#line 5878 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 918:
#line 5879 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 919:
#line 5883 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 920:
#line 5884 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 921:
#line 5888 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 922:
#line 5904 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 923:
#line 5912 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 924:
#line 5920 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 925:
#line 5941 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 926:
#line 5942 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 927:
#line 5954 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 928:
#line 5958 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 929:
#line 5985 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 930:
#line 5987 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 931:
#line 5991 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 932:
#line 5993 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 933:
#line 6004 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 6006 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 935:
#line 6017 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 936:
#line 6021 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 937:
#line 6025 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 938:
#line 6029 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 939:
#line 6033 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 940:
#line 6042 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 941:
#line 6049 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 942:
#line 6081 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 943:
#line 6085 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 944:
#line 6091 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 945:
#line 6099 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 946:
#line 6111 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 947:
#line 6115 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 948:
#line 6119 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 949:
#line 6124 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 950:
#line 6125 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 951:
#line 6141 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 952:
#line 6142 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 953:
#line 6143 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 954:
#line 6148 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 955:
#line 6149 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 956:
#line 6150 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 957:
#line 6153 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 958:
#line 6154 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 959:
#line 6158 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 960:
#line 6160 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 961:
#line 6164 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 962:
#line 6165 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 964:
#line 6176 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 965:
#line 6177 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 966:
#line 6178 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 967:
#line 6179 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 968:
#line 6180 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 969:
#line 6190 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 970:
#line 6200 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 971:
#line 6201 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 976:
#line 6218 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 977:
#line 6227 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 978:
#line 6245 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 979:
#line 6251 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 984:
#line 6272 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 985:
#line 6297 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 986:
#line 6323 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 987:
#line 6327 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 988:
#line 6328 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 989:
#line 6333 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 990:
#line 6334 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 991:
#line 6339 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 992:
#line 6340 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = NULL; ;}
    break;

  case 993:
#line 6344 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 994:
#line 6345 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 995:
#line 6350 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 996:
#line 6351 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 997:
#line 6361 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 998:
#line 6370 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 999:
#line 6379 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1000:
#line 6388 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1001:
#line 6397 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1002:
#line 6406 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1003:
#line 6421 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1004:
#line 6436 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1005:
#line 6443 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1006:
#line 6453 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1007:
#line 6460 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1008:
#line 6470 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1009:
#line 6471 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1010:
#line 6476 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1011:
#line 6477 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1012:
#line 6478 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1018:
#line 6491 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1019:
#line 6492 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1020:
#line 6493 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1021:
#line 6494 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1022:
#line 6499 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1023:
#line 6500 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1024:
#line 6506 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1025:
#line 6510 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1026:
#line 6517 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 1027:
#line 6518 "third_party/libpg_query/grammar/grammar.y.tmp"
    {;}
    break;

  case 1028:
#line 6523 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1029:
#line 6524 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1030:
#line 6525 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1031:
#line 6531 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1032:
#line 6537 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1033:
#line 6544 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1034:
#line 6545 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1035:
#line 6558 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1036:
#line 6564 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1037:
#line 6570 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1038:
#line 6579 "third_party/libpg_query/grammar/grammar.y.tmp"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1039:
#line 6581 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1040:
#line 6589 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1041:
#line 6600 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1042:
#line 6612 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1043:
#line 6620 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1044:
#line 6628 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1045:
#line 6635 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1046:
#line 6645 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1047:
#line 6647 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1048:
#line 6653 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1049:
#line 6657 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1050:
#line 6661 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1051:
#line 6676 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1052:
#line 6682 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1053:
#line 6683 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1054:
#line 6684 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1055:
#line 6688 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1056:
#line 6689 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1057:
#line 6699 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1058:
#line 6707 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1059:
#line 6717 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1060:
#line 6731 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 6745 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 6757 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1063:
#line 6765 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1064:
#line 6778 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1065:
#line 6779 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1066:
#line 6780 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1067:
#line 6781 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1068:
#line 6783 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1069:
#line 6795 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1070:
#line 6796 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1071:
#line 6801 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1072:
#line 6802 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1073:
#line 6806 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1074:
#line 6807 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1075:
#line 6818 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 6831 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1077:
#line 6835 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1078:
#line 6842 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1079:
#line 6852 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1080:
#line 6853 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = NULL; ;}
    break;

  case 1081:
#line 6859 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1082:
#line 6860 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.list) = NIL; ;}
    break;

  case 1083:
#line 6872 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1084:
#line 6882 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1085:
#line 6894 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1086:
#line 6900 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1087:
#line 6907 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1088:
#line 6916 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1089:
#line 6918 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1090:
#line 6925 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1091:
#line 6936 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1092:
#line 6942 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1093:
#line 6948 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1094:
#line 6954 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1095:
#line 6962 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1096:
#line 6964 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1097:
#line 6976 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 6989 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 7002 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1100:
#line 7020 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 7040 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1102:
#line 7041 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1103:
#line 7042 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1104:
#line 7043 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1105:
#line 7057 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1106:
#line 7070 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1107:
#line 7086 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1108:
#line 7087 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = false; ;}
    break;

  case 1109:
#line 7088 "third_party/libpg_query/grammar/grammar.y.tmp"
    { (yyval.boolean) = true; ;}
    break;

  case 1110:
#line 7094 "third_party/libpg_query/grammar/grammar.y.tmp"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 21714 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 7113 "third_party/libpg_query/grammar/grammar.y.tmp"



/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeAArrayExpr(PGList *elements, int location)
{
	PGAArrayExpr *n = makeNode(PGAArrayExpr);

	n->elements = elements;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/*
 * Convert a list of (dotted) names to a PGRangeVar (like
 * makeRangeVarFromNameList, but with position support).  The
 * "AnyName" refers to the any_name production in the grammar.
 */
static PGRangeVar *
makeRangeVarFromAnyName(PGList *names, int position, core_yyscan_t yyscanner)
{
	PGRangeVar *r = makeNode(PGRangeVar);

	switch (list_length(names))
	{
		case 1:
			r->catalogname = NULL;
			r->schemaname = NULL;
			r->relname = strVal(linitial(names));
			break;
		case 2:
			r->catalogname = NULL;
			r->schemaname = strVal(linitial(names));
			r->relname = strVal(lsecond(names));
			break;
		case 3:
			r->catalogname = strVal(linitial(names));
			r->schemaname = strVal(lsecond(names));
			r->relname = strVal(lthird(names));
			break;
		default:
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("improper qualified name (too many dotted names): %s",
							NameListToString(names)),
					 parser_errposition(position)));
			break;
	}

	r->relpersistence = RELPERSISTENCE_PERMANENT;
	r->location = position;

	return r;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

