/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DAYS_P = 363,
     DEALLOCATE = 364,
     DEC = 365,
     DECIMAL_P = 366,
     DECLARE = 367,
     DEFAULT = 368,
     DEFAULTS = 369,
     DEFERRABLE = 370,
     DEFERRED = 371,
     DEFINER = 372,
     DELETE_P = 373,
     DELIMITER = 374,
     DELIMITERS = 375,
     DEPENDS = 376,
     DESC_P = 377,
     DESCRIBE = 378,
     DETACH = 379,
     DICTIONARY = 380,
     DISABLE_P = 381,
     DISCARD = 382,
     DISTINCT = 383,
     DO = 384,
     DOCUMENT_P = 385,
     DOMAIN_P = 386,
     DOUBLE_P = 387,
     DROP = 388,
     EACH = 389,
     ELSE = 390,
     ENABLE_P = 391,
     ENCODING = 392,
     ENCRYPTED = 393,
     END_P = 394,
     ENUM_P = 395,
     ESCAPE = 396,
     EVENT = 397,
     EXCEPT = 398,
     EXCLUDE = 399,
     EXCLUDING = 400,
     EXCLUSIVE = 401,
     EXECUTE = 402,
     EXISTS = 403,
     EXPLAIN = 404,
     EXPORT_P = 405,
     EXTENSION = 406,
     EXTERNAL = 407,
     EXTRACT = 408,
     FALSE_P = 409,
     FAMILY = 410,
     FETCH = 411,
     FILTER = 412,
     FIRST_P = 413,
     FLOAT_P = 414,
     FOLLOWING = 415,
     FOR = 416,
     FORCE = 417,
     FOREIGN = 418,
     FORWARD = 419,
     FREEZE = 420,
     FROM = 421,
     FULL = 422,
     FUNCTION = 423,
     FUNCTIONS = 424,
     GENERATED = 425,
     GLOB = 426,
     GLOBAL = 427,
     GRANT = 428,
     GRANTED = 429,
     GROUP_P = 430,
     GROUPING = 431,
     HANDLER = 432,
     HAVING = 433,
     HEADER_P = 434,
     HOLD = 435,
     HOUR_P = 436,
     HOURS_P = 437,
     IDENTITY_P = 438,
     IF_P = 439,
     ILIKE = 440,
     IMMEDIATE = 441,
     IMMUTABLE = 442,
     IMPLICIT_P = 443,
     IMPORT_P = 444,
     IN_P = 445,
     INCLUDING = 446,
     INCREMENT = 447,
     INDEX = 448,
     INDEXES = 449,
     INHERIT = 450,
     INHERITS = 451,
     INITIALLY = 452,
     INLINE_P = 453,
     INNER_P = 454,
     INOUT = 455,
     INPUT_P = 456,
     INSENSITIVE = 457,
     INSERT = 458,
     INSTEAD = 459,
     INT_P = 460,
     INTEGER = 461,
     INTERSECT = 462,
     INTERVAL = 463,
     INTO = 464,
     INVOKER = 465,
     IS = 466,
     ISNULL = 467,
     ISOLATION = 468,
     JOIN = 469,
     KEY = 470,
     LABEL = 471,
     LANGUAGE = 472,
     LARGE_P = 473,
     LAST_P = 474,
     LATERAL_P = 475,
     LEADING = 476,
     LEAKPROOF = 477,
     LEFT = 478,
     LEVEL = 479,
     LIKE = 480,
     LIMIT = 481,
     LISTEN = 482,
     LOAD = 483,
     LOCAL = 484,
     LOCALTIME = 485,
     LOCALTIMESTAMP = 486,
     LOCATION = 487,
     LOCK_P = 488,
     LOCKED = 489,
     LOGGED = 490,
     MACRO = 491,
     MAPPING = 492,
     MATCH = 493,
     MATERIALIZED = 494,
     MAXVALUE = 495,
     METHOD = 496,
     MINUTE_P = 497,
     MINUTES_P = 498,
     MINVALUE = 499,
     MODE = 500,
     MONTH_P = 501,
     MONTHS_P = 502,
     MOVE = 503,
     NAME_P = 504,
     NAMES = 505,
     NATIONAL = 506,
     NATURAL = 507,
     NCHAR = 508,
     NEW = 509,
     NEXT = 510,
     NO = 511,
     NONE = 512,
     NOT = 513,
     NOTHING = 514,
     NOTIFY = 515,
     NOTNULL = 516,
     NOWAIT = 517,
     NULL_P = 518,
     NULLIF = 519,
     NULLS_P = 520,
     NUMERIC = 521,
     OBJECT_P = 522,
     OF = 523,
     OFF = 524,
     OFFSET = 525,
     OIDS = 526,
     OLD = 527,
     ON = 528,
     ONLY = 529,
     OPERATOR = 530,
     OPTION = 531,
     OPTIONS = 532,
     OR = 533,
     ORDER = 534,
     ORDINALITY = 535,
     OUT_P = 536,
     OUTER_P = 537,
     OVER = 538,
     OVERLAPS = 539,
     OVERLAY = 540,
     OVERRIDING = 541,
     OWNED = 542,
     OWNER = 543,
     PARALLEL = 544,
     PARSER = 545,
     PARTIAL = 546,
     PARTITION = 547,
     PASSING = 548,
     PASSWORD = 549,
     PERCENT = 550,
     PLACING = 551,
     PLANS = 552,
     POLICY = 553,
     POSITION = 554,
     PRAGMA_P = 555,
     PRECEDING = 556,
     PRECISION = 557,
     PREPARE = 558,
     PREPARED = 559,
     PRESERVE = 560,
     PRIMARY = 561,
     PRIOR = 562,
     PRIVILEGES = 563,
     PROCEDURAL = 564,
     PROCEDURE = 565,
     PROGRAM = 566,
     PUBLICATION = 567,
     QUOTE = 568,
     RANGE = 569,
     READ_P = 570,
     REAL = 571,
     REASSIGN = 572,
     RECHECK = 573,
     RECURSIVE = 574,
     REF = 575,
     REFERENCES = 576,
     REFERENCING = 577,
     REFRESH = 578,
     REINDEX = 579,
     RELATIVE_P = 580,
     RELEASE = 581,
     RENAME = 582,
     REPEATABLE = 583,
     REPLACE = 584,
     REPLICA = 585,
     RESET = 586,
     RESTART = 587,
     RESTRICT = 588,
     RETURNING = 589,
     RETURNS = 590,
     REVOKE = 591,
     RIGHT = 592,
     ROLE = 593,
     ROLLBACK = 594,
     ROLLUP = 595,
     ROW = 596,
     ROWS = 597,
     RULE = 598,
     SAMPLE = 599,
     SAVEPOINT = 600,
     SCHEMA = 601,
     SCHEMAS = 602,
     SCROLL = 603,
     SEARCH = 604,
     SECOND_P = 605,
     SECONDS_P = 606,
     SECURITY = 607,
     SELECT = 608,
     SEQUENCE = 609,
     SEQUENCES = 610,
     SERIALIZABLE = 611,
     SERVER = 612,
     SESSION = 613,
     SESSION_USER = 614,
     SET = 615,
     SETOF = 616,
     SETS = 617,
     SHARE = 618,
     SHOW = 619,
     SIMILAR = 620,
     SIMPLE = 621,
     SKIP = 622,
     SMALLINT = 623,
     SNAPSHOT = 624,
     SOME = 625,
     SQL_P = 626,
     STABLE = 627,
     STANDALONE_P = 628,
     START = 629,
     STATEMENT = 630,
     STATISTICS = 631,
     STDIN = 632,
     STDOUT = 633,
     STORAGE = 634,
     STRICT_P = 635,
     STRIP_P = 636,
     SUBSCRIPTION = 637,
     SUBSTRING = 638,
     SYMMETRIC = 639,
     SYSID = 640,
     SYSTEM_P = 641,
     TABLE = 642,
     TABLES = 643,
     TABLESAMPLE = 644,
     TABLESPACE = 645,
     TEMP = 646,
     TEMPLATE = 647,
     TEMPORARY = 648,
     TEXT_P = 649,
     THEN = 650,
     TIME = 651,
     TIMESTAMP = 652,
     TO = 653,
     TRAILING = 654,
     TRANSACTION = 655,
     TRANSFORM = 656,
     TREAT = 657,
     TRIGGER = 658,
     TRIM = 659,
     TRUE_P = 660,
     TRUNCATE = 661,
     TRUSTED = 662,
     TYPE_P = 663,
     TYPES_P = 664,
     UNBOUNDED = 665,
     UNCOMMITTED = 666,
     UNENCRYPTED = 667,
     UNION = 668,
     UNIQUE = 669,
     UNKNOWN = 670,
     UNLISTEN = 671,
     UNLOGGED = 672,
     UNTIL = 673,
     UPDATE = 674,
     USER = 675,
     USING = 676,
     VACUUM = 677,
     VALID = 678,
     VALIDATE = 679,
     VALIDATOR = 680,
     VALUE_P = 681,
     VALUES = 682,
     VARCHAR = 683,
     VARIADIC = 684,
     VARYING = 685,
     VERBOSE = 686,
     VERSION_P = 687,
     VIEW = 688,
     VIEWS = 689,
     VOLATILE = 690,
     WHEN = 691,
     WHERE = 692,
     WHITESPACE_P = 693,
     WINDOW = 694,
     WITH = 695,
     WITHIN = 696,
     WITHOUT = 697,
     WORK = 698,
     WRAPPER = 699,
     WRITE_P = 700,
     XML_P = 701,
     XMLATTRIBUTES = 702,
     XMLCONCAT = 703,
     XMLELEMENT = 704,
     XMLEXISTS = 705,
     XMLFOREST = 706,
     XMLNAMESPACES = 707,
     XMLPARSE = 708,
     XMLPI = 709,
     XMLROOT = 710,
     XMLSERIALIZE = 711,
     XMLTABLE = 712,
     YEAR_P = 713,
     YEARS_P = 714,
     YES_P = 715,
     ZONE = 716,
     NOT_LA = 717,
     NULLS_LA = 718,
     WITH_LA = 719,
     POSTFIXOP = 720,
     UMINUS = 721
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DAYS_P 363
#define DEALLOCATE 364
#define DEC 365
#define DECIMAL_P 366
#define DECLARE 367
#define DEFAULT 368
#define DEFAULTS 369
#define DEFERRABLE 370
#define DEFERRED 371
#define DEFINER 372
#define DELETE_P 373
#define DELIMITER 374
#define DELIMITERS 375
#define DEPENDS 376
#define DESC_P 377
#define DESCRIBE 378
#define DETACH 379
#define DICTIONARY 380
#define DISABLE_P 381
#define DISCARD 382
#define DISTINCT 383
#define DO 384
#define DOCUMENT_P 385
#define DOMAIN_P 386
#define DOUBLE_P 387
#define DROP 388
#define EACH 389
#define ELSE 390
#define ENABLE_P 391
#define ENCODING 392
#define ENCRYPTED 393
#define END_P 394
#define ENUM_P 395
#define ESCAPE 396
#define EVENT 397
#define EXCEPT 398
#define EXCLUDE 399
#define EXCLUDING 400
#define EXCLUSIVE 401
#define EXECUTE 402
#define EXISTS 403
#define EXPLAIN 404
#define EXPORT_P 405
#define EXTENSION 406
#define EXTERNAL 407
#define EXTRACT 408
#define FALSE_P 409
#define FAMILY 410
#define FETCH 411
#define FILTER 412
#define FIRST_P 413
#define FLOAT_P 414
#define FOLLOWING 415
#define FOR 416
#define FORCE 417
#define FOREIGN 418
#define FORWARD 419
#define FREEZE 420
#define FROM 421
#define FULL 422
#define FUNCTION 423
#define FUNCTIONS 424
#define GENERATED 425
#define GLOB 426
#define GLOBAL 427
#define GRANT 428
#define GRANTED 429
#define GROUP_P 430
#define GROUPING 431
#define HANDLER 432
#define HAVING 433
#define HEADER_P 434
#define HOLD 435
#define HOUR_P 436
#define HOURS_P 437
#define IDENTITY_P 438
#define IF_P 439
#define ILIKE 440
#define IMMEDIATE 441
#define IMMUTABLE 442
#define IMPLICIT_P 443
#define IMPORT_P 444
#define IN_P 445
#define INCLUDING 446
#define INCREMENT 447
#define INDEX 448
#define INDEXES 449
#define INHERIT 450
#define INHERITS 451
#define INITIALLY 452
#define INLINE_P 453
#define INNER_P 454
#define INOUT 455
#define INPUT_P 456
#define INSENSITIVE 457
#define INSERT 458
#define INSTEAD 459
#define INT_P 460
#define INTEGER 461
#define INTERSECT 462
#define INTERVAL 463
#define INTO 464
#define INVOKER 465
#define IS 466
#define ISNULL 467
#define ISOLATION 468
#define JOIN 469
#define KEY 470
#define LABEL 471
#define LANGUAGE 472
#define LARGE_P 473
#define LAST_P 474
#define LATERAL_P 475
#define LEADING 476
#define LEAKPROOF 477
#define LEFT 478
#define LEVEL 479
#define LIKE 480
#define LIMIT 481
#define LISTEN 482
#define LOAD 483
#define LOCAL 484
#define LOCALTIME 485
#define LOCALTIMESTAMP 486
#define LOCATION 487
#define LOCK_P 488
#define LOCKED 489
#define LOGGED 490
#define MACRO 491
#define MAPPING 492
#define MATCH 493
#define MATERIALIZED 494
#define MAXVALUE 495
#define METHOD 496
#define MINUTE_P 497
#define MINUTES_P 498
#define MINVALUE 499
#define MODE 500
#define MONTH_P 501
#define MONTHS_P 502
#define MOVE 503
#define NAME_P 504
#define NAMES 505
#define NATIONAL 506
#define NATURAL 507
#define NCHAR 508
#define NEW 509
#define NEXT 510
#define NO 511
#define NONE 512
#define NOT 513
#define NOTHING 514
#define NOTIFY 515
#define NOTNULL 516
#define NOWAIT 517
#define NULL_P 518
#define NULLIF 519
#define NULLS_P 520
#define NUMERIC 521
#define OBJECT_P 522
#define OF 523
#define OFF 524
#define OFFSET 525
#define OIDS 526
#define OLD 527
#define ON 528
#define ONLY 529
#define OPERATOR 530
#define OPTION 531
#define OPTIONS 532
#define OR 533
#define ORDER 534
#define ORDINALITY 535
#define OUT_P 536
#define OUTER_P 537
#define OVER 538
#define OVERLAPS 539
#define OVERLAY 540
#define OVERRIDING 541
#define OWNED 542
#define OWNER 543
#define PARALLEL 544
#define PARSER 545
#define PARTIAL 546
#define PARTITION 547
#define PASSING 548
#define PASSWORD 549
#define PERCENT 550
#define PLACING 551
#define PLANS 552
#define POLICY 553
#define POSITION 554
#define PRAGMA_P 555
#define PRECEDING 556
#define PRECISION 557
#define PREPARE 558
#define PREPARED 559
#define PRESERVE 560
#define PRIMARY 561
#define PRIOR 562
#define PRIVILEGES 563
#define PROCEDURAL 564
#define PROCEDURE 565
#define PROGRAM 566
#define PUBLICATION 567
#define QUOTE 568
#define RANGE 569
#define READ_P 570
#define REAL 571
#define REASSIGN 572
#define RECHECK 573
#define RECURSIVE 574
#define REF 575
#define REFERENCES 576
#define REFERENCING 577
#define REFRESH 578
#define REINDEX 579
#define RELATIVE_P 580
#define RELEASE 581
#define RENAME 582
#define REPEATABLE 583
#define REPLACE 584
#define REPLICA 585
#define RESET 586
#define RESTART 587
#define RESTRICT 588
#define RETURNING 589
#define RETURNS 590
#define REVOKE 591
#define RIGHT 592
#define ROLE 593
#define ROLLBACK 594
#define ROLLUP 595
#define ROW 596
#define ROWS 597
#define RULE 598
#define SAMPLE 599
#define SAVEPOINT 600
#define SCHEMA 601
#define SCHEMAS 602
#define SCROLL 603
#define SEARCH 604
#define SECOND_P 605
#define SECONDS_P 606
#define SECURITY 607
#define SELECT 608
#define SEQUENCE 609
#define SEQUENCES 610
#define SERIALIZABLE 611
#define SERVER 612
#define SESSION 613
#define SESSION_USER 614
#define SET 615
#define SETOF 616
#define SETS 617
#define SHARE 618
#define SHOW 619
#define SIMILAR 620
#define SIMPLE 621
#define SKIP 622
#define SMALLINT 623
#define SNAPSHOT 624
#define SOME 625
#define SQL_P 626
#define STABLE 627
#define STANDALONE_P 628
#define START 629
#define STATEMENT 630
#define STATISTICS 631
#define STDIN 632
#define STDOUT 633
#define STORAGE 634
#define STRICT_P 635
#define STRIP_P 636
#define SUBSCRIPTION 637
#define SUBSTRING 638
#define SYMMETRIC 639
#define SYSID 640
#define SYSTEM_P 641
#define TABLE 642
#define TABLES 643
#define TABLESAMPLE 644
#define TABLESPACE 645
#define TEMP 646
#define TEMPLATE 647
#define TEMPORARY 648
#define TEXT_P 649
#define THEN 650
#define TIME 651
#define TIMESTAMP 652
#define TO 653
#define TRAILING 654
#define TRANSACTION 655
#define TRANSFORM 656
#define TREAT 657
#define TRIGGER 658
#define TRIM 659
#define TRUE_P 660
#define TRUNCATE 661
#define TRUSTED 662
#define TYPE_P 663
#define TYPES_P 664
#define UNBOUNDED 665
#define UNCOMMITTED 666
#define UNENCRYPTED 667
#define UNION 668
#define UNIQUE 669
#define UNKNOWN 670
#define UNLISTEN 671
#define UNLOGGED 672
#define UNTIL 673
#define UPDATE 674
#define USER 675
#define USING 676
#define VACUUM 677
#define VALID 678
#define VALIDATE 679
#define VALIDATOR 680
#define VALUE_P 681
#define VALUES 682
#define VARCHAR 683
#define VARIADIC 684
#define VARYING 685
#define VERBOSE 686
#define VERSION_P 687
#define VIEW 688
#define VIEWS 689
#define VOLATILE 690
#define WHEN 691
#define WHERE 692
#define WHITESPACE_P 693
#define WINDOW 694
#define WITH 695
#define WITHIN 696
#define WITHOUT 697
#define WORK 698
#define WRAPPER 699
#define WRITE_P 700
#define XML_P 701
#define XMLATTRIBUTES 702
#define XMLCONCAT 703
#define XMLELEMENT 704
#define XMLEXISTS 705
#define XMLFOREST 706
#define XMLNAMESPACES 707
#define XMLPARSE 708
#define XMLPI 709
#define XMLROOT 710
#define XMLSERIALIZE 711
#define XMLTABLE 712
#define YEAR_P 713
#define YEARS_P 714
#define YES_P 715
#define ZONE 716
#define NOT_LA 717
#define NULLS_LA 718
#define WITH_LA 719
#define POSTFIXOP 720
#define UMINUS 721




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1245 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1270 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  565
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   46802

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  485
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  357
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1607
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2665

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   721

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   473,     2,     2,
     478,   479,   471,   469,   482,   470,   480,   472,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   484,   481,
     465,   467,   466,   483,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   476,     2,   477,   474,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     468,   475
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2079,  2085,  2092,  2095,  2099,
    2103,  2108,  2109,  2111,  2113,  2115,  2117,  2119,  2122,  2127,
    2129,  2131,  2133,  2135,  2138,  2142,  2146,  2147,  2149,  2151,
    2153,  2155,  2157,  2160,  2163,  2166,  2169,  2172,  2174,  2178,
    2179,  2181,  2183,  2185,  2187,  2193,  2196,  2198,  2200,  2202,
    2204,  2209,  2211,  2214,  2217,  2219,  2223,  2227,  2230,  2232,
    2233,  2239,  2242,  2248,  2251,  2253,  2257,  2261,  2262,  2264,
    2266,  2268,  2270,  2272,  2274,  2276,  2278,  2280,  2282,  2284,
    2286,  2288,  2290,  2292,  2294,  2296,  2298,  2302,  2306,  2310,
    2314,  2318,  2322,  2326,  2327,  2329,  2334,  2336,  2340,  2344,
    2350,  2353,  2356,  2360,  2364,  2368,  2372,  2376,  2380,  2384,
    2388,  2392,  2396,  2400,  2404,  2408,  2411,  2414,  2418,  2422,
    2425,  2428,  2432,  2436,  2442,  2447,  2454,  2458,  2464,  2469,
    2476,  2481,  2488,  2494,  2502,  2506,  2509,  2514,  2518,  2521,
    2525,  2529,  2534,  2538,  2543,  2547,  2552,  2558,  2565,  2572,
    2580,  2587,  2595,  2602,  2610,  2614,  2619,  2624,  2631,  2633,
    2635,  2639,  2642,  2645,  2649,  2653,  2657,  2661,  2665,  2669,
    2673,  2677,  2681,  2685,  2689,  2693,  2697,  2700,  2703,  2709,
    2716,  2723,  2731,  2733,  2735,  2738,  2741,  2746,  2748,  2750,
    2752,  2755,  2758,  2762,  2768,  2775,  2784,  2791,  2798,  2803,
    2808,  2810,  2812,  2814,  2820,  2822,  2824,  2829,  2831,  2836,
    2838,  2843,  2845,  2850,  2852,  2854,  2856,  2858,  2860,  2862,
    2869,  2874,  2879,  2884,  2889,  2896,  2902,  2908,  2914,  2919,
    2926,  2931,  2937,  2938,  2944,  2945,  2948,  2949,  2951,  2955,
    2959,  2962,  2965,  2966,  2973,  2975,  2976,  2980,  2981,  2984,
    2987,  2988,  2990,  2995,  2998,  3001,  3004,  3007,  3010,  3015,
    3019,  3025,  3027,  3029,  3031,  3033,  3035,  3037,  3039,  3041,
    3043,  3045,  3047,  3049,  3051,  3053,  3055,  3057,  3059,  3061,
    3066,  3068,  3073,  3075,  3080,  3082,  3085,  3087,  3090,  3092,
    3095,  3097,  3101,  3103,  3107,  3109,  3113,  3115,  3119,  3123,
    3125,  3129,  3133,  3134,  3136,  3138,  3140,  3142,  3144,  3146,
    3148,  3150,  3155,  3159,  3162,  3166,  3167,  3171,  3175,  3178,
    3181,  3183,  3184,  3187,  3190,  3194,  3197,  3199,  3201,  3205,
    3211,  3213,  3216,  3221,  3224,  3225,  3227,  3228,  3230,  3233,
    3236,  3239,  3243,  3249,  3251,  3252,  3254,  3257,  3258,  3261,
    3263,  3264,  3266,  3267,  3269,  3273,  3277,  3280,  3282,  3284,
    3286,  3290,  3292,  3295,  3297,  3301,  3303,  3305,  3307,  3310,
    3312,  3314,  3316,  3318,  3320,  3323,  3330,  3333,  3339,  3343,
    3347,  3349,  3351,  3353,  3355,  3357,  3359,  3361,  3363,  3365,
    3367,  3369,  3371,  3373,  3375,  3378,  3381,  3385,  3389,  3390,
    3392,  3394,  3396,  3398,  3400,  3402,  3404,  3406,  3412,  3416,
    3417,  3419,  3421,  3423,  3425,  3430,  3438,  3441,  3442,  3444,
    3446,  3448,  3450,  3464,  3481,  3483,  3486,  3487,  3489,  3490,
    3492,  3493,  3496,  3497,  3499,  3500,  3507,  3516,  3523,  3532,
    3539,  3548,  3550,  3555,  3559,  3562,  3567,  3571,  3577,  3579,
    3580,  3582,  3584,  3585,  3587,  3589,  3591,  3593,  3595,  3597,
    3599,  3601,  3603,  3605,  3607,  3609,  3613,  3615,  3617,  3619,
    3621,  3623,  3625,  3628,  3630,  3632,  3635,  3639,  3643,  3645,
    3649,  3653,  3656,  3660,  3664,  3668,  3672,  3674,  3676,  3678,
    3680,  3684,  3690,  3692,  3694,  3696,  3698,  3702,  3705,  3707,
    3712,  3718,  3724,  3729,  3736,  3738,  3740,  3742,  3744,  3746,
    3748,  3749,  3751,  3755,  3757,  3758,  3766,  3768,  3771,  3775,
    3778,  3779,  3782,  3783,  3786,  3791,  3794,  3796,  3798,  3800,
    3803,  3807,  3810,  3814,  3819,  3822,  3824,  3826,  3828,  3832,
    3835,  3845,  3857,  3870,  3885,  3889,  3894,  3899,  3900,  3908,
    3919,  3922,  3926,  3927,  3932,  3934,  3936,  3938,  3940,  3942,
    3944,  3946,  3948,  3950,  3952,  3954,  3956,  3958,  3960,  3962,
    3964,  3966,  3968,  3970,  3972,  3974,  3976,  3978,  3980,  3982,
    3984,  3986,  3988,  3990,  3992,  3994,  3996,  3998,  4000,  4002,
    4004,  4006,  4008,  4010,  4012,  4014,  4016,  4018,  4020,  4022,
    4024,  4026,  4028,  4030,  4032,  4034,  4036,  4038,  4040,  4042,
    4044,  4046,  4048,  4050,  4052,  4054,  4056,  4058,  4060,  4062,
    4064,  4066,  4068,  4070,  4072,  4074,  4076,  4078,  4080,  4082,
    4084,  4086,  4088,  4090,  4092,  4094,  4096,  4098,  4100,  4102,
    4104,  4106,  4108,  4110,  4112,  4114,  4116,  4118,  4120,  4122,
    4124,  4126,  4128,  4130,  4132,  4134,  4136,  4138,  4140,  4142,
    4144,  4146,  4148,  4150,  4152,  4154,  4156,  4158,  4160,  4162,
    4164,  4166,  4168,  4170,  4172,  4174,  4176,  4178,  4180,  4182,
    4184,  4186,  4188,  4190,  4192,  4194,  4196,  4198,  4200,  4202,
    4204,  4206,  4208,  4210,  4212,  4214,  4216,  4218,  4220,  4222,
    4224,  4226,  4228,  4230,  4232,  4234,  4236,  4238,  4240,  4242,
    4244,  4246,  4248,  4250,  4252,  4254,  4256,  4258,  4260,  4262,
    4264,  4266,  4268,  4270,  4272,  4274,  4276,  4278,  4280,  4282,
    4284,  4286,  4288,  4290,  4292,  4294,  4296,  4298,  4300,  4302,
    4304,  4306,  4308,  4310,  4312,  4314,  4316,  4318,  4320,  4322,
    4324,  4326,  4328,  4330,  4332,  4334,  4336,  4338,  4340,  4342,
    4344,  4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,  4362,
    4364,  4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,  4382,
    4384,  4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,  4402,
    4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,
    4424,  4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,  4442,
    4444,  4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,  4462,
    4464,  4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,  4482,
    4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,
    4504,  4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,
    4524,  4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,
    4544,  4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,
    4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,  4582,
    4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,  4602,
    4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,  4622,
    4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,  4642,
    4644,  4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,
    4664,  4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,  4682,
    4684,  4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,  4702,
    4704,  4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,  4722,
    4724,  4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,  4742,
    4744,  4746,  4748,  4750,  4752,  4754,  4756,  4758,  4760,  4762,
    4764,  4766,  4768,  4770,  4772,  4774,  4776,  4778,  4780,  4782,
    4784,  4786,  4788,  4790,  4792,  4794,  4796,  4798,  4800,  4802,
    4804,  4806,  4808,  4810,  4812,  4814,  4816,  4818
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     486,     0,    -1,   487,    -1,   487,   481,   488,    -1,   488,
      -1,   793,    -1,   526,    -1,   489,    -1,   825,    -1,   832,
      -1,   794,    -1,   591,    -1,   835,    -1,   587,    -1,   783,
      -1,   522,    -1,   535,    -1,   500,    -1,   821,    -1,   581,
      -1,   524,    -1,   797,    -1,   795,    -1,   796,    -1,   786,
      -1,   503,    -1,   814,    -1,   521,    -1,   780,    -1,   501,
      -1,   608,    -1,   533,    -1,   590,    -1,   816,    -1,   826,
      -1,   808,    -1,   829,    -1,   833,    -1,    -1,    28,   387,
     668,   497,    -1,    28,   387,   184,   148,   668,   497,    -1,
      28,   193,   763,   497,    -1,    28,   193,   184,   148,   763,
     497,    -1,    28,   354,   763,   497,    -1,    28,   354,   184,
     148,   763,   497,    -1,    28,   433,   763,   497,    -1,    28,
     433,   184,   148,   763,   497,    -1,   492,    -1,   490,   492,
      -1,   360,   113,   707,    -1,   133,   113,    -1,   332,    -1,
     332,   528,   529,    -1,   360,   530,    -1,   360,   170,   580,
      -1,   496,    -1,   493,   482,   496,    -1,    22,   560,    -1,
      22,   184,   258,   148,   560,    -1,    22,    74,   560,    -1,
      22,    74,   184,   258,   148,   560,    -1,    28,   502,   771,
     491,    -1,    28,   502,   771,   133,   258,   263,    -1,    28,
     502,   771,   360,   258,   263,    -1,    28,   502,   771,   360,
     376,   532,    -1,    28,   502,   771,   360,   548,    -1,    28,
     502,   771,   331,   548,    -1,    28,   502,   771,   360,   379,
     771,    -1,    28,   502,   771,    22,   170,   580,    35,   183,
     538,    -1,    28,   502,   771,   490,    -1,    28,   502,   771,
     133,   183,    -1,    28,   502,   771,   133,   183,   184,   148,
      -1,   133,   502,   184,   148,   771,   585,    -1,   133,   502,
     771,   585,    -1,    28,   502,   771,   499,   408,   678,   677,
     495,    -1,    28,   502,   771,   498,    -1,    22,   550,    -1,
      28,    84,   765,   536,    -1,   424,    84,   765,    -1,   133,
      84,   184,   148,   765,   585,    -1,   133,    84,   765,   585,
      -1,   360,   235,    -1,   360,   417,    -1,   360,   548,    -1,
     331,   548,    -1,   498,    -1,   421,   707,    -1,    -1,   543,
      -1,   360,   543,    -1,    22,   543,    -1,   133,   558,    -1,
     494,    -1,   497,   482,   494,    -1,   277,   478,   493,   479,
      -1,   360,   105,    -1,    -1,   109,   765,    -1,   109,   303,
     765,    -1,   109,    26,    -1,   109,   303,    26,    -1,    28,
     346,   765,   327,   398,   765,    -1,    28,   387,   668,   327,
     398,   765,    -1,    28,   387,   184,   148,   668,   327,   398,
     765,    -1,    28,   354,   763,   327,   398,   765,    -1,    28,
     354,   184,   148,   763,   327,   398,   765,    -1,    28,   433,
     763,   327,   398,   765,    -1,    28,   433,   184,   148,   763,
     327,   398,   765,    -1,    28,   193,   763,   327,   398,   765,
      -1,    28,   193,   184,   148,   763,   327,   398,   765,    -1,
      28,   387,   668,   327,   502,   765,   398,   765,    -1,    28,
     387,   184,   148,   668,   327,   502,   765,   398,   765,    -1,
      28,   387,   668,   327,    84,   765,   398,   765,    -1,    28,
     387,   184,   148,   668,   327,    84,   765,   398,   765,    -1,
      74,    -1,    -1,   507,   203,   209,   505,   504,   510,   512,
      -1,   608,    -1,   286,   513,   426,   608,    -1,   478,   517,
     479,   608,    -1,   478,   517,   479,   286,   513,   426,   608,
      -1,   113,   427,    -1,   763,    -1,   763,    35,   771,    -1,
     478,   519,   479,   674,    -1,   273,    84,   765,    -1,    -1,
     613,    -1,    -1,   771,   757,    -1,   520,   467,   707,    -1,
     478,   514,   479,   467,   707,    -1,   273,    82,   506,   129,
     419,   360,   518,   674,    -1,   273,    82,   506,   129,   259,
      -1,    -1,   771,   515,   516,   626,   627,    -1,   712,   515,
     516,   626,   627,    -1,   478,   707,   479,   515,   516,   626,
     627,    -1,   334,   760,    -1,    -1,   420,    -1,   386,    -1,
     520,    -1,   514,   482,   520,    -1,    72,   774,    -1,    -1,
     774,    -1,    -1,   508,    -1,   517,   482,   508,    -1,   509,
      -1,   518,   482,   509,    -1,   511,    -1,   519,   482,   511,
      -1,   771,   757,    -1,   300,   771,    -1,   300,   771,   467,
     813,    -1,   300,   771,   478,   735,   479,    -1,    91,   579,
     354,   763,   523,    -1,    91,   579,   354,   184,   258,   148,
     763,   523,    -1,   527,    -1,    -1,   147,   765,   525,    -1,
      91,   579,   387,   837,    35,   147,   765,   525,   836,    -1,
      91,   579,   387,   184,   258,   148,   837,    35,   147,   765,
     525,   836,    -1,   478,   734,   479,    -1,    -1,    28,   354,
     763,   527,    -1,    28,   354,   184,   148,   763,   527,    -1,
     530,    -1,   527,   530,    -1,   440,    -1,   464,    -1,    -1,
       4,    -1,   469,     4,    -1,   470,     4,    -1,   532,    -1,
      35,   680,    -1,    54,   529,    -1,   104,    -1,   256,   104,
      -1,   192,   531,   529,    -1,   240,   529,    -1,   244,   529,
      -1,   256,   240,    -1,   256,   244,    -1,   287,    53,   774,
      -1,   354,   249,   774,    -1,   374,   528,   529,    -1,   332,
      -1,   332,   528,   529,    -1,    53,    -1,    -1,   769,    -1,
     469,   769,    -1,   470,   769,    -1,    18,   534,    -1,    46,
     534,    -1,   374,   534,    -1,    78,   534,    -1,   139,   534,
      -1,   339,   534,    -1,   443,    -1,   400,    -1,    -1,    91,
     579,   387,   763,   478,   567,   479,   555,   547,    -1,    91,
     579,   387,   184,   258,   148,   763,   478,   567,   479,   555,
     547,    -1,    -1,   536,   559,    -1,   574,    -1,   841,    -1,
     731,    -1,   529,    -1,   770,    -1,   257,    -1,   478,   527,
     479,    -1,    -1,   770,    -1,   256,    21,    -1,   333,    -1,
      57,    -1,   360,   263,    -1,   360,   113,    -1,    84,   765,
     542,    -1,   542,    -1,   554,    -1,    72,   774,    -1,   258,
     263,    -1,   263,    -1,   414,   566,    -1,   306,   215,   566,
      -1,    66,   478,   707,   479,   549,    -1,   113,   708,    -1,
     170,   580,    35,   183,   538,    -1,   321,   763,   569,   577,
     545,    -1,   558,   539,    -1,   273,   419,   540,    -1,   544,
      -1,   571,    -1,   544,   571,    -1,   571,   544,    -1,    -1,
     277,   478,   561,   479,    -1,    -1,   273,    78,   133,    -1,
     273,    78,   118,   342,    -1,   273,    78,   305,   342,    -1,
      -1,   478,   552,   479,    -1,   256,   195,    -1,    -1,    84,
     765,   575,    -1,   575,    -1,    77,    -1,    85,    -1,   114,
      -1,   183,    -1,   194,    -1,   376,    -1,   379,    -1,    26,
      -1,   572,    -1,   552,   482,   572,    -1,   421,   193,   563,
      -1,   115,    -1,   258,   115,    -1,   197,   116,    -1,   197,
     186,    -1,   440,   548,    -1,   440,   271,    -1,   442,   271,
      -1,    -1,   478,   562,   479,    -1,   557,   191,   551,    -1,
     557,   145,   551,    -1,    -1,   778,    -1,   258,   115,    -1,
     115,    -1,   197,   186,    -1,   197,   116,    -1,   258,   423,
      -1,   256,   195,    -1,   771,   678,   546,   570,    -1,   543,
      -1,   561,   482,   543,    -1,   565,    -1,   562,   482,   565,
      -1,   771,    -1,   560,    -1,   578,    -1,   550,    -1,   778,
     467,   537,    -1,   778,    -1,   440,   556,    -1,    -1,   576,
      -1,    -1,   771,    -1,   478,   573,   479,    -1,    -1,   570,
     541,    -1,    -1,   273,   118,   540,    -1,   778,   467,   537,
      -1,   778,    -1,   778,   480,   778,   467,   537,    -1,   778,
     480,   778,    -1,   568,    -1,   573,   482,   568,    -1,   678,
      -1,   773,   775,   473,   408,    -1,   361,   773,   775,   473,
     408,    -1,    66,   478,   707,   479,   536,    -1,   414,   478,
     573,   479,   566,   536,    -1,   414,   553,   536,    -1,   306,
     215,   478,   573,   479,   566,   536,    -1,   306,   215,   553,
     536,    -1,   163,   215,   478,   573,   479,   321,   763,   569,
     577,   545,   536,    -1,   564,    -1,   576,   482,   564,    -1,
     238,   167,    -1,   238,   291,    -1,   238,   366,    -1,    -1,
     225,   763,   557,    -1,   393,    -1,   391,    -1,   229,   393,
      -1,   229,   391,    -1,   172,   393,    -1,   172,   391,    -1,
     417,    -1,    -1,    29,    -1,    53,   113,    -1,   133,   582,
     184,   148,   584,   585,    -1,   133,   582,   584,   585,    -1,
     133,   583,   184,   148,   764,   585,    -1,   133,   583,   764,
     585,    -1,   133,   586,   765,   273,   774,   585,    -1,   133,
     586,   184,   148,   765,   273,   774,   585,    -1,   387,    -1,
     354,    -1,   168,    -1,   236,    -1,   433,    -1,   239,   433,
      -1,   193,    -1,   163,   387,    -1,    73,    -1,    88,    -1,
     376,    -1,   394,   349,   290,    -1,   394,   349,   125,    -1,
     394,   349,   392,    -1,   394,   349,    81,    -1,    20,   241,
      -1,   142,   403,    -1,   151,    -1,   163,   105,   444,    -1,
     312,    -1,   346,    -1,   357,    -1,   774,    -1,   584,   482,
     774,    -1,    57,    -1,   333,    -1,    -1,   298,    -1,   343,
      -1,   403,    -1,    91,   588,   763,   589,    35,   707,    -1,
     168,    -1,   236,    -1,   478,   479,    -1,   478,   735,   479,
      -1,   507,   419,   822,   360,   518,   658,   823,   512,    -1,
      89,   603,   763,   569,   601,   592,   597,   606,   593,   528,
     598,    -1,    89,   478,   782,   479,   398,   597,   606,   528,
     598,    -1,   166,    -1,   398,    -1,   595,   120,   770,    -1,
      -1,   605,    -1,   594,   482,   605,    -1,   421,    -1,    -1,
      35,    -1,    -1,   311,    -1,    -1,   602,    -1,   478,   607,
     479,    -1,   805,    -1,   529,    -1,   471,    -1,   478,   594,
     479,    -1,    -1,   778,   599,    -1,   440,   271,    -1,    -1,
     602,   604,    -1,    -1,    49,    -1,    -1,    49,    -1,   271,
      -1,   165,    -1,   119,   596,   770,    -1,   263,   596,   770,
      -1,    93,    -1,   179,    -1,   313,   596,   770,    -1,   141,
     596,   770,    -1,   162,   313,   573,    -1,   162,   313,   471,
      -1,   162,   258,   263,   573,    -1,   162,   263,   573,    -1,
     137,   770,    -1,   805,    -1,   770,    -1,   377,    -1,   378,
      -1,   600,    -1,   607,   482,   600,    -1,   610,    -1,   609,
      -1,   478,   610,   479,    -1,   478,   609,   479,    -1,   612,
      -1,   611,   623,    -1,   611,   622,   650,   629,    -1,   611,
     622,   628,   651,    -1,   613,   611,    -1,   613,   611,   623,
      -1,   613,   611,   622,   650,   629,    -1,   613,   611,   622,
     628,   651,    -1,   612,    -1,   609,    -1,   353,   621,   759,
     616,   658,   674,   645,   649,   716,   633,    -1,   353,   620,
     760,   616,   658,   674,   645,   649,   716,   633,    -1,   657,
      -1,   387,   668,    -1,   611,   413,   619,   611,    -1,   611,
     207,   619,   611,    -1,   611,   143,   619,   611,    -1,   440,
     614,    -1,   464,   614,    -1,   440,   319,   614,    -1,   615,
      -1,   614,   482,   615,    -1,   765,   776,    35,   478,   782,
     479,    -1,   209,   617,    -1,    -1,   393,   618,   763,    -1,
     391,   618,   763,    -1,   229,   393,   618,   763,    -1,   229,
     391,   618,   763,    -1,   172,   393,   618,   763,    -1,   172,
     391,   618,   763,    -1,   417,   618,   763,    -1,   387,   763,
      -1,   763,    -1,   387,    -1,    -1,    26,    -1,   128,    -1,
      -1,   128,    -1,   128,   273,   478,   734,   479,    -1,    26,
      -1,    -1,   623,    -1,    -1,   279,    53,   624,    -1,   625,
      -1,   624,   482,   625,    -1,   707,   421,   731,   627,    -1,
     707,   626,   627,    -1,    36,    -1,   122,    -1,    -1,   463,
     158,    -1,   463,   219,    -1,    -1,   630,   631,    -1,   631,
     630,    -1,   630,    -1,   631,    -1,   628,    -1,    -1,   226,
     639,    -1,   226,   639,   482,   640,    -1,   156,   644,   641,
     643,   274,    -1,   156,   644,   643,   274,    -1,   270,   640,
      -1,   270,   641,   643,    -1,     4,   473,    -1,     9,   473,
      -1,     4,   295,    -1,     9,   295,    -1,     9,    -1,     9,
     342,    -1,   421,   344,   635,    -1,    -1,   771,    -1,    -1,
     634,   478,   632,   479,   638,    -1,   632,    -1,   632,   478,
     771,   479,    -1,   632,   478,   771,   482,     9,   479,    -1,
     389,   635,    -1,   636,    -1,    -1,   328,   478,     9,   479,
      -1,    -1,   707,    -1,    26,    -1,   707,    -1,   709,    -1,
     469,   642,    -1,   470,   642,    -1,   769,    -1,     4,    -1,
     341,    -1,   342,    -1,   158,    -1,   255,    -1,   175,    53,
     646,    -1,    -1,   647,    -1,   646,   482,   647,    -1,   707,
      -1,   648,    -1,   478,   479,    -1,   178,   707,    -1,    -1,
     652,    -1,   161,   315,   274,    -1,   650,    -1,    -1,   653,
      -1,   652,   653,    -1,   654,   655,   656,    -1,   161,   419,
      -1,   161,   256,   215,   419,    -1,   161,   363,    -1,   161,
     215,   363,    -1,   268,   762,    -1,    -1,   262,    -1,   367,
     234,    -1,    -1,   427,   478,   734,   479,    -1,   657,   482,
     478,   734,   479,    -1,   166,   659,    -1,    -1,   660,    -1,
     659,   482,   660,    -1,   668,   663,   637,    -1,   669,   664,
     637,    -1,   220,   669,   664,    -1,   609,   663,   637,    -1,
     220,   609,   663,    -1,   661,    -1,   478,   661,   479,   662,
      -1,   478,   661,   479,    -1,   660,    92,   214,   660,    -1,
     660,   665,   214,   660,   667,    -1,   660,   214,   660,   667,
      -1,   660,   252,   665,   214,   660,    -1,   660,   252,   214,
     660,    -1,    35,   771,   478,   764,   479,    -1,    35,   772,
      -1,   771,   478,   764,   479,    -1,   771,    -1,   662,    -1,
      -1,   662,    -1,    35,   478,   675,   479,    -1,    35,   771,
     478,   675,   479,    -1,   771,   478,   675,   479,    -1,    -1,
     167,   666,    -1,   223,   666,    -1,   337,   666,    -1,   199,
      -1,   282,    -1,    -1,   421,   478,   764,   479,    -1,   273,
     707,    -1,   763,    -1,   763,   471,    -1,   274,   763,    -1,
     274,   478,   763,   479,    -1,   712,   673,    -1,   342,   166,
     478,   671,   479,   673,    -1,   712,   672,    -1,   670,    -1,
     671,   482,   670,    -1,    35,   478,   675,   479,    -1,    -1,
     464,   280,    -1,    -1,   437,   707,    -1,    -1,   676,    -1,
     675,   482,   676,    -1,   771,   678,   677,    -1,    72,   774,
      -1,    -1,   680,   679,    -1,   361,   680,   679,    -1,   680,
      34,   476,   769,   477,    -1,   361,   680,    34,   476,   769,
     477,    -1,   680,    34,    -1,   361,   680,    34,    -1,   679,
     476,   477,    -1,   679,   476,   769,   477,    -1,    -1,   682,
      -1,   684,    -1,   686,    -1,   690,    -1,   696,    -1,   697,
     705,    -1,   697,   478,   769,   479,    -1,   684,    -1,   687,
      -1,   691,    -1,   696,    -1,   773,   683,    -1,   773,   775,
     683,    -1,   478,   734,   479,    -1,    -1,   205,    -1,   206,
      -1,   368,    -1,    48,    -1,   316,    -1,   159,   685,    -1,
     132,   302,    -1,   111,   683,    -1,   110,   683,    -1,   266,
     683,    -1,    51,    -1,   478,   769,   479,    -1,    -1,   688,
      -1,   689,    -1,   688,    -1,   689,    -1,    50,   695,   478,
     734,   479,    -1,    50,   695,    -1,   692,    -1,   693,    -1,
     692,    -1,   693,    -1,   694,   478,   769,   479,    -1,   694,
      -1,    64,   695,    -1,    63,   695,    -1,   428,    -1,   251,
      64,   695,    -1,   251,    63,   695,    -1,   253,   695,    -1,
     430,    -1,    -1,   397,   478,   769,   479,   698,    -1,   397,
     698,    -1,   396,   478,   769,   479,   698,    -1,   396,   698,
      -1,   208,    -1,   464,   396,   461,    -1,   442,   396,   461,
      -1,    -1,   458,    -1,   459,    -1,   246,    -1,   247,    -1,
     107,    -1,   108,    -1,   181,    -1,   182,    -1,   242,    -1,
     243,    -1,   350,    -1,   351,    -1,   699,    -1,   700,    -1,
     701,    -1,   702,    -1,   703,    -1,   706,    -1,   699,   398,
     700,    -1,   701,   398,   702,    -1,   701,   398,   703,    -1,
     701,   398,   706,    -1,   702,   398,   703,    -1,   702,   398,
     706,    -1,   703,   398,   706,    -1,    -1,   704,    -1,   704,
     478,   769,   479,    -1,   709,    -1,   707,    11,   678,    -1,
     707,    72,   774,    -1,   707,    40,   396,   461,   707,    -1,
     469,   707,    -1,   470,   707,    -1,   707,   469,   707,    -1,
     707,   470,   707,    -1,   707,   471,   707,    -1,   707,   472,
     707,    -1,   707,   473,   707,    -1,   707,   474,   707,    -1,
     707,   465,   707,    -1,   707,   466,   707,    -1,   707,   467,
     707,    -1,   707,    15,   707,    -1,   707,    16,   707,    -1,
     707,    17,   707,    -1,   707,   730,   707,    -1,   730,   707,
      -1,   707,   730,    -1,   707,    32,   707,    -1,   707,   278,
     707,    -1,   258,   707,    -1,   462,   707,    -1,   707,   171,
     707,    -1,   707,   225,   707,    -1,   707,   225,   707,   141,
     707,    -1,   707,   462,   225,   707,    -1,   707,   462,   225,
     707,   141,   707,    -1,   707,   185,   707,    -1,   707,   185,
     707,   141,   707,    -1,   707,   462,   185,   707,    -1,   707,
     462,   185,   707,   141,   707,    -1,   707,   365,   398,   707,
      -1,   707,   365,   398,   707,   141,   707,    -1,   707,   462,
     365,   398,   707,    -1,   707,   462,   365,   398,   707,   141,
     707,    -1,   707,   211,   263,    -1,   707,   212,    -1,   707,
     211,   258,   263,    -1,   707,   258,   263,    -1,   707,   261,
      -1,   726,   284,   726,    -1,   707,   211,   405,    -1,   707,
     211,   258,   405,    -1,   707,   211,   154,    -1,   707,   211,
     258,   154,    -1,   707,   211,   415,    -1,   707,   211,   258,
     415,    -1,   707,   211,   128,   166,   707,    -1,   707,   211,
     258,   128,   166,   707,    -1,   707,   211,   268,   478,   737,
     479,    -1,   707,   211,   258,   268,   478,   737,   479,    -1,
     707,    47,   758,   708,    32,   707,    -1,   707,   462,    47,
     758,   708,    32,   707,    -1,   707,    47,   384,   708,    32,
     707,    -1,   707,   462,    47,   384,   708,    32,   707,    -1,
     707,   190,   747,    -1,   707,   462,   190,   747,    -1,   707,
     732,   727,   609,    -1,   707,   732,   727,   478,   707,   479,
      -1,   113,    -1,   709,    -1,   708,    11,   678,    -1,   469,
     708,    -1,   470,   708,    -1,   708,   469,   708,    -1,   708,
     470,   708,    -1,   708,   471,   708,    -1,   708,   472,   708,
      -1,   708,   473,   708,    -1,   708,   474,   708,    -1,   708,
     465,   708,    -1,   708,   466,   708,    -1,   708,   467,   708,
      -1,   708,    15,   708,    -1,   708,    16,   708,    -1,   708,
      17,   708,    -1,   708,   730,   708,    -1,   730,   708,    -1,
     708,   730,    -1,   708,   211,   128,   166,   708,    -1,   708,
     211,   258,   128,   166,   708,    -1,   708,   211,   268,   478,
     737,   479,    -1,   708,   211,   258,   268,   478,   737,   479,
      -1,   753,    -1,   768,    -1,   483,   757,    -1,    10,   757,
      -1,   478,   707,   479,   757,    -1,   748,    -1,   711,    -1,
     609,    -1,   609,   756,    -1,   148,   609,    -1,   767,   478,
     479,    -1,   767,   478,   735,   622,   479,    -1,   767,   478,
     429,   736,   622,   479,    -1,   767,   478,   735,   482,   429,
     736,   622,   479,    -1,   767,   478,    26,   735,   622,   479,
      -1,   767,   478,   128,   735,   622,   479,    -1,   767,   478,
     471,   479,    -1,   710,   714,   715,   719,    -1,   713,    -1,
     710,    -1,   713,    -1,    73,   161,   478,   707,   479,    -1,
      97,    -1,   100,    -1,   100,   478,   769,   479,    -1,   101,
      -1,   101,   478,   769,   479,    -1,   230,    -1,   230,   478,
     769,   479,    -1,   231,    -1,   231,   478,   769,   479,    -1,
      98,    -1,   102,    -1,   359,    -1,   420,    -1,    96,    -1,
      99,    -1,    60,   478,   707,    35,   678,   479,    -1,   153,
     478,   738,   479,    -1,   285,   478,   740,   479,    -1,   299,
     478,   742,   479,    -1,   383,   478,   743,   479,    -1,   402,
     478,   707,    35,   678,   479,    -1,   404,   478,    52,   746,
     479,    -1,   404,   478,   221,   746,   479,    -1,   404,   478,
     399,   746,   479,    -1,   404,   478,   746,   479,    -1,   264,
     478,   707,   482,   707,   479,    -1,    71,   478,   734,   479,
      -1,   441,   175,   478,   623,   479,    -1,    -1,   157,   478,
     437,   707,   479,    -1,    -1,   439,   717,    -1,    -1,   718,
      -1,   717,   482,   718,    -1,   771,    35,   720,    -1,   283,
     720,    -1,   283,   771,    -1,    -1,   478,   721,   722,   622,
     723,   479,    -1,   771,    -1,    -1,   292,    53,   734,    -1,
      -1,   314,   724,    -1,   342,   724,    -1,    -1,   725,    -1,
      47,   725,    32,   725,    -1,   410,   301,    -1,   410,   160,
      -1,    95,   341,    -1,   707,   301,    -1,   707,   160,    -1,
     341,   478,   734,   479,    -1,   341,   478,   479,    -1,   478,
     734,   482,   707,   479,    -1,    33,    -1,   370,    -1,    26,
      -1,     8,    -1,   729,    -1,   469,    -1,   470,    -1,   471,
      -1,   472,    -1,   473,    -1,   474,    -1,   465,    -1,   466,
      -1,   467,    -1,    15,    -1,    16,    -1,    17,    -1,     8,
      -1,   275,   478,   733,   479,    -1,   728,    -1,   275,   478,
     733,   479,    -1,   728,    -1,   275,   478,   733,   479,    -1,
     225,    -1,   462,   225,    -1,   171,    -1,   462,   171,    -1,
     185,    -1,   462,   185,    -1,   728,    -1,   771,   480,   733,
      -1,   707,    -1,   734,   482,   707,    -1,   736,    -1,   735,
     482,   736,    -1,   707,    -1,   777,    13,   707,    -1,   777,
      14,   707,    -1,   678,    -1,   737,   482,   678,    -1,   739,
     166,   707,    -1,    -1,     3,    -1,   699,    -1,   700,    -1,
     701,    -1,   702,    -1,   703,    -1,   704,    -1,   770,    -1,
     707,   741,   744,   745,    -1,   707,   741,   744,    -1,   296,
     707,    -1,   708,   190,   708,    -1,    -1,   707,   744,   745,
      -1,   707,   745,   744,    -1,   707,   744,    -1,   707,   745,
      -1,   734,    -1,    -1,   166,   707,    -1,   161,   707,    -1,
     707,   166,   734,    -1,   166,   734,    -1,   734,    -1,   609,
      -1,   478,   734,   479,    -1,    59,   752,   749,   751,   139,
      -1,   750,    -1,   749,   750,    -1,   436,   707,   395,   707,
      -1,   135,   707,    -1,    -1,   707,    -1,    -1,   771,    -1,
     771,   756,    -1,   480,   766,    -1,   480,   471,    -1,   476,
     707,   477,    -1,   476,   755,   484,   755,   477,    -1,   707,
      -1,    -1,   754,    -1,   756,   754,    -1,    -1,   757,   754,
      -1,    39,    -1,    -1,   760,    -1,    -1,   761,    -1,   760,
     482,   761,    -1,   707,    35,   779,    -1,   707,     3,    -1,
     707,    -1,   471,    -1,   763,    -1,   762,   482,   763,    -1,
     771,    -1,   771,   756,    -1,   765,    -1,   764,   482,   765,
      -1,   771,    -1,   778,    -1,   773,    -1,   771,   756,    -1,
     769,    -1,     4,    -1,   770,    -1,     6,    -1,     7,    -1,
     767,   770,    -1,   767,   478,   735,   622,   479,   770,    -1,
     681,   770,    -1,   697,   478,   707,   479,   705,    -1,   697,
     769,   705,    -1,   697,   770,   705,    -1,   405,    -1,   154,
      -1,   263,    -1,     9,    -1,     5,    -1,     3,    -1,   838,
      -1,   839,    -1,   771,    -1,     5,    -1,     3,    -1,   838,
      -1,   840,    -1,   771,    -1,   771,   775,    -1,   480,   766,
      -1,   775,   480,   766,    -1,   478,   764,   479,    -1,    -1,
     773,    -1,     3,    -1,   838,    -1,   839,    -1,   840,    -1,
     841,    -1,   778,    -1,     5,    -1,   303,   765,   781,    35,
     782,    -1,   478,   737,   479,    -1,    -1,   608,    -1,   503,
      -1,   590,    -1,   821,    -1,    91,   346,   771,   784,    -1,
      91,   346,   184,   258,   148,   771,   784,    -1,   784,   785,
      -1,    -1,   535,    -1,   786,    -1,   522,    -1,   833,    -1,
      91,   792,   193,   789,   790,   273,   763,   788,   478,   519,
     479,   791,   674,    -1,    91,   792,   193,   789,   184,   258,
     148,   563,   273,   763,   788,   478,   519,   479,   791,   674,
      -1,   771,    -1,   421,   787,    -1,    -1,    80,    -1,    -1,
     563,    -1,    -1,   440,   548,    -1,    -1,   414,    -1,    -1,
      28,   387,   668,   360,   346,   765,    -1,    28,   387,   184,
     148,   668,   360,   346,   765,    -1,    28,   354,   763,   360,
     346,   765,    -1,    28,   354,   184,   148,   763,   360,   346,
     765,    -1,    28,   433,   763,   360,   346,   765,    -1,    28,
     433,   184,   148,   763,   360,   346,   765,    -1,    67,    -1,
     150,   106,   770,   598,    -1,   189,   106,   770,    -1,   149,
     800,    -1,   149,   804,   798,   800,    -1,   149,   431,   800,
      -1,   149,   478,   803,   479,   800,    -1,   431,    -1,    -1,
     805,    -1,   529,    -1,    -1,   608,    -1,   503,    -1,   590,
      -1,   821,    -1,   835,    -1,     3,    -1,   838,    -1,   839,
      -1,   840,    -1,   801,    -1,   770,    -1,   806,    -1,   803,
     482,   806,    -1,    31,    -1,    30,    -1,   405,    -1,   154,
      -1,   273,    -1,   802,    -1,   807,   799,    -1,   801,    -1,
     804,    -1,   360,   809,    -1,   360,   229,   809,    -1,   360,
     358,   809,    -1,   810,    -1,   831,   166,    95,    -1,   396,
     461,   812,    -1,   346,   770,    -1,   831,   398,   813,    -1,
     831,   467,   813,    -1,   831,   398,   113,    -1,   831,   467,
     113,    -1,   805,    -1,   529,    -1,   770,    -1,     3,    -1,
     697,   770,   705,    -1,   697,   478,   769,   479,   770,    -1,
     529,    -1,   113,    -1,   229,    -1,   811,    -1,   813,   482,
     811,    -1,   228,   815,    -1,   770,    -1,   422,   818,   820,
     798,    -1,   422,   818,   820,   798,   763,    -1,   422,   818,
     820,   798,   825,    -1,   422,   478,   819,   479,    -1,   422,
     478,   819,   479,   763,   776,    -1,   804,    -1,   431,    -1,
     165,    -1,   167,    -1,     3,    -1,   167,    -1,    -1,   817,
      -1,   819,   482,   817,    -1,   165,    -1,    -1,   507,   118,
     166,   822,   824,   823,   512,    -1,   668,    -1,   668,   771,
      -1,   668,    35,   771,    -1,   437,   707,    -1,    -1,   421,
     659,    -1,    -1,   804,   798,    -1,   804,   798,   763,   776,
      -1,   331,   828,    -1,   831,    -1,    26,    -1,   827,    -1,
     396,   461,    -1,   400,   213,   224,    -1,   830,   831,    -1,
     830,   396,   461,    -1,   830,   400,   213,   224,    -1,   830,
      26,    -1,   364,    -1,   123,    -1,   771,    -1,   831,   480,
     771,    -1,    55,   710,    -1,    91,   579,   433,   763,   569,
     791,    35,   608,   834,    -1,    91,   278,   329,   579,   433,
     763,   569,   791,    35,   608,   834,    -1,    91,   579,   319,
     433,   763,   478,   573,   479,   791,    35,   608,   834,    -1,
      91,   278,   329,   579,   319,   433,   763,   478,   573,   479,
     791,    35,   608,   834,    -1,   440,    66,   276,    -1,   440,
      58,    66,   276,    -1,   440,   229,    66,   276,    -1,    -1,
      91,   579,   387,   837,    35,   608,   836,    -1,    91,   579,
     387,   184,   258,   148,   837,    35,   608,   836,    -1,   440,
     105,    -1,   440,   256,   105,    -1,    -1,   763,   569,   555,
     547,    -1,    18,    -1,    19,    -1,    20,    -1,    21,    -1,
      22,    -1,    23,    -1,    24,    -1,    25,    -1,    27,    -1,
      28,    -1,    29,    -1,    37,    -1,    38,    -1,    40,    -1,
      41,    -1,    42,    -1,    44,    -1,    45,    -1,    46,    -1,
      53,    -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,
      58,    -1,    61,    -1,    62,    -1,    65,    -1,    67,    -1,
      68,    -1,    69,    -1,    70,    -1,    75,    -1,    76,    -1,
      77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,    -1,
      83,    -1,    85,    -1,    86,    -1,    87,    -1,    88,    -1,
      89,    -1,    90,    -1,    93,    -1,    94,    -1,    95,    -1,
     103,    -1,   104,    -1,   105,    -1,   106,    -1,   107,    -1,
     108,    -1,   109,    -1,   112,    -1,   114,    -1,   116,    -1,
     117,    -1,   118,    -1,   119,    -1,   120,    -1,   121,    -1,
     123,    -1,   124,    -1,   125,    -1,   126,    -1,   127,    -1,
     130,    -1,   131,    -1,   132,    -1,   133,    -1,   134,    -1,
     136,    -1,   137,    -1,   138,    -1,   140,    -1,   141,    -1,
     142,    -1,   144,    -1,   145,    -1,   146,    -1,   147,    -1,
     149,    -1,   150,    -1,   151,    -1,   152,    -1,   155,    -1,
     157,    -1,   158,    -1,   160,    -1,   162,    -1,   164,    -1,
     168,    -1,   169,    -1,   170,    -1,   172,    -1,   174,    -1,
     177,    -1,   179,    -1,   180,    -1,   181,    -1,   182,    -1,
     183,    -1,   184,    -1,   186,    -1,   187,    -1,   188,    -1,
     189,    -1,   191,    -1,   192,    -1,   193,    -1,   194,    -1,
     195,    -1,   196,    -1,   198,    -1,   201,    -1,   202,    -1,
     203,    -1,   204,    -1,   210,    -1,   213,    -1,   215,    -1,
     216,    -1,   217,    -1,   218,    -1,   219,    -1,   222,    -1,
     224,    -1,   227,    -1,   228,    -1,   229,    -1,   232,    -1,
     233,    -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,
     238,    -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,
     243,    -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,
     248,    -1,   249,    -1,   250,    -1,   254,    -1,   255,    -1,
     256,    -1,   259,    -1,   260,    -1,   262,    -1,   265,    -1,
     267,    -1,   268,    -1,   269,    -1,   271,    -1,   272,    -1,
     275,    -1,   276,    -1,   277,    -1,   280,    -1,   283,    -1,
     286,    -1,   287,    -1,   288,    -1,   289,    -1,   290,    -1,
     291,    -1,   292,    -1,   293,    -1,   294,    -1,   295,    -1,
     297,    -1,   298,    -1,   300,    -1,   301,    -1,   303,    -1,
     304,    -1,   305,    -1,   307,    -1,   308,    -1,   309,    -1,
     310,    -1,   311,    -1,   312,    -1,   313,    -1,   314,    -1,
     315,    -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,
     322,    -1,   323,    -1,   324,    -1,   325,    -1,   326,    -1,
     327,    -1,   328,    -1,   329,    -1,   330,    -1,   331,    -1,
     332,    -1,   333,    -1,   335,    -1,   336,    -1,   338,    -1,
     339,    -1,   340,    -1,   342,    -1,   343,    -1,   344,    -1,
     345,    -1,   346,    -1,   347,    -1,   348,    -1,   349,    -1,
     350,    -1,   351,    -1,   352,    -1,   354,    -1,   355,    -1,
     356,    -1,   357,    -1,   358,    -1,   360,    -1,   362,    -1,
     363,    -1,   364,    -1,   366,    -1,   367,    -1,   369,    -1,
     371,    -1,   372,    -1,   373,    -1,   374,    -1,   375,    -1,
     376,    -1,   377,    -1,   378,    -1,   379,    -1,   380,    -1,
     381,    -1,   382,    -1,   385,    -1,   386,    -1,   388,    -1,
     390,    -1,   391,    -1,   392,    -1,   393,    -1,   394,    -1,
     400,    -1,   401,    -1,   403,    -1,   406,    -1,   407,    -1,
     408,    -1,   409,    -1,   410,    -1,   411,    -1,   412,    -1,
     415,    -1,   416,    -1,   417,    -1,   418,    -1,   419,    -1,
     422,    -1,   423,    -1,   424,    -1,   425,    -1,   426,    -1,
     430,    -1,   432,    -1,   433,    -1,   434,    -1,   435,    -1,
     438,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     445,    -1,   446,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,    47,    -1,    48,    -1,    50,    -1,    51,    -1,
      63,    -1,    64,    -1,    71,    -1,   110,    -1,   111,    -1,
     148,    -1,   153,    -1,   159,    -1,   176,    -1,   200,    -1,
     205,    -1,   206,    -1,   208,    -1,   251,    -1,   253,    -1,
     257,    -1,   264,    -1,   266,    -1,   281,    -1,   285,    -1,
     299,    -1,   302,    -1,   316,    -1,   341,    -1,   361,    -1,
     368,    -1,   383,    -1,   396,    -1,   397,    -1,   402,    -1,
     404,    -1,   427,    -1,   428,    -1,   447,    -1,   448,    -1,
     449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,    -1,
     454,    -1,   455,    -1,   456,    -1,   457,    -1,    43,    -1,
      49,    -1,    73,    -1,    80,    -1,    92,    -1,    99,    -1,
     165,    -1,   167,    -1,   171,    -1,   185,    -1,   199,    -1,
     211,    -1,   212,    -1,   214,    -1,   223,    -1,   225,    -1,
     252,    -1,   261,    -1,   282,    -1,   284,    -1,   337,    -1,
     365,    -1,   389,    -1,   431,    -1,    26,    -1,    30,    -1,
      31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,
      36,    -1,    39,    -1,    52,    -1,    59,    -1,    60,    -1,
      66,    -1,    72,    -1,    74,    -1,    84,    -1,    91,    -1,
      96,    -1,    97,    -1,    98,    -1,   100,    -1,   101,    -1,
     102,    -1,   113,    -1,   115,    -1,   122,    -1,   128,    -1,
     129,    -1,   135,    -1,   139,    -1,   143,    -1,   154,    -1,
     156,    -1,   161,    -1,   163,    -1,   166,    -1,   173,    -1,
     175,    -1,   178,    -1,   190,    -1,   197,    -1,   207,    -1,
     209,    -1,   220,    -1,   221,    -1,   226,    -1,   230,    -1,
     231,    -1,   258,    -1,   263,    -1,   270,    -1,   273,    -1,
     274,    -1,   278,    -1,   279,    -1,   296,    -1,   306,    -1,
     321,    -1,   334,    -1,   353,    -1,   359,    -1,   370,    -1,
     384,    -1,   387,    -1,   395,    -1,   398,    -1,   399,    -1,
     405,    -1,   413,    -1,   414,    -1,   420,    -1,   421,    -1,
     429,    -1,   436,    -1,   437,    -1,   439,    -1,   440,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   457,   457,   473,   485,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   528,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1157,  1162,  1169,  1174,  1180,  1185,  1194,
    1196,  1199,  1203,  1204,  1205,  1206,  1207,  1208,  1213,  1233,
    1234,  1235,  1236,  1247,  1253,  1261,  1262,  1268,  1273,  1278,
    1283,  1288,  1293,  1298,  1303,  1309,  1315,  1321,  1328,  1350,
    1359,  1363,  1371,  1375,  1383,  1395,  1416,  1420,  1426,  1430,
    1443,  1451,  1461,  1463,  1465,  1467,  1469,  1471,  1476,  1477,
    1484,  1493,  1501,  1510,  1521,  1529,  1530,  1531,  1535,  1535,
    1538,  1538,  1541,  1541,  1544,  1544,  1547,  1547,  1550,  1550,
    1553,  1555,  1557,  1559,  1561,  1563,  1565,  1570,  1575,  1581,
    1589,  1594,  1601,  1608,  1612,  1616,  1652,  1653,  1655,  1663,
    1678,  1680,  1682,  1684,  1686,  1688,  1690,  1692,  1694,  1696,
    1698,  1700,  1702,  1704,  1707,  1709,  1711,  1714,  1716,  1718,
    1720,  1723,  1728,  1733,  1740,  1745,  1752,  1757,  1765,  1770,
    1779,  1787,  1795,  1803,  1821,  1829,  1837,  1845,  1853,  1861,
    1877,  1885,  1893,  1901,  1909,  1917,  1925,  1929,  1933,  1937,
    1941,  1949,  1957,  1965,  1973,  1993,  2015,  2026,  2033,  2058,
    2060,  2062,  2064,  2066,  2068,  2070,  2072,  2074,  2076,  2078,
    2080,  2082,  2084,  2086,  2088,  2090,  2092,  2094,  2096,  2100,
    2104,  2108,  2122,  2123,  2124,  2136,  2151,  2163,  2165,  2167,
    2178,  2202,  2215,  2219,  2225,  2232,  2239,  2249,  2256,  2284,
    2319,  2330,  2331,  2338,  2344,  2348,  2352,  2356,  2360,  2364,
    2368,  2372,  2376,  2380,  2384,  2388,  2392,  2396,  2400,  2404,
    2406,  2410,  2419,  2424,  2431,  2446,  2453,  2457,  2461,  2465,
    2469,  2483,  2484,  2488,  2489,  2497,  2498,  2502,  2503,  2508,
    2516,  2518,  2532,  2535,  2562,  2563,  2566,  2567,  2578,  2596,
    2603,  2612,  2629,  2674,  2682,  2690,  2698,  2706,  2727,  2728,
    2729,  2732,  2733,  2734,  2737,  2738,  2741,  2742,  2743,  2744,
    2745,  2746,  2747,  2748,  2749,  2750,  2751,  2752,  2755,  2757,
    2762,  2764,  2769,  2771,  2773,  2775,  2777,  2779,  2781,  2783,
    2797,  2799,  2803,  2807,  2814,  2818,  2824,  2828,  2837,  2848,
    2849,  2853,  2857,  2864,  2865,  2866,  2867,  2868,  2869,  2870,
    2871,  2881,  2885,  2892,  2899,  2900,  2916,  2920,  2925,  2929,
    2944,  2949,  2953,  2956,  2959,  2960,  2961,  2964,  2971,  2981,
    2995,  2996,  3000,  3011,  3012,  3015,  3016,  3019,  3023,  3030,
    3034,  3038,  3046,  3057,  3058,  3062,  3063,  3067,  3068,  3071,
    3072,  3082,  3083,  3087,  3088,  3091,  3107,  3115,  3123,  3145,
    3146,  3157,  3161,  3188,  3190,  3195,  3197,  3207,  3209,  3220,
    3224,  3228,  3232,  3236,  3245,  3252,  3284,  3288,  3292,  3296,
    3300,  3304,  3308,  3314,  3315,  3331,  3332,  3333,  3336,  3337,
    3342,  3343,  3344,  3347,  3348,  3351,  3353,  3358,  3359,  3362,
    3370,  3371,  3372,  3373,  3374,  3377,  3378,     7,    18,    19,
      23,    24,    25,    26,     7,    16,    34,    41,    46,    47,
      48,    49,     8,    33,    62,    66,    67,    72,    73,    78,
      79,    83,    84,    89,    90,     7,    16,    25,    34,    43,
      52,     5,     7,    20,     9,    16,    26,    33,    44,    45,
      50,    51,    52,    57,    58,    59,    60,    61,    65,    66,
      67,    68,    73,    74,    79,    83,    91,    92,    97,    98,
      99,   105,   110,   118,   119,    10,    16,    22,    32,    33,
      41,    52,    64,    72,    80,    87,    97,    99,   105,   109,
     113,   128,   135,   136,   137,   141,   142,     7,    16,     8,
      22,    36,    48,    56,    70,    71,    72,    73,    74,    87,
      88,    93,    94,    98,    99,     7,    21,    25,    32,    43,
      44,    50,    51,     9,    19,     2,     7,    14,    24,    25,
      32,     3,     9,    15,    21,    29,    29,    31,    32,     6,
       8,    21,    34,    52,    74,    75,    76,    77,    11,    24,
      41,    42,    43,    48,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MINUTE_P", "MINUTES_P",
  "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES",
  "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT",
  "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P",
  "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON",
  "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY",
  "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED",
  "OWNER", "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING",
  "PASSWORD", "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION",
  "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE",
  "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM_P",
  "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P",
  "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "Typename", "opt_array_bounds", "SimpleTypename", "ConstTypename",
  "GenericType", "opt_type_modifiers", "Numeric", "opt_float", "Bit",
  "ConstBit", "BitWithLength", "BitWithoutLength", "Character",
  "ConstCharacter", "CharacterWithLength", "CharacterWithoutLength",
  "character", "opt_varying", "ConstDatetime", "ConstInterval",
  "opt_timezone", "year_keyword", "month_keyword", "day_keyword",
  "hour_keyword", "minute_keyword", "second_keyword", "opt_interval",
  "interval_second", "a_expr", "b_expr", "c_expr", "func_application",
  "func_expr", "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    60,    62,    61,   720,    43,
      45,    42,    47,    37,    94,   721,    91,    93,    40,    41,
      46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   485,   486,   487,   487,   488,   488,   488,   488,   488,
     488,   488,   488,   488,   488,   488,   488,   488,   488,   488,
     488,   488,   488,   488,   488,   488,   488,   488,   488,   488,
     488,   488,   488,   488,   488,   488,   488,   488,   488,   489,
     489,   489,   489,   489,   489,   489,   489,   490,   490,   491,
     491,   492,   492,   492,   492,   493,   493,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   494,
     494,   494,   494,   494,   494,   494,   495,   495,   496,   496,
     496,   496,   497,   497,   498,   499,   499,   500,   500,   500,
     500,   501,   501,   501,   501,   501,   501,   501,   501,   501,
     501,   501,   501,   501,   502,   502,   503,   504,   504,   504,
     504,   504,   505,   505,   506,   506,   506,   507,   507,   508,
     509,   509,   510,   510,   510,   511,   511,   511,   512,   512,
     513,   513,   514,   514,   515,   515,   516,   516,   517,   517,
     518,   518,   519,   519,   520,   521,   521,   521,   522,   522,
     523,   523,   524,   524,   524,   525,   525,   526,   526,   527,
     527,   528,   528,   528,   529,   529,   529,   529,   530,   530,
     530,   530,   530,   530,   530,   530,   530,   530,   530,   530,
     530,   530,   531,   531,   532,   532,   532,   533,   533,   533,
     533,   533,   533,   534,   534,   534,   535,   535,   536,   536,
     537,   537,   537,   537,   537,   537,   538,   538,   539,   540,
     540,   540,   540,   540,   541,   541,   541,   541,   542,   542,
     542,   542,   542,   542,   542,   542,   543,   544,   545,   545,
     545,   545,   545,   546,   546,   547,   547,   547,   547,   548,
     549,   549,   550,   550,   551,   551,   551,   551,   551,   551,
     551,   551,   552,   552,   553,   554,   554,   554,   554,   555,
     555,   555,   555,   556,   557,   557,   557,   558,   559,   559,
     559,   559,   559,   559,   560,   561,   561,   562,   562,   563,
     564,   564,   564,   565,   565,   566,   566,   567,   567,   568,
     569,   569,   570,   570,   571,   572,   572,   572,   572,   573,
     573,   574,   574,   574,   575,   575,   575,   575,   575,   575,
     576,   576,   577,   577,   577,   577,   578,   579,   579,   579,
     579,   579,   579,   579,   579,   580,   580,   581,   581,   581,
     581,   581,   581,   582,   582,   582,   582,   582,   582,   582,
     582,   582,   582,   582,   582,   582,   582,   582,   583,   583,
     583,   583,   583,   583,   583,   584,   584,   585,   585,   585,
     586,   586,   586,   587,   588,   588,   589,   589,   590,   591,
     591,   592,   592,   593,   593,   594,   594,   595,   595,   596,
     596,   597,   597,   598,   598,   599,   599,   599,   599,   599,
     600,   601,   601,   602,   602,   603,   603,   604,   604,   604,
     604,   604,   604,   604,   604,   604,   604,   604,   604,   604,
     604,   605,   606,   606,   606,   607,   607,   608,   608,   609,
     609,   610,   610,   610,   610,   610,   610,   610,   610,   611,
     611,   612,   612,   612,   612,   612,   612,   612,   613,   613,
     613,   614,   614,   615,   616,   616,   617,   617,   617,   617,
     617,   617,   617,   617,   617,   618,   618,   619,   619,   619,
     620,   620,   621,   621,   622,   622,   623,   624,   624,   625,
     625,   626,   626,   626,   627,   627,   627,   628,   628,   628,
     628,   629,   629,   630,   630,   630,   630,   631,   631,   632,
     632,   632,   632,   632,   632,   633,   633,   634,   634,   635,
     635,   635,   635,   636,   637,   637,   638,   638,   639,   639,
     640,   641,   641,   641,   642,   642,   643,   643,   644,   644,
     645,   645,   646,   646,   647,   647,   648,   649,   649,   650,
     650,   651,   651,   652,   652,   653,   654,   654,   654,   654,
     655,   655,   656,   656,   656,   657,   657,   658,   658,   659,
     659,   660,   660,   660,   660,   660,   660,   660,   661,   661,
     661,   661,   661,   661,   662,   662,   662,   662,   663,   663,
     664,   664,   664,   664,   664,   665,   665,   665,   665,   666,
     666,   667,   667,   668,   668,   668,   668,   669,   669,   670,
     671,   671,   672,   672,   673,   673,   674,   674,   675,   675,
     676,   677,   677,   678,   678,   678,   678,   678,   678,   679,
     679,   679,   680,   680,   680,   680,   680,   680,   680,   681,
     681,   681,   681,   682,   682,   683,   683,   684,   684,   684,
     684,   684,   684,   684,   684,   684,   684,   684,   685,   685,
     686,   686,   687,   687,   688,   689,   690,   690,   691,   691,
     692,   693,   694,   694,   694,   694,   694,   694,   695,   695,
     696,   696,   696,   696,   697,   698,   698,   698,   699,   699,
     700,   700,   701,   701,   702,   702,   703,   703,   704,   704,
     705,   705,   705,   705,   705,   705,   705,   705,   705,   705,
     705,   705,   705,   705,   706,   706,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,   707,   707,   707,   707,   708,
     708,   708,   708,   708,   708,   708,   708,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   708,   708,   708,   708,
     708,   708,   709,   709,   709,   709,   709,   709,   709,   709,
     709,   709,   710,   710,   710,   710,   710,   710,   710,   711,
     711,   712,   712,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   714,   714,   715,   715,   716,   716,   717,   717,   718,
     719,   719,   719,   720,   721,   721,   722,   722,   723,   723,
     723,   724,   724,   725,   725,   725,   725,   725,   726,   726,
     726,   727,   727,   727,   728,   728,   729,   729,   729,   729,
     729,   729,   729,   729,   729,   729,   729,   729,   730,   730,
     731,   731,   732,   732,   732,   732,   732,   732,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   736,   737,
     737,   738,   738,   739,   739,   739,   739,   739,   739,   739,
     739,   740,   740,   741,   742,   742,   743,   743,   743,   743,
     743,   743,   744,   745,   746,   746,   746,   747,   747,   748,
     749,   749,   750,   751,   751,   752,   752,   753,   753,   754,
     754,   754,   754,   755,   755,   756,   756,   757,   757,   758,
     758,   759,   759,   760,   760,   761,   761,   761,   761,   762,
     762,   763,   763,   764,   764,   765,   766,   767,   767,   768,
     768,   768,   768,   768,   768,   768,   768,   768,   768,   768,
     768,   768,   768,   769,   770,   771,   771,   771,   772,   772,
     773,   773,   773,   774,   774,   775,   775,   776,   776,   777,
     778,   778,   778,   778,   778,   779,   779,   780,   781,   781,
     782,   782,   782,   782,   783,   783,   784,   784,   785,   785,
     785,   785,   786,   786,   787,   788,   788,   789,   789,   790,
     790,   791,   791,   792,   792,   793,   793,   793,   793,   793,
     793,   794,   795,   796,   797,   797,   797,   797,   798,   798,
     799,   799,   799,   800,   800,   800,   800,   800,   801,   801,
     801,   801,   802,   802,   803,   803,   804,   804,   805,   805,
     805,   805,   806,   807,   807,   808,   808,   808,   809,   809,
     809,   809,   810,   810,   810,   810,   811,   811,   812,   812,
     812,   812,   812,   812,   812,   813,   813,   814,   815,   816,
     816,   816,   816,   816,   817,   817,   817,   817,   817,   818,
     818,   819,   819,   820,   820,   821,   822,   822,   822,   823,
     823,   824,   824,   825,   825,   826,   827,   827,   828,   828,
     828,   829,   829,   829,   829,   830,   830,   831,   831,   832,
     833,   833,   833,   833,   834,   834,   834,   834,   835,   835,
     836,   836,   836,   837,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   838,
     838,   838,   838,   838,   838,   838,   838,   838,   838,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   839,   839,   839,
     839,   839,   839,   839,   839,   839,   839,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     3,     5,     6,     2,     3,     3,
       4,     0,     1,     1,     1,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     2,     1,     3,     0,
       1,     1,     1,     1,     5,     2,     1,     1,     1,     1,
       4,     1,     2,     2,     1,     3,     3,     2,     1,     0,
       5,     2,     5,     2,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     3,     3,     3,
       3,     3,     3,     0,     1,     4,     1,     3,     3,     5,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     3,     3,     2,
       2,     3,     3,     5,     4,     6,     3,     5,     4,     6,
       4,     6,     5,     7,     3,     2,     4,     3,     2,     3,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     1,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     5,     6,
       6,     7,     1,     1,     2,     2,     4,     1,     1,     1,
       2,     2,     3,     5,     6,     8,     6,     6,     4,     4,
       1,     1,     1,     5,     1,     1,     4,     1,     4,     1,
       4,     1,     4,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     5,     0,     5,     0,     2,     0,     1,     3,     3,
       2,     2,     0,     6,     1,     0,     3,     0,     2,     2,
       0,     1,     4,     2,     2,     2,     2,     2,     4,     3,
       5,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       1,     4,     1,     4,     1,     2,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     3,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     3,     2,     1,     1,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     5,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     5,     3,     0,
       1,     1,     1,     1,     4,     7,     2,     0,     1,     1,
       1,     1,    13,    16,     1,     2,     0,     1,     0,     1,
       0,     2,     0,     1,     0,     6,     8,     6,     8,     6,
       8,     1,     4,     3,     2,     4,     3,     5,     1,     0,
       1,     1,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     3,     3,     1,     3,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     5,     1,     1,     1,     1,     3,     2,     1,     4,
       5,     5,     4,     6,     1,     1,     1,     1,     1,     1,
       0,     1,     3,     1,     0,     7,     1,     2,     3,     2,
       0,     2,     0,     2,     4,     2,     1,     1,     1,     2,
       3,     2,     3,     4,     2,     1,     1,     1,     3,     2,
       9,    11,    12,    14,     3,     4,     4,     0,     7,    10,
       2,     3,     0,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1077,  1076,   205,     0,  1051,   205,   406,
     334,     0,  1146,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,   205,   473,     0,  1145,   205,     0,  1120,
       0,     0,     0,     0,     0,     2,     4,     7,    17,    29,
      25,     0,    27,    15,    20,     6,    31,    16,    19,    13,
      32,    11,    30,   440,   427,   475,   439,   127,   443,    28,
      14,    24,     5,    10,    22,    23,    21,  1059,    35,    26,
      33,    18,     8,    34,    36,     0,     9,    37,    12,   204,
     203,   197,     0,     0,     0,     0,     0,   198,   995,  1164,
    1165,  1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,
    1175,  1176,  1177,  1178,  1179,  1507,  1180,  1181,  1182,  1459,
    1460,  1508,  1461,  1462,  1183,  1184,  1185,  1186,  1187,  1188,
    1189,  1190,  1463,  1464,  1191,  1192,  1193,  1194,  1195,  1465,
    1509,  1196,  1197,  1198,  1199,  1200,  1510,  1201,  1202,  1203,
    1204,  1205,  1206,  1207,  1208,  1209,  1511,  1210,  1211,  1212,
    1512,  1213,  1214,  1215,  1216,  1217,  1218,  1219,  1466,  1467,
    1220,  1221,  1222,  1223,  1224,  1225,  1226,  1227,  1228,  1229,
    1230,  1231,  1232,  1233,  1234,  1235,  1236,  1237,  1238,  1239,
    1240,  1241,  1242,  1243,  1244,  1245,  1246,  1247,  1468,  1248,
    1249,  1250,  1251,  1469,  1252,  1253,  1254,  1470,  1255,  1256,
    1257,  1513,  1514,  1258,  1259,  1260,  1515,  1261,  1262,  1471,
    1263,  1264,  1265,  1266,  1267,  1268,  1269,  1516,  1270,  1271,
    1272,  1273,  1274,  1275,  1276,  1277,  1278,  1279,  1280,  1517,
    1472,  1281,  1282,  1283,  1284,  1473,  1474,  1475,  1285,  1518,
    1519,  1286,  1520,  1287,  1288,  1289,  1290,  1291,  1292,  1521,
    1293,  1522,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,
    1302,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,
    1312,  1313,  1314,  1315,  1476,  1523,  1477,  1316,  1317,  1318,
    1478,  1319,  1320,  1524,  1321,  1479,  1322,  1480,  1323,  1324,
    1325,  1326,  1327,  1328,  1329,  1330,  1331,  1481,  1525,  1332,
    1526,  1482,  1333,  1334,  1335,  1336,  1337,  1338,  1339,  1340,
    1341,  1342,  1343,  1344,  1483,  1345,  1346,  1484,  1347,  1348,
    1349,  1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1358,
    1485,  1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,  1367,
    1368,  1369,  1370,  1371,  1372,  1373,  1374,  1375,  1376,  1527,
    1377,  1378,  1379,  1486,  1380,  1381,  1382,  1383,  1384,  1385,
    1386,  1387,  1388,  1389,  1390,  1391,  1392,  1393,  1394,  1395,
    1396,  1487,  1397,  1398,  1399,  1528,  1400,  1401,  1488,  1402,
    1403,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,  1412,
    1413,  1414,  1489,  1415,  1416,  1417,  1529,  1418,  1419,  1420,
    1421,  1422,  1490,  1491,  1423,  1424,  1492,  1425,  1493,  1426,
    1427,  1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,
    1437,  1438,  1439,  1440,  1441,  1442,  1494,  1495,  1443,  1530,
    1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,  1452,  1453,
    1454,  1496,  1497,  1498,  1499,  1500,  1501,  1502,  1503,  1504,
    1505,  1506,  1455,  1456,  1457,  1458,  1149,     0,     0,   977,
     996,   997,  1002,   200,   405,   128,     0,   374,     0,     0,
     375,     0,     0,   328,   327,  1043,   333,     0,     0,     0,
     995,    99,  1347,    97,   975,   996,     0,   351,   352,     0,
     360,     0,   345,   349,   346,     0,   370,   362,   371,   363,
     344,   364,   353,   343,     0,   372,   347,     0,     0,     0,
     201,   166,   334,   128,     0,  1064,  1065,  1063,  1054,  1059,
    1066,  1067,     0,     0,   994,  1108,  1107,   155,  1019,  1137,
    1490,  1423,  1147,  1138,  1135,  1136,   202,   472,   470,     0,
     962,  1296,  1384,  1395,  1490,  1085,  1088,     0,   199,     0,
     444,   593,   971,  1119,     0,  1124,     0,  1361,   448,   451,
    1008,   449,   440,     0,     0,     1,   128,     0,     0,     0,
     469,   469,     0,   469,     0,   432,   440,   435,   439,     0,
    1058,  1133,  1144,  1490,  1423,  1141,  1269,     0,     0,  1269,
       0,  1269,     0,  1269,     0,     0,   954,     0,   955,   978,
    1021,  1022,  1020,     0,  1023,   301,   332,   331,   330,   329,
     334,  1269,  1027,     0,     0,     0,     0,     0,  1038,   100,
      98,   358,   359,     0,   350,   348,     0,  1269,   369,  1003,
     365,  1269,   369,   973,  1269,     0,     0,   162,     0,  1056,
    1068,  1494,  1083,     0,  1084,  1074,  1062,  1069,  1070,  1071,
     128,   404,  1053,     0,     0,     0,     0,  1139,     0,     0,
       0,   980,   982,   983,   888,   993,   957,  1460,  1461,  1462,
     946,     0,  1463,  1464,  1465,  1509,   827,   814,   823,   828,
     815,   817,   824,  1466,  1467,   768,  1235,  1468,  1469,   991,
    1470,  1473,  1474,  1475,   819,   821,  1476,  1477,     0,   992,
    1479,  1480,  1328,  1482,  1483,  1485,  1486,   825,  1488,  1489,
    1490,  1491,  1492,  1493,   990,   826,  1495,     0,     0,     0,
     968,     0,   957,   799,     0,   629,   630,   652,   653,   631,
     658,   659,   661,   632,     0,   967,   706,   842,   798,   810,
       0,     0,   797,   792,   455,   963,     0,   793,   979,   981,
     947,   455,   961,  1086,  1091,  1087,     0,     0,     0,     0,
       0,   595,   594,   972,  1118,  1116,  1117,  1115,  1114,  1121,
       0,  1123,  1059,   902,     0,   450,     0,     0,     0,   430,
     429,     3,     0,     0,  1126,     0,   467,   468,     0,     0,
       0,     0,     0,     0,     0,     0,   542,   489,   490,   492,
     539,   543,   551,     0,   436,     0,  1008,  1142,     0,     0,
       0,   115,   115,     0,     0,     0,     0,     0,    92,    41,
      85,     0,     0,     0,     0,   180,   193,     0,     0,     0,
       0,     0,   190,     0,     0,   173,    43,   167,   169,     0,
     115,     0,    39,     0,     0,     0,    45,     0,     0,     0,
       0,   802,   906,   475,   904,   977,     0,   953,     0,  1010,
    1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,
    1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,
    1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,
    1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,
    1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,
    1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,
    1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,
    1601,  1602,  1603,  1604,  1605,  1606,  1607,   950,   949,   976,
    1011,  1012,  1013,  1014,   956,     0,     0,   402,     0,     0,
    1024,     0,  1269,   161,  1269,   301,     0,   301,     0,     0,
    1037,  1040,   361,   357,   355,   354,   356,     0,   367,   368,
       0,   338,     0,  1004,     0,     0,   340,     0,     0,     0,
       0,   128,     0,   174,  1079,  1080,  1078,     0,     0,  1061,
     177,   194,  1073,  1082,  1072,  1081,  1060,  1055,     0,  1052,
     393,  1097,  1096,  1105,   156,     0,  1000,   640,   669,   647,
     669,   669,   636,   636,   649,   637,   638,   674,     0,   669,
     636,   641,     0,   639,   677,   677,   664,   909,   621,   622,
     623,   624,   650,   651,   625,   656,   657,   626,   703,     0,
     636,  1001,   128,  1140,  1148,     0,   795,   668,   655,   945,
       0,     0,   663,   662,     0,     0,     0,     0,     0,   645,
     644,   643,   801,   912,     0,   642,     0,     0,   669,   669,
     667,   729,     0,   646,     0,     0,   925,     0,   931,     0,
       0,     0,   673,     0,   671,     0,     0,   730,   710,   711,
     799,   902,     0,   794,   800,   986,     0,     0,   703,   703,
     966,   888,     0,   885,   886,   887,     0,     0,     0,   960,
       0,   896,   898,     0,     0,   745,   894,     0,   748,     0,
       0,     0,     0,   882,   883,   884,   876,   877,   878,   879,
     880,   881,   892,   875,   726,     0,     0,   844,     0,   725,
       0,     0,   558,     0,   984,   948,   558,  1099,  1103,  1104,
    1102,     0,  1098,  1090,  1089,  1094,  1092,  1095,  1093,     0,
    1112,     0,  1109,   555,     0,   452,     0,     0,  1132,     0,
     122,     0,  1127,     0,   447,   446,   476,   477,   483,   445,
     528,   529,     0,     0,     0,     0,   548,   546,   519,   493,
     518,     0,     0,   497,     0,   520,   706,   541,   434,   487,
     488,   491,   433,     0,   544,     0,   554,   542,   492,     0,
    1134,  1143,     0,     0,     0,     0,     0,  1269,     0,     0,
      76,    57,   253,     0,   114,     0,     0,     0,     0,     0,
       0,     0,    84,    81,    82,    83,     0,     0,     0,     0,
     178,   179,   192,     0,   183,   184,   181,   185,   186,     0,
       0,   171,   172,     0,     0,     0,     0,   170,     0,     0,
       0,     0,     0,     0,     0,     0,   475,   475,   475,   808,
       0,     0,   474,     0,     0,   951,   954,   392,   309,     0,
     299,     0,     0,     0,     0,     0,   334,  1030,  1028,  1026,
    1029,  1031,     0,     0,   158,   160,     0,   298,   272,     0,
    1042,   376,     0,     0,  1269,  1039,   289,     0,   369,   366,
    1005,     0,   369,   974,     0,   369,   165,  1269,   301,     0,
    1057,  1075,   175,   195,   176,   196,   425,     0,   399,   407,
     412,   390,     0,   390,     0,   409,   413,   390,   408,   390,
     403,     0,   157,     0,   621,   617,   613,   682,   683,   684,
     685,   686,   687,   680,   681,   688,   689,   678,   679,     0,
     690,   691,   692,   693,   694,   704,   627,   695,  1018,     0,
     633,   636,  1017,     0,   958,     0,     0,   944,   940,     0,
       0,     0,     0,     0,     0,   913,   914,   915,   916,   917,
     918,   919,     0,     0,   920,     0,     0,     0,   666,   665,
       0,   874,   885,   886,   887,   882,   883,   884,   876,   877,
     878,   879,   880,   881,   900,     0,     0,     0,     0,     0,
       0,     0,     0,   769,     0,     0,   869,     0,   902,   930,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     902,   936,     0,   957,     0,     0,     0,   988,   989,   707,
     721,   722,   723,   727,  1016,  1015,   965,     0,   959,     0,
       0,   708,   731,   736,     0,   937,   764,     0,   752,     0,
     744,     0,   750,   754,   732,   747,     0,   728,     0,   960,
     897,   899,     0,   895,     0,   718,   719,   720,   712,   713,
     714,   715,   716,   717,   724,   873,   871,   872,     0,     0,
       0,   852,     0,     0,   749,  1261,  1296,     0,   466,   466,
     466,   454,   464,   964,     0,   607,   475,   607,     0,   703,
     596,  1008,  1122,  1110,  1111,   903,  1007,   128,     0,  1130,
       0,     0,     0,   134,   117,     0,  1128,     0,   150,   558,
       0,   957,     0,   481,   482,     0,   486,  1486,  1380,     0,
       0,     0,     0,   521,   549,     0,   540,     0,   980,   522,
     979,   523,   526,   527,   498,   550,   969,   552,     0,   545,
     438,   437,   556,     0,    42,     0,  1269,    59,     0,     0,
       0,     0,     0,     0,   208,   244,   208,    96,  1269,   369,
    1269,   369,  1168,  1236,  1396,     0,    55,    88,     0,   277,
     108,     0,   262,   306,    78,    93,   101,     0,     0,    44,
     168,   182,   187,   104,   191,   188,  1047,   189,   115,     0,
      40,     0,   102,     0,  1045,     0,     0,    46,   106,  1049,
       0,     0,     0,     0,   905,   803,   907,   908,   953,     0,
     391,     0,   300,     0,   401,   381,   382,   392,     0,   301,
    1027,     0,     0,     0,     0,     0,   292,   290,   320,     0,
     297,   291,   299,     0,     0,   248,     0,  1162,     0,     0,
     377,   373,     0,     0,   337,  1006,   339,     0,   341,     0,
       0,   394,     0,   397,     0,   396,   400,   395,   389,     0,
     420,     0,     0,     0,     0,     0,     0,  1106,   618,   614,
       0,     0,     0,     0,     0,     0,     0,     0,   910,   634,
     471,     0,     0,     0,   941,     0,     0,   840,     0,   816,
     818,   635,   830,     0,   648,   820,   822,     0,   889,     0,
       0,     0,   831,   771,   772,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   787,   786,   832,   868,     0,     0,   928,   929,
     833,   676,   675,   677,   677,     0,     0,   935,     0,     0,
       0,   838,   796,   903,   660,   703,     0,     0,     0,     0,
       0,     0,     0,   753,   746,     0,   751,   755,     0,     0,
       0,   740,     0,     0,   738,   765,   734,     0,     0,   766,
       0,     0,     0,   809,   466,   466,   466,   466,   463,   465,
       0,     0,     0,     0,  1380,     0,   579,   557,   559,   566,
     579,   584,   811,   605,   812,   971,     0,   531,     0,   531,
       0,  1100,  1113,     0,  1131,     0,   139,   121,   141,   140,
       0,   148,     0,   957,     0,   139,   123,     0,   142,     0,
    1130,     0,   154,   478,     0,   890,   486,     0,   480,   525,
     524,     0,   496,   547,   494,     0,   553,     0,     0,     0,
     252,     0,     0,     0,   208,     0,     0,   316,     0,   303,
      77,     0,     0,     0,    51,     0,    69,    61,    47,    75,
       0,     0,    80,     0,    73,    90,    91,    89,    94,     0,
     236,   218,   249,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   806,   807,   804,   475,
     952,   423,   424,   173,   422,   310,     0,     0,  1042,  1025,
       0,     0,   161,   301,     0,   276,   272,     0,   270,   269,
     271,     0,  1163,   166,     0,  1158,  1041,     0,     0,  1036,
     369,     0,   426,     0,   385,   421,   410,   415,     0,   419,
     417,   416,   411,   414,     0,     0,   619,     0,   628,   696,
     697,   698,   699,   700,   701,   702,     0,   654,     0,   943,
     939,     0,   813,   911,     0,   901,   923,   922,   770,   782,
     783,   784,   924,     0,     0,     0,   779,   780,   781,   773,
     774,   775,   776,   777,   778,   785,   933,   932,   926,   927,
     672,   670,     0,   835,   836,   837,   934,   870,   987,   709,
       0,     0,   737,   938,   756,     0,     0,     0,   733,   889,
       0,     0,     0,     0,     0,   742,     0,     0,     0,   855,
     850,   851,     0,     0,     0,     0,   457,   456,   462,   579,
     584,     0,   440,     0,   566,     0,   578,   515,   577,     0,
       0,   590,   588,     0,   590,     0,   590,     0,   515,     0,
     580,   515,   577,     0,   597,   972,   606,     0,   538,   803,
     538,     0,   453,  1129,     0,  1125,     0,     0,     0,   129,
     126,   116,     0,     0,   151,   139,   130,     0,   479,   484,
     485,   495,   970,   109,   208,     0,     0,    58,     0,   318,
     264,   296,   279,     0,     0,     0,   209,     0,   284,     0,
      50,    70,     0,    66,     0,    95,     0,     0,     0,     0,
       0,    53,    65,     0,    48,     0,   369,   369,    56,   263,
     215,  1328,     0,   876,   877,   213,   305,   210,   311,   212,
     214,   636,   211,   308,   105,  1048,     0,   103,     0,  1046,
     112,   110,   107,  1050,     0,   404,   384,     0,     0,  1269,
       0,  1042,   159,   298,     0,   326,   248,   321,     0,  1162,
    1160,     0,  1157,     0,     0,     0,   342,     0,   398,     0,
     418,     0,   615,   620,   705,   942,   829,   839,   921,     0,
       0,     0,     0,   834,   762,   760,   757,     0,   758,   741,
       0,     0,   739,   735,     0,   767,   841,     0,   857,   854,
     461,   460,   459,   458,   565,   563,     0,   568,   999,   998,
     575,   508,   514,   564,     0,   560,     0,   589,   585,     0,
     586,     0,     0,   587,     0,   561,     0,   998,   562,     0,
     604,     0,     0,   846,   985,   846,  1101,   138,   118,     0,
     119,   149,     0,     0,     0,     0,   143,   378,     0,   314,
      60,     0,   296,     0,   208,   281,   280,   283,   278,   282,
     285,     0,     0,     0,     0,     0,   265,     0,     0,     0,
     229,     0,     0,   296,   302,   225,   226,   335,     0,     0,
       0,    62,    52,    49,    54,    63,     0,     0,    64,    67,
     612,    79,    72,   636,   636,     0,     0,     0,   805,   380,
     387,   173,     0,     0,     0,     0,   298,     0,     0,     0,
    1162,     0,     0,   206,     0,   245,     0,   163,  1161,     0,
    1150,     0,  1034,  1035,     0,     0,   386,   616,   788,     0,
       0,     0,   759,   763,   761,   743,   843,     0,   475,   600,
       0,   603,   567,     0,     0,   503,   510,     0,   513,   507,
       0,   569,     0,     0,   571,   573,     0,     0,     0,   608,
       0,     0,     0,   975,     0,   530,   532,   535,   534,   537,
       0,   506,   506,     0,     0,     0,   152,     0,   145,   145,
       0,   131,   891,     0,   208,     0,   295,   315,   243,     0,
       0,   227,     0,   233,     0,   267,   268,   266,   228,   296,
     301,   230,   336,     0,    71,     0,    87,   636,     0,   307,
     113,   111,   404,     0,  1042,  1157,     0,     0,   272,   166,
    1159,   261,   254,   255,   256,   257,   258,   259,   260,   275,
     274,   246,   247,     0,     0,     0,  1036,     0,   789,     0,
     790,     0,   860,   605,     0,     0,   599,     0,   501,   499,
     502,   504,   500,     0,     0,   576,   592,     0,   572,   570,
     581,     0,   612,     0,   583,   536,     0,   845,   847,     0,
       0,   442,   441,     0,   125,     0,   607,     0,     0,   147,
     147,   133,     0,   301,   317,     0,   287,   294,   286,     0,
       0,   224,     0,   231,   325,   217,   611,     0,    74,     0,
     312,   379,   383,     0,  1151,     0,  1157,   248,  1162,     0,
    1154,     0,     0,  1042,   791,   856,     0,     0,     0,   598,
     601,     0,   574,     0,     0,     0,   609,   610,   582,   533,
       0,     0,   508,   120,   145,   124,   153,   144,   483,   146,
     483,     0,   325,   273,     0,     0,   251,   217,     0,   242,
       0,    68,    86,   313,     0,   298,  1152,   207,   164,  1155,
    1156,     0,   607,  1459,  1212,  1430,     0,   858,   861,   859,
     853,     0,   511,     0,   517,   591,   848,   849,   505,   147,
     486,   486,   607,   242,   288,   293,     0,   232,   234,   322,
     323,   324,     0,   238,   235,   239,     0,  1157,     0,  1032,
       0,   865,   864,   863,   867,   866,   602,     0,     0,   509,
     483,   136,   135,   132,   208,   250,     0,     0,     0,   240,
       0,   241,   216,  1153,  1042,     0,   512,     0,   486,   319,
     221,     0,   220,     0,   304,   237,   607,   862,     0,   137,
     219,   223,   222,  1033,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1886,  1887,  1888,  1595,   818,
    2518,  1596,   819,   820,  1890,    38,    39,  1226,   515,  1533,
    1169,  2264,    41,  1841,  1538,  1845,  2396,  2085,  1840,  1847,
    2499,  2558,  1842,  1539,  2397,  1540,    42,    43,  1294,    44,
     637,    45,  1295,  1253,  1001,   838,  1243,   990,    46,    81,
      47,  1877,  2146,  2571,  1900,  2654,  2294,  2295,  1597,  2613,
    2614,  1879,  1942,  1235,  2607,  1656,  2449,  1601,  1584,  2296,
    1665,  2406,  2175,  1598,  2116,  1657,  2281,  2505,  1305,  1658,
    2506,  2274,  1659,  1278,  1298,  2118,  2615,  1602,  1279,  2147,
    1222,  1660,  2569,  1661,   477,  2299,    48,   507,   508,   628,
     971,   509,    49,   478,   959,   516,    51,  1647,  2321,  1953,
    2322,  1689,  1641,   999,  1686,  1326,  1282,  1000,   466,  1340,
    1954,  1923,  1327,   517,   723,    54,    55,    56,   564,   558,
     559,  1142,  1511,  1810,   788,   539,   540,   574,  1272,  1176,
    1177,  1546,  1858,  1201,  1202,   797,   798,  2366,  2491,  2367,
    2368,  2232,  2233,  2629,  1189,  1193,  1194,  1559,  1552,  1182,
    2078,  2385,  2386,  2387,  2253,  1197,  1198,   800,   801,   802,
    1206,  1569,    58,  1515,  1817,  1818,  1819,  2056,  2057,  2071,
    2067,  2238,  2374,  1820,  1821,  2359,  2360,  2466,  2074,  1827,
    2378,  2379,  2426,  1027,  1346,  1028,   724,  1029,  1370,   725,
    1065,  1031,   726,   727,   728,  1034,   729,   730,   731,   732,
    1048,   733,   734,  1082,  1360,  1361,  1362,  1363,  1364,  1365,
    1366,  1367,   773,  1422,   736,   737,   738,  1823,   739,  1137,
    1501,  2391,  2487,  2488,  1803,  2040,  2218,  2358,  2538,  2587,
    2588,   740,  1498,  1132,  1133,   741,  2149,  1135,  1415,  1441,
     853,   854,  1039,  1392,  1393,  1418,  1731,  1425,  1430,  1758,
    1759,  1442,  1466,   742,  1377,  1378,  1715,  1050,   743,   598,
     858,   599,  1046,  1460,   751,   744,   745,  1565,   551,  2370,
     633,   938,   746,   747,   748,   749,   750,  2230,   459,  2559,
     973,   778,   856,  1599,  1456,    59,   656,   603,    60,   950,
    1289,    61,  2343,  2185,   961,  1307,  1669,   479,    62,    63,
      64,    65,    66,   581,   993,   518,   994,   995,   643,    67,
    1002,   645,   646,    68,   545,   546,  1003,  1153,  1004,    69,
     526,    70,   769,   555,   770,   772,   520,   785,  1836,  1529,
      72,    73,   533,   534,    74,    75,   547,    76,    77,  2340,
     521,  1945,   956,   485,   461,   462,   943
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2333
static const int yypact[] =
{
    4147,  -120,   660, -2333, -2333,  -120, 29373, -2333,  -120,    26,
    1226, 31668, -2333,  4494,  -120, 36258,   909,   154,   160,   267,
   36258, 36258, 32127,  -120,   218, 36717, -2333,  -120, 32586,   -14,
    -197, 37176, 36258,  1168,   293,  -141, -2333, -2333, -2333, -2333,
   -2333,    82, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333,   177, -2333,    43,   188,   323,  -133, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333,   -44, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, 33045, -2333, -2333, -2333, -2333,
   -2333, -2333, 37635, 36258, 38094, 33504, 38553, -2333,    81, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333,   -83,   473, -2333,
     102, -2333, -2333, -2333, -2333,  1168, 36258, -2333,   388,   439,
   -2333,   156, 39012, -2333, -2333, -2333, -2333,   -54, 36258,   237,
   -2333, -2333, 33963, -2333, -2333, -2333,   219, -2333, -2333,   104,
   -2333,    46, -2333, -2333, -2333,   153, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333,   167, -2333, -2333, 39471, 39930, 40389,
   -2333,   138,   499,   515, 18370, -2333, -2333, -2333, -2333,   -44,
   -2333, -2333,   267,   267, -2333, -2333, -2333,   331,   285, -2333,
      88,   474, -2333, -2333, -2333,   317, -2333, -2333,   539,  7449,
    7449, 40848,   267, 40848,   396, -2333, -2333,   -31, -2333, 19755,
   -2333,   406,   473, -2333,   223,   755, 10335, 36258,   486, -2333,
     511,   486,   536,   546,   323, -2333,  4147,   863,   786, 32586,
     222,   222,   998,   222,   601,   647, -2333,  1199, -2333,   606,
   -2333, 36258, -2333,   646,   903,   317,   984,   817,   830,   990,
   26103,  1001,   885,  1013,  1229,  5525, 10335, 23068, -2333,   473,
   -2333, -2333, -2333,   687, -2333,   701, -2333, -2333, -2333, -2333,
     499,   933, -2333,   747, 41307, 41766, 36258,   750,  1117, -2333,
   -2333, -2333, -2333,   769, -2333, -2333,    74,  1087,    36,   780,
   -2333,  1102,    39, -2333,  1121,   992, 10335, -2333,   891, -2333,
   -2333,  -197, -2333,   264, -2333, -2333, 24904, -2333, -2333, -2333,
     515,   804, -2333, 24904, 10335, 45897,  1251, -2333,  1070, 36258,
     828, -2333, -2333, -2333, -2333, -2333, -2333,  1293,    94,  1309,
   10335,   842,    94,    94,   848,  1185, -2333, -2333, -2333,   118,
     875,   888, -2333,   122,   122, -2333,  1066,   896,   910, -2333,
     123,  1367,  1387,    96,   938,   939,   831,    94, 10335, -2333,
     944,   122,   949,   957,   959,  1434,   967, -2333,  1442,   970,
     121,   140,   971,   972, -2333, -2333,   125, 10335, 10335, 10335,
   -2333,  6487, -2333,   473,   267, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333,   979, -2333,   124,  4298, -2333,  1019, -2333, -2333,
    1177, 10335, -2333, -2333,   -37, -2333,   131, -2333, -2333, -2333,
     473,  1254,   982, -2333, -2333, -2333,   162,  1370, 23986, 24445,
   36258, -2333, -2333,   473, -2333, -2333, -2333, -2333, -2333, -2333,
     387, -2333,   -44, 25977,   429,   486, 36258, 36258,  1431, -2333,
   -2333, -2333, 32586, 36258, 42225,  1107, -2333, -2333,   323,   323,
   10335,   323,    98,   889,  7930, 10816,  1310,  1203,   105,    71,
    1319, -2333,  1223,   601,   647, 10335,   511, -2333,  1270, 36258,
   29832,   770,   822,  1017,  1098,  1021,   -57,  1416, -2333,  1027,
   -2333,  1103, 36258, 46341,   145, -2333,  1457,   145,   145,   516,
    1462,  1120,   143,  1276,    -1,  -195,  1027,  2592, -2333, 32586,
      85,   467,  1027, 36258,  1128,   526,  1027, 10335, 10335, 10335,
    1048, -2333, 25977,   -69, -2333,   960,   989, 22608,  1044, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333,  1134, 36258,  1093,   -97,  1389,
    1444, 36258,  1280,  2592,  1286,  1072,  1526,   701,  8411,  1527,
   -2333, 42684, -2333, -2333, -2333, -2333, -2333, 36258, -2333, -2333,
   36258, -2333, 27078,  1083, 36258, 36258, -2333, 36258, 36258,   459,
   43143,   515, 28914, -2333, -2333, -2333, -2333,   679,   736, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, 27078, -2333,
    2949, -2333, -2333, -2333,  1082,   501, -2333, -2333,  1135, -2333,
    1135,  1135,  1090,  1090,  1095, -2333, -2333, -2333,   831,  1135,
    1090, -2333, 46341, -2333,    61,   312, -2333, -2333,  1545, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,  2353,   506,
     557, -2333,  1168, -2333, -2333, 10335,   473, -2333,  1104, 25977,
    1145, 10335, -2333, -2333, 10335,  1106,  1576,  1576, 10335, -2333,
   -2333, -2333, -2333,  2321,  1576, -2333,  1576,  1576,  1135,  1135,
   -2333,  5036, 10335, -2333, 21601, 10335, 13221,  8892, 10335,  1194,
    1195,  1576, -2333,  1576, -2333, 10335,  6968,  5036,  1581,  1581,
    2851,  4346,  1111,   473,   473, -2333,  1576, 10335,  1990,  1990,
   -2333,   130, 45897, 10335, 10335, 10335, 10335, 26619,  1198,    73,
   36258, 10335, 10335,  1122,   980, -2333, 10335,  1335, -2333,  1123,
   10335,  1201,    67, 10335, 10335, 10335, 10335, 10335, 10335, 10335,
   10335, 10335, -2333, -2333, 15134,   161,  1428,  1447,  -100,   458,
   34422,  7449,  1439,  5525, -2333,    76,  1439, -2333, -2333, -2333,
   -2333,   132, -2333, -2333, -2333, -2333,  1082, -2333,  1082,  1132,
   36258,   223, 30750, -2333, 10335, -2333,   512,  1136,  1192,   614,
    1580, 36258, -2333, 20216,  1409, -2333,  1139, -2333, 25360,  1409,
   -2333, -2333, 13691,  1255,  1408,  1350, -2333, -2333, -2333,  1143,
   25977, 11297, 11297, -2333,   592, 25977,   619, -2333, -2333, -2333,
   -2333, -2333, -2333,   600, -2333, 36258,   -41,  1310,    71,   586,
   -2333, -2333,  1519,  1148, 43602, 36258,  1415,  1373,  1419,  -188,
   -2333, -2333, -2333, 45897, -2333, 36258, 36258, 44061, 44520, 27537,
   36258, 27078, -2333, -2333, -2333, -2333, 36258,   395, 36258, 26133,
   -2333, -2333, -2333,   145, -2333, -2333, -2333, -2333, -2333, 36258,
   36258, -2333, -2333,   145, 36258, 36258,   145, -2333,  1690, 36258,
   36258, 36258, 36258,  1880, 36258, 36258,   -56,   -56,  1357, -2333,
    9373,  1160, -2333, 10335, 10335, -2333, 10335,  1330, -2333,   657,
   -2333,  1371,    41,  1211, 36258, 36258,   797, -2333, -2333, -2333,
   -2333, -2333,  1167,  1499, -2333,  2592,  1500, 30291,   618,   807,
    1218, -2333,   661, 10335,  1393, -2333, -2333,  1386,    36, -2333,
   -2333, 27078,    39, -2333,  1388,   101, -2333,  1402,   701,  1627,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333,   671, 17909, -2333,
   -2333,  1628,   267,  1628,   421, -2333, -2333,  1628, -2333,  1628,
   -2333, 24904, -2333, 10335,  1630,  1190,  1191, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,  1576,
    1271, -2333,  1274,  1279,  1287,  1196, -2333, -2333, -2333, 45897,
   -2333,   566, -2333,   677, -2333, 10335, 10335,    38, -2333, 25438,
     689, 10335,  1189,  1205,   699, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333,  1207,  1523, -2333,  1213,  1215,  1217, -2333, -2333,
    3663, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333,  1219,  1221, 25490,  1220, 13221,
   13221,  6487,  1016, -2333, 13221,  1224, -2333,   714, 25378,  1208,
    1225,  1236,  1244,  1227,  1230, 25712,  9854, 10335,  9854,  9854,
   25848,  1208,  1232, -2333, 10335,  1235,  4860, -2333, -2333, -2333,
   26063, 26063, 26063,  5036, -2333, -2333, -2333,  1261, -2333, 13221,
   13221, -2333,  1412,  3010,  6487, -2333, -2333,  1550, -2333,   623,
   -2333,  1247, -2333, -2333, 22566, -2333, 21601, 26029, 10335,    83,
   -2333, 10335,  1122, 10335,  1325, 26063, 26063, 26063,   247,   247,
     110,   110,   110,   265,   458, -2333, -2333, -2333,  1249,  1250,
    1258,  1446,   967, 10335, -2333,   829,   849, 36258,  2839,  3350,
    3426, -2333, -2333, -2333, 16526,  1311,   -69,  1311,  1576,  1990,
   -2333,   511, -2333, -2333, -2333, 25977, -2333,  1168, 16526,  1312,
    1326,   239, 18832,  1479, -2333, 36258, -2333, 36258, -2333,   -27,
    1290, -2333, 10335, -2333, -2333,  2565,  1295,  1487,  1489,   914,
     914,   592,  1491, -2333, -2333,  1353, -2333, 10335,   669, -2333,
     735, -2333, -2333, -2333, -2333,  1292, -2333, -2333,  1535, -2333,
   -2333, -2333, -2333,  1381,  1027, 10335,  1522, -2333,    80,  1303,
    1640,  -158,  1597, 36258, -2333,  1516, -2333,   604,  1646,   101,
    1649,   101, 27078, 27078, 27078,   719, -2333, -2333,   267, -2333,
   -2333,   720, -2333,   206, -2333, -2333, -2333,  1403,   558,  1027,
    2592, -2333, -2333, -2333, -2333, -2333, -2333, -2333,   128,   605,
    1027,  1404, -2333,  1405, -2333,  1406,   625,  1027, -2333, -2333,
    1321,  1327,  1331, 10335, -2333, -2333, 25977, 25977, 25977,  1334,
   -2333,   112, -2333, 36258, -2333, -2333, -2333,  1330, 36258,   701,
   -2333,   450, 36258, 36258, 36258, 36258, -2333, -2333, -2333,  1333,
    1336, -2333, 45897,  -110,  1546,  1543, 36258,  1384,  1021,  1791,
   -2333, 25977,  1679, 36258, -2333, -2333, -2333, 36258, -2333,  1685,
    1168, -2333, 27078, -2333, 28455, -2333, -2333, -2333, -2333,   267,
   -2333,   267,  1571, 36258, 23527,   267,   267, -2333,  1360,  1191,
    1576,    68,  1361,   927,   988,   496,  1029,  1576, -2333, -2333,
   -2333,   726, 25934, 10335, -2333,  1702, 45897, -2333,  4878, -2333,
   -2333, -2333, -2333, 10335, -2333, -2333, -2333, 10335, -2333, 21601,
   10335,  1681, -2333,  1837,  1837,  4346, 45897, 13221, 13221, 13221,
   13221,   527,   949, 13221, 13221, 13221, 13221, 13221, 13221, 13221,
   13221, 13221, 14172,   352, -2333, -2333, 10335, 10335,  1688,  1681,
   -2333, -2333, -2333,    72,    72, 45897,  1374,  1208,  1375,  1376,
   10335, -2333,   473, 22068, -2333,  1990, 10335,  2152,  2380, 10335,
     728, 10335,  1686, -2333, -2333,  1379, -2333, -2333, 45897, 10335,
    1382, 25593, 13221, 13221, 25806, -2333, 26080, 10335,  6487, -2333,
    1357,  1421, 20677, -2333,  1476,  1476,  1476,  1476, -2333, -2333,
   36258, 36258, 36258, 16987,  1698, 16064, 34881,  1383,  1599, -2333,
   34881, 35340, -2333,  1414, -2333,   473, 10335,  1691,  1391,  1691,
    1401, -2333, -2333,  1411,  1383, 10335,  1533, -2333, -2333, -2333,
    1461, -2333,   757, -2333,  1790,  1533, -2333,   777, -2333, 20216,
    1312, 10335,   473, -2333,  1410, -2333,  1295,   113, -2333, -2333,
   -2333,  1617, -2333, -2333, -2333, 36258, -2333, 36258, 22086,  1746,
   -2333, 36258, 36258, 36258, -2333, 36258,   794,   765,  1417, -2333,
     765,  1726,   547,  1021,   143,  2875,   -86, -2333, -2333, -2333,
    1493, 36258, -2333, 36258, -2333, -2333, -2333, -2333, -2333, 27537,
   -2333, -2333, -2333, 27078, 21141, 27078, 36258, 36258, 36258, 36258,
   36258, 36258, 36258, 36258, 36258, 36258, -2333, -2333, -2333,  1357,
   -2333, -2333, -2333,  -195, -2333, -2333,   112,  1425,  1218,  1444,
   44979,   798,  2592,  1427,  1871, -2333,   618, 30291, -2333, -2333,
   -2333,  1832, -2333,   138,   115, -2333, -2333,  1168, 36258,  1490,
     101, 36258, -2333,   805, -2333, -2333, -2333, -2333, 36258,  1430,
   -2333,  1430, -2333, -2333,  1576,  1436, -2333,  1437, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333,  1440, -2333, 10335, 25977,
   -2333,  1443, -2333, 25977, 22120, -2333, 25977,  1688, -2333,  2078,
    2078,  2078,  3328,  1749,   179,  1438,  2078,  2078,  2078,   165,
     165,    77,    77,    77,  1837,   352, 25977, 25977, -2333, -2333,
   -2333, -2333,  1445, -2333, -2333, -2333,  1208, -2333, -2333,   266,
   10335, 10335,  1412, -2333,  3937, 10335, 45897,   811,  1412,   171,
   10335,  2400,  2468, 10335, 10335, 26161, 22138,  1451, 10335, 45438,
   -2333, -2333, 36258, 36258, 36258, 36258, -2333, -2333, -2333, 34881,
   35340,  1448, 15602,  1599,  1453, 35799, -2333,  1529,  1456, 16526,
    1707,  1641, -2333, 16526,  1641,   662,  1641,  1711,  1529, 19294,
   -2333,  1529,  1459,  1655, -2333,   581, 25977,  1886,  1762,   267,
    1762,   267, -2333, 25977,  7449, -2333,  1168,  1193, 36258,   473,
     -98, -2333,  1474, 36258, -2333,  1533, 25977, 21601, -2333, -2333,
   -2333, -2333, -2333, -2333, -2333, 36258,   813, -2333,   820,   765,
   -2333,  1507, -2333,   148,  1753,    -9, -2333, 27078,  2113,   528,
   -2333,  1767,  1689, -2333,   145, -2333, 10335,   528,  1692,   176,
   36258, -2333, -2333,  2442, -2333, 45897,   101,   101, -2333, -2333,
   -2333,  1410, 46341,   679,   736, -2333, -2333, -2333, -2333, -2333,
   -2333,   557, -2333,  1486, -2333, -2333,  1556, -2333,  1558, -2333,
   -2333, -2333, -2333, -2333,  1480,   804,    37, 36258,  1928,  1708,
    1497,  1218, -2333, 30291,   839,    97,  1543, -2333,    95,  1384,
   -2333,  1860,  1528,  1696, 36258,  1501, -2333,  1936, -2333, 28455,
    1430,  1505, -2333, -2333, -2333, 25977, -2333, -2333, -2333, 13221,
    1811,  1508, 45897, -2333,  1412,  1412,  3937,   825, -2333,  1412,
   10335, 10335,  1412,  1412, 10335, -2333, -2333, 22180,  1693, -2333,
   -2333, -2333, -2333, -2333, -2333, -2333, 27996, 34881, -2333,  1510,
   -2333, 31209, -2333, -2333, 36258,  1599, 16526, -2333, -2333,    92,
   -2333, 16526,  1769, -2333, 16526, -2333, 36258,  1511, -2333, 36258,
   -2333, 11778, 10335,  1551, -2333,  1551, -2333,   982, -2333,   239,
   -2333, -2333,  1907, 17448,  1865, 10335, -2333, -2333,  1518,   765,
   -2333,  1677,  1507,  1525, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333,   834,  1530, 36258, 36258, 13221, -2333,   528,   198,   209,
   -2333,  1789, 36258,  1507, -2333, -2333, -2333, -2333,  1892,  1971,
    1859, -2333, -2333, 25977, -2333, -2333,  1576,  1576, -2333, -2333,
    1937, -2333, -2333,   557,   492, 21141, 36258, 36258, -2333, -2333,
   -2333,  -195,  1890,   836,  1168,  1863, 30291,  1977,  1537, 36258,
    1384,   116,   116, -2333,  1676, -2333,  1680, -2333, -2333,   212,
   -2333, 36258, -2333, -2333, 17448,  1168, -2333, -2333,  3633, 13221,
   45897,   845, -2333,  1412,  1412,  1412, -2333,  1970,  1357, -2333,
     851,  1991, -2333, 36258,   -92,   -48,  1547,  1552, -2333, -2333,
     862, -2333, 10335,  1553, -2333, -2333, 16526,    92,   872, -2333,
   45897, 36258,   879, 45897,  6006,  1554, -2333, -2333, 25977, 25977,
   36258,  1608,  1608,  1611, 36258, 10335, -2333,   899,  1962,    30,
     -53, 25977, -2333, 36258, -2333, 27078, -2333,   765, -2333, 27078,
   10335, -2333,   616,  3328,  2003, -2333, -2333, -2333, -2333,  1507,
     701, -2333, -2333,  1856, -2333, 36258,  1619,   674,  1634, -2333,
   -2333, -2333,   804,   267,  1218,  1528, 36258,  1168,   618,   138,
   -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333, -2333,
   -2333, -2333, -2333,  1978,  1770,  1979,  1490,   911,  3633,   920,
   -2333, 10335,   343,  1414, 27996,  1565, -2333,   922, -2333, -2333,
   -2333, -2333, -2333, 36258,   915, -2333, 25977, 36258, -2333, -2333,
   -2333, 36258,  1937,   926, -2333, -2333, 11778,  1566, -2333,  2012,
    1712, -2333, -2333,  1168, -2333, 22198,  1311, 17448, 36258, 36258,
   36258, -2333,  1695,   701,   765,   928, -2333,  1584, -2333, 22472,
    1796, -2333,  1869, -2333,  1822,  1585, -2333, 10335, -2333,  1654,
   -2333, -2333, -2333,  2029, -2333,  1587,  1528,  1543,  1384,  1798,
   -2333,  1799,  1589,  1218, -2333,  1208, 12259, 12259,  1600, -2333,
   -2333, 36258, -2333,   942,  1602,   947, -2333, -2333, -2333, -2333,
   36258,  1604, 31209, -2333,  1962, -2333, -2333, -2333,   195, -2333,
     195, 20216,  1822, -2333, 27078, 21141,  1827,  1585,    65,  1812,
    2592, -2333, 25977, -2333,  1168, 30291, -2333, -2333, -2333, -2333,
   -2333, 17448,  1311, 14653,  1743,   201, 25420, -2333, -2333, -2333,
   -2333,   962, -2333,  2081,  1759, -2333, -2333, -2333, -2333, 36258,
    1295,  1295,  -128,  1812, -2333, -2333,  1896, -2333, -2333, -2333,
   -2333, -2333,    52,  1823, -2333,  1829,  1575,  1528,   964, -2333,
    2072, -2333, -2333, -2333, -2333, -2333, -2333,  1631,  1635, -2333,
     195, -2333, -2333, -2333, -2333, -2333,    86,    86,  1994, -2333,
    1697, -2333, -2333, -2333,  1218, 12740, -2333,  2106,  1295,   765,
   -2333,  2097, -2333,   126, -2333, -2333,  1311, -2333,  1643, -2333,
   -2333, -2333, -2333, -2333, -2333
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2333, -2333, -2333,  1557, -2333, -2333, -2333,   240, -2333,   890,
   -2333,   226,  -522,   541, -2333, -2333, -2333,  -766,    21, -2333,
   -2333, -2333, -2333,    45,   282, -2333,  -363, -1683,  -122, -2333,
   -2181, -2281, -2333,  -423, -2180, -1474, -2333,  -920,   207, -2333,
   -1879, -2333,  -589,  -828,  -632,  -832, -2333,    11, -2333,  1210,
    -916, -1549, -2141,  -426, -2333,  -494, -2333,  -267, -1542,  -469,
    -456, -2333, -2084,  -770, -2333,  1338,  -182, -2333,   571, -2333,
   -1865, -2333, -2333,   568, -2333,  -786, -2333, -2333, -1640,   225,
    -400, -2057, -2093,   522,  -599, -2333,  -447,   270, -1514, -2333,
     596, -2333,  -392, -2333,  -470, -1911, -2333, -2333, -2333,  1209,
    -607, -2333, -2333, -2333, -2333,    22, -2333, -2333, -2333, -2333,
   -2333,  -436,   531, -2005, -2333,   498, -2333, -2333, -2333, -2333,
      -8,   260, -2333,    13,   818,   -30,   -24,     3,    31,    35,
    1413,  1441, -2333,  -848,   673, -2333, -2333,  -569,   -45, -2333,
     648, -2256, -1828,  -383,   983,  1390,  1397,  -279,  -194, -2333,
    -352, -2333,  -704, -2333, -2333,   644,  1020, -1102, -1097, -2333,
     374, -2333,  -280, -2333,   129,  -366,  1005, -2333,  1418, -2333,
   -2333, -2333, -2333, -1059,   686, -1724,   400, -1739, -1611,   166,
     152,  -719,  -156,    25,   409,  -245, -2333, -2333,  -240, -1456,
   -2060,  -257,  -255,  -994,   881,  -808, -2333, -2333,  -665,  -388,
   -2333, -2333, -2333,   173,   548, -2333, -2333,   633,   773, -2333,
    -345,  1245,  -507,  -682,  1166, -1014,  1171,  -997, -1001,  1178,
   -1043,  -616,  2896, -1341,  1494,    17, -2333, -2082, -1430, -2333,
   -2333,   -11, -2333,  -319, -2333,  -304, -2333, -2333, -2333,  -289,
   -2332,  1112, -2333, -1054, -2333,  3005,   704, -2333, -1417,  -516,
    -565,  -795, -1723, -2333, -2333, -2333, -2333, -2333, -2333,  -984,
   -1547,  -327,   772, -2333, -2333,   874, -2333, -2333, -2333,  -523,
     986,  -525,  -710,   781, -2333,  -531,  1115, -2333,    27,  -504,
     894,  -869,    29, -2333,  2014,    24,  1492, -2333,    40,  -505,
   -1024,  -762, -2333,  -580, -2333, -2333, -2333,  -969, -2333,   613,
   -2333,  -912, -2333,  -190, -2333, -2333, -1870, -2333, -2333, -2333,
   -2333, -2333, -2333,  -378, -2333,  -413,  -389, -2333, -2333,    23,
    -635,  1289, -2333, -2333,   816, -2333,   931, -2333,   653, -2333,
   -2333, -2333,  1116, -2333, -2333, -2333,    32,  1496,   431, -2333,
    1124, -2333, -2333, -2333, -2333, -2333,   276, -2333,  -909, -2149,
      57, -2075,  -954,    -6,  -463,  -429, -1856
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1513
static const yytype_int16 yytable[] =
{
     460,   837,   630,   563,   632,  1257,   947,  1256,   803,   752,
     575,   996,  1093,    52,   989,  1240,  1371,   939,  1059,  1060,
    1414,    40,    50,   456,  1221,   976,  1319,   763,  2098,  1084,
    1287,    57,    71,   577,  1288,   457,  1073,  1880,  1290,   519,
     774,  1291,   638,   525,  1210,  1232,  1228,    57,  2152,  1387,
    1895,   648,  1897,   550,  1268,  1447,  1448,    78,  2168,  1790,
     578,  1829,  1390,  1848,  2179,  2027,  1389,   561,   836,  1876,
     842,  2176,   846,  1372,  1261,   464,   944,   665,  1733,  1734,
    2328,  -978,  2070,  1753,  1824,   649, -1000,  1517,  1736,  1005,
    1561,  2053,  2333,   968, -1000, -1000,   968,  1564,  1824,  -669,
     639,  -674,  2498,  1310,  2337,  -674,  2278, -1001,  1449,   587,
     592,   590,  1458,   594,  1479, -1001, -1001,   524,  1777,  1778,
     979,  1102,  1458, -1512,  1150,   642,  -677,  -636,  -649,   524,
    -664, -1512, -1512,   665,   941,   757,   524,   524,  1931,  1514,
     948,   650,  2441,  2650,  2361,  -677,  1213,  -173,  1038,   983,
    1108,   623,  -173,   553,   665,   963,  -874,  -388,   968,  1224,
    2319,  1938,  2091,  -874,  2457,  1147,   983,   524,   942,  1259,
    2636,   665,  1140,  1713,  2429,  2262,  1736,  -428,  1233,  1959,
    1961,  2398,  1110,   648,  2060,   665,   570,  1495,  -431,  2382,
     648,   796,  1241,  2442,  1496,  1244,  1245,  -893,  1094,   964,
     567,  2443,  1224,  2468,  -893,  1092,  2501,  1645,   799,  2068,
     572,  2008,  1908,  2334,  1344,  2404,  2304,   649,  2500,  2560,
    2180,  1567,  1283,   572,   649,  1145,   764,   792,  2335,  1585,
    2444,  1543,  2609,  1582,  1233,  2110,  2421,   997,  1480,  2661,
     944,  1502,  2331,  1216,   537,  1251,  1884,  2470,   786,  1151,
     571,  2620,  1481,     3,     4,  2440,  1180,  1482,  1102,  2061,
     522,   792,  2398,  1582,  2275,   613,   523,  1030,  -428,  1252,
    2453,  2099,   524,  1166,  2133,  1148,  1102,  1102,  2454,  -431,
      79,   556,  1266,  1267,  1271,   568,  2524,  1108,  2332,  1209,
    1583,  2062,  1483,   565,  2471,   648,   648,   794,   535,  2445,
     614,  2327,  2600,  2207,  2601,  1108,  2063,  2200,  2183,  1826,
    2446,  2070,  1985,  2657,  2415,  2064,  1038,  1544,  2630,  1110,
    1873,  2483,   572,    80,  2417,  2109,  1568,  1052,  1053,   649,
     649,   794,  2100,   615,  2276,  2235,  1284,  1110,  1110,  2239,
     566,   795,  2651,  1084,  2065,  1255,   538,  1059,  1060,   579,
     787,   585,  1070,  1181,  1849,  1073,  2610,  2106,  1300,  2108,
    1234,  2622,  2513,  1736,   965,  2372,  2502,   758,  1231,   969,
    1017,  2181,   969,  2599,  2648,  1708,  2414,  2576,  1503,   616,
    2263,  2469,  2361,  1824,  2416,  1824,  1218,   580,   765,  2662,
     766,  1149,   939,  1302,  1162,   595,  1989,  1990,  1991,  1992,
    2336,  2618,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,
    2004,  2005,  2267,  1270,  2279,  2398,  1234,   810,  1328,  2652,
    1207,  1231,  1414,   811,  2605,  2472,  1343,  2521,  1577,  2066,
     618,  2611,  1484,   624,   969,  1030,   759,  1208,  2224,  1646,
    2198,  2455,  1675,  2577,  2190,  1141,  2653,  2201,  1561,   659,
    -428,  2031,  2032,  2578,  1861,  1849,   573,  1459,  2320,  2152,
     621,  -431,   630,  1257,   554,  1309,   966,  1792,  2643,  1102,
    1312,  2637,  2418,  1315,  1376,  1634,  1831,  1231,   602,  2351,
    1850,  2591,  2328,  1260,   563,   610,   600,   601,  2362,  1921,
    1922,  1855,  2447,   605,  1219,  2448,    57,   604,  1108,  2398,
    -874,   569,  2623,  1079,   465,   617,   596,   622,   647,   941,
     597,  -428,  2371,  2373,  1079,  1038,   626,  2375,   970,   648,
    2377,   975,  -431,  1374,  1047,  1080,  1909,  1455,   812,  1373,
    1110,  1497,   804,   460,   460,   941,  1080,   644,  1380,  1081,
     577,  -893,  1384,   942,    57,  1966,   651,   652,  1634,   657,
     460,  1751,   596,   649,  -978,  2269,   597,  2297,  1833, -1000,
    2528,  1427,  1429,  1079,  2523,  1094,   754,   578,  1320,   942,
    1374,   944,  -669,  2527,  -674,  2280,   761,   768,  1516,    52,
   -1001,  2298,  1079,  1251,  1131,  1080,   625,    40,    50,   460,
     460,   940,   775,   642,   784,  1038, -1512,    57,    71,  1081,
    1058,  1064,  1097,  -664,  1080,  1461,   512,  1252,   806,  1143,
    1518,  1611,  -173,  -173,   987,   988,   636,  -428,  1083,  2266,
    1246,  1614,   944,    78,  1617,  1838,  1881,  2459,  -431,  1824,
     460,   987,   988,  1824,  1030,   855,  1748,  1749,  1750,  1751,
     647,   953,   955,   957,   941,  2306,  2307,   647,   460,  1041,
    1610,  1603,  2478,  2323,   767,  1993,  -428,  2536,  -428,  1839,
    2120,  1811,  1812,  2582,   460,  1052,  1053,  -431,  1585,  -431,
     992,   468,   813,  1904,  1070,  1414,    24,   992,   942,  1692,
    2268,    57,  2282,  1322,  1693,  2537,  1905,   658,   665,  1969,
    1574,   563,   460,  1687,   855,  1040,  1685,  1630,  1631,  1632,
    1934,  1674,  1233,  1971,  1973,  1676,  1709,  1970,  1678,  2152,
      28,   460,   460,   460,  1030,   460,  1038,  1609,  1128,  1129,
    1130,  1131,  1981,  1398,  1399,  2407,   815,  1530,   469,  2285,
    2121,   939,  2018,  1772,  1694,   460,  1620,  1882,  1351,  1352,
    1324,  1627,  1988,   981,  1612,   665,   982,  1987,  1095,  1615,
      30,  1782,   647,   647,  1079,   816,  1247,   792,  1099,  1832,
    1248,  1233,   793,   655,  1174,  1175,   941,  1179,   941,   613,
    1144,  2012,  2631,  2632,  2656,  2009,  1080,  1783,  1257,   606,
    1152,   607,   992,   992,   460,  1994,  2287,  1159,   460,   460,
    1083,   578,   578,  1233,   578,  1995,  1824,   659,   653,   460,
     942,    33,   942,  -474,   614,  2122,  1824,   784,  -474,   654,
    1170,  1824,   660,  1262,  1824,  1183,  1651,  1041,    53,   817,
    2659,  1746,  1747,  1748,  1749,  1750,  1751,   794,  1032,  2061,
     608,  1852,   609,  1824,    53,  1030,  1212,  1930,  1919,   810,
    1233,   460,   460,   460,  1224,   811,  1355,  1356,   941,  1239,
    1855,   562,  1910,    82,  1225,  2504,  1184,   756,  2348,  1711,
    1233,  2062,  1038,  1040,  1258,   648,  1160,  2508,    24,  1161,
    1263,   795,  1265,  -474,  2510,   576,  2241,   762,   648,  2290,
    2112,   813,   942,   616,  1234,  2064,  1784,   855,   855,   855,
     473,  1785,   474,  1939,  1068,  1069,  1224,  1691,  1946,   649,
    1531,  1695,    28,  1696,  1907,   483,  1227,   810,  1163,   511,
    2148,  1164,   649,   811,  1824,   528,   476,  -474,  1859,  2364,
     771,  1767,  2291,   665,  2365,   560,   560,  1126,  1127,  1128,
    1129,  1130,  1131,  1562,  1563,  1883,  1884,  2292,  1316,     3,
       4,  1164,    30,  1234,  2413,  1231,  1824,  1828,  1780,   596,
     812,  1911,   460,   597,  1666,    31,  2042,  2043,  2044,  2045,
    -521,  -521,  2113,  1186,  1885,  2428,   940,    24,   776,   468,
    1058,  1915,  1311, -1009, -1009,  1234,   647,   588,  1292,    32,
    1342,  1030,  1892,  1343,  1894,  1368,  2329,  1092,  1369,   777,
   -1044,  1526,   940,    33,   975,   783,  1032,  2187,   855,  2066,
     512,    28,  1273,  1274,  1231,   644,    83,  1318,  2458,  1287,
    -525,  -525,    57,  1288,    84,   779,  1041,  1290,   812,  1187,
    1291,  2114,  1234,  2115,   664,   780,   469,  1736,  1786,   782,
    2293,  1737,  1738,  1739,  1824,  1058,  1231,   972,  1787,   460,
    2555,    30,  1234,  1414,  1058,   460,  1311,    85,   460,  1955,
    1928,   790,   460,  2131,    31,   602,  2124,   596,  1663,  -978,
    1664,   597,  1040,   600,   601,  1572,   460,  1824,  1164,   460,
     460,   460,   460,    57,   604,   471,  -524,  -524,    32,   460,
     460,  2010,  2011,  1231,   805,  2649,  2107,  1394,  1972,  1974,
    1975,   460,  1532,    86,   813,  2165,  1041,   460,   460,   460,
     460,   940,  1328,  1231,  1183,   460,   460,   807,  1467,  1766,
     460,  1768,  1769,  2123,   460,  2132,   808,   460,   460,   460,
     460,   460,   460,   460,   460,   460,  2619,  2314,   460,   941,
     941,   941,   809,  2089,  1468,   460,  1642,   460,   822,  1643,
    1670,  2310,  1040,  1343,   814,  1184,  2633,  2519,   815,   839,
    1681,  1824,  1058,  1682,  1311,  1038,  1710,   821,   460,  1164,
      24,   843,   813,   942,   942,   942,   945,  1512,  1717,  1349,
    1350,  1164,  1950,  1353,  1354,  1519,   460,   816,  1721,   946,
     951,  1164,  1534,   855,   768,   460,   460,  1521,   473,  1523,
     474,   949,    24,  1755,    28,  1032,  1164,   960,  1898,  1902,
    2663,  1899,  1903,  1033,  1185,  1977,  1740,  2023,  1164,  1038,
    1164,   475,   840,   962,   476,    87,   815,  1041,   463,   941,
    1804,   648,  1805,   940,   510,   940,    28,  1741,   958,  1038,
    1351,  1352,  1566,   536,    30,   967,  2087,   548,  1469,  2088,
    1806,   817,  1807,  1470,   789,   841,   791,    31,  1471,  1374,
     974,   810,  1186,   942,  2016,   649,  2092,   811,  1038,  2093,
     972,  1855,    24,  1040,   460,   978,    30,   460,   460,   977,
     460,    32,  2145,  2111,  1030,  1032,  1643,  2171,   980,    31,
    1643,  1038,   998,    53,  2188,    33,  1042,  2189,  1035,  2427,
    2208,  1742,  2271,  1369,  1043,  1643,    28,   460,  -640,  2272,
    2075,  2131,  1643,    32,  2352,   940,  1045,  1369,  1187,   817,
     855,  1649,  1667,  2408,  -647,  2434,  2409,    33,  1643,  2270,
    1051,  2148,   647,  1603,  2460,  2153,  1054,  1369,  1030,  1374,
    2463,    53,   562,  2464,  1344,   647,    30,   460,  1355,  1356,
     513,  2475,   570,  2186,   975,  2240,  1055,  2243,  1030,    31,
    2164,  2480,   992,  1056,  2481,  -475,  1690,   753,  2484,   755,
    -475,  2481,   812,  1041,  2245,   992,  1057,  2248,  1061,   460,
     460,  1033,  -637,    32,    33,   460,   620,  1030,  2496,  1355,
    1356,  2497,   576,   855,    53,  1472,  2482,   514,  1063,  2482,
    2533,   563,  -638,  2497,   467,  1473,  1032,  1038,   468,  2534,
    1030,  2542,  1369,   635,   975,  2548,   571,  2563,  2481,  1040,
    2564,  1156,  1158,   460,   460,   460,  1066,  1067,   460, -1044,
    1101,  2592,  1072,  1102,  2593,  -475,  2595,  1074,  1036,   975,
     460,   460,   460,   460,   563,  1075,   941,  1076,   460,  -641,
     941,  2626,   941,  2644,  2481,  1077,  2497,  -639,  1078,  1085,
    1086,   560,  1108,   460,   460,   469,  1035,  1096,   460, -1513,
    1136,  1138,   470,  1140,  1141,  1154,  1167,  1173,    53,  -475,
     942,   793,   460,   795,   942,   460,   942,   460,   572,  2259,
    1203,  1743,  1744,  1745,  1110,  1746,  1747,  1748,  1749,  1750,
    1751,  1205,  2302,  2432,  1211,  1229,  1230,   460,   458,  1231,
    1236,  1238,   563,   484,   471,  1062,   813,   484,   460,  1237,
    1242,  1855,   527,   484,   532,  1249,  1030,   532,  1250,  1038,
     552,    24,   460,   484,   484,  1254,  1264,  1269,  1276,  2311,
    2312,  1822,  1277,  1281,  1808,  1286,   460,  1285,  1293,  1090,
     602,   810,  1032,   457,  1296,  1822,    24,   811,   600,   601,
    1297,   460,   944,  2257,  1955,    28,   844,   457,    57,   604,
     815,  1299,  1303,  1311,  1341,  1047,  1374,   532,  1058,   460,
    1033,  2148,   472,  1064,   552,   484,   552,   552,   552,  1345,
      28,  1376,  1375, -1513,  1381,   665,   940,   940,   940,   845,
    1431,  1432,  1102,  1444,  1457,    30,  1036, -1513,  1475,  1478,
    1464,  1476, -1513,  1499,  1500,  1514,   576,   576,    31,   576,
     823,  1520,   573,  1528,  1527,  1535,   571,   473,  1554,   474,
      30,  1542,  1901,  1555,  1556,  1557,  1575,   460,  1038,   824,
    1579,  1580,    32,    31,  1581,  1038,   572, -1513,  1030,  1635,
     475,  1640,  1644,   476,  1648,  1652,    33,  1653,  1654,  1709,
    1033,  1672,   812,   817,   941,  1035,  1041,    32,  1668,  1673,
    1679,  1677,  1680,  1688,  1698,  1924,  1700,  1701,  1719,  1703,
     560,    33,  1704,   855,  1707,  1927,   940,  1705,   647,   825,
    1932,  1933,  1935,  2145,  1720,  1706,  1722,  1119,   942,  1723,
    1164,  2060,  1724,  1667,  1725,  1038,  1726,  1761,  1728,  1732,
    1949,  1729,  1040,  1754,  1760,  1762,  1763,   460,   992,  1764,
    1041,  1771,   810,  1956,  1774,  1957,  1781,   460,   811,  1962,
    1963,   460,  1776,  1797,   460,  1788,   648,  1798,  1800,  1802,
    1041,   460,   460,   460,   460,  1035,  1801,   460,   460,   460,
     460,   460,   460,   460,   460,   460,   460,  1030,  1826,  1835,
     460,   460,  1844,  1837,  1030,  2037,  1040,  1851,  1857,  1041,
     649,  -526,  1709,  -527,   460,  1862,  2061,   826,   563,  1866,
     460,  1033,  1863,   460,  1865,   460,  1040, -1513,  2411,  1867,
    1869,  1871,  1041,   460,  1257,   563,   460,   460,  1872,  2462,
    1875,   460,   460,  1878,  1891,  1036,   813,  1893,  2062,    53,
    1916,  1906,  1912,  1913,  1914,  1040,  1917,   460,  1038,   460,
    1918,  1920,  1936,  2063,  1030,   827,  1941,  1940,  1937,   828,
     460,  2514,  2064,   812,  1944,  2507,  1947,  1948,  1040,   460,
    1822,   829,  1822,  1951,  1958,  1032,  1964,  2046,  2047,  2048,
    1968,  1980,   457,  1038,   457,   460,  1573,  1757,  1736,  1756,
     815,  2065,  2025,  2013,  2014,  2015,  1035,  2026,  2038,  2467,
      53,  2029,   830,  1809,  2051,  2059,  2077,  2084,  1092,  1313,
    2079,  1314,  2090,  1038, -1513,  1036,  1038,  2467,  2073,   816,
    2081,  1126,  1127,  1128,  1129,  1130,  1131,  2086,  2097,  1032,
    2082,  2101,  2102,   940,  2105,  2117,  2119,   940,  1041,   940,
    1037,  2135,   810,  2167,  2562,  2173,  2174,   832,   811,  1032,
    2178,  2184,  1643,  2192,  2193,  2199,  2202,  1033,  2231,  2194,
    2516,  2236,  2196,  2237,  2203,  2244,  2226,  1030,  2150,   833,
    2216,  1465,  2227,  2145,  2234,  2250,  2066,  2249,  1032,  2251,
    2252,  2265,   941,   817,  2151,  2535,   941,  2273,  2277,   835,
    1924,  2300,  2301,  2315,  2316,  2305,  2317,  2170,   552,  2318,
    2182,  1032,  1030,  2324,   612,  2338,  2325,   813,  2339,  2341,
     552,  2345,   460,  2545,   484,  2326,   942,  2349,  1318,  2344,
     942,  2616,  2347,  2376,  2507,  2357,  2350,    53,  2363,  2381,
    2390,  2394,  1030,  2557,  2400,  1030,  1036,  2402,  2403,   629,
     484,   484,  1035,  2405,  2419,  2422,  2423,  2424,  2410,  2425,
    2433,  2436,  2437,   812,   460,   460,  2438,  1618,  2451,   460,
    1041,   815,  2452,  2461,   460,  2473,  2465,   460,   460,  2490,
    2474,  2477,   460,   532,  2498,   532,  2486,  2493,  2512,  2515,
    2517,   552,  2520,  2541,  2529,  2531,  2530,  2551,  2550,   484,
    1619,  2565,  2567,   460,  2642,  2561,  2552,   460,  1038,  2418,
    2568,   552,  2573,  2570,  2574,  2575,  1040,  2581,  1037,  2220,
    2221,  2222,  2223,   552,  2579,  2580,  1822,  1032,   460,  2590,
    1822,  2594,  2039,  2606,  2621,  2612,   664,  2628,   457,  1736,
    2627,  2635,   457, -1513, -1513, -1513,  2638,  1347,  1348,  2258,
    2260,   941,  2640,  2254,  2645,  2256,   552,   552,   552,  1578,
    2646,   940,  2636,  2647,   817,  2658,  2637,    53,  2660,  1586,
     460,  1589,  2664,   781,  1600,  2138,  2134,  1605,  1889,  1041,
    1604,  2094,  1606,  2261,  2556,   942,  1041,  2393,  2602,  2172,
    2308,  2608,  1036,  2655,  1613,  2511,  2641,  2634,  1220,  1616,
    2450,  1044,  1874,  1621,  1622,  1623,  1624,   813,  1628,  1629,
     664,  1896,  2177,  1736,  2604,  1925,  2639,  1737,  1738,  1739,
    2603,  1349,  1350,  2139,  1870,  1040,  1308,  1030,  1926,  2282,
    1952,  2346,  2313,   647,  2020,  2283,  2166,  2330,  1200,  1165,
    1853,  1571,  1146,   460,  1199,  2544,  1041,  2284,  2492,  1032,
    2598,  1864,  1551,  2080,   460,   460,  2549,  1625,   460,  2255,
    1033,   815,  1570,   992,  1834,  2054,  2225,  2242,  1204,  2540,
     460,  2479,  2050,  2539,  2546,  1699,  2285,  2547,  2286,  1386,
     460,  2596,  1351,  1352,  1388,   460,  1353,  1354,   460,  1090,
    1626,  1391,  1040,  1822,  2392,   460,   460,  2597,  2589,  1856,
    1504,  1714,   552,  1822,  1795,   457,  1513,   460,  1822,   460,
    1793,  1822,  1639,  1929,  1033,   457,  2532,  1037,   484,   484,
     457,  1321,  1697,   457,   552,   552,  1172,  1522,  1168,   460,
    1822,  2095,  1090,  2287,  1033,     0,  1524,     0,     0,  1196,
       0,     0,   457,     0,     0,  1035,     0,     0,     0,     0,
    1465,   552,  1223,     0,   817,     0,     0,     0,  1032,  1041,
    2288,     0,     0,  1033,   552,  1032,  1799,     0,     0,  2420,
       0,     0,     0,     0,  1385,     0,   524,     0,     0,     0,
       0,   552,  1816,     0,     0,   552,  1033,  2435,   460,  2150,
    1355,  1356,     0,   460,  1041,    53,  1816,  1037,     0,  1035,
     562,     0,     0,  1742,   563,  2151,     0,     0,  2330,     0,
       0,  1822,     0,  1741,     0,     0,   460,     0,  2456,  1035,
     460,  2289,     0,   457,  1041,  1032,  2290,  1041,   460,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   664,   460,
    1040,  1736,     0,  1822,     0,  1737,  1738,  1739,  1035,   940,
       0,     0,     0,   940,   460,   457,     0,     0,   664,     0,
       0,  1736,  2021,     0,     0,  1737,  1738,  1739,     0,  2291,
    1040,  1035,     0,  1040,     0,     0,     0,  1742,  1347,  1348,
    2503,     0,  2210,     0,  2292,  1036,     0,     0,  1280,     0,
       0,     0,     0,   552,     0,     0,     0,     0,  1357,  1358,
    2526,     0,  1033,  1306,     0,   460,     0,  2522,   460,   629,
    1347,  1348,   629,  2525,     0,     0,   484,   484,  1037,   484,
     629,     0,   552,     0,     0,     0,   664,   823,     0,  1736,
     460,  1822,     0,  1737,  1738,  1739,     0,     0,  1032,  1036,
       0,   460,     0,   457,     0,     0,   824,     0,    53,     0,
    2211,     0,  1349,  1350,     0,     0,  2553,     0,     0,  1036,
       0,   460,     0,     0,  1822,     0,     0,     0,     0,     0,
       0,     0,     0,  1032,     0,     0,   457,  2293,     0,     0,
     460,   460,     0,     0,  1349,  1350,     0,  1035,  1036,     0,
       0,     0,     0, -1513, -1513, -1513,   825,  1746,  1747,  1748,
    1749,  1750,  1751,  1032,     0,     0,  1032,     0,   940,  1041,
    1943,  1036,     0,  1351,  1352,     0,  1416,  1353,  1354,     0,
    1423,     0,     0,  1401,  1033,   460,     0,   460,     0,     0,
    1402,  1403,  1404,     0,     0,     0,     0,  2617,     0,  2150,
       0,  1741,     0,     0,     0,  1351,  1352,     0,  1822,  1353,
    1354,     0,   629,     0,     0,  2151,     0,     0,     0,     0,
     457,  1741,  2127,     0,  1037,     0,  1090,  1743,  1744,  1745,
       0,  1746,  1747,  1748,  1749,  1750,  1751,   823,     0,     0,
       0,  2049,   552,  2052,   826,     0,     0,     0,     0,   460,
       0,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,   552,     0,   552,  1742,     0,     0,     0,  1035,
     991,     0,     0,  1536,     0,  1541,     0,   991,     0,     0,
       0,  1355,  1356,     0,     0,  1742,  1553,  1036,     0,  1741,
       0,     0,   827,  1033,     0,     0,   828,     0,     0,     0,
    1033,     0,     0,     0,     0,     0,   825,   552,   829,     0,
       0,     0,     0,  1355,  1356,     0,  1223,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   484,  1587,   484,
    1591,     0,   484,     0,     0,     0,     0,     0,   484,   830,
     484,     0,     0,     0,     0,     0,     0,     0,  1032,     0,
       0,   629,   484,  1742,     0,     0,   629,   484,  1098,     0,
    1033,   484,   484,   484,   484,     0,   484,   484,     0,     0,
       0,  2103,     0,     0,     0,    53,     0,     0,  1035,     0,
     991,     0,   991,   991,   832,  1035,   552,  1650,     0,  1357,
    1358,     0,     0,     0,   826,  2136,     0,     0,     0,  1662,
       0,     0,     0,     0,     0,     0,   833,     0,     0,  1036,
    2154,  2155,  2156,  2157,  2158,  2159,  2160,  2161,  2162,  2163,
       0,  1357,  1358,     0,     0,     0,   835,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1359,   827,     0,     0,  1035,   828,     0,   991, -1419,
    1854,   991,   991,     0,     0,  1743,  1744,  1745,   829,  1746,
    1747,  1748,  1749,  1750,  1751,     0,     0,     0,     0,     0,
       0,     0,     0,  1033,     0,  1743,  1744,  1745,     0,  1746,
    1747,  1748,  1749,  1750,  1751,     0,     0,  1816,     0,   830,
       0,  1816,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1033,     0,
       0,     0,     0,     0,    53,    53,     0,  1037,  1036,     0,
     823,     0,     0,  1423,  1423,  1036,     0,     0,  1423,     0,
       0,     0,     0,     0,   832,     0,     0,     0,  1033,   824,
   -1419,  1033,     0,  1743,  1744,  1745,     0,  1746,  1747,  1748,
    1749,  1750,  1751,     0,     0,     0,   833,     0,  1035,     0,
       0,     0,     0,  1423,  1423,     0,     0,     0,     0,     0,
       0,  1037,     0,     0,     0,     0,   835,     0,  1416,     0,
       0,     0,     0,     0,     0,  1036,     0,     0,     0,   825,
    2125,  1037, -1419,  1035,     0,     0,     0,     0,  2126,     0,
       0,     0,    53,     0,  -440, -1419,     0,     0,  1329,   552,
   -1419,  1323,  1325,     0,     0, -1419,  1825,  -440,     0,     0,
    1037,     0,  -440,  1035, -1419,     0,  1035, -1419,  1101,     0,
    1825,  1102,     0,     0,  1843,     0,     0,  1846,     0,  1541,
    1405,  1406,  1407,  1037,  1408,  1409,  1410,  1411,  1412,  1413,
       0,     0,  1330,     0,     0,  2127, -1419,     0,     0,     0,
    1108,     0,     0,     0,  1816,     0,     0, -1513,  -440,  1816,
       0,     0,  1816,     0,     0, -1419,     0,   826,  1331,     0,
    1382,  1383,     0,     0,     0,  1280,     0,  -440,  1395,     0,
    1396,  1397,  1110,     0,     0,     0,  1332,     0,  1036,     0,
    1333,     0,     0,     0,     0,  1433,     0,  1434,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1419,
    1445,  1334, -1419,  1033,  1335,   827,     0,     0, -1419,   828,
       0,  -440,     0,  1036,     0,     0,     0,     0,  1336,     0,
    -440,   829,     0,  2128,     0,  1280,     0,     0,     0,     0,
     552,     0,    53,     0,  1280,   552,   552,   552,     0,  1037,
       0,  1779,     0,  1036,     0,     0,  1036,     0,   484,     0,
       0,     0,   830,    53,     0,   552,     0,     0,     0,   629,
       0,     0,     0, -1419,     0,     0,     0,     0,  2412,     0,
       0, -1513,     0,     0,     0,  1280,  1280,     0,     0,     0,
       0,     0,     0,     0,  1816, -1513,     0,     0,  1035,     0,
   -1513,     0,  1090,     0,     0,  1560,  1560,   832,     0,     0,
    2430,  2431,  1337,     0,     0,     0,     0,     0,     0,     0,
    1338,  1416,     0,  2439,     0,     0,  1809,     0,     0,   833,
       0,  1423,  1423,  1423,  1423, -1513,     0,  1423,  1423,  1423,
    1423,  1423,  1423,  1423,  1423,  1423,  1423,     0,     0,   835,
       0,  2129, -1419,     0,  2130,    53,     0,   991,     0,     0,
   -1419,     0,  1339,     0,  -440,     0,     0,   991,     0,     0,
     991,  1037,     0,     0,     0,     0, -1419,     0, -1419, -1419,
       0,     0,     0,     0,     0,  1119,  1423,  1423,  2494,     0,
       0,     0,     0,     0,  2041,     0,     0,     0,     0,     0,
       0,     0,   552,   552,   552,   458,     0,  1825,  2058,     0,
       0,    53,  2058,  2072,     0, -1419,     0,     0, -1419, -1419,
   -1419,     0,     0,     0,     0,     0,     0,   596,     0,     0,
     779,   597,     0,     0,     0,     0,   664,     0,  1036,  1736,
       0,  1541,   991,  1737,  1738,  1739,     0,     0,     0,     0,
   -1421,     0,     0,  1231,     0,   991,     0,   552,     0,   484,
       0,     0,     0,  1280,  1223,  1280,     0,  1306,     0,     0,
       0,     0,     0,  1702,     0, -1513,     0,     0,     0,     0,
    1037,     0,     0,   484,     0,  2137,     0,  1037,     0,     0,
       0,     0,    53,     0,     0,     0,     0,     0,   484,   484,
     484,   484,   484,   484,   484,   484,   484,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   552,     0,     0,     0, -1435,     0,     0,  1223,
       0,     0,     0,     0,     0,   735,   735,     0,     0,     0,
    1306, -1421,     0,   552,     0,     0,     0,  1037,     0,     0,
    1280,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1513,     0,     0,     0,     0,     0,     0,  1126,
    1127,  1128,  1129,  1130,  1131,     0,     0,     0,     0,     0,
       0,   852,   857, -1421,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1421,     0,     0,     0,
       0, -1421,     0,     0,     0,     0, -1421, -1435,     0,     0,
       0,     0,     0,     0,     0, -1421,     0,     0, -1421,     0,
       0,  2219,  1830,     0,   552,   552,   552,   552,     0,  1741,
       0,  2058,  2072,     0,  2058,     0,     0,  2229,     0,     0,
     852,  1825,     0,     0,     0,  1825,     0, -1421,     0,     0,
    1037,  2247,     0,  1860,  1860,     0,  1049,     0,     0, -1435,
       0,     0,     0,     0,     0,     0, -1421,     0,     0,     0,
    1843,     0, -1435,     0,     0,  1541,     0, -1435,     0,  1416,
       0,     0, -1435,     0,  1071,  1037,     0,  1223,     0,     0,
       0, -1435,     0,  1742, -1435,     0,     0,     0,     0,     0,
       0,     0,     0,  1087,  1088,  1089,     0,  1091,     0,     0,
   -1421,     0,  2309, -1421,     0,  1037,     0,     0,  1037, -1421,
       0,     0,     0, -1435,     0,     0,     0,  1139,     0,     0,
       0,   664,     0,     0,  1736,     0,     0,     0,  1737,  1738,
    1739,     0, -1435,     0,     0,     0,     0,     0,     0,  1280,
       0,     0,     0,     0,     0,  1662,     0,     0,     0,     0,
       0,  1101,     0,     0,  1102,     0,  2342,     0,  1103,  1104,
    1105,     0,     0,     0, -1421,     0,  1178,     0,     0,     0,
    1190,  1195,     0,  1423,     0,  1106, -1435,     0,     0, -1435,
       0,     0,     0,  1108,     0, -1435,     0,     0,     0,     0,
    1109,     0,     0,     0,  1965,  1967,     0,     0,   458,  2058,
       0,  1976,     0,  2369,     0,     0,   484,     0,  1825,     0,
       0,     0,     0,  1825,     0,  1110,  1825,  1809,  2380,     0,
    1134,  2383,     0,   852,   852,   852,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2399,     0,     0,     0,     0,
   -1435,     0,     0, -1421,     0,     0,     0,     0,     0,     0,
       0, -1421,     0,     0,     0,   629,   484,     0,  1134,  1423,
       0,     0,     0,     0,   552,     0,     0, -1421,     0, -1421,
   -1421,     0,     0,  1743,  1744,  1745,     0,  1746,  1747,  1748,
    1749,  1750,  1751,     0,     0,     0,     0,     0,   484,   484,
    1037,     0,     0,  1809,     0,     0,     0,     0,  1223,     0,
       0,   484,     0,     0,     0,     0, -1421,     0,     0, -1421,
   -1421, -1421,     0,   552,  1111,     0,  2399,     0,     0, -1435,
       0,     0,     0,  1423, -1513,     0,     0, -1435,  1112,     0,
       0,     0,     0,  1113,   852,   484,     0,  1134,     0,     0,
       0,     0,  1134, -1435,     0, -1435, -1435,     0,  1825,     0,
       0,     0,     0,  2383,  1114,  1115,     0,     0,     0,     0,
       0,     0,  2489,     0,     0,     0,   484,     0,  1116,     0,
       0,     0,     0,     0,     0,   552,     0,     0,     0,     0,
       0,     0, -1435,     0,     0, -1435, -1435, -1435,  1742,     0,
       0,     0,     0,     0,     0,     0,     0,   629,   991,     0,
       0,  1117,     0,     0,  1118,     0,     0,     0,   552,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1119,     0,
       0,  1120,     0,     0,     0,  1101,     0,  1379,  1102,     0,
       0,     0,  1103,  1104,  1105,     0,   458,     0,     0,     0,
       0,     0,     0,     0,     0,  2543,     0,     0,  1400,   484,
       0,  1417,     0,  2380,  1428,     0,     0,  1108,  2191,     0,
       0,  1435,  1440,     0,  1109,     0,     0,     0,     0,  2399,
     629,   629,   629,  1446,     0,     0,     0,     0,     0,  1450,
    1451,  1452,  1453,     0,     0,     0,     0,  1462,  1463,  1110,
       0,     0,  1474,     0,     0,     0,  1477,     0,     0,  1485,
    1486,  1487,  1488,  1489,  1490,  1491,  1492,  1493,  1121,     0,
    1494,     0,     0,  2380,     0,     0,     0,   735,     0,   852,
       0,     0,  2489,     0,  2369,     0,     0,     0,     0,     0,
       0,     0,     0,  1541,  1134,     0,     0,     0,     0,     0,
    1525,     0,     0,     0,     0,     0,     0,  1223,     0,     0,
       0,     0,     0,  2399,     0,     0,  1134,     0,     0,     0,
       0,  1424,     0,     0,     0,     0,     0,  1088,  1089,     0,
       0,   629,  1134,  1134,  1134,     0,  1134,     0,  1743,  1744,
    1745,     0,  1746,  1747,  1748,  1749,  1750,  1751,  1111,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1112,     0,     0,  1122,     0,  1113,  1123,  1124,
    1125,     0,  1126,  1127,  1128,  1129,  1130,  1131,   991,     0,
       0,     0,     0,   991,  1134,  1727,     0,   -38, -1513, -1513,
       0,     0,     0,     0,     0,     0,     0,  1323,  1325,     0,
       0,     0,  1116,     0,     0,     1,   852,     0,     0,  1636,
    1637,     0,  1638,     0,     0,     2,     0,     3,     4,     0,
       0,     0,     0,  1134,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     5,     0,  1134,     0,     0, -1513,  1671,
    1134,     0,     6,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1119,     0,     7,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     8,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     9,     0,    10,   852,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    11,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      12,     0,  1712,     0,     0,     0,     0,  1718,     0,     0,
      13,     0,     0,     0,     0,     0,    14,     0,     0,     0,
       0,     0,     0,     0,    15,     0,    16,    17,     0,     0,
       0,  1100,  1121,     0,     0,     0,  1101,     0,     0,  1102,
       0,     0,     0,  1103,  1104,  1105,     0,  1735,     0,     0,
    1323,  1325,     0,     0,     0,     0,     0,     0,     0,   991,
    1106,     0,  1440,  1107,  1440,  1440,    18,     0,  1108,     0,
    1773,     0,     0,     0,     0,  1109,     0,     0,     0,     0,
       0,     0,     0,     0,  1101,     0,     0,  1102,     0,     0,
       0,  1103,  1104,  1105,     0,     0,     0,     0,     0,     0,
    1110,     0,     0,     0,  1791,    19,     0,  1794,  1106,  1796,
       0,     0,     0,     0,  1134,     0,  1108,     0,     0,     0,
       0,     0,     0,  1109,     0,     0,     0,     0,     0,  1122,
       0,     0,  1123,  1124,  1125,  1134,  1126,  1127,  1128,  1129,
    1130,  1131,     0,     0,     0,     0,     0,     0,  1110,     0,
       0,     0,  1134,     0,  1424,  1424,     0,  1752,     0,  1424,
       0,     0,     0,  1134,     0,     0,     0,     0,  1178,     0,
    1134,     0,     0,     0,     0,  1134,     0,    20,     0,     0,
      21,  1134,     0,  1195,     0,  1134,  1134,  1134,  1134,     0,
       0,     0,     0,     0,  1424,  1424,     0,  1134,  1134,  1111,
       0,  1868,     0,     0,     0,     0,     0,     0,    22,  1134,
       0,     0,  1134,  1112,     0,     0,    23,     0,  1113,     0,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
      24,     0,     0,     0,     0,     0,     0,    25,     0,  1114,
    1115,    26,     0,     0,   486,     0,     0,  1111,     0,     0,
       0,    27,     0,  1116,     0,     0,     0,     0,     0,   852,
    1134,  1112,     0,     0,    28,     0,  1113,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,  1114,  1115,  1118,
       0,     0,     0,     0,     0,     0,     0,   487,     0,    29,
       0,  1116,     0,  1119,    30,     0,  1120,     0,     0,   991,
       0,     0,   488,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1117,     0,     0,  1118,     0,  1979,
       0,    32,     0,     0,     0,     0,     0,     0,     0,  1983,
       0,  1119,     0,  1984,  1120,    33,  1986,     0,   -38,     0,
       0,     0,     0,     0,     0,     0,   489,     0,     0,     0,
       0,  1134,  1134,  1134,     0,   490,     0,     0,     0,     0,
       0,     0,  2006,  2007,     0,     0,     0,   491,     0,     0,
       0,     0,   492,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,  2019,     0,     0,  2022,  1134,  2024,     0,     0,
       0,     0,     0,     0,     0,  2028,     0,   493,     0,     0,
       0,     0,     0,  2035,  2036,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,  1134,     0,     0,
       0,     0,  2076,  1134,     0,     0,     0,     0,     0,     0,
     494,  2083,     0,   495,     0,     0,     0,     0,  1752,  1752,
    1134,     0,  1424,  1424,  1424,  1424,     0,  2096,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1752,     0,
    1122,     0,     0,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,     0,     0,     0,     0,  1134,     0,
       0,     0,  1752,  1752,     0,     0,     0,     0,     0,     0,
       0,     0,   496,     0,     0,     0,  1134,  1424,  1424,  1134,
       0,  1134,     0,     0,     0,     0,   497,     0,  1122,     0,
       0,  1123,  1124,  1125,     0,  1126,  1127,  1128,  1129,  1130,
    1131,     0,     0,     0,     0,  1443,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   498,     0,     0,
     499,     0,     0,     0,     0,     0,     0,     0,   500,     0,
       0,   501,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1101,     0,
     502,  1102,     0,  1134,  2195,  1103,  1104,  1105,     0,     0,
       0,   503,     0,     0,     0,     0,  1101,     0,   504,  1102,
       0,     0,  1106,  1103,  1104,  1105,     0,   505,     0,     0,
    1108,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
    1106,     0,     0,     0,     0,     0,  2204,  2205,  1108,     0,
       0,  2206,     0,     0,     0,  1109,  2209,   506,     0,  2212,
    2213,     0,  1110,     0,  2217,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1110,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     735,     0,     0,     0,  1134,     0,     0,     0,  1134,  1134,
       0,  1134,     0,     0,  1752,  1752,  1752,  1752,     0,     0,
       0,  1752,  1752,  1752,  1752,  1752,  1752,  1752,  1752,  1752,
    1752,  1134,  1134,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2303,     0,  1134,     0,     0,  1134,     0,  1134,
       0,  1111,     0,  1134,     0,     0,  1752,  1752,     0,     0,
    1134,  1134,     0,     0,  1101,  1112,     0,  1102,     0,  1111,
    1113,  1103,  1104,  1105,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1112,     0,     0,     0,     0,  1113,     0,
       0,  1114,  1115,     0,     0,     0,  1108,     0,     0,     0,
       0,  1134,     0,  1109,     0,  1116,     0,     0,  1134,  1114,
    1115,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1134,     0,  1116,     0,     0,  2353,  2354,  1110,     0,
    2355,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1119,  1117,     0,  1120,  1118,
       0,     0,     0,     0,     0,     0,     0,  2388,  2389,     0,
       0,     0,     0,  1119,     0,     0,  1120,     0,     0,     0,
       0,  2401,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1134,     0,     0,     0,  1424,     0,     0,  1111,     0,  1134,
    1134,  1134,     0,     0,  1134,     0,     0,  1134,  1134,     0,
       0,  1112,  1134,     0,     0,  1121,  1113,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,  1114,  1115,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,     0,     0,  2476,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1091,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1424,  2495,     0,     0,  1117,     0,     0,  1118,     0,     0,
       0,     0,     0,     0,     0,     0,  2509,     0,  1134,     0,
       0,  1119,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1122,     0,     0,  1123,  1124,  1125,     0,  1126,
    1127,  1128,  1129,  1130,  1131,     0,     0,     0,     0,  1775,
    1122,     0,     0,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,  1752,  1424,     0,     0,  1982,  1134,  1134,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2388,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1134,  1134,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,  1134,     0,     0,     0,
       0,     0,     0,  2572,     0,     0,     0,     0,  1752,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2586,  2586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1752,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2586,
       0,  1134,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1122,     0,
    1134,  1123,  1124,  1125,     0,  1126,  1127,  1128,  1129,  1130,
    1131,     0,     0,     0,  1134,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,   661,
     524,   662,   663,   664,   665,   666,     0,     0,     0,     0,
       0,  2586,     0,    89,    90,    91,    92,    93,    94,    95,
      96,   847,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   667,   111,   668,   669,  1134,   114,   115,
     116,   117,   118,   119,   670,   671,   120,   121,   672,   673,
     124,  1134,   125,   126,   127,   128,   674,     0,   675,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   676,   677,   678,   679,   680,   681,   682,   151,   152,
     153,   154,   155,   156,   157,   683,   684,   160,   685,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,   848,     0,   173,   174,   686,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   687,   189,   190,   191,   192,   688,   689,
     194,     0,   195,   196,   690,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     691,   692,     0,   693,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   694,   695,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   696,   275,   697,   277,
     278,   279,   280,   698,   281,   282,   283,   284,   699,   700,
     286,   701,   288,   289,   290,     0,   291,   292,     0,     0,
     702,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     703,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   704,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   705,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   706,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   707,   370,   371,   372,   373,   374,
     375,   376,   377,   708,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   709,     0,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   710,   711,     0,     0,   404,   405,   712,   407,   713,
     714,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,   715,     0,   421,   422,   423,
     424,   425,   426,   716,   849,   428,   429,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   717,     0,     0,
       0,     0,     0,     0,   718,   719,   850,     0,     0,     0,
       0,     0,     0,   721,   851,     0,     0,     0,   722,    88,
     661,   524,   662,   663,   664,   665,   666,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   667,   111,   668,   669,     0,   114,
     115,   116,   117,   118,   119,   670,   671,   120,   121,   672,
     673,   124,     0,   125,   126,   127,   128,   674,     0,   675,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   676,   677,   678,   679,   680,   681,   682,   151,
     152,   153,   154,   155,   156,   157,   683,   684,   160,   685,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   686,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   687,   189,   190,   191,   192,   688,
     689,   194,     0,   195,   196,   690,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   691,   692,     0,   693,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   694,   695,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   696,   275,   697,
     277,   278,   279,   280,   698,   281,   282,   283,   284,   699,
     700,   286,   701,   288,   289,   290,     0,   291,   292,     0,
       0,   702,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   703,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   704,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   705,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   706,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    24,
     365,   366,   367,   368,   369,   707,   370,   371,   372,   373,
     374,   375,   376,   377,   708,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   709,
       0,   393,   394,    28,   395,   396,   397,   398,   399,   400,
     401,     0,   710,   711,     0,     0,   404,   405,   712,   407,
     713,   714,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   715,     0,   421,   422,
     423,   424,   425,   641,   716,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,     0,    31,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   717,     0,
      32,     0,     0,     0,     0,   718,   719,     0,     0,     0,
       0,     0,     0,     0,   721,  2485,     0,     0,     0,   722,
      88,   661,   524,   662,   663,   664,   665,   666,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   667,   111,   668,   669,     0,
     114,   115,   116,   117,   118,   119,   670,   671,   120,   121,
     672,   673,   124,     0,   125,   126,   127,   128,   674,     0,
     675,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   676,   677,   678,   679,   680,   681,   682,
     151,   152,   153,   154,   155,   156,   157,   683,   684,   160,
     685,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   686,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   687,   189,   190,   191,   192,
     688,   689,   194,     0,   195,   196,   690,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   691,   692,     0,   693,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   694,   695,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   696,   275,
     697,   277,   278,   279,   280,   698,   281,   282,   283,   284,
     699,   700,   286,   701,   288,   289,   290,     0,   291,   292,
       0,     0,   702,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   703,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   704,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   705,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   706,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
      24,   365,   366,   367,   368,   369,   707,   370,   371,   372,
     373,   374,   375,   376,   377,   708,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     709,     0,   393,   394,    28,   395,   396,   397,   398,   399,
     400,   401,     0,   710,   711,     0,     0,   404,   405,   712,
     407,   713,   714,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,   715,     0,   421,
     422,   423,   424,   425,   641,   716,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,     0,    31,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   717,
       0,    32,     0,     0,     0,     0,   718,   719,     0,     0,
       0,     0,     0,     0,     0,   721,     0,     0,     0,     0,
     722,    88,   661,   524,   662,   663,   664,   665,   666,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   667,   111,   668,   669,
    1436,   114,   115,   116,   117,   118,   119,   670,   671,   120,
     121,   672,   673,   124,     0,   125,   126,   127,   128,   674,
       0,   675,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   676,   677,   678,   679,   680,   681,
     682,   151,   152,   153,   154,   155,   156,   157,   683,   684,
     160,   685,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     686,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   687,   189,   190,   191,
     192,   688,   689,   194,     0,   195,   196,   690,   198,     0,
     199,     0,   200,   201,  1437,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   691,   692,     0,   693,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,  1438,
     248,   249,   250,   251,     0,   252,   253,   254,   694,   695,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   696,
     275,   697,   277,   278,   279,   280,   698,   281,   282,   283,
     284,   699,   700,   286,   701,   288,   289,   290,     0,   291,
     292,     0,     0,   702,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   703,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   704,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   705,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   706,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   707,   370,   371,
     372,   373,   374,   375,   376,   377,   708,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   709,     0,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   710,   711,     0,  1439,   404,   405,
     712,   407,   713,   714,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   715,     0,
     421,   422,   423,   424,   425,   426,   716,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     717,     0,     0,     0,     0,     0,     0,   718,   719,     0,
       0,     0,     0,     0,     0,     0,   721,     0,     0,     0,
       0,   722,    88,   661,   524,   662,   663,   664,   665,   666,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   667,   111,   668,
     669,     0,   114,   115,   116,   117,   118,   119,   670,   671,
     120,   121,   672,   673,   124,     0,   125,   126,   127,   128,
     674,     0,   675,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   676,   677,   678,   679,   680,
     681,   682,   151,   152,   153,   154,   155,   156,   157,   683,
     684,   160,   685,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   686,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   687,   189,   190,
     191,   192,   688,   689,   194,     0,   195,   196,   690,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   691,   692,     0,   693,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   694,
     695,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     696,   275,   697,   277,   278,   279,   280,   698,   281,   282,
     283,   284,   699,   700,   286,   701,   288,   289,   290,     0,
     291,   292,     0,     0,   702,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   703,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   704,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   705,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     706,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   707,   370,
     371,   372,   373,   374,   375,   376,   377,   708,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   709,     0,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   710,   711,     0,     0,   404,
     405,   712,   407,   713,   714,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,   715,
       0,   421,   422,   423,   424,   425,   426,   716,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   717,     0,     0,     0,     0,     0,     0,   718,   719,
     720,     0,     0,     0,     0,     0,     0,   721,     0,     0,
       0,     0,   722,    88,   661,   524,   662,   663,   664,   665,
     666,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,  1188,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   667,   111,
     668,   669,     0,   114,   115,   116,   117,   118,   119,   670,
     671,   120,   121,   672,   673,   124,     0,   125,   126,   127,
     128,   674,     0,   675,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   676,   677,   678,   679,
     680,   681,   682,   151,   152,   153,   154,   155,   156,   157,
     683,   684,   160,   685,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   686,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   687,   189,
     190,   191,   192,   688,   689,   194,     0,   195,   196,   690,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   691,   692,     0,   693,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     694,   695,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   696,   275,   697,   277,   278,   279,   280,   698,   281,
     282,   283,   284,   699,   700,   286,   701,   288,   289,   290,
       0,   291,   292,     0,     0,   702,   294,   295,     0,     0,
     296,   297,   298,   299,   300,   703,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   704,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   705,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   706,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   707,
     370,   371,   372,   373,   374,   375,   376,   377,   708,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   709,     0,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   710,   711,     0,     0,
     404,   405,   712,   407,   713,   714,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     715,     0,   421,   422,   423,   424,   425,   426,   716,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   717,     0,     0,     0,     0,     0,     0,   718,
     719,     0,     0,     0,     0,     0,     0,     0,   721,     0,
       0,     0,     0,   722,    88,   661,   524,   662,   663,   664,
     665,   666,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   667,
     111,   668,   669,     0,   114,   115,   116,   117,   118,   119,
     670,   671,   120,   121,   672,   673,   124,     0,   125,   126,
     127,   128,   674,     0,   675,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   676,   677,   678,
     679,   680,   681,   682,   151,   152,   153,   154,   155,   156,
     157,   683,   684,   160,   685,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   686,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   687,
     189,   190,   191,   192,   688,   689,   194,     0,   195,   196,
     690,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   691,   692,     0,   693,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   694,   695,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   696,   275,   697,   277,   278,   279,   280,   698,
     281,   282,   283,   284,   699,   700,   286,   701,   288,   289,
     290,     0,   291,   292,     0,     0,   702,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   703,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     704,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   705,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   706,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     707,   370,   371,   372,   373,   374,   375,   376,   377,   708,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   709,     0,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   710,   711,     0,
       0,   404,   405,   712,   407,   713,   714,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,   715,     0,   421,   422,   423,   424,   425,   426,   716,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   717,     0,     0,     0,     0,     0,     0,
     718,   719,     0,     0,     0,     0,     0,     0,     0,   721,
    1301,     0,     0,     0,   722,    88,   661,   524,   662,   663,
     664,   665,   666,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     667,   111,   668,   669,     0,   114,   115,   116,   117,   118,
     119,   670,   671,   120,   121,   672,   673,   124,     0,   125,
     126,   127,   128,   674,     0,   675,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   676,   677,
     678,   679,   680,   681,   682,   151,   152,   153,   154,   155,
     156,   157,   683,   684,   160,   685,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   686,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     687,   189,   190,   191,   192,   688,   689,   194,     0,   195,
     196,   690,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   691,   692,     0,
     693,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   694,   695,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   696,   275,   697,   277,   278,   279,   280,
     698,   281,   282,   283,   284,   699,   700,   286,   701,   288,
     289,   290,     0,   291,   292,     0,     0,   702,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   703,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   704,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   705,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   706,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   707,   370,   371,   372,   373,   374,   375,   376,   377,
     708,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   709,     0,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   710,   711,
       0,     0,   404,   405,   712,   407,   713,   714,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   715,     0,   421,   422,   423,   424,   425,   426,
     716,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   717,     0,     0,     0,     0,     0,
       0,   718,   719,     0,     0,     0,     0,     0,     0,     0,
     721,  1426,     0,     0,     0,   722,    88,   661,   524,   662,
     663,   664,   665,   666,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   667,   111,   668,   669,     0,   114,   115,   116,   117,
     118,   119,   670,   671,   120,   121,   672,   673,   124,     0,
     125,   126,   127,   128,   674,     0,   675,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   676,
     677,   678,   679,   680,   681,   682,   151,   152,   153,   154,
     155,   156,   157,   683,   684,   160,   685,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   686,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   687,   189,   190,   191,   192,   688,   689,   194,     0,
     195,   196,   690,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   691,   692,
       0,   693,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   694,   695,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   696,   275,   697,   277,   278,   279,
     280,   698,   281,   282,   283,   284,   699,   700,   286,   701,
     288,   289,   290,     0,   291,   292,     0,     0,   702,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   703,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   704,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   705,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   706,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   707,   370,   371,   372,   373,   374,   375,   376,
     377,   708,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   709,     0,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   710,
     711,     0,     0,   404,   405,   712,   407,   713,   714,   409,
     410,   411,   412,   413,   414,   415,     0,     0,   416,   417,
     418,   419,   420,   715,     0,   421,   422,   423,   424,   425,
     426,   716,  1633,   428,   429,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   717,     0,     0,     0,     0,
       0,     0,   718,   719,     0,     0,     0,     0,     0,     0,
       0,   721,     0,     0,     0,     0,   722,    88,   661,   524,
     662,   663,   664,   665,   666,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   667,   111,   668,   669,     0,   114,   115,   116,
     117,   118,   119,   670,   671,   120,   121,   672,   673,   124,
       0,   125,   126,   127,   128,   674,     0,   675,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     676,   677,   678,   679,   680,   681,   682,   151,   152,   153,
     154,   155,   156,   157,   683,   684,   160,   685,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   686,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   687,   189,   190,   191,   192,   688,   689,   194,
       0,   195,   196,   690,   198,     0,   199,     0,   200,   201,
    1437,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   691,
     692,     0,   693,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   694,   695,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   696,   275,   697,   277,   278,
     279,   280,   698,   281,   282,   283,   284,   699,   700,   286,
     701,   288,   289,   290,     0,   291,   292,     0,     0,   702,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   703,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   704,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     705,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   706,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   707,   370,   371,   372,   373,   374,   375,
     376,   377,   708,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   709,     0,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     710,   711,     0,     0,   404,   405,   712,   407,   713,   714,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   715,     0,   421,   422,   423,   424,
     425,   426,   716,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   717,     0,     0,     0,
       0,     0,     0,   718,   719,     0,     0,     0,     0,     0,
       0,     0,   721,     0,     0,     0,     0,   722,    88,   661,
     524,   662,   663,   664,   665,   666,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   667,   111,   668,   669,     0,   114,   115,
     116,   117,   118,   119,   670,   671,   120,   121,   672,   673,
     124,     0,   125,   126,   127,   128,   674,     0,   675,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   676,   677,   678,   679,   680,   681,   682,   151,   152,
     153,   154,   155,   156,   157,   683,   684,   160,   685,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   686,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   687,   189,   190,   191,   192,   688,   689,
     194,     0,   195,   196,   690,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     691,   692,     0,   693,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   694,   695,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   696,   275,   697,   277,
     278,   279,   280,   698,   281,   282,   283,   284,   699,   700,
     286,   701,   288,   289,   290,     0,   291,   292,     0,     0,
     702,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     703,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   704,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   705,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   706,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   707,   370,   371,   372,   373,   374,
     375,   376,   377,   708,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   709,     0,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   710,   711,     0,     0,   404,   405,   712,   407,   713,
     714,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,   715,     0,   421,   422,   423,
     424,   425,   426,   716,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   717,     0,     0,
       0,     0,     0,     0,   718,   719,     0,     0,     0,     0,
       0,     0,     0,   721,     0,     0,     0,     0,   722,    88,
     661,   524,   662,   663,   664,   665,   666,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   667,   111,   668,   669,     0,   114,
     115,   116,   117,   118,   119,   670,   671,   120,   121,   672,
     673,   124,     0,   125,   126,   127,   128,   674,     0,   675,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   676,   677,   678,   679,   680,   681,   682,   151,
     152,   153,   154,   155,   156,   157,   683,   684,   160,   685,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   686,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   687,   189,   190,   191,   192,   688,
     689,   194,     0,   195,   196,   690,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   691,   692,     0,   693,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   694,   695,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   696,   275,   697,
     277,   278,   279,   280,   698,   281,   282,   283,   284,   699,
     700,   286,   701,   288,   289,   290,     0,   291,   292,     0,
       0,   702,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   703,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   704,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   705,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   706,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   707,   370,   371,   372,   373,
     374,   375,   376,   377,   708,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   709,
       0,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   710,   711,     0,     0,   404,   405,   712,   407,
     713,   714,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   715,     0,   421,   422,
     423,   424,   425,   426,   716,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   717,     0,
       0,     0,     0,     0,     0,  1191,  1192,     0,     0,     0,
       0,     0,     0,     0,   721,     0,     0,     0,     0,   722,
      88,  1558,   524,   662,   663,   664,   665,   666,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   667,   111,   668,   669,     0,
     114,   115,   116,   117,   118,   119,   670,   671,   120,   121,
     672,   673,   124,     0,   125,   126,   127,   128,   674,     0,
     675,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   676,   677,   678,   679,   680,   681,   682,
     151,   152,   153,   154,   155,   156,   157,   683,   684,   160,
     685,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   686,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   687,   189,   190,   191,   192,
     688,   689,   194,     0,   195,   196,   690,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   691,   692,     0,   693,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   694,   695,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   696,   275,
     697,   277,   278,   279,   280,   698,   281,   282,   283,   284,
     699,   700,   286,   701,   288,   289,   290,     0,   291,   292,
       0,     0,   702,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   703,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   704,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   705,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   706,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   707,   370,   371,   372,
     373,   374,   375,   376,   377,   708,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     709,     0,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   710,   711,     0,     0,   404,   405,   712,
     407,   713,   714,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,   715,     0,   421,
     422,   423,   424,   425,   426,   716,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   717,
       0,     0,     0,     0,     0,     0,   718,   719,     0,     0,
       0,     0,     0,     0,     0,   721,     0,     0,     0,     0,
     722,    88,   661,   524,   662,   663,   664,   665,   666,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   667,   111,   668,   669,
       0,   114,   115,   116,   117,   118,   119,   670,   671,   120,
     121,   672,   673,   124,     0,   125,   126,   127,   128,   674,
       0,   675,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   676,   677,   678,   679,   680,   681,
     682,   151,   152,   153,   154,   155,   156,   157,   683,   684,
     160,   685,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     686,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   687,   189,   190,   191,
     192,   688,   689,   194,     0,   195,   196,   690,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   691,   692,     0,   693,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   694,   695,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   696,
     275,   697,   277,   278,   279,   280,   698,   281,   282,   283,
     284,   699,   700,   286,   701,   288,   289,   290,     0,   291,
     292,     0,     0,   702,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   703,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   704,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   705,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   706,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   707,   370,   371,
     372,   373,   374,   375,   376,   377,   708,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   709,     0,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   710,   711,     0,     0,   404,   405,
     712,   407,   713,   714,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   715,     0,
     421,   422,   423,   424,   425,   426,   716,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     717,     0,     0,     0,     0,     0,     0,   718,   719,     0,
       0,     0,     0,     0,     0,     0,  2384,     0,     0,     0,
       0,   722,    88,   661,   524,   662,   663,   664,   665,   666,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,  2583,   667,   111,   668,
     669,     0,   114,   115,   116,   117,   118,   119,   670,   671,
     120,   121,   672,   673,   124,     0,   125,   126,   127,   128,
     674,     0,   675,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,  2584,   676,   677,   678,   679,   680,
     681,   682,   151,   152,   153,   154,   155,   156,   157,   683,
     684,   160,   685,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   686,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   687,   189,   190,
     191,   192,   688,   689,   194,     0,   195,   196,   690,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   691,   692,     0,   693,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   694,
     695,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     696,   275,   697,   277,   278,   279,   280,   698,   281,   282,
     283,   284,   699,   700,   286,   701,   288,   289,   290,     0,
     291,   292,     0,     0,   702,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   703,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   704,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   705,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     706,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   707,   370,
     371,   372,   373,   374,   375,   376,   377,   708,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   709,     0,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   710,   711,     0,     0,   404,
     405,   712,   407,   713,   714,   409,   410,   411,   412,  2585,
     414,   415,     0,     0,   416,   417,   418,   419,   420,   715,
       0,   421,   422,   423,   424,   425,   426,   716,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   717,     0,     0,     0,     0,     0,     0,   718,   719,
       0,     0,     0,     0,     0,     0,     0,   721,     0,     0,
       0,     0,   722,    88,   661,   524,   662,   663,   664,   665,
     666,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   667,   111,
     668,   669,     0,   114,   115,   116,   117,   118,   119,   670,
     671,   120,   121,   672,   673,   124,     0,   125,   126,   127,
     128,   674,     0,   675,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,  2584,   676,   677,   678,   679,
     680,   681,   682,   151,   152,   153,   154,   155,   156,   157,
     683,   684,   160,   685,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   686,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   687,   189,
     190,   191,   192,   688,   689,   194,     0,   195,   196,   690,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   691,   692,     0,   693,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     694,   695,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   696,   275,   697,   277,   278,   279,   280,   698,   281,
     282,   283,   284,   699,   700,   286,   701,   288,   289,   290,
       0,   291,   292,     0,     0,   702,   294,   295,     0,     0,
     296,   297,   298,   299,   300,   703,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   704,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   705,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   706,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   707,
     370,   371,   372,   373,   374,   375,   376,   377,   708,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   709,     0,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   710,   711,     0,     0,
     404,   405,   712,   407,   713,   714,   409,   410,   411,   412,
    2585,   414,   415,     0,     0,   416,   417,   418,   419,   420,
     715,     0,   421,   422,   423,   424,   425,   426,   716,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   717,     0,     0,     0,     0,     0,     0,   718,
     719,     0,     0,     0,     0,     0,     0,     0,   721,     0,
       0,     0,     0,   722,    88,   661,   524,   662,   663,   664,
     665,   666,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   667,
     111,   668,   669,     0,   114,   115,   116,   117,   118,   119,
     670,   671,   120,   121,   672,   673,   124,     0,   125,   126,
     127,   128,   674,     0,   675,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   676,   677,   678,
     679,   680,   681,   682,   151,   152,   153,   154,   155,   156,
     157,   683,   684,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   686,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   687,
     189,   190,   191,   192,   688,   689,   194,     0,   195,   196,
     690,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   691,   692,     0,   693,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   694,   695,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   696,   275,   697,   277,   278,   279,   280,     0,
     281,   282,   283,   284,   699,   700,   286,   701,   288,   289,
     290,     0,   291,   292,     0,     0,   702,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   703,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     704,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   705,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     707,   370,   371,   372,   373,   374,   375,   376,   377,   708,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   709,     0,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   710,   711,     0,
       0,   404,   405,   712,   407,   713,   714,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,   715,     0,   421,   422,   423,   424,   425,   426,   716,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,     0,     0,     0,     0,     0,     0,     0,
    1419,  1420,     0,     0,    88,   661,   524,   662,   663,  1421,
     665,   666,     0,     0,   722,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   667,
     111,   668,   669,     0,   114,   115,   116,   117,   118,   119,
     670,   671,   120,   121,   672,   673,   124,     0,   125,   126,
     127,   128,   674,     0,   675,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   676,   677,   678,
     679,   680,   681,   682,   151,   152,   153,   154,   155,   156,
     157,   683,   684,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   686,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   687,
     189,   190,   191,   192,   688,   689,   194,     0,   195,   196,
     690,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   691,   692,     0,   693,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   694,   695,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   696,   275,   697,   277,   278,   279,   280,     0,
     281,   282,   283,   284,   699,   700,   286,   701,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   703,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     704,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   705,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,  1547,  1548,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     707,   370,   371,   372,   373,   374,   375,   376,   377,   708,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   709,     0,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   710,   711,     0,
       0,   404,   405,   712,   407,   713,   714,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,   715,     0,   421,   422,   423,   424,   425,   426,   716,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,     0,     0,     0,     0,     0,     0,     0,
    1549,  1550,     0,     0,     0,     0,     0,     0,     0,  1421,
       0,     0,     0,     0,   722,    88,   661,   524,   662,   663,
     664,   665,   666,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     667,   111,   668,   669,     0,   114,   115,   116,   117,   118,
     119,   670,   671,   120,   121,   672,   673,   124,     0,   125,
     126,   127,   128,   674,     0,   675,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   676,   677,
     678,   679,   680,   681,   682,   151,   152,   153,   154,   155,
     156,   157,   683,   684,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   686,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     687,   189,   190,   191,   192,   688,   689,   194,     0,   195,
     196,   690,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   691,   692,     0,
     693,     0,   238,     0,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   694,   695,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   696,   275,   697,   277,   278,   279,   280,
       0,   281,   282,   283,   284,   699,   700,   286,   701,   288,
     289,   290,     0,   291,   292,     0,     0,   702,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   703,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   704,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   705,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   707,   370,   371,   372,   373,   374,   375,   376,   377,
     708,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   709,     0,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   710,   711,
       0,     0,   404,   405,   712,   407,   713,   714,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,   715,     0,   421,   422,   423,   424,   425,   426,
     716,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,     0,     0,     0,     0,     0,     0,
       0,  1419,  1420,     0,     0,     0,     0,     0,     0,     0,
    1421,     0,     0,     0,     0,   722,    88,   661,   524,   662,
     663,   664,   665,   666,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
   -1513,   667,   111,   668,   669,     0,   114,   115,   116,   117,
     118,   119,   670,   671,   120,   121,   672,   673,   124,     0,
     125,   126,   127,   128,   674,     0,   675,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,  2584,   676,
     677,   678,   679,   680,   681,   682,   151,   152,   153,   154,
     155,   156,   157,   683,   684,   160,   685,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   686,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   687,   189,   190,   191,   192,   688,   689,   194,     0,
     195,   196,   690,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205, -1513,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216, -1513,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   691,   692,
       0,   693,     0,   238,     0,     0,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250, -1513,     0,
     252,   253,   254,   694,   695,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   696,   275,   697,   277,   278,   279,
     280,     0,   281,   282,     0,   284,   699,   700,   286,   701,
     288,   289,   290,     0,   291,   292,     0,     0,   702,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   703,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   704,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   705,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   706,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   707,   370,   371,   372,   373,   374, -1513,   376,
     377,   708,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   709,     0,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   710,
     711,     0,     0,   404,   405,   712,   407,   713,   714,   409,
     410,   411,   412,  2585,   414,   415,     0,     0,   416,   417,
     418,   419,   420,   715,     0,   421,   422,   423,   424,   425,
     426,   716,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455, -1513,     0,     0,     0,     0,
       0,     0,   718,   719,     0,     0,     0,     0,     0,     0,
       0,   721,     0,     0,     0,     0,   722,    88,   661,   524,
     662,   663,   664,   665,   666,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,     0,   667,   111,   668,   669,     0,   114,   115,   116,
     117,   118,   119,   670,   671,   120,   121,   672,   673,   124,
       0,   125,   126,   127,   128,   674,     0,   675,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     676,   677,   678,   679,   680,   681,   682,   151,   152,   153,
     154,   155,   156,   157,   683,   684,   160,   685,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   686,   176,   177,     0,
     178,   179,   180,     0,   181,     0,   183,     0,   184,   185,
     186,   187,   687,   189,   190,   191,   192,   688,   689,   194,
       0,   195,   196,   690,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   691,
     692,     0,   693,     0,   238,     0,     0,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,     0,
       0,   252,   253,   254,   694,   695,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   696,   275,   697,   277,   278,
     279,   280,     0,   281,   282,     0,   284,   699,   700,   286,
     701,   288,   289,   290,     0,   291,   292,     0,     0,   702,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   703,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   704,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     705,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   706,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   707,   370,   371,   372,   373,   374,     0,
     376,   377,   708,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   709,     0,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     710,   711,     0,     0,   404,   405,   712,   407,   713,   714,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   715,     0,   421,   422,   423,   424,
     425,   426,   716,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,     0,     0,
       0,     0,     0,   718,   719,   480,     0,     0,     0,     0,
       0,     0,   721,     0,     0,     0,     0,   722,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,  2055,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,  -579,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,  -579,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,  -579,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,  -579,   243,   244,   245,
     246,   247,     0,     0,   248,  -579,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,  -579,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,  -579,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
     395,  -579,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,     0,     0,     0,    88,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   779,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,   671,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   674,     0,   675,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     676,   677,   678,   679,   680,   681,   682,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   688,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,  1813,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   694,   695,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   281,   282,   283,   284,     0,   700,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   549,   293,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   703,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   704,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,  1814,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    24,   365,   366,
     367,   368,   369,   707,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   709,     0,   393,
     394,    28,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   712,   407,   713,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,   715,     0,   421,   422,   423,   424,
     425,   641,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,     0,    31,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,    32,    88,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1815,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,   671,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   674,     0,   675,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   676,   677,   678,   679,   680,   681,   682,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   688,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,  1813,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   694,   695,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   281,   282,   283,   284,     0,
     700,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     549,   293,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   703,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   704,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,  1814,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   707,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   709,
       0,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   712,   407,
     713,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   715,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,     0,     0,
      88,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1815,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,   671,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   674,     0,
     675,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   676,   677,   678,   679,   680,   681,   682,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     688,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   694,   695,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   281,   282,   283,   284,
       0,   700,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   703,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   704,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,   353,  1814,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   707,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     709,     0,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,   404,   405,   712,
     407,   713,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,   715,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,     0,
       0,    88,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,   671,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   674,
       0,   675,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   676,   677,   678,   679,   680,   681,
     682,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   688,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   694,   695,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   281,   282,   283,
     284,     0,   700,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   703,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   704,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   707,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   709,     0,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,   404,   405,
     712,   407,   713,     0,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,   715,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
       0,     0,   640,   983,   524,     0,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,  2395,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,   130,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,     0,     0,     0,   150,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   984,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   281,   282,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,   985,     0,   293,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,   404,
     405,   406,   407,   408,   986,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,     0,     0,   640,     0,     0,     0,     0,   987,   988,
    1683,     0,     0,     0,     0,     0,     0,  1684,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       3,     4,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,   130,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,     0,     0,     0,   150,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   281,
     282,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,    24,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,    28,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
     404,   405,   406,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   641,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,     0,
      31,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,     0,     0,    32,   480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    24,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,    28,
     395,     0,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   641,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,    31,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,     0,     0,    32,   480,     0,  2228,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,     0,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,   480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2246,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,     0,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,   404,   405,   406,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,     0,     0,   480,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   760,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,   395,     0,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   406,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,     0,     0,
     480,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1537,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,     0,   393,   394,     0,   395,     0,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,   404,   405,   406,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,     0,
       0,     0,     0,     0,  1006,   983,   524,     0,     0,  1401,
     665,     0,     0,     0,     0,  2039,  1402,  1403,  1404,    89,
      90,    91,    92,    93,    94,    95,    96,   860,    97,    98,
      99,   861,   862,   863,   864,   865,   866,   867,   100,   101,
     868,   102,   103,   104,   105,   106,   107,   108,     0,  1007,
     111,  1008,  1009,   869,   114,   115,   116,   117,   118,   119,
     870,   871,   120,   121,  1010,  1011,   124,   872,   125,   126,
     127,   128,     0,   873,   130,   874,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   875,   140,   141,   142,   143,
     144,   145,   876,   146,   147,   148,   149,   877,   878,   879,
     150,   880,   881,   882,   151,   152,   153,   154,   155,   156,
     157,  1012,  1013,   160,   883,   161,   884,   162,   163,   164,
     165,   166,   167,   885,   168,   169,   170,   171,   172,   886,
     887,   173,   174,   686,   176,   177,   888,   178,   179,   180,
     889,   181,   182,   183,   890,   184,   185,   186,   187,     0,
     189,   190,   191,   192,     0,   891,   194,   892,   195,   196,
    1014,   198,   893,   199,   894,   200,   201,   895,   202,   203,
     204,   205,   206,   207,   896,   208,   897,     0,   210,   898,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   899,   222,   223,   224,   225,   226,   227,   900,   228,
     229,     0,   231,   232,   233,   234,  1015,  1016,   901,  1017,
     902,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   903,   904,   248,   249,   250,   251,   905,   252,   253,
     254,   906,   907,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,  1018,   275,  1019,   277,   278,   279,  2140,   908,
     281,   282,   283,   284,   909,     0,   286,  1020,   288,   289,
     290,   910,   291,   292,   911,   912,  2141,   294,   295,   913,
     914,   296,     0,   298,   299,   300,     0,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   915,   312,   313,
       0,   315,   316,     0,   318,   319,   320,   916,   321,   322,
     323,   324,   325,   326,   327,   328,   329,  1021,   331,   332,
     333,   334,   917,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   918,   347,   348,   349,   350,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   919,   365,   366,   367,   368,   369,
     920,   370,  2142,   372,   373,   374,   375,   376,   377,  1023,
     379,   921,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,   922,   393,   394,   923,   395,
     396,   397,   398,   399,   400,   401,   924,  1024,  1025,   925,
     926,   404,   405,     0,   407,     0,   927,   409,   410,   411,
     412,   413,   414,   415,   928,   929,   416,   417,   418,   419,
     420,   930,   931,   421,   422,   423,   424,   425,     0,  1026,
     932,   428,   429,   430,   431,   432,   433,   933,   934,   434,
     935,   936,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   452,
     453,   454,   455,     0,   480,     0,  1405,  1406,  1407,  1401,
    2143,  2144,  1410,  1411,  1412,  1413,  1402,  1403,  1404,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   393,   394,     0,   395,
       0,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,   404,   405,   406,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,     0,     0,     0,  1405,  1406,  1407,     0,
    1408,  1409,  1410,  1411,  1412,  1413,  1101,     0,     0,  1102,
       0,     0,     0,  1103,  1104,  1105,     0,     0,     0,     0,
       0,     0,     0,     0,  1101,     0,     0,  1102,     0,     0,
    1106,  1103,  1104,  1105,     0,     0,     0,     0,  1108,     0,
       0,     0,     0,     0,     0,  1109,     0,     0,  1106,     0,
       0,     0,     0,     0,     0,     0,  1108,     0,  1101,     0,
       0,  1102,     0,  1109,     0,  1103,  1104,  1105,     0,     0,
    1110,     0,     0,     0,     0,     0,  1101,     0,     0,  1102,
       0,     0,  1106,  1103,  1104,  1105,     0,     0,  1110,     0,
    1108,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
    1106,     0,     0,     0,     0,     0,     0,     0,  1108,     0,
       0,     0,     0,     0,     0,  1109,     0,     0,  1101,     0,
       0,  1102,  1110,     0,     0,  1103,  1104,  1105,     0,     0,
       0,     0,     0,     0,     0,     0,  1101,     0,     0,  1102,
    1110,     0,  1106,  1103,  1104,  1105,     0,     0,     0,     0,
    1108,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
    1106,     0,     0,     0,     0,     0,     0,     0,  1108,  1111,
       0,     0,     0,     0,     0,  1109,     0,     0,     0,     0,
       0,     0,  1110,  1112,     0,     0,     0,  1111,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1110,  1112,     0,     0,     0,     0,  1113,     0,     0,  1114,
    1115,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1111,     0,  1116,     0,     0,     0,  1114,  1115,     0,
       0,     0,     0,     0,     0,  1112,     0,     0,     0,  1111,
    1113,  1116,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1112,     0,     0,  1117,     0,  1113,  1118,
       0,  1114,  1115,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1119,  1117,  1116,  1120,  1118,     0,  1114,
    1115,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1119,     0,  1116,  1120,  1112,     0,     0,     0,  1111,
    1113,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
       0,  1118,     0,  1112,     0,     0,     0,     0,  1113,     0,
       0,  1114,  1115,     0,     0,  1119,  1117,     0,  1120,  1118,
       0,     0,     0,     0,     0,  1116,     0,     0,     0,  1114,
    1115,     0,     0,  1119,     0,     0,  1120,     0,     0,     0,
       0,     0,     0,  1116,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,  1117,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,  1119,  1117,     0,  1120,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1119,     0,     0,  1120,     0,     0,     0,
    1101,     0,     0,  1102,     0,  1121,     0,  1103,  1104,  1105,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1106,     0,     0,     0,     0,     0,
       0,     0,  1108,     0,     0,     0,     0,     0,     0,  1109,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1122,     0,     0,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,  1110,  1121,     0,  2017,  1122,     0,
       0,  1123,  1124,  1125,     0,  1126,  1127,  1128,  1129,  1130,
    1131,     0,     0,  1121,     0,  2104,     0,     0,     0,     0,
       0,     0,     0,     0,  1101,     0,     0,  1102,     0,     0,
       0,     0,  1122,     0,     0,  1123,  1124,  1125,     0,  1126,
    1127,  1128,  1129,  1130,  1131,     0,     0,     0,     0,  2197,
    1122,     0,     0,  1123,  1124,  1125,  1108,  1126,  1127,  1128,
    1129,  1130,  1131, -1513,     0,     0,  1101,  2215,     0,  1102,
       0,     0,     0,  1103,  1104,  1105,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1110,     0,
    1106,     0,  1122,  1111,     0,  1123,  1124,  1125,  1108,  1126,
    1127,  1128,  1129,  1130,  1131,  1109,     0,  1112,     0,  2356,
    1122,     0,  1113,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,     0,     0,     0,  2554,     0,     0,
    1110,     0,     0,  1114,  1115,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1789,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,     0,     0,  1118,     0,     0,     0, -1513,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
    1120, -1513,     0,     0,     0,     0, -1513,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1111,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1513,     0,  1112,     0,     0,     0,     0,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1114,
    1115,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1116,     0,     0,     0,  1121,     0,     0,
       0,  1119,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1119,     0,     0,  1120,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1513,     0,     0,  1122,     0,     0,  1123,  1124,  1125,
       0,  1126,  1127,  1128,  1129,  1130,  1131,     0,     0,     0,
       0,  2566,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1513,     0,
       0,     0,     0,     0,     0,  1126,  1127,  1128,  1129,  1130,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1122,   859,     0,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,     0,  1275,    89,    90,    91,    92,
      93,    94,    95,    96,   860,    97,    98,    99,   861,   862,
     863,   864,   865,   866,   867,   100,   101,   868,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     869,   114,   115,   116,   117,   118,   119,   870,   871,   120,
     121,   122,   123,   124,   872,   125,   126,   127,   128,   129,
     873,   130,   874,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   875,   140,   141,   142,   143,   144,   145,   876,
     146,   147,   148,   149,   877,   878,   879,   150,   880,   881,
     882,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   883,   161,   884,   162,   163,   164,   165,   166,   167,
     885,   168,   169,   170,   171,   172,   886,   887,   173,   174,
     175,   176,   177,   888,   178,   179,   180,   889,   181,   182,
     183,   890,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   891,   194,   892,   195,   196,   197,   198,   893,
     199,   894,   200,   201,   895,   202,   203,   204,   205,   206,
     207,   896,   208,   897,   209,   210,   898,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   899,   222,
     223,   224,   225,   226,   227,   900,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   901,   237,   902,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   903,   904,
     248,   249,   250,   251,   905,   252,   253,   254,   906,   907,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   908,   281,   282,   283,
     284,   909,   285,   286,   287,   288,   289,   290,   910,   291,
     292,   911,   912,   293,   294,   295,   913,   914,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   915,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   916,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   917,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   918,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   919,   365,   366,   367,   368,   369,   920,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   921,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   922,   393,   394,   923,   395,   396,   397,   398,
     399,   400,   401,   924,   402,   403,   925,   926,   404,   405,
     406,   407,   408,   927,   409,   410,   411,   412,   413,   414,
     415,   928,   929,   416,   417,   418,   419,   420,   930,   931,
     421,   422,   423,   424,   425,   426,   427,   932,   428,   429,
     430,   431,   432,   433,   933,   934,   434,   935,   936,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     480,     0,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,     0,   393,   394,     0,   395,     0,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,   404,   405,   406,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   640,
     983,   524,     0,     0,     0,   665,     0,     0,  1960,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,  1155,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     984,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   281,   282,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,   985,
       0,   293,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   406,   407,
     408,   986,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   640,   983,
     524,     0,     0,     0,   665,   987,   988,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,   130,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,     0,     0,     0,   150,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,  1157,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   984,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   281,   282,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   985,     0,
     293,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     986,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   640,   983,   524,
       0,     0,     0,   665,   987,   988,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,   130,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
       0,     0,     0,   150,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   984,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   985,     0,   293,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,   986,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,     0,     0,  1101,     0,
       0,  1102,     0,   987,   988,  1103,  1104,  1105,     0,     0,
       0,     0,     0,     0,     0,     0,  1101,     0,     0,  1102,
       0,     0,  1106,  1103,  1104,  1105,  1543,     0,     0,     0,
    1108,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
    1106,     0,     0,     0,     0,     0,     0,     0,  1108,     0,
       0,     0,     0,     0,     0,  1109,     0,     0,  1101,     0,
       0,  1102,  1110,     0,     0,  1103,  1104,  1105,     0,     0,
       0,     0,     0,     0,     0,     0,  1101,     0,     0,  1102,
    1110,     0,  1106,  1103,  1104,  1105,     0,     0,     0,     0,
    1108,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
    1106,     0,     0,  1716,     0,     0,     0,     0,  1108,     0,
       0,     0,  1544,     0,     0,  1109,     0,     0,     0,     0,
       0,     0,  1110,     0,     0,     0,     0,     0,  1101,     0,
       0,  1102,     0,     0,     0,  1103,  1104,  1105,     0,     0,
    1110,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1106,     0,     0,     0,     0,     0,     0,     0,
    1108,  1111,     0,     0,     0,     0,     0,  1109,     0,  1756,
       0,     0,     0,     0,  1757,  1112,     0,     0,     0,  1111,
    1113,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1110,  1112,     0,     0,     0,     0,  1113,     0,
       0,  1114,  1115,     0,     0,     0,     0,     0,     0,     0,
    2624,     0,     0,     0,     0,  1116,     0,     0,     0,  1114,
    1115,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,     0,  1116,  1102,  1112,     0,     0,     0,  1111,
    1113,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
       0,  1118,     0,  1112,     0,     0,     0,     0,  1113,     0,
       0,  1114,  1115,  1108,     0,  1119,  1117,     0,  1120,  1118,
   -1513,     0,     0,     0,     0,  1116,     0,     0,     0,  1114,
    1115,     0,     0,  1119,     0,     0,  1120,     0,     0,     0,
       0,  1111,     0,  1116,     0,  1110,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1112,     0,     0,  1117,     0,
    1113,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1119,  1117,     0,  1120,  1118,
       0,  1114,  1115,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1119,     0,  1116,  1120,     0,     0,     0,
    1101,  2625,     0,  1102,     0,  1121,     0,  1103,  1104,  1105,
       0,     0,     0,     0,  2030,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1106,     0,     0,  1765,  1117,     0,
       0,  1118,  1108,     0,     0,     0,     0,     0,     0,  1109,
       0,     0,     0,     0, -1513,  1119,     0,     0,  1120,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1513,     0,
       0,  1545,     0, -1513,  1110,  1121,  1730,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1101,     0,     0,  1102, -1513,     0,
       0,     0,  1122,     0,     0,  1123,  1124,  1125,     0,  1126,
    1127,  1128,  1129,  1130,  1131,     0,     0,     0,     0,     0,
    1122,     0,     0,  1123,  1124,  1125,  1108,  1126,  1127,  1128,
    1129,  1130,  1131, -1513,     0,  1121,  1101,     0,     0,  1102,
       0,     0,     0,  1103,  1104,  1105,     0,     0,  1119,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1110,     0,
    1106,     0,  1122,  1111,     0,  1123,  1124,  1125,  1108,  1126,
    1127,  1128,  1129,  1130,  1131,  1109,     0,  1112,     0,     0,
    1122,     0,  1113,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,     0,     0,     0,     0,     0,     0,
    1110,     0,     0,  1114,  1115,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1116,     0,     0,
       0,     0,  1101,     0,     0,  1102,     0,  2033,     0,  1103,
    1104,  1105,  1122,     0,     0,  1123,  1124,  1125, -1513,  1126,
    1127,  1128,  1129,  1130,  1131,     0,  1106,     0,     0,     0,
    1117,     0,     0,  1118,  1108,     0,     0, -1513,     0,     0,
       0,  1109,     0,     0,     0,  1101,     0,  1119,  1102,     0,
    1120, -1513,  1103,  1104,  1105,     0, -1513,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1110,     0,     0,  1106,
       0,     0,     0,     0,  1770,     0,     0,  1108,     0,  1111,
       0,     0,     0,     0,  1109,     0,     0,     0,     0,     0,
       0, -1513,     0,  1112,     0,     0,     0,  1101,  1113,     0,
    1102,     0,     0,     0,  1103,  1104,  1105,     0,     0,  1110,
       0,     0,     0,     0,     0, -1513,     0,     0,     0,  1114,
    1115,  1106,  1126,  1127,  1128,  1129,  1130,  1131,     0,  1108,
       0,  1101,     0,  1116,  1102,     0,  1109,  1121, -1513, -1513,
   -1513,  1119,     0,     0,     0,     0,     0,     0,  1101,     0,
       0,  1102,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1110,     0,  1108,     0,  1111,  1117,     0,     0,  1118,
    1109,     0,     0,     0,     0,     0,     0,     0,     0,  1112,
    1108,     0,     0,  1119,  1113,   810,  1120, -1513,     0,     0,
       0,   811,     0,     0,     0,  1110,     0,     0,   823,     0,
       0,     0,     0,     0,     0,  1114,  1115,     0,  1111,     0,
       0,     0,  1110,     0,     0,   810,     0,   824,     0,  1116,
       0,   811,  1112,     0,     0,     0,     0,  1113,   823,  1101,
       0, -1513,  1102,     0,  1122,     0,     0,  1123,  1124,  1125,
       0,  1126,  1127,  1128,  1129,  1130,  1131,   824,  1114,  1115,
       0,     0,  1117,     0,     0,  1118,     0,     0,     0,     0,
    1111,  1108,  1116,     0,     0,     0,     0,   825, -1513,  1119,
       0,     0,  1120,  1121,  1112,     0,     0,     0,     0,  1113,
       0,  2034,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1110,  1111,  1117,   812,   825,  1118,     0,
    1114,  1115,     0,     0,     0,     0,     0,     0,  1112,     0,
       0, -1513,  1119,  1113,  1116,  1120,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1513,   812,     0, -1513,     0,
   -1513,     0,     0,     0,     0,  1126,  1127,  1128,  1129,  1130,
    1131,     0,     0,     0,     0,     0,     0,  1117,  1116,     0,
    1118,     0,     0,     0,     0,   826,     0,     0,     0,  1121,
       0,     0,  2214,     0,  1119, -1513,     0,     0,     0,     0,
    1122,     0,     0,  1123,  1124,  1125,     0,  1126,  1127,  1128,
    1129,  1130,  1131,     0,     0,   826,     0,     0,     0,  1978,
       0,     0, -1513,     0,     0,     0,     0,     0,  1119,     0,
       0,     0,  1121,   827,     0,     0, -1513,   828,     0,     0,
       0, -1513,     0,     0,     0,  1119,     0,     0,     0,   829,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   827,     0,     0,     0,   828,     0,     0,
     813,     0,     0,     0,     0,     0, -1513,     0,     0,   829,
     830,     0,     0,     0,  1121,     0,  1122,     0,     0,  1123,
    1124,  1125,     0,  1126,  1127,  1128,  1129,  1130,  1131,     0,
     813,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     830,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
     831,     0,     0,     0,   815,   832,  1119,     0,     0,  1122,
       0,     0,  1123,  1124,  1125, -1513,  1126,  1127,  1128,  1129,
    1130,  1131,     0,     0,     0,     0,     0,   833,     0,     0,
    1607,     0,     0,   834,   815,   832,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   835,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   833,     0,     0,
       0,  1122,     0,  1608,  1123,  1124,  1125,     0,  1126,  1127,
    1128,  1129,  1130,  1131,     0,     0,     0,   835,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1122, -1513,   817, -1513, -1513,
   -1513,     0,  1126,  1127,  1128,  1129,  1130,  1131,     0,     0,
       0,     0, -1513,     0,     0,     0,     0,     0,     0,  1126,
    1127,  1128,  1129,  1130,  1131,     0,     0,   817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   859, -1513,  1454,     0,     0,     0,     0,     0,
    1126,  1127,  1128,  1129,  1130,  1131,     0,    89,    90,    91,
      92,    93,    94,    95,    96,   860,    97,    98,    99,   861,
     862,   863,   864,   865,   866,   867,   100,   101,   868,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   869,   114,   115,   116,   117,   118,   119,   870,   871,
     120,   121,   122,   123,   124,   872,   125,   126,   127,   128,
     129,   873,   130,   874,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   875,   140,   141,   142,   143,   144,   145,
     876,   146,   147,   148,   149,   877,   878,   879,   150,   880,
     881,   882,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   883,   161,   884,   162,   163,   164,   165,   166,
     167,   885,   168,   169,   170,   171,   172,   886,   887,   173,
     174,   175,   176,   177,   888,   178,   179,   180,   889,   181,
     182,   183,   890,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   891,   194,   892,   195,   196,   197,   198,
     893,   199,   894,   200,   201,   895,   202,   203,   204,   205,
     206,   207,   896,   208,   897,   209,   210,   898,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   899,
     222,   223,   224,   225,   226,   227,   900,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   901,   237,   902,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   903,
     904,   248,   249,   250,   251,   905,   252,   253,   254,   906,
     907,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   908,   281,   282,
     283,   284,   909,   285,   286,   287,   288,   289,   290,   910,
     291,   292,   911,   912,   293,   294,   295,   913,   914,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   915,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   916,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     917,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   918,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   919,   365,   366,   367,   368,   369,   920,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   921,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   922,   393,   394,   923,   395,   396,   397,
     398,   399,   400,   401,   924,   402,   403,   925,   926,   404,
     405,   406,   407,   408,   927,   409,   410,   411,   412,   413,
     414,   415,   928,   929,   416,   417,   418,   419,   420,   930,
     931,   421,   422,   423,   424,   425,   426,   427,   932,   428,
     429,   430,   431,   432,   433,   933,   934,   434,   935,   936,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   859,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   860,    97,    98,    99,   861,   862,
     863,   864,   865,   866,   867,   100,   101,   868,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     869,   114,   115,   116,   117,   118,   119,   870,   871,   120,
     121,   122,   123,   124,   872,   125,   126,   127,   128,   129,
     873,   130,   874,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   875,   140,   141,   142,   143,   144,   145,   876,
     146,   147,   148,   149,   877,   878,   879,   150,   880,   881,
     882,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   883,   161,   884,   162,   163,   164,   165,   166,   167,
     885,   168,   169,   170,   171,   172,   886,   887,   173,   174,
     175,   176,   177,   888,   178,   179,   180,   889,   181,   182,
     183,   890,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   891,   194,   892,   195,   196,   197,   198,   893,
     199,   894,   200,   201,   895,   202,   203,   204,   205,   206,
     207,   896,   208,   897,   209,   210,   898,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   899,   222,
     223,   224,   225,   226,   227,   900,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   901,   237,   902,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   903,   904,
     248,   249,   250,   251,   905,   252,   253,   254,   906,   907,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   908,   281,   282,   283,
     284,   909,   285,   286,   287,   288,   289,   290,   910,   291,
     292,   911,   912,   293,   294,   295,   913,   914,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   915,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   916,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   917,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   918,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   919,   365,   366,   367,   368,   369,   920,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   921,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   922,   393,   394,   923,   395,   396,   397,   398,
     399,   400,   401,   924,   402,   403,   925,   926,   404,   405,
     406,   407,   408,   927,   409,   410,   411,   412,   413,   414,
     415,   928,   929,   416,   417,   418,   419,   420,   930,   931,
     421,   422,   423,   424,   425,   426,   427,   932,   428,   429,
     430,   431,   432,   433,   933,   934,   434,   935,   936,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     859,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,  1592,
      94,    95,    96,   860,    97,    98,    99,   861,   862,   863,
     864,   865,   866,   867,   100,   101,   868,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   869,
     114,   115,   116,   117,   118,   119,   870,   871,   120,   121,
     122,   123,   124,   872,   125,   126,   127,   128,   129,   873,
     130,   874,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   875,   140,   141,   142,   143,   144,   145,   876,   146,
     147,   148,   149,   877,   878,   879,   150,   880,   881,   882,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     883,   161,   884,   162,   163,   164,   165,   166,   167,   885,
     168,   169,   170,   171,   172,   886,   887,   173,   174,   175,
    1593,   177,   888,   178,   179,   180,   889,   181,   182,   183,
     890,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   891,   194,   892,   195,   196,   197,   198,   893,   199,
     894,   200,   201,   895,   202,   203,   204,   205,   206,   207,
     896,   208,   897,   209,   210,   898,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   899,   222,   223,
     224,   225,   226,   227,   900,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   901,   237,   902,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   903,   904,   248,
     249,   250,   251,   905,   252,   253,   254,   906,   907,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   908,   281,   282,   283,   284,
     909,   285,   286,   287,   288,   289,   290,   910,   291,   292,
     911,   912,   293,   294,   295,   913,   914,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   915,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   916,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   917,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   918,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     919,   365,   366,   367,   368,   369,   920,  1594,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   921,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   922,   393,   394,   923,   395,   396,   397,   398,   399,
     400,   401,   924,   402,   403,   925,   926,   404,   405,   406,
     407,   408,   927,   409,   410,   411,   412,   413,   414,   415,
     928,   929,   416,   417,   418,   419,   420,   930,   931,   421,
     422,   423,   424,   425,   426,   427,   932,   428,   429,   430,
     431,   432,   433,   933,   934,   434,   935,   936,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,    88,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,   671,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   674,     0,   675,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   676,   677,   678,   679,   680,   681,   682,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   688,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   694,   695,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   281,   282,   283,   284,     0,
     700,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   703,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   704,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,   707,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   709,
       0,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   712,   407,
     713,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,   715,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   640,     0,
     524,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,   130,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,     0,     0,     0,   150,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   984,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   281,   282,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   985,     0,
     293,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,   404,   405,   406,   407,   408,
     986,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   640,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     3,     4,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,   130,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
       0,     0,     0,   150,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,    88,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,     0,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,   404,   405,   406,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,  1213,   125,
     126,   127,   128,   129,     0,     0,  1214,   131,   132,   133,
     134,   135,     0,   137,   138,   139,  1215,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,  1216,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1217,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,  1218,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
     395,     0,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,  1219,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   480,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,  1213,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,  1215,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,  1216,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,  1655,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,  1218,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   393,   394,     0,   395,
       0,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,   404,   405,   406,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,  1219,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       3,     4,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,     0,   395,     0,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
     404,   405,   406,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   480,  2364,     0,     0,     0,     0,  2365,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,   395,     0,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,   404,
     405,   406,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   480,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   481,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   314,   315,   316,
     317,   482,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,     0,   393,   394,     0,   395,     0,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,   404,   405,
     406,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     480,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,   529,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,     0,   393,   394,     0,   395,     0,   397,   398,   399,
     400,   401,     0,   530,   403,     0,     0,   531,   405,   406,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   480,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
     549,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,   395,     0,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   406,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,   582,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,     0,   397,   398,   399,   400,   401,
       0,   583,   403,     0,     0,   584,   405,   406,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   480,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   591,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,   549,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,     0,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   480,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,   619,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,     0,   393,   394,
       0,   395,     0,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,   404,   405,   406,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,  1505,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,  1506,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,  1507,
     395,     0,   397,  1508,   399,  1509,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,  1510,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   480,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,  2055,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   393,   394,     0,   395,
       0,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,   404,   405,   406,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,  2069,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,     0,   395,     0,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
     404,   405,   406,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   480,     0,  2228,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,   395,     0,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,   404,
     405,   406,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   480,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,     0,   393,   394,     0,   395,     0,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,   404,   405,
     406,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     480,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   541,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   542,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   543,     0,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,     0,   393,   394,     0,   395,     0,   397,   398,   399,
     400,   401,     0,   544,   403,     0,     0,   404,   405,   406,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   480,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   557,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,   395,     0,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   406,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   586,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,     0,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,   404,   405,   406,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   480,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   589,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,     0,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   480,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   593,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,     0,   393,   394,
       0,   395,     0,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,   404,   405,   406,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   611,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
     395,     0,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   480,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   627,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   393,   394,     0,   395,
       0,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,   404,   405,   406,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   631,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,     0,   395,     0,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
     404,   405,   406,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   480,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   634,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,   395,     0,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,   404,
     405,   406,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   480,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   542,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,     0,   393,   394,     0,   395,     0,   397,   398,
     399,   400,   401,     0,   544,   403,     0,     0,   404,   405,
     406,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     480,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   952,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,   314,   315,   316,   317,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,     0,   393,   394,     0,   395,     0,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,   404,   405,   406,
     407,   408,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,   426,   427,     0,   428,     0,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   480,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     954,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,     0,   312,   313,   314,   315,   316,   317,   318,
     319,   320,     0,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,     0,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
       0,   347,   348,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,     0,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
       0,   393,   394,     0,   395,     0,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,   404,   405,   406,   407,
     408,     0,   409,   410,   411,   412,   413,   414,   415,     0,
       0,   416,   417,   418,   419,   420,     0,     0,   421,   422,
     423,   424,   425,   426,   427,     0,   428,     0,   430,   431,
     432,   433,     0,     0,   434,     0,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   480,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
    1171,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,     0,   312,   313,   314,   315,   316,   317,   318,   319,
     320,     0,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,     0,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     347,   348,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,     0,     0,   371,   372,   373,   374,
       0,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,     0,
     393,   394,     0,   395,     0,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,   404,   405,   406,   407,   408,
       0,   409,   410,   411,   412,   413,   414,   415,     0,     0,
     416,   417,   418,   419,   420,     0,     0,   421,   422,   423,
     424,   425,   426,   427,     0,   428,     0,   430,   431,   432,
     433,     0,     0,   434,     0,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   480,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,  1304,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
       0,   312,   313,   314,   315,   316,   317,   318,   319,   320,
       0,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,     0,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,     0,   347,
     348,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,     0,   393,
     394,     0,   395,     0,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,   404,   405,   406,   407,   408,     0,
     409,   410,   411,   412,   413,   414,   415,     0,     0,   416,
     417,   418,   419,   420,     0,     0,   421,   422,   423,   424,
     425,   426,   427,     0,   428,     0,   430,   431,   432,   433,
       0,     0,   434,     0,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   480,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1317,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,     0,
     312,   313,   314,   315,   316,   317,   318,   319,   320,     0,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,     0,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   347,   348,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,     0,   393,   394,
       0,   395,     0,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,   404,   405,   406,   407,   408,     0,   409,
     410,   411,   412,   413,   414,   415,     0,     0,   416,   417,
     418,   419,   420,     0,     0,   421,   422,   423,   424,   425,
     426,   427,     0,   428,     0,   430,   431,   432,   433,     0,
       0,   434,     0,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   480,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1576,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,     0,   312,
     313,   314,   315,   316,   317,   318,   319,   320,     0,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,     0,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,     0,   347,   348,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,     0,   393,   394,     0,
     395,     0,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,   404,   405,   406,   407,   408,     0,   409,   410,
     411,   412,   413,   414,   415,     0,     0,   416,   417,   418,
     419,   420,     0,     0,   421,   422,   423,   424,   425,   426,
     427,     0,   428,     0,   430,   431,   432,   433,     0,     0,
     434,     0,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   480,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,  1588,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
     314,   315,   316,   317,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   393,   394,     0,   395,
       0,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,   404,   405,   406,   407,   408,     0,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,   426,   427,
       0,   428,     0,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,  1590,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,     0,   312,   313,   314,
     315,   316,   317,   318,   319,   320,     0,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,     0,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,     0,   347,   348,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,     0,   393,   394,     0,   395,     0,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
     404,   405,   406,   407,   408,     0,   409,   410,   411,   412,
     413,   414,   415,     0,     0,   416,   417,   418,   419,   420,
       0,     0,   421,   422,   423,   424,   425,   426,   427,     0,
     428,     0,   430,   431,   432,   433,     0,     0,   434,     0,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   480,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,  2169,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,     0,   312,   313,   314,   315,
     316,   317,   318,   319,   320,     0,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
       0,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   347,   348,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,     0,   393,   394,     0,   395,     0,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,   404,
     405,   406,   407,   408,     0,   409,   410,   411,   412,   413,
     414,   415,     0,     0,   416,   417,   418,   419,   420,     0,
       0,   421,   422,   423,   424,   425,   426,   427,     0,   428,
       0,   430,   431,   432,   433,     0,     0,   434,     0,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   480,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
       0,   309,   310,   311,     0,   312,   313,   314,   315,   316,
     317,   318,   319,   320,     0,   321,   322,   323,   324,   325,
     326,   327,     0,   329,   330,   331,   332,   333,   334,     0,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,     0,   347,   348,     0,   350,   351,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,     0,   393,   394,     0,   395,     0,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,   404,   405,
     406,   407,   408,     0,   409,   410,   411,   412,   413,   414,
     415,     0,     0,   416,   417,   418,   419,   420,     0,     0,
     421,   422,   423,   424,   425,   426,   427,     0,   428,     0,
     430,   431,   432,   433,     0,     0,   434,     0,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
    1006,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,     0,  1007,   111,  1008,  1009,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
    1010,  1011,   124,     0,   125,   126,   127,   128,     0,     0,
     130,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,     0,     0,     0,   150,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,  1012,  1013,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   686,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,     0,   189,   190,   191,   192,
       0,     0,   194,     0,   195,   196,  1014,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,     0,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,     0,   231,   232,
     233,   234,  1015,  1016,     0,  1017,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,  1018,   275,
    1019,   277,   278,   279,     0,     0,   281,   282,   283,   284,
       0,     0,   286,  1020,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,     0,   298,
     299,   300,     0,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,     0,   312,   313,     0,   315,   316,     0,
     318,   319,   320,     0,   321,   322,   323,   324,   325,   326,
     327,   328,   329,  1021,   331,   332,   333,   334,     0,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,     0,   370,  1022,   372,
     373,   374,   375,   376,   377,  1023,   379,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,     0,  1024,  1025,     0,     0,   404,   405,     0,
     407,     0,     0,   409,   410,   411,   412,   413,   414,   415,
       0,     0,   416,   417,   418,   419,   420,     0,     0,   421,
     422,   423,   424,   425,     0,  1026,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,     0,     0,   435,   436,
     437,   438,   439,   440,  1006,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   452,   453,   454,   455,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,     0,  1007,
     111,  1008,  1009,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,  1010,  1011,   124,     0,   125,   126,
     127,   128,     0,     0,   130,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,     0,     0,     0,
     150,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,  1012,  1013,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   686,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,     0,
     189,   190,   191,   192,     0,     0,   194,     0,   195,   196,
    1014,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,     0,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,     0,   231,   232,   233,   234,  1015,  1016,     0,  1017,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,  1018,   275,  1019,   277,   278,   279,     0,     0,
     281,   282,   283,   284,     0,     0,   286,  1020,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,     0,   298,   299,   300,     0,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,     0,   312,   313,
       0,   315,   316,     0,   318,   319,   320,     0,   321,   322,
     323,   324,   325,   326,   327,   328,   329,  1021,   331,   332,
     333,   334,     0,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
       0,   370,     0,   372,   373,   374,   375,   376,   377,  1023,
     379,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,     0,  1024,  1025,     0,
       0,   404,   405,     0,   407,     0,     0,   409,   410,   411,
     412,   413,   414,   415,     0,     0,   416,   417,   418,   419,
     420,     0,     0,   421,   422,   423,   424,   425,     0,  1026,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
       0,     0,   435,   436,   437,   438,   439,   440,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   452,
     453,   454,   455
};

static const yytype_int16 yycheck[] =
{
       6,   590,   507,    33,   508,   837,   605,   835,   577,   540,
      55,   646,   722,     0,   646,   823,  1040,   597,   683,   684,
    1074,     0,     0,     6,   810,   632,   980,   552,  1856,   711,
     950,     0,     0,    57,   950,     6,   701,  1586,   950,    16,
     556,   950,   512,    19,   806,   815,   812,    16,  1904,  1063,
    1592,   514,  1594,    28,   849,  1098,  1099,     0,  1928,  1476,
      57,  1517,  1063,  1537,  1943,  1788,  1063,    32,   590,  1583,
     592,  1936,   594,  1042,   840,    49,   599,     9,  1419,  1420,
    2173,     5,  1821,  1424,  1514,   514,     5,  1146,    11,   654,
    1192,  1815,  2176,    57,    13,    14,    57,  1194,  1528,     5,
     513,     5,    72,   972,  2179,     9,   115,     5,  1102,    82,
      85,    84,    39,    86,    47,    13,    14,     5,  1459,  1460,
     636,    11,    39,     5,   756,   514,     5,     5,     5,     5,
       5,    13,    14,     9,   597,   166,     5,     5,  1652,   166,
     610,   519,    26,    57,  2226,     5,    66,     4,   655,     4,
      40,   105,     9,   167,     9,    81,    26,   120,    57,    74,
    2165,   271,  1845,    33,  2344,     3,     4,     5,   597,    84,
     118,     9,   209,   135,  2315,   273,    11,     0,   235,  1693,
    1694,  2263,    72,   646,    92,     9,   143,    26,     0,  2249,
     653,   574,   824,    77,    33,   827,   828,    26,   723,   125,
     118,    85,    74,   295,    33,   721,   259,   166,   574,  1820,
     279,  1758,    84,   118,  1022,  2272,  2127,   646,  2399,  2500,
     105,   262,   319,   279,   653,   750,     3,   156,   133,  1223,
     114,    36,   167,   421,   235,  1875,  2293,   650,   171,   113,
     763,   341,   145,   163,    26,   440,   332,   295,    26,   756,
     207,  2583,   185,    30,    31,  2330,   158,   190,    11,   167,
     106,   156,  2344,   421,   116,   319,   106,   655,    91,   464,
      58,   158,     5,   777,   360,   113,    11,    11,    66,    91,
     400,   478,   847,   848,   853,   203,  2435,    40,   191,   805,
     478,   199,   225,     0,   342,   758,   759,   226,    22,   183,
     354,  2171,  2558,  2026,  2560,    40,   214,   128,  1948,   437,
     194,  2050,  1729,  2645,   116,   223,   823,   122,  2599,    72,
     478,  2381,   279,   443,   115,  1874,   367,   672,   673,   758,
     759,   226,   219,   387,   186,  2059,   433,    72,    72,  2063,
     481,   270,   256,  1025,   252,   346,   128,  1012,  1013,   482,
     128,    75,   697,   255,   482,  1020,   291,  1871,   957,  1873,
     417,   160,  2419,    11,   290,   273,   419,   398,   478,   333,
     208,   256,   333,  2554,  2630,  1369,  2287,  2526,   478,   433,
     478,   473,  2464,  1813,   186,  1815,   306,   431,   165,   263,
     167,   229,   972,   958,   772,   478,  1737,  1738,  1739,  1740,
     305,  2581,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,
    1751,  1752,  2095,   482,   423,  2497,   417,    22,   998,   333,
     803,   478,  1476,    28,  2565,   473,   482,  2432,  1214,   337,
     193,   366,   365,   387,   333,   823,   467,   803,  2049,   398,
    1987,   229,  1311,  2527,  1958,   482,   360,   268,  1550,   480,
     273,  1792,  1793,  2528,  1551,   482,   413,   384,   421,  2315,
     241,   273,   967,  1295,   478,   970,   392,   384,  2617,    11,
     974,   419,   263,   978,   436,  1270,  1519,   478,   465,  2202,
    1539,  2541,  2575,   398,   514,   329,   465,   465,  2227,   377,
     378,  1545,   376,   466,   414,   379,   465,   465,    40,  2581,
     370,   419,   301,   442,   478,   478,   476,   403,   514,   972,
     480,   334,  2236,   421,   442,  1022,   349,  2241,   482,   982,
    2244,   482,   334,  1046,   430,   464,   398,  1107,   133,  1045,
      72,   370,   577,   539,   540,   998,   464,   514,  1054,   478,
     564,   370,  1058,   972,   513,   477,   522,   523,  1343,   461,
     556,   474,   476,   982,   478,  2104,   480,    29,  1527,   478,
    2439,  1077,  1078,   442,  2434,  1090,   542,   564,   981,   998,
    1093,  1094,   478,  2438,   478,  2117,   549,   554,  1143,   566,
     478,    53,   442,   440,   474,   464,   433,   566,   566,   595,
     596,   597,   557,   982,   569,  1102,   478,   566,   566,   478,
     478,   478,   478,   478,   464,  1110,    91,   464,   581,   478,
     478,  1243,   469,   470,   469,   470,   478,   440,   478,  2093,
     104,  1253,  1145,   566,  1256,   386,    22,  2350,   440,  2059,
     636,   469,   470,  2063,  1022,   595,   471,   472,   473,   474,
     646,   614,   615,   616,  1107,   469,   470,   653,   654,   655,
    1239,  1231,  2376,  2167,   431,   128,   479,   314,   481,   420,
     113,  1509,  1510,  2533,   670,  1010,  1011,   479,  1662,   481,
     646,   172,   277,   467,  1019,  1729,   353,   653,  1107,   258,
    2097,   650,    66,     4,   263,   342,   480,   213,     9,  1703,
    1212,   721,   698,  1328,   654,   655,  1328,  1266,  1267,  1268,
    1654,  1308,   235,  1704,  1705,  1312,  1371,  1704,  1315,  2565,
     387,   717,   718,   719,  1102,   721,  1223,  1239,   471,   472,
     473,   474,  1716,  1068,  1069,  2274,   331,   113,   229,   113,
     183,  1311,  1775,  1443,   313,   741,  1258,   133,   242,   243,
       4,  1263,  1736,   479,  1249,     9,   482,  1731,   724,  1254,
     427,   128,   758,   759,   442,   360,   240,   156,   734,  1521,
     244,   235,   161,   478,   788,   789,  1229,   791,  1231,   319,
     746,  1765,  2600,  2601,  2644,  1759,   464,   154,  1610,   391,
     756,   393,   758,   759,   790,   258,   170,   760,   794,   795,
     478,   788,   789,   235,   791,   268,  2226,   480,   467,   805,
    1229,   478,  1231,   156,   354,   258,  2236,   782,   161,   478,
     783,  2241,   273,   346,  2244,   215,  1286,   823,     0,   424,
    2648,   469,   470,   471,   472,   473,   474,   226,   655,   167,
     391,  1541,   393,  2263,    16,  1223,   809,   387,  1633,    22,
     235,   847,   848,   849,    74,    28,   350,   351,  1311,   822,
    1904,    33,  1618,   193,    84,  2404,   256,   461,  2199,  1375,
     235,   199,  1369,   823,   839,  1328,   479,  2409,   353,   482,
     843,   270,   346,   226,   258,    57,   214,   471,  1341,   263,
     115,   277,  1311,   433,   417,   223,   263,   847,   848,   849,
     391,   268,   393,  1663,    63,    64,    74,  1333,  1668,  1328,
     286,  1337,   387,  1339,   346,    11,    84,    22,   479,    15,
    1904,   482,  1341,    28,  2344,    21,   417,   270,     4,     4,
     165,  1437,   306,     9,     9,    31,    32,   469,   470,   471,
     472,   473,   474,   341,   342,   331,   332,   321,   479,    30,
      31,   482,   427,   417,  2285,   478,  2376,  1516,  1464,   476,
     133,   346,   958,   480,   147,   440,  1804,  1805,  1806,  1807,
     341,   342,   197,   363,   360,   473,   972,   353,   482,   172,
     478,   346,   480,    13,    14,   417,   982,    83,   951,   464,
     479,  1369,  1589,   482,  1591,   479,   147,  1503,   482,   478,
     193,   479,   998,   478,   482,   209,   823,  1951,   958,   337,
      91,   387,    13,    14,   478,   982,   346,   980,  2349,  1929,
     341,   342,   981,  1929,   354,   479,  1022,  1929,   133,   419,
    1929,   256,   417,   258,     8,   479,   229,    11,   405,   166,
     414,    15,    16,    17,  2464,   478,   478,   480,   415,  1045,
    2496,   427,   417,  2097,   478,  1051,   480,   387,  1054,  1684,
    1649,    53,  1058,  1885,   440,  1042,  1884,   476,   440,   478,
     442,   480,  1022,  1042,  1042,   479,  1072,  2497,   482,  1075,
    1076,  1077,  1078,  1042,  1042,   278,   341,   342,   464,  1085,
    1086,  1763,  1764,   478,   478,  2634,  1872,  1063,  1704,  1705,
    1706,  1097,   478,   433,   277,  1923,  1102,  1103,  1104,  1105,
    1106,  1107,  1682,   478,   215,  1111,  1112,   461,   128,  1436,
    1116,  1438,  1439,  1883,  1120,  1885,   213,  1123,  1124,  1125,
    1126,  1127,  1128,  1129,  1130,  1131,  2582,  2151,  1134,  1592,
    1593,  1594,   148,  1843,   154,  1141,   479,  1143,   148,   482,
     479,  2135,  1102,   482,   327,   256,  2602,   473,   331,   148,
     479,  2581,   478,   482,   480,  1662,   479,   327,  1164,   482,
     353,   148,   277,  1592,  1593,  1594,   479,  1140,   479,   181,
     182,   482,  1677,   246,   247,  1151,  1182,   360,   479,   478,
     433,   482,  1169,  1143,  1161,  1191,  1192,  1160,   391,  1162,
     393,   258,   353,   479,   387,  1022,   482,    80,   479,   479,
    2656,   482,   482,   655,   315,   479,   190,   479,   482,  1716,
     482,   414,   327,   444,   417,     5,   331,  1223,     8,  1682,
     391,  1684,   393,  1229,    14,  1231,   387,   211,   478,  1736,
     242,   243,  1205,    23,   427,   148,   479,    27,   258,   482,
     391,   424,   393,   263,   571,   360,   573,   440,   268,  1772,
     148,    22,   363,  1682,  1770,  1684,   479,    28,  1765,   482,
     480,  2315,   353,  1223,  1270,   273,   427,  1273,  1274,   148,
    1276,   464,  1904,   479,  1662,  1102,   482,   479,   387,   440,
     482,  1788,   478,   465,   479,   478,    35,   482,   655,  2313,
     479,   275,   479,   482,   224,   482,   387,  1303,     5,   479,
    1825,  2133,   482,   464,   479,  1311,   478,   482,   419,   424,
    1270,  1284,  1299,   479,     5,   479,   482,   478,   482,  2105,
     478,  2315,  1328,  1903,   479,  1905,   478,   482,  1716,  1852,
     479,   513,   514,   482,  2142,  1341,   427,  1343,   350,   351,
     431,   479,   143,  1950,   482,  2064,   161,  2066,  1736,   440,
    1919,   479,  1328,   478,   482,   156,  1332,   541,   479,   543,
     161,   482,   133,  1369,  2068,  1341,   478,  2071,   302,  1375,
    1376,   823,     5,   464,   478,  1381,   482,  1765,   479,   350,
     351,   482,   564,  1343,   566,   405,  2380,   478,   478,  2383,
     479,  1421,     5,   482,   168,   415,  1223,  1904,   172,   479,
    1788,   479,   482,   509,   482,   479,   207,   479,   482,  1369,
     482,   758,   759,  1419,  1420,  1421,   478,   478,  1424,   193,
       8,   479,   478,    11,   482,   226,   479,   478,   655,   482,
    1436,  1437,  1438,  1439,  1464,   478,  1899,   478,  1444,     5,
    1903,   479,  1905,   479,   482,   478,   482,     5,   478,   478,
     478,   557,    40,  1459,  1460,   229,   823,   478,  1464,    47,
     441,   284,   236,   209,   482,    95,    35,   360,   650,   270,
    1899,   161,  1478,   270,  1903,  1481,  1905,  1483,   279,   286,
     161,   465,   466,   467,    72,   469,   470,   471,   472,   473,
     474,   268,  2124,  2321,   224,   478,   398,  1503,     6,   478,
      84,   398,  1532,    11,   278,   687,   277,    15,  1514,   482,
      53,  2565,    20,    21,    22,    53,  1904,    25,   398,  2026,
      28,   353,  1528,    31,    32,   249,   398,   479,   484,  2136,
    2137,  1514,   398,   440,  1507,    91,  1542,   148,   258,   721,
    1527,    22,  1369,  1514,   258,  1528,   353,    28,  1527,  1527,
     478,  1557,  2075,  2084,  2189,   387,   327,  1528,  1527,  1527,
     331,    35,    35,   480,   482,   430,  2089,    75,   478,  1575,
    1022,  2565,   346,   478,    82,    83,    84,    85,    86,    34,
     387,   436,   478,   171,   478,     9,  1592,  1593,  1594,   360,
     396,   396,    11,   482,   396,   427,   823,   185,   263,   398,
     478,   478,   190,   175,   157,   166,   788,   789,   440,   791,
      35,   479,   413,   421,   478,    35,   207,   391,   363,   393,
     427,   482,  1598,   215,   274,   482,   478,  1633,  2135,    54,
     215,   258,   464,   440,   215,  2142,   279,   225,  2026,   479,
     414,   311,   271,   417,   433,   478,   478,   148,   148,  2314,
    1102,   258,   133,   424,  2117,  1022,  1662,   464,   440,   273,
     258,   273,    35,    35,    34,  1641,   476,   476,   479,   398,
     776,   478,   398,  1633,   478,  1648,  1682,   398,  1684,   104,
    1653,  1654,  1655,  2315,   479,   398,   479,   275,  2117,   166,
     482,    92,   479,  1680,   479,  2202,   479,   461,   479,   479,
    1673,   480,  1662,   479,   479,   461,   479,  1713,  1684,   479,
    1716,   479,    22,  1689,   479,  1691,   166,  1723,    28,  1695,
    1696,  1727,   461,   398,  1730,   478,  2189,   478,   478,   283,
    1736,  1737,  1738,  1739,  1740,  1102,   478,  1743,  1744,  1745,
    1746,  1747,  1748,  1749,  1750,  1751,  1752,  2135,   437,   437,
    1756,  1757,   273,   427,  2142,  1800,  1716,   467,   463,  1765,
    2189,   274,  2427,   274,  1770,   274,   167,   192,  1798,   234,
    1776,  1223,   419,  1779,   482,  1781,  1736,   365,  2283,   398,
     258,   478,  1788,  1789,  2616,  1815,  1792,  1793,   148,  2358,
     193,  1797,  1798,   277,   148,  1022,   277,   148,   199,   981,
     479,   398,   398,   398,   398,  1765,   479,  1813,  2315,  1815,
     479,   477,   479,   214,  2202,   240,   273,   271,   482,   244,
    1826,  2420,   223,   133,   440,  2405,    35,   148,  1788,  1835,
    1813,   256,  1815,   148,   263,  1662,   476,  1810,  1811,  1812,
     479,   139,  1813,  2350,  1815,  1851,   327,   166,    11,   161,
     331,   252,   166,   479,   479,   479,  1223,   478,   437,  2363,
    1042,   479,   287,   387,   166,   482,   175,   334,  2384,   975,
     479,   977,    82,  2380,   462,  1102,  2383,  2381,   464,   360,
     479,   469,   470,   471,   472,   473,   474,   426,   478,  1716,
     479,   274,  1865,  1899,   148,   478,   170,  1903,  1904,  1905,
     655,   408,    22,   478,  2503,   478,    35,   332,    28,  1736,
      78,   421,   482,   477,   477,   166,   478,  1369,   389,   479,
    2425,   214,   479,   282,   479,   214,   478,  2315,  1904,   354,
     479,  1113,   479,  2565,   478,   280,   337,   478,  1765,    53,
     178,   467,  2405,   424,  1904,  2461,  2409,   440,   195,   374,
    1926,   184,   263,   467,   398,   263,   398,  1930,   466,   479,
    1947,  1788,  2350,    35,   472,   105,   258,   277,   440,   273,
     478,    35,  1978,  2477,   482,   478,  2405,   166,  1951,   478,
    2409,  2570,   477,   214,  2564,   292,   478,  1169,   478,   478,
     439,    84,  2380,  2498,   129,  2383,  1223,   479,   321,   507,
     508,   509,  1369,   478,   215,   113,    35,   148,   478,    72,
     120,   148,    35,   133,  2020,  2021,   479,   327,   342,  2025,
    2026,   331,   342,    53,  2030,   478,    35,  2033,  2034,   421,
     478,   478,  2038,   541,    72,   543,   482,   426,    35,   183,
     421,   549,   408,   478,    66,    66,   276,    35,   482,   557,
     360,   467,   183,  2059,   479,   360,   344,  2063,  2565,   263,
     238,   569,   408,   478,    35,   478,  2026,   478,   823,  2042,
    2043,  2044,  2045,   581,   276,   276,  2059,  1904,  2084,   479,
    2063,   479,   478,   256,   341,   273,     8,   328,  2059,    11,
       9,   195,  2063,    15,    16,    17,   273,   107,   108,  2086,
    2087,  2564,   273,  2079,    32,  2081,   614,   615,   616,  1215,
     479,  2117,   118,   478,   424,     9,   419,  1299,    21,  1225,
    2126,  1227,   479,   566,  1230,  1899,  1886,  1237,  1587,  2135,
    1236,  1849,  1238,  2088,  2497,  2564,  2142,  2259,  2561,  1932,
    2129,  2567,  1369,  2637,  1250,  2412,  2615,  2603,   810,  1255,
    2332,   659,  1581,  1259,  1260,  1261,  1262,   277,  1264,  1265,
       8,  1593,  1937,    11,  2564,  1643,  2613,    15,    16,    17,
    2562,   181,   182,  1903,  1578,  2135,   967,  2565,  1647,    66,
    1682,  2189,  2142,  2189,    32,    72,  1926,  2174,   798,   776,
    1542,  1208,   751,  2199,   797,  2474,  2202,    84,  2392,  2026,
    2552,  1557,  1182,  1829,  2210,  2211,  2486,   327,  2214,  2080,
    1662,   331,  1207,  2189,  1528,  1815,  2050,  2065,   800,  2464,
    2226,  2377,  1813,  2463,  2481,  1344,   113,  2482,   115,  1063,
    2236,  2550,   242,   243,  1063,  2241,   246,   247,  2244,  1421,
     360,  1063,  2202,  2226,  2255,  2251,  2252,  2551,  2537,  1545,
    1138,  1377,   760,  2236,  1482,  2226,  1141,  2263,  2241,  2265,
    1479,  2244,  1276,  1650,  1716,  2236,  2456,  1022,   776,   777,
    2241,   982,  1341,  2244,   782,   783,   784,  1161,   782,  2285,
    2263,  1850,  1464,   170,  1736,    -1,  1162,    -1,    -1,   795,
      -1,    -1,  2263,    -1,    -1,  1662,    -1,    -1,    -1,    -1,
    1482,   809,   810,    -1,   424,    -1,    -1,    -1,  2135,  2315,
     197,    -1,    -1,  1765,   822,  2142,  1498,    -1,    -1,  2292,
      -1,    -1,    -1,    -1,     3,    -1,     5,    -1,    -1,    -1,
      -1,   839,  1514,    -1,    -1,   843,  1788,  2324,  2344,  2315,
     350,   351,    -1,  2349,  2350,  1527,  1528,  1102,    -1,  1716,
    1532,    -1,    -1,   275,  2384,  2315,    -1,    -1,  2345,    -1,
      -1,  2344,    -1,   211,    -1,    -1,  2372,    -1,  2341,  1736,
    2376,   258,    -1,  2344,  2380,  2202,   263,  2383,  2384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,  2395,
    2350,    11,    -1,  2376,    -1,    15,    16,    17,  1765,  2405,
      -1,    -1,    -1,  2409,  2410,  2376,    -1,    -1,     8,    -1,
      -1,    11,    32,    -1,    -1,    15,    16,    17,    -1,   306,
    2380,  1788,    -1,  2383,    -1,    -1,    -1,   275,   107,   108,
    2403,    -1,    32,    -1,   321,  1662,    -1,    -1,   946,    -1,
      -1,    -1,    -1,   951,    -1,    -1,    -1,    -1,   458,   459,
    2437,    -1,  1904,   961,    -1,  2461,    -1,  2433,  2464,   967,
     107,   108,   970,  2436,    -1,    -1,   974,   975,  1223,   977,
     978,    -1,   980,    -1,    -1,    -1,     8,    35,    -1,    11,
    2486,  2464,    -1,    15,    16,    17,    -1,    -1,  2315,  1716,
      -1,  2497,    -1,  2464,    -1,    -1,    54,    -1,  1680,    -1,
      32,    -1,   181,   182,    -1,    -1,  2493,    -1,    -1,  1736,
      -1,  2517,    -1,    -1,  2497,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2350,    -1,    -1,  2497,   414,    -1,    -1,
    2536,  2537,    -1,    -1,   181,   182,    -1,  1904,  1765,    -1,
      -1,    -1,    -1,   465,   466,   467,   104,   469,   470,   471,
     472,   473,   474,  2380,    -1,    -1,  2383,    -1,  2564,  2565,
    1666,  1788,    -1,   242,   243,    -1,  1074,   246,   247,    -1,
    1076,    -1,    -1,     8,  2026,  2581,    -1,  2583,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,  2574,    -1,  2565,
      -1,   211,    -1,    -1,    -1,   242,   243,    -1,  2581,   246,
     247,    -1,  1110,    -1,    -1,  2565,    -1,    -1,    -1,    -1,
    2581,   211,   170,    -1,  1369,    -1,  1798,   465,   466,   467,
      -1,   469,   470,   471,   472,   473,   474,    35,    -1,    -1,
      -1,  1813,  1140,  1815,   192,    -1,    -1,    -1,    -1,  2645,
      -1,    -1,    -1,    -1,    -1,    -1,    54,    -1,    -1,    -1,
      -1,    -1,  1160,    -1,  1162,   275,    -1,    -1,    -1,  2026,
     646,    -1,    -1,  1171,    -1,  1173,    -1,   653,    -1,    -1,
      -1,   350,   351,    -1,    -1,   275,  1182,  1904,    -1,   211,
      -1,    -1,   240,  2135,    -1,    -1,   244,    -1,    -1,    -1,
    2142,    -1,    -1,    -1,    -1,    -1,   104,  1205,   256,    -1,
      -1,    -1,    -1,   350,   351,    -1,  1214,  1215,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1225,  1226,  1227,
    1228,    -1,  1230,    -1,    -1,    -1,    -1,    -1,  1236,   287,
    1238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2565,    -1,
      -1,  1249,  1250,   275,    -1,    -1,  1254,  1255,   734,    -1,
    2202,  1259,  1260,  1261,  1262,    -1,  1264,  1265,    -1,    -1,
      -1,  1867,    -1,    -1,    -1,  1947,    -1,    -1,  2135,    -1,
     756,    -1,   758,   759,   332,  2142,  1284,  1285,    -1,   458,
     459,    -1,    -1,    -1,   192,  1891,    -1,    -1,    -1,  1297,
      -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,  2026,
    1906,  1907,  1908,  1909,  1910,  1911,  1912,  1913,  1914,  1915,
      -1,   458,   459,    -1,    -1,    -1,   374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   478,   240,    -1,    -1,  2202,   244,    -1,   824,     0,
     275,   827,   828,    -1,    -1,   465,   466,   467,   256,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2315,    -1,   465,   466,   467,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,  2059,    -1,   287,
      -1,  2063,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2350,    -1,
      -1,    -1,    -1,    -1,  2086,  2087,    -1,  1662,  2135,    -1,
      35,    -1,    -1,  1419,  1420,  2142,    -1,    -1,  1424,    -1,
      -1,    -1,    -1,    -1,   332,    -1,    -1,    -1,  2380,    54,
      91,  2383,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   354,    -1,  2315,    -1,
      -1,    -1,    -1,  1459,  1460,    -1,    -1,    -1,    -1,    -1,
      -1,  1716,    -1,    -1,    -1,    -1,   374,    -1,  1476,    -1,
      -1,    -1,    -1,    -1,    -1,  2202,    -1,    -1,    -1,   104,
     105,  1736,   143,  2350,    -1,    -1,    -1,    -1,   113,    -1,
      -1,    -1,  2174,    -1,   143,   156,    -1,    -1,    49,  1507,
     161,   987,   988,    -1,    -1,   166,  1514,   156,    -1,    -1,
    1765,    -1,   161,  2380,   175,    -1,  2383,   178,     8,    -1,
    1528,    11,    -1,    -1,  1532,    -1,    -1,  1535,    -1,  1537,
     465,   466,   467,  1788,   469,   470,   471,   472,   473,   474,
      -1,    -1,    93,    -1,    -1,   170,   207,    -1,    -1,    -1,
      40,    -1,    -1,    -1,  2236,    -1,    -1,    47,   207,  2241,
      -1,    -1,  2244,    -1,    -1,   226,    -1,   192,   119,    -1,
    1056,  1057,    -1,    -1,    -1,  1583,    -1,   226,  1064,    -1,
    1066,  1067,    72,    -1,    -1,    -1,   137,    -1,  2315,    -1,
     141,    -1,    -1,    -1,    -1,  1081,    -1,  1083,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
    1096,   162,   273,  2565,   165,   240,    -1,    -1,   279,   244,
      -1,   270,    -1,  2350,    -1,    -1,    -1,    -1,   179,    -1,
     279,   256,    -1,   258,    -1,  1643,    -1,    -1,    -1,    -1,
    1648,    -1,  2324,    -1,  1652,  1653,  1654,  1655,    -1,  1904,
      -1,   141,    -1,  2380,    -1,    -1,  2383,    -1,  1666,    -1,
      -1,    -1,   287,  2345,    -1,  1673,    -1,    -1,    -1,  1677,
      -1,    -1,    -1,   334,    -1,    -1,    -1,    -1,  2284,    -1,
      -1,   171,    -1,    -1,    -1,  1693,  1694,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2376,   185,    -1,    -1,  2565,    -1,
     190,    -1,  2384,    -1,    -1,  1191,  1192,   332,    -1,    -1,
    2316,  2317,   263,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     271,  1729,    -1,  2329,    -1,    -1,   387,    -1,    -1,   354,
      -1,  1737,  1738,  1739,  1740,   225,    -1,  1743,  1744,  1745,
    1746,  1747,  1748,  1749,  1750,  1751,  1752,    -1,    -1,   374,
      -1,   376,   413,    -1,   379,  2437,    -1,  1243,    -1,    -1,
     421,    -1,   313,    -1,   413,    -1,    -1,  1253,    -1,    -1,
    1256,  2026,    -1,    -1,    -1,    -1,   437,    -1,   439,   440,
      -1,    -1,    -1,    -1,    -1,   275,  1792,  1793,  2394,    -1,
      -1,    -1,    -1,    -1,  1802,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1810,  1811,  1812,  1813,    -1,  1815,  1816,    -1,
      -1,  2493,  1820,  1821,    -1,   476,    -1,    -1,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
     479,   480,    -1,    -1,    -1,    -1,     8,    -1,  2565,    11,
      -1,  1849,  1328,    15,    16,    17,    -1,    -1,    -1,    -1,
       0,    -1,    -1,   478,    -1,  1341,    -1,  1865,    -1,  1867,
      -1,    -1,    -1,  1871,  1872,  1873,    -1,  1875,    -1,    -1,
      -1,    -1,    -1,  1359,    -1,   365,    -1,    -1,    -1,    -1,
    2135,    -1,    -1,  1891,    -1,  1893,    -1,  2142,    -1,    -1,
      -1,    -1,  2574,    -1,    -1,    -1,    -1,    -1,  1906,  1907,
    1908,  1909,  1910,  1911,  1912,  1913,  1914,  1915,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1930,    -1,    -1,    -1,     0,    -1,    -1,  1937,
      -1,    -1,    -1,    -1,    -1,   539,   540,    -1,    -1,    -1,
    1948,    91,    -1,  1951,    -1,    -1,    -1,  2202,    -1,    -1,
    1958,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   595,   596,   143,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,
      -1,   161,    -1,    -1,    -1,    -1,   166,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   175,    -1,    -1,   178,    -1,
      -1,  2039,  1518,    -1,  2042,  2043,  2044,  2045,    -1,   211,
      -1,  2049,  2050,    -1,  2052,    -1,    -1,  2055,    -1,    -1,
     654,  2059,    -1,    -1,    -1,  2063,    -1,   207,    -1,    -1,
    2315,  2069,    -1,  1549,  1550,    -1,   670,    -1,    -1,   143,
      -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,
    2088,    -1,   156,    -1,    -1,  2093,    -1,   161,    -1,  2097,
      -1,    -1,   166,    -1,   698,  2350,    -1,  2105,    -1,    -1,
      -1,   175,    -1,   275,   178,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   717,   718,   719,    -1,   721,    -1,    -1,
     270,    -1,  2130,   273,    -1,  2380,    -1,    -1,  2383,   279,
      -1,    -1,    -1,   207,    -1,    -1,    -1,   741,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,  2167,
      -1,    -1,    -1,    -1,    -1,  2173,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,  2184,    -1,    15,    16,
      17,    -1,    -1,    -1,   334,    -1,   790,    -1,    -1,    -1,
     794,   795,    -1,  2199,    -1,    32,   270,    -1,    -1,   273,
      -1,    -1,    -1,    40,    -1,   279,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,  1700,  1701,    -1,    -1,  2226,  2227,
      -1,  1707,    -1,  2231,    -1,    -1,  2234,    -1,  2236,    -1,
      -1,    -1,    -1,  2241,    -1,    72,  2244,   387,  2246,    -1,
     735,  2249,    -1,   847,   848,   849,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2263,    -1,    -1,    -1,    -1,
     334,    -1,    -1,   413,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   421,    -1,    -1,    -1,  2283,  2284,    -1,   773,  2285,
      -1,    -1,    -1,    -1,  2292,    -1,    -1,   437,    -1,   439,
     440,    -1,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,  2316,  2317,
    2565,    -1,    -1,   387,    -1,    -1,    -1,    -1,  2326,    -1,
      -1,  2329,    -1,    -1,    -1,    -1,   476,    -1,    -1,   479,
     480,   481,    -1,  2341,   171,    -1,  2344,    -1,    -1,   413,
      -1,    -1,    -1,  2349,   211,    -1,    -1,   421,   185,    -1,
      -1,    -1,    -1,   190,   958,  2363,    -1,   852,    -1,    -1,
      -1,    -1,   857,   437,    -1,   439,   440,    -1,  2376,    -1,
      -1,    -1,    -1,  2381,   211,   212,    -1,    -1,    -1,    -1,
      -1,    -1,  2390,    -1,    -1,    -1,  2394,    -1,   225,    -1,
      -1,    -1,    -1,    -1,    -1,  2403,    -1,    -1,    -1,    -1,
      -1,    -1,   476,    -1,    -1,   479,   480,   481,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2425,  1904,    -1,
      -1,   258,    -1,    -1,   261,    -1,    -1,    -1,  2436,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,
      -1,   278,    -1,    -1,    -1,     8,    -1,  1051,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,  2464,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2473,    -1,    -1,  1072,  2477,
      -1,  1075,    -1,  2481,  1078,    -1,    -1,    40,  1964,    -1,
      -1,  1085,  1086,    -1,    47,    -1,    -1,    -1,    -1,  2497,
    2498,  2499,  2500,  1097,    -1,    -1,    -1,    -1,    -1,  1103,
    1104,  1105,  1106,    -1,    -1,    -1,    -1,  1111,  1112,    72,
      -1,    -1,  1116,    -1,    -1,    -1,  1120,    -1,    -1,  1123,
    1124,  1125,  1126,  1127,  1128,  1129,  1130,  1131,   365,    -1,
    1134,    -1,    -1,  2541,    -1,    -1,    -1,  1141,    -1,  1143,
      -1,    -1,  2550,    -1,  2552,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2561,  1049,    -1,    -1,    -1,    -1,    -1,
    1164,    -1,    -1,    -1,    -1,    -1,    -1,  2575,    -1,    -1,
      -1,    -1,    -1,  2581,    -1,    -1,  1071,    -1,    -1,    -1,
      -1,  1076,    -1,    -1,    -1,    -1,    -1,  1191,  1192,    -1,
      -1,  2599,  1087,  1088,  1089,    -1,  1091,    -1,   465,   466,
     467,    -1,   469,   470,   471,   472,   473,   474,   171,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   185,    -1,    -1,   462,    -1,   190,   465,   466,
     467,    -1,   469,   470,   471,   472,   473,   474,  2124,    -1,
      -1,    -1,    -1,  2129,  1139,   482,    -1,     0,   211,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2143,  2144,    -1,
      -1,    -1,   225,    -1,    -1,    18,  1270,    -1,    -1,  1273,
    1274,    -1,  1276,    -1,    -1,    28,    -1,    30,    31,    -1,
      -1,    -1,    -1,  1178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    46,    -1,  1190,    -1,    -1,   261,  1303,
    1195,    -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   275,    -1,    67,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    78,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    91,  1343,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,  1376,    -1,    -1,    -1,    -1,  1381,    -1,    -1,
     133,    -1,    -1,    -1,    -1,    -1,   139,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,    -1,
      -1,     3,   365,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,  1421,    -1,    -1,
    2306,  2307,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2315,
      32,    -1,  1436,    35,  1438,  1439,   189,    -1,    40,    -1,
    1444,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,  1478,   228,    -1,  1481,    32,  1483,
      -1,    -1,    -1,    -1,  1379,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,   462,
      -1,    -1,   465,   466,   467,  1400,   469,   470,   471,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,  1417,    -1,  1419,  1420,    -1,  1422,    -1,  1424,
      -1,    -1,    -1,  1428,    -1,    -1,    -1,    -1,  1542,    -1,
    1435,    -1,    -1,    -1,    -1,  1440,    -1,   300,    -1,    -1,
     303,  1446,    -1,  1557,    -1,  1450,  1451,  1452,  1453,    -1,
      -1,    -1,    -1,    -1,  1459,  1460,    -1,  1462,  1463,   171,
      -1,  1575,    -1,    -1,    -1,    -1,    -1,    -1,   331,  1474,
      -1,    -1,  1477,   185,    -1,    -1,   339,    -1,   190,    -1,
    1485,  1486,  1487,  1488,  1489,  1490,  1491,  1492,  1493,  1494,
     353,    -1,    -1,    -1,    -1,    -1,    -1,   360,    -1,   211,
     212,   364,    -1,    -1,    20,    -1,    -1,   171,    -1,    -1,
      -1,   374,    -1,   225,    -1,    -1,    -1,    -1,    -1,  1633,
    1525,   185,    -1,    -1,   387,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   258,   211,   212,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,   422,
      -1,   225,    -1,   275,   427,    -1,   278,    -1,    -1,  2565,
      -1,    -1,    88,    -1,    -1,    -1,    -1,   440,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   258,    -1,    -1,   261,    -1,  1713,
      -1,   464,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1723,
      -1,   275,    -1,  1727,   278,   478,  1730,    -1,   481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,
      -1,  1636,  1637,  1638,    -1,   151,    -1,    -1,    -1,    -1,
      -1,    -1,  1756,  1757,    -1,    -1,    -1,   163,    -1,    -1,
      -1,    -1,   168,   365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1776,    -1,    -1,  1779,  1671,  1781,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1789,    -1,   193,    -1,    -1,
      -1,    -1,    -1,  1797,  1798,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,    -1,    -1,    -1,  1712,    -1,    -1,
      -1,    -1,  1826,  1718,    -1,    -1,    -1,    -1,    -1,    -1,
     236,  1835,    -1,   239,    -1,    -1,    -1,    -1,  1733,  1734,
    1735,    -1,  1737,  1738,  1739,  1740,    -1,  1851,  1743,  1744,
    1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,    -1,
     462,    -1,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,  1773,    -1,
      -1,    -1,  1777,  1778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   298,    -1,    -1,    -1,  1791,  1792,  1793,  1794,
      -1,  1796,    -1,    -1,    -1,    -1,   312,    -1,   462,    -1,
      -1,   465,   466,   467,    -1,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,   479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   343,    -1,    -1,
     346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
     376,    11,    -1,  1868,  1978,    15,    16,    17,    -1,    -1,
      -1,   387,    -1,    -1,    -1,    -1,     8,    -1,   394,    11,
      -1,    -1,    32,    15,    16,    17,    -1,   403,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,  2020,  2021,    40,    -1,
      -1,  2025,    -1,    -1,    -1,    47,  2030,   433,    -1,  2033,
    2034,    -1,    72,    -1,  2038,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2084,    -1,    -1,    -1,  1979,    -1,    -1,    -1,  1983,  1984,
      -1,  1986,    -1,    -1,  1989,  1990,  1991,  1992,    -1,    -1,
      -1,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,  2004,
    2005,  2006,  2007,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2126,    -1,  2019,    -1,    -1,  2022,    -1,  2024,
      -1,   171,    -1,  2028,    -1,    -1,  2031,  2032,    -1,    -1,
    2035,  2036,    -1,    -1,     8,   185,    -1,    11,    -1,   171,
     190,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,   211,   212,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,  2076,    -1,    47,    -1,   225,    -1,    -1,  2083,   211,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2096,    -1,   225,    -1,    -1,  2210,  2211,    72,    -1,
    2214,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   258,    -1,   278,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2251,  2252,    -1,
      -1,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,
      -1,  2265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2195,    -1,    -1,    -1,  2199,    -1,    -1,   171,    -1,  2204,
    2205,  2206,    -1,    -1,  2209,    -1,    -1,  2212,  2213,    -1,
      -1,   185,  2217,    -1,    -1,   365,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    -1,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,  2372,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2285,  2395,    -1,    -1,   258,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2410,    -1,  2303,    -1,
      -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   462,    -1,    -1,   465,   466,   467,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,   479,
     462,    -1,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,  2348,  2349,    -1,    -1,   479,  2353,  2354,
    2355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2388,  2389,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,    -1,    -1,  2401,    -1,    -1,    -1,
      -1,    -1,    -1,  2517,    -1,    -1,    -1,    -1,  2413,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2536,  2537,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2583,
      -1,  2476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   462,    -1,
    2495,   465,   466,   467,    -1,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,  2509,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,  2645,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,  2572,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,  2586,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,   128,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,    -1,    -1,   469,   470,   471,    -1,    -1,    -1,
      -1,    -1,    -1,   478,   479,    -1,    -1,    -1,   483,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,    -1,    -1,    -1,    -1,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,   479,    -1,    -1,    -1,   483,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,    -1,    -1,    -1,    -1,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,
     483,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,   166,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,   221,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,
      -1,   483,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,
     471,    -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,
      -1,    -1,   483,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,
      -1,    -1,    -1,   483,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,
     479,    -1,    -1,    -1,   483,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,
      -1,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     478,   479,    -1,    -1,    -1,   483,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,
      -1,    -1,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   478,    -1,    -1,    -1,    -1,   483,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
     166,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,    -1,    -1,
      -1,    -1,    -1,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   478,    -1,    -1,    -1,    -1,   483,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,    -1,    -1,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,   483,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
      -1,    -1,    -1,    -1,    -1,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,   483,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,    -1,    -1,    -1,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,
     483,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,
      -1,   483,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,    -1,
      -1,    -1,   483,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,
      -1,    -1,    -1,   483,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,   470,    -1,    -1,     3,     4,     5,     6,     7,   478,
       9,    10,    -1,    -1,   483,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,
      -1,    -1,    -1,    -1,   483,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     478,    -1,    -1,    -1,    -1,   483,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,
      -1,    -1,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   478,    -1,    -1,    -1,    -1,   483,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,    -1,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,   470,     3,    -1,    -1,    -1,    -1,
      -1,    -1,   478,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,   167,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,   389,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,    -1,   464,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   478,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   478,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,   389,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
      -1,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   478,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,    -1,    -1,     3,    -1,    -1,    -1,    -1,   469,   470,
     471,    -1,    -1,    -1,    -1,    -1,    -1,   478,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,    -1,    -1,   464,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   478,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,    -1,    -1,   464,     3,    -1,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     478,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,    -1,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   478,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,    -1,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   478,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,    -1,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   478,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,    -1,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,    -1,
      -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,   478,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,    -1,
     149,   150,   151,   152,    -1,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,    -1,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,    -1,   282,   283,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
     459,   460,   461,    -1,     3,    -1,   465,   466,   467,     8,
     469,   470,   471,   472,   473,   474,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,    -1,    -1,    -1,   465,   466,   467,    -1,
     469,   470,   471,   472,   473,   474,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      32,    15,    16,    17,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,
      -1,    11,    -1,    47,    -1,    15,    16,    17,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    32,    15,    16,    17,    -1,    -1,    72,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,     8,    -1,
      -1,    11,    72,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      72,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,   171,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    72,   185,    -1,    -1,    -1,   171,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,   211,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   171,    -1,   225,    -1,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,   171,
     190,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   185,    -1,    -1,   258,    -1,   190,   261,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,   258,   225,   278,   261,    -1,   211,
     212,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   275,    -1,   225,   278,   185,    -1,    -1,    -1,   171,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,
      -1,   261,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,   211,   212,    -1,    -1,   275,   258,    -1,   278,   261,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,   211,
     212,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,   258,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,    -1,   275,   258,    -1,   278,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,   365,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     462,    -1,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    72,   365,    -1,   479,   462,    -1,
      -1,   465,   466,   467,    -1,   469,   470,   471,   472,   473,
     474,    -1,    -1,   365,    -1,   479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,   462,    -1,    -1,   465,   466,   467,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,   479,
     462,    -1,    -1,   465,   466,   467,    40,   469,   470,   471,
     472,   473,   474,    47,    -1,    -1,     8,   479,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      32,    -1,   462,   171,    -1,   465,   466,   467,    40,   469,
     470,   471,   472,   473,   474,    47,    -1,   185,    -1,   479,
     462,    -1,   190,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,   479,    -1,    -1,
      72,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     258,    -1,    -1,   261,    -1,    -1,    -1,   171,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,    -1,
     278,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,    -1,   365,    -1,    -1,
      -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   365,    -1,    -1,   462,    -1,    -1,   465,   466,   467,
      -1,   469,   470,   471,   472,   473,   474,    -1,    -1,    -1,
      -1,   479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   462,    -1,
      -1,    -1,    -1,    -1,    -1,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     462,     3,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,   477,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,    -1,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   471,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     3,     4,
       5,    -1,    -1,    -1,     9,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     3,     4,     5,
      -1,    -1,    -1,     9,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,    -1,    -1,     8,    -1,
      -1,    11,    -1,   469,   470,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    32,    15,    16,    17,    36,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,     8,    -1,
      -1,    11,    72,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      72,    -1,    32,    15,    16,    17,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      32,    -1,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,   122,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,   171,    -1,    -1,    -1,    -1,    -1,    47,    -1,   161,
      -1,    -1,    -1,    -1,   166,   185,    -1,    -1,    -1,   171,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     160,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,   211,
     212,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,   225,    11,   185,    -1,    -1,    -1,   171,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,
      -1,   261,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,   211,   212,    40,    -1,   275,   258,    -1,   278,   261,
      47,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,   211,
     212,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,    -1,
      -1,   171,    -1,   225,    -1,    72,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,   258,    -1,
     190,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   258,    -1,   278,   261,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,    -1,   225,   278,    -1,    -1,    -1,
       8,   301,    -1,    11,    -1,   365,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    32,    -1,    -1,    35,   258,    -1,
      -1,   261,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,   171,   275,    -1,    -1,   278,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,
      -1,   421,    -1,   190,    72,   365,   296,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   225,    -1,
      -1,    -1,   462,    -1,    -1,   465,   466,   467,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
     462,    -1,    -1,   465,   466,   467,    40,   469,   470,   471,
     472,   473,   474,    47,    -1,   365,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      32,    -1,   462,   171,    -1,   465,   466,   467,    40,   469,
     470,   471,   472,   473,   474,    47,    -1,   185,    -1,    -1,
     462,    -1,   190,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,   141,    -1,    15,
      16,    17,   462,    -1,    -1,   465,   466,   467,   365,   469,
     470,   471,   472,   473,   474,    -1,    32,    -1,    -1,    -1,
     258,    -1,    -1,   261,    40,    -1,    -1,   171,    -1,    -1,
      -1,    47,    -1,    -1,    -1,     8,    -1,   275,    11,    -1,
     278,   185,    15,    16,    17,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,    32,
      -1,    -1,    -1,    -1,   166,    -1,    -1,    40,    -1,   171,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,   185,    -1,    -1,    -1,     8,   190,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    72,
      -1,    -1,    -1,    -1,    -1,   462,    -1,    -1,    -1,   211,
     212,    32,   469,   470,   471,   472,   473,   474,    -1,    40,
      -1,     8,    -1,   225,    11,    -1,    47,   365,    15,    16,
      17,   275,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    40,    -1,   171,   258,    -1,    -1,   261,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,
      40,    -1,    -1,   275,   190,    22,   278,    47,    -1,    -1,
      -1,    28,    -1,    -1,    -1,    72,    -1,    -1,    35,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,    -1,   171,    -1,
      -1,    -1,    72,    -1,    -1,    22,    -1,    54,    -1,   225,
      -1,    28,   185,    -1,    -1,    -1,    -1,   190,    35,     8,
      -1,   365,    11,    -1,   462,    -1,    -1,   465,   466,   467,
      -1,   469,   470,   471,   472,   473,   474,    54,   211,   212,
      -1,    -1,   258,    -1,    -1,   261,    -1,    -1,    -1,    -1,
     171,    40,   225,    -1,    -1,    -1,    -1,   104,    47,   275,
      -1,    -1,   278,   365,   185,    -1,    -1,    -1,    -1,   190,
      -1,   141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    72,   171,   258,   133,   104,   261,    -1,
     211,   212,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,
      -1,   171,   275,   190,   225,   278,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   185,   133,    -1,   462,    -1,
     190,    -1,    -1,    -1,    -1,   469,   470,   471,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   258,   225,    -1,
     261,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,   365,
      -1,    -1,   141,    -1,   275,   225,    -1,    -1,    -1,    -1,
     462,    -1,    -1,   465,   466,   467,    -1,   469,   470,   471,
     472,   473,   474,    -1,    -1,   192,    -1,    -1,    -1,   395,
      -1,    -1,   171,    -1,    -1,    -1,    -1,    -1,   275,    -1,
      -1,    -1,   365,   240,    -1,    -1,   185,   244,    -1,    -1,
      -1,   190,    -1,    -1,    -1,   275,    -1,    -1,    -1,   256,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   240,    -1,    -1,    -1,   244,    -1,    -1,
     277,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,   256,
     287,    -1,    -1,    -1,   365,    -1,   462,    -1,    -1,   465,
     466,   467,    -1,   469,   470,   471,   472,   473,   474,    -1,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   365,    -1,
     327,    -1,    -1,    -1,   331,   332,   275,    -1,    -1,   462,
      -1,    -1,   465,   466,   467,   365,   469,   470,   471,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,
     327,    -1,    -1,   360,   331,   332,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,
      -1,   462,    -1,   360,   465,   466,   467,    -1,   469,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   462,   365,   424,   465,   466,
     467,    -1,   469,   470,   471,   472,   473,   474,    -1,    -1,
      -1,    -1,   462,    -1,    -1,    -1,    -1,    -1,    -1,   469,
     470,   471,   472,   473,   474,    -1,    -1,   424,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,   462,     5,    -1,    -1,    -1,    -1,    -1,
     469,   470,   471,   472,   473,   474,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,   389,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,   389,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,   225,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,    -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     3,     4,    -1,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
      -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,    -1,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,    -1,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,    -1,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,    -1,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,    -1,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,    -1,   430,    -1,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,    -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
      -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,    -1,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,    -1,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,    -1,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,    -1,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,    -1,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,    -1,   430,    -1,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,    -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
      -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,    -1,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,    -1,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,    -1,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,   428,    -1,   430,    -1,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,    -1,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,    -1,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,    -1,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,    -1,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,   388,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,    -1,    -1,   400,   401,   402,   403,
     404,    -1,   406,   407,   408,   409,   410,   411,   412,    -1,
      -1,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,   428,    -1,   430,    -1,   432,   433,
     434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,    -1,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,    -1,   354,
     355,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,   388,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,    -1,    -1,   400,   401,   402,   403,   404,
      -1,   406,   407,   408,   409,   410,   411,   412,    -1,    -1,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,   428,    -1,   430,    -1,   432,   433,   434,
     435,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
      -1,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,    -1,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,    -1,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,   388,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,    -1,    -1,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,    -1,    -1,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,   428,    -1,   430,    -1,   432,   433,   434,   435,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,    -1,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
      -1,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,    -1,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,   388,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,    -1,    -1,   400,   401,   402,   403,   404,    -1,   406,
     407,   408,   409,   410,   411,   412,    -1,    -1,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,    -1,   430,    -1,   432,   433,   434,   435,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,    -1,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,    -1,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,    -1,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,    -1,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
     388,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
      -1,    -1,   400,   401,   402,   403,   404,    -1,   406,   407,
     408,   409,   410,   411,   412,    -1,    -1,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,    -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,    -1,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,   388,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
      -1,   430,    -1,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,    -1,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,    -1,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,   388,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,    -1,    -1,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,    -1,    -1,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,    -1,
     430,    -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,    -1,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,    -1,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,   388,    -1,   390,
     391,   392,   393,   394,    -1,   396,   397,    -1,    -1,   400,
     401,   402,   403,   404,    -1,   406,   407,   408,   409,   410,
     411,   412,    -1,    -1,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,   428,    -1,   430,
      -1,   432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
      -1,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,    -1,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,    -1,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,    -1,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,   388,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,    -1,    -1,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,    -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,   428,    -1,   430,    -1,
     432,   433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    -1,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    -1,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,    -1,   149,   150,   151,   152,
      -1,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,    -1,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,    -1,   259,   260,   261,   262,
      -1,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,    -1,   282,
     283,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,    -1,   300,   301,    -1,
     303,   304,   305,    -1,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
      -1,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
      -1,    -1,   385,   386,    -1,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,    -1,    -1,   400,   401,    -1,
     403,    -1,    -1,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,   446,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   458,   459,   460,   461,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    -1,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      99,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,    -1,
     149,   150,   151,   152,    -1,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,    -1,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,    -1,
     259,   260,   261,   262,    -1,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,    -1,   282,   283,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
      -1,   300,   301,    -1,   303,   304,   305,    -1,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,    -1,   354,   355,   356,   357,   358,
      -1,   360,    -1,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,    -1,    -1,   385,   386,    -1,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,    -1,
      -1,   400,   401,    -1,   403,    -1,    -1,   406,   407,   408,
     409,   410,   411,   412,    -1,    -1,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,   446,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,
     459,   460,   461
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   109,   123,   133,   139,   147,   149,   150,   189,   228,
     300,   303,   331,   339,   353,   360,   364,   374,   387,   422,
     427,   440,   464,   478,   486,   487,   488,   489,   500,   501,
     503,   507,   521,   522,   524,   526,   533,   535,   581,   587,
     590,   591,   608,   609,   610,   611,   612,   613,   657,   780,
     783,   786,   793,   794,   795,   796,   797,   804,   808,   814,
     816,   821,   825,   826,   829,   830,   832,   833,   835,   400,
     443,   534,   193,   346,   354,   387,   433,   534,     3,    18,
      19,    20,    21,    22,    23,    24,    25,    27,    28,    29,
      37,    38,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    53,    54,    55,    56,    57,    58,
      61,    62,    63,    64,    65,    67,    68,    69,    70,    71,
      73,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      85,    86,    87,    88,    89,    90,    92,    93,    94,    95,
      99,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   114,   116,   117,   118,   119,   120,   121,   123,   124,
     125,   126,   127,   130,   131,   132,   133,   134,   136,   137,
     138,   140,   141,   142,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   155,   157,   158,   159,   160,   162,
     164,   165,   167,   168,   169,   170,   171,   172,   174,   176,
     177,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   191,   192,   193,   194,   195,   196,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   208,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   222,   223,
     224,   225,   227,   228,   229,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   259,   260,   261,   262,   264,   265,   266,   267,   268,
     269,   271,   272,   275,   276,   277,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   354,   355,   356,   357,   358,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   385,   386,   388,   389,   390,   391,   392,
     393,   394,   396,   397,   400,   401,   402,   403,   404,   406,
     407,   408,   409,   410,   411,   412,   415,   416,   417,   418,
     419,   422,   423,   424,   425,   426,   427,   428,   430,   431,
     432,   433,   434,   435,   438,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   710,   767,   771,   773,
     838,   839,   840,   534,    49,   478,   603,   168,   172,   229,
     236,   278,   346,   391,   393,   414,   417,   579,   588,   792,
       3,    26,   303,   765,   771,   838,    20,    73,    88,   142,
     151,   163,   168,   193,   236,   239,   298,   312,   343,   346,
     354,   357,   376,   387,   394,   403,   433,   582,   583,   586,
     534,   765,    91,   431,   478,   503,   590,   608,   800,   804,
     821,   835,   106,   106,     5,   770,   815,   771,   765,    26,
     396,   400,   771,   827,   828,   831,   534,    26,   128,   620,
     621,   229,   346,   358,   396,   809,   810,   831,   534,   274,
     668,   763,   771,   167,   478,   818,   478,   319,   614,   615,
     765,   614,   609,   610,   613,     0,   481,   118,   203,   419,
     143,   207,   279,   413,   622,   623,   609,   611,   612,   482,
     431,   798,    26,   396,   400,   831,   184,   763,   765,   184,
     763,   184,   668,   184,   763,   478,   476,   480,   754,   756,
     503,   590,   608,   782,   821,   763,   391,   393,   391,   393,
     329,   184,   771,   319,   354,   387,   433,   763,   193,    26,
     765,   241,   403,   105,   387,   433,   349,   184,   584,   771,
     774,   184,   764,   765,   184,   765,   478,   525,   579,   800,
       3,   427,   801,   803,   804,   806,   807,   838,   839,   840,
     798,   770,   770,   467,   478,   478,   781,   461,   213,   480,
     273,     4,     6,     7,     8,     9,    10,    48,    50,    51,
      59,    60,    63,    64,    71,    73,    96,    97,    98,    99,
     100,   101,   102,   110,   111,   113,   132,   148,   153,   154,
     159,   205,   206,   208,   230,   231,   251,   253,   258,   263,
     264,   266,   275,   285,   299,   316,   341,   359,   368,   383,
     396,   397,   402,   404,   405,   420,   428,   462,   469,   470,
     471,   478,   483,   609,   681,   684,   687,   688,   689,   691,
     692,   693,   694,   696,   697,   707,   709,   710,   711,   713,
     726,   730,   748,   753,   760,   761,   767,   768,   769,   770,
     771,   759,   760,   809,   770,   809,   461,   166,   398,   467,
     478,   763,   471,   756,     3,   165,   167,   431,   804,   817,
     819,   165,   820,   707,   734,   614,   482,   478,   776,   479,
     479,   488,   166,   209,   668,   822,    26,   128,   619,   619,
      53,   619,   156,   161,   226,   270,   628,   630,   631,   650,
     652,   653,   654,   622,   623,   478,   763,   461,   213,   148,
      22,    28,   133,   277,   327,   331,   360,   424,   494,   497,
     498,   327,   148,    35,    54,   104,   192,   240,   244,   256,
     287,   327,   332,   354,   360,   374,   497,   527,   530,   148,
     327,   360,   497,   148,   327,   360,   497,    26,   128,   429,
     471,   479,   707,   735,   736,   773,   777,   707,   755,     3,
      26,    30,    31,    32,    33,    34,    35,    36,    39,    52,
      59,    60,    66,    72,    74,    84,    91,    96,    97,    98,
     100,   101,   102,   113,   115,   122,   128,   129,   135,   139,
     143,   154,   156,   161,   163,   166,   173,   175,   178,   190,
     197,   207,   209,   220,   221,   226,   230,   231,   258,   263,
     270,   273,   274,   278,   279,   296,   306,   321,   334,   353,
     359,   370,   384,   387,   395,   398,   399,   405,   413,   414,
     420,   421,   429,   436,   437,   439,   440,   471,   766,   778,
     838,   839,   840,   841,   754,   479,   478,   569,   579,   258,
     784,   433,   184,   763,   184,   763,   837,   763,   478,   589,
      80,   789,   444,    81,   125,   290,   392,   148,    57,   333,
     482,   585,   480,   775,   148,   482,   585,   148,   273,   734,
     387,   479,   482,     4,   154,   273,   405,   469,   470,   529,
     532,   769,   770,   799,   801,   802,   805,   800,   478,   598,
     602,   529,   805,   811,   813,   735,     3,    48,    50,    51,
      63,    64,   110,   111,   159,   205,   206,   208,   251,   253,
     266,   316,   361,   368,   396,   397,   428,   678,   680,   682,
     684,   686,   688,   689,   690,   692,   693,   696,   697,   737,
     773,   838,    35,   224,   771,   478,   757,   430,   695,   707,
     752,   478,   695,   695,   478,   161,   478,   478,   478,   683,
     683,   302,   609,   478,   478,   685,   478,   478,    63,    64,
     695,   707,   478,   683,   478,   478,   478,   478,   478,   442,
     464,   478,   698,   478,   698,   478,   478,   707,   707,   707,
     609,   707,   734,   757,   756,   770,   478,   478,   769,   770,
       3,     8,    11,    15,    16,    17,    32,    35,    40,    47,
      72,   171,   185,   190,   211,   212,   225,   258,   261,   275,
     278,   365,   462,   465,   466,   467,   469,   470,   471,   472,
     473,   474,   728,   729,   730,   732,   441,   714,   284,   707,
     209,   482,   616,   478,   770,   756,   616,     3,   113,   229,
     529,   697,   770,   812,    95,   113,   813,   113,   813,   763,
     479,   482,   798,   479,   482,   615,   764,    35,   822,   505,
     763,    35,   771,   360,   611,   611,   624,   625,   707,   611,
     158,   255,   644,   215,   256,   315,   363,   419,    26,   639,
     707,   469,   470,   640,   641,   707,   709,   650,   651,   631,
     630,   628,   629,   161,   653,   268,   655,   628,   650,   734,
     776,   224,   763,    66,    74,    84,   163,   184,   306,   414,
     550,   560,   575,   771,    74,    84,   502,    84,   502,   478,
     398,   478,   548,   235,   417,   548,    84,   482,   398,   763,
     680,   529,    53,   531,   529,   529,   104,   240,   244,    53,
     398,   440,   464,   528,   249,   346,   528,   530,   668,    84,
     398,   502,   346,   763,   398,   346,   735,   735,   736,   479,
     482,   622,   623,    13,    14,   477,   484,   398,   568,   573,
     771,   440,   601,   319,   433,   148,    91,   522,   535,   785,
     786,   833,   763,   258,   523,   527,   258,   478,   569,    35,
     569,   479,   735,    35,   184,   563,   771,   790,   584,   774,
     766,   480,   764,   765,   765,   774,   479,   184,   763,   837,
     800,   806,     4,   769,     4,   769,   600,   607,   778,    49,
      93,   119,   137,   141,   162,   165,   179,   263,   271,   313,
     604,   482,   479,   482,   680,    34,   679,   107,   108,   181,
     182,   242,   243,   246,   247,   350,   351,   458,   459,   478,
     699,   700,   701,   702,   703,   704,   705,   706,   479,   482,
     683,   775,   782,   734,   754,   478,   436,   749,   750,   707,
     734,   478,   769,   769,   734,     3,   699,   700,   701,   702,
     703,   704,   738,   739,   770,   769,   769,   769,   695,   695,
     707,     8,    15,    16,    17,   465,   466,   467,   469,   470,
     471,   472,   473,   474,   728,   733,   771,   707,   740,   469,
     470,   478,   708,   709,   730,   742,   479,   734,   707,   734,
     743,   396,   396,   769,   769,   707,    52,   166,   221,   399,
     707,   734,   746,   479,   482,   769,   707,   705,   705,   678,
     707,   707,   707,   707,     5,   778,   779,   396,    39,   384,
     758,   774,   707,   707,   478,   609,   747,   128,   154,   258,
     263,   268,   405,   415,   707,   263,   478,   707,   398,    47,
     171,   185,   190,   225,   365,   707,   707,   707,   707,   707,
     707,   707,   707,   707,   707,    26,    33,   370,   727,   175,
     157,   715,   341,   478,   726,   172,   229,   387,   391,   393,
     417,   617,   763,   761,   166,   658,   735,   658,   478,   770,
     479,   763,   817,   763,   825,   707,   479,   478,   421,   824,
     113,   286,   478,   504,   608,    35,   771,   478,   509,   518,
     520,   771,   482,    36,   122,   421,   626,   341,   342,   469,
     470,   641,   643,   709,   363,   215,   274,   482,     4,   642,
     769,   642,   341,   342,   643,   762,   763,   262,   367,   656,
     651,   629,   479,   327,   497,   478,   184,   560,   765,   215,
     258,   215,   421,   478,   553,   678,   765,   771,   184,   765,
     184,   771,    22,   133,   360,   493,   496,   543,   558,   778,
     765,   552,   572,   778,   765,   494,   765,   327,   360,   497,
     527,   529,   774,   765,   529,   774,   765,   529,   327,   360,
     497,   765,   765,   765,   765,   327,   360,   497,   765,   765,
     622,   622,   622,   429,   736,   479,   707,   707,   707,   755,
     311,   597,   479,   482,   271,   166,   398,   592,   433,   763,
     771,   579,   478,   148,   148,   225,   550,   560,   564,   567,
     576,   578,   771,   440,   442,   555,   147,   608,   440,   791,
     479,   707,   258,   273,   585,   766,   585,   273,   585,   258,
      35,   479,   482,   471,   478,   529,   599,   805,    35,   596,
     770,   596,   258,   263,   313,   596,   596,   811,    34,   679,
     476,   476,   769,   398,   398,   398,   398,   478,   678,   683,
     479,   734,   707,   135,   750,   751,    35,   479,   707,   479,
     479,   479,   479,   166,   479,   479,   479,   482,   479,   480,
     296,   741,   479,   708,   708,   707,    11,    15,    16,    17,
     190,   211,   275,   465,   466,   467,   469,   470,   471,   472,
     473,   474,   730,   708,   479,   479,   161,   166,   744,   745,
     479,   461,   461,   479,   479,    35,   746,   734,   746,   746,
     166,   479,   757,   707,   479,   479,   461,   708,   708,   141,
     734,   166,   128,   154,   263,   268,   405,   415,   478,   141,
     733,   707,   384,   758,   707,   747,   707,   398,   478,   609,
     478,   478,   283,   719,   391,   393,   391,   393,   763,   387,
     618,   618,   618,   220,   342,   478,   609,   659,   660,   661,
     668,   669,   710,   712,   713,   771,   437,   674,   622,   674,
     769,   705,   776,   782,   659,   437,   823,   427,   386,   420,
     513,   508,   517,   771,   273,   510,   771,   514,   520,   482,
     658,   467,   757,   625,   275,   728,   731,   463,   627,     4,
     769,   643,   274,   419,   640,   482,   234,   398,   707,   258,
     575,   478,   148,   478,   553,   193,   573,   536,   277,   546,
     536,    22,   133,   331,   332,   360,   490,   491,   492,   498,
     499,   148,   585,   148,   585,   543,   558,   543,   479,   482,
     539,   770,   479,   482,   467,   480,   398,   346,    84,   398,
     502,   346,   398,   398,   398,   346,   479,   479,   479,   736,
     477,   377,   378,   606,   770,   568,   597,   763,   569,   784,
     387,   573,   763,   763,   837,   763,   479,   482,   271,   548,
     271,   273,   547,   765,   440,   836,   548,    35,   148,   763,
     774,   148,   600,   594,   605,   805,   770,   770,   263,   573,
     471,   573,   770,   770,   476,   769,   477,   769,   479,   700,
     702,   703,   706,   703,   706,   706,   769,   479,   395,   707,
     139,   678,   479,   707,   707,   733,   707,   744,   678,   708,
     708,   708,   708,   128,   258,   268,   708,   708,   708,   708,
     708,   708,   708,   708,   708,   708,   707,   707,   745,   744,
     698,   698,   678,   479,   479,   479,   734,   479,   705,   707,
      32,    32,   707,   479,   707,   166,   478,   737,   707,   479,
     141,   708,   708,   141,   141,   707,   707,   623,   437,   478,
     720,   771,   618,   618,   618,   618,   763,   763,   763,   609,
     669,   166,   609,   660,   661,    35,   662,   663,   771,   482,
      92,   167,   199,   214,   223,   252,   337,   665,   663,    35,
     662,   664,   771,   464,   673,   756,   707,   175,   645,   479,
     645,   479,   479,   707,   334,   512,   426,   479,   482,   757,
      82,   512,   479,   482,   509,   823,   707,   478,   627,   158,
     219,   274,   763,   765,   479,   148,   573,   560,   573,   536,
     563,   479,   115,   197,   256,   258,   559,   478,   570,   170,
     113,   183,   258,   548,   528,   105,   113,   170,   258,   376,
     379,   530,   548,   360,   492,   408,   765,   771,   496,   572,
     257,   275,   361,   469,   470,   529,   537,   574,   678,   731,
     770,   773,   841,   778,   765,   765,   765,   765,   765,   765,
     765,   765,   765,   765,   622,   528,   606,   478,   791,   184,
     763,   479,   523,   478,    35,   557,   555,   564,    78,   525,
     105,   256,   608,   563,   421,   788,   585,   837,   479,   482,
     573,   769,   477,   477,   479,   707,   479,   479,   745,   166,
     128,   268,   478,   479,   707,   707,   707,   737,   479,   707,
      32,    32,   707,   707,   141,   479,   479,   707,   721,   771,
     763,   763,   763,   763,   663,   664,   478,   479,     5,   771,
     772,   389,   636,   637,   478,   660,   214,   282,   666,   660,
     666,   214,   665,   666,   214,   637,   478,   771,   637,   478,
     280,    53,   178,   649,   770,   649,   770,   760,   608,   286,
     608,   508,   273,   478,   506,   467,   520,   512,   733,   536,
     560,   479,   479,   440,   566,   116,   186,   195,   115,   423,
     543,   561,    66,    72,    84,   113,   115,   170,   197,   258,
     263,   306,   321,   414,   541,   542,   554,    29,    53,   580,
     184,   263,   529,   707,   580,   263,   469,   470,   532,   771,
     678,   585,   585,   773,   775,   467,   398,   398,   479,   598,
     421,   593,   595,   573,    35,   258,   478,   791,   567,   147,
     608,   145,   191,   547,   118,   133,   305,   836,   105,   440,
     834,   273,   771,   787,   478,    35,   605,   477,   708,   166,
     478,   737,   479,   707,   707,   707,   479,   292,   722,   670,
     671,   712,   662,   478,     4,     9,   632,   634,   635,   771,
     764,   660,   273,   421,   667,   660,   214,   660,   675,   676,
     771,   478,   675,   771,   478,   646,   647,   648,   707,   707,
     439,   716,   716,   513,    84,   478,   511,   519,   712,   771,
     129,   707,   479,   321,   566,   478,   556,   536,   479,   482,
     478,   774,   765,   708,   580,   116,   186,   115,   263,   215,
     763,   566,   113,    35,   148,    72,   677,   775,   473,   537,
     765,   765,   528,   120,   479,   608,   148,    35,   479,   765,
     836,    26,    77,    85,   114,   183,   194,   376,   379,   551,
     551,   342,   342,    58,    66,   229,   763,   519,   708,   737,
     479,    53,   622,   479,   482,    35,   672,   764,   295,   473,
     295,   342,   473,   478,   478,   479,   707,   478,   660,   667,
     479,   482,   678,   675,   479,   479,   482,   717,   718,   771,
     421,   633,   633,   426,   765,   707,   479,   482,    72,   515,
     515,   259,   419,   763,   536,   562,   565,   778,   543,   707,
     258,   542,    35,   566,   569,   183,   774,   421,   495,   473,
     408,   598,   770,   791,   834,   763,   608,   555,   525,    66,
     276,    66,   788,   479,   479,   734,   314,   342,   723,   673,
     670,   478,   479,   771,   632,   764,   676,   677,   479,   647,
     482,    35,   344,   608,   479,   674,   511,   774,   516,   774,
     516,   360,   569,   479,   482,   467,   479,   183,   238,   577,
     478,   538,   707,   408,    35,   478,   834,   547,   836,   276,
     276,   478,   791,    47,    95,   410,   707,   724,   725,   724,
     479,   675,   479,   482,   479,   479,   718,   720,   635,   515,
     626,   626,   518,   577,   565,   537,   256,   549,   538,   167,
     291,   366,   273,   544,   545,   571,   527,   608,   519,   674,
     725,   341,   160,   301,   160,   301,   479,     9,   328,   638,
     516,   627,   627,   674,   545,   195,   118,   419,   273,   571,
     273,   544,   479,   834,   479,    32,   479,   478,   626,   536,
      57,   256,   333,   360,   540,   540,   791,   725,     9,   627,
      21,   113,   263,   674,   479
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 458 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 474 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 486 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 528 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 614:
#line 1163 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 615:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 616:
#line 1175 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 617:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 618:
#line 1186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1195 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 620:
#line 1197 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 621:
#line 1199 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 622:
#line 1203 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 623:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 624:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 625:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 626:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 627:
#line 1209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 628:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 629:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 633:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 634:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 635:
#line 1261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 636:
#line 1262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 637:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 638:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 639:
#line 1279 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 640:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 641:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 642:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 643:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 644:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 645:
#line 1310 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 1316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 647:
#line 1322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 648:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 649:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 650:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 651:
#line 1364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 652:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 653:
#line 1376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 654:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 655:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 656:
#line 1417 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1427 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 659:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 660:
#line 1444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 661:
#line 1452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 662:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 663:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 664:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 665:
#line 1468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 666:
#line 1470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 667:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 669:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 670:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 671:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 672:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 673:
#line 1511 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 674:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 675:
#line 1529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 676:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 677:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 690:
#line 1554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 691:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 692:
#line 1558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 693:
#line 1560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 694:
#line 1562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 695:
#line 1564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 696:
#line 1566 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 697:
#line 1571 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 698:
#line 1576 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 699:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 700:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 701:
#line 1595 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 702:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 703:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 704:
#line 1613 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 705:
#line 1617 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 706:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 707:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 708:
#line 1656 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 709:
#line 1664 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 710:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 711:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 712:
#line 1683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 713:
#line 1685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 714:
#line 1687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 715:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 716:
#line 1691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1693 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 718:
#line 1695 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 719:
#line 1697 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 720:
#line 1699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 721:
#line 1701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 726:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 727:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 730:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 731:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 732:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 733:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 734:
#line 1741 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 735:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 736:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 737:
#line 1758 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 738:
#line 1766 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 739:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 740:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 741:
#line 1788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 742:
#line 1796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 743:
#line 1804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 744:
#line 1822 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 745:
#line 1830 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 746:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 747:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 748:
#line 1854 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 749:
#line 1862 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 750:
#line 1878 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 751:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 752:
#line 1894 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 753:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 754:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 755:
#line 1918 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 756:
#line 1926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 757:
#line 1930 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 758:
#line 1934 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 759:
#line 1938 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 760:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 761:
#line 1950 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 762:
#line 1958 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 763:
#line 1966 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 764:
#line 1974 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 765:
#line 1994 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 766:
#line 2016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2027 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 768:
#line 2034 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 770:
#line 2061 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 2063 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 772:
#line 2065 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 773:
#line 2067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 2071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 2073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 2075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 2077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 2079 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 2081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 2083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 2085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2089 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 2091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 787:
#line 2095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 788:
#line 2097 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 789:
#line 2101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 790:
#line 2105 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 791:
#line 2109 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 792:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 793:
#line 2123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 794:
#line 2125 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 795:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 796:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 797:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 798:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 799:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 800:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 801:
#line 2203 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 2216 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 803:
#line 2220 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 2226 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 2240 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 807:
#line 2250 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 809:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 810:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 811:
#line 2330 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 812:
#line 2331 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 813:
#line 2339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 814:
#line 2345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 815:
#line 2349 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 816:
#line 2353 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 817:
#line 2357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 818:
#line 2361 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 819:
#line 2365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 820:
#line 2369 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 821:
#line 2373 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 822:
#line 2377 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 823:
#line 2381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 824:
#line 2385 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 825:
#line 2389 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 826:
#line 2393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 827:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2401 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 829:
#line 2405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 830:
#line 2407 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 831:
#line 2411 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 832:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 833:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 834:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 835:
#line 2447 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 836:
#line 2454 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 837:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 838:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 839:
#line 2466 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 840:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 841:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 842:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 843:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 844:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 845:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 846:
#line 2498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 847:
#line 2502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 848:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 849:
#line 2509 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 850:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 851:
#line 2519 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 852:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 853:
#line 2537 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 854:
#line 2562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 855:
#line 2563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 856:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 857:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 858:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 859:
#line 2597 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 860:
#line 2603 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 861:
#line 2613 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 862:
#line 2630 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 863:
#line 2675 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 864:
#line 2683 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 865:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 866:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 867:
#line 2707 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 868:
#line 2727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 869:
#line 2728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 870:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 871:
#line 2732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 872:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 873:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 874:
#line 2737 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 875:
#line 2738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 876:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 877:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 878:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 879:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 880:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 881:
#line 2746 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 882:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 883:
#line 2748 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 884:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 885:
#line 2750 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 886:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 887:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 888:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 889:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 890:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 891:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 892:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 893:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 894:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 895:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 896:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 897:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 898:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 899:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 900:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 901:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 902:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 903:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 904:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 905:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 906:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 907:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 908:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 909:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 910:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 911:
#line 2854 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 912:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 913:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 914:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 915:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 916:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 917:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 918:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 919:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 920:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 921:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 922:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 923:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 924:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 925:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 926:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 927:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 928:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 929:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 930:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 931:
#line 2949 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 932:
#line 2953 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 933:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 934:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 935:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 936:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 937:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 938:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 939:
#line 2982 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 940:
#line 2995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 941:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 942:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 943:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 944:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 945:
#line 3015 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 946:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 947:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 948:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 949:
#line 3031 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 950:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 951:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 952:
#line 3047 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 953:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 954:
#line 3058 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 955:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 956:
#line 3063 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 957:
#line 3067 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 958:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 961:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 962:
#line 3083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 963:
#line 3087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 964:
#line 3088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 965:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 966:
#line 3108 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 967:
#line 3116 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 968:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 969:
#line 3145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 970:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 971:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 972:
#line 3162 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 973:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 974:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 975:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 976:
#line 3197 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 977:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 978:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 979:
#line 3221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 980:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 981:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 982:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 983:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 984:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 985:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 986:
#line 3285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 987:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 988:
#line 3293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 989:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 990:
#line 3301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 991:
#line 3305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 992:
#line 3309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 993:
#line 3314 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 994:
#line 3315 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 995:
#line 3331 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 996:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 997:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 998:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 999:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1000:
#line 3342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1001:
#line 3343 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1002:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1003:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1004:
#line 3348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1005:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1006:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1007:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1008:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1010:
#line 3370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1012:
#line 3372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1013:
#line 3373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1014:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1015:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1016:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1017:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1018:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1019:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1024:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1025:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1026:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1027:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1032:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1033:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1034:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1036:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1037:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1038:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1039:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1040:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1041:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1042:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1043:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1044:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1045:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1046:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1047:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1048:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1049:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1050:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1051:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1052:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1053:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1054:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1055:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1056:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1057:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1058:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1059:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1060:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1061:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1062:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1068:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1069:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1070:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1071:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1072:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1073:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1075:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1076:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1077:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1078:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1079:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1080:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1081:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1082:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1083:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1084:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1085:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1086:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1087:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1088:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1089:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1090:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1091:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1092:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1093:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1094:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1095:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1096:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1097:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1098:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1099:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1100:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1101:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1102:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1103:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1104:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1105:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1106:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1107:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1108:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1109:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1110:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1111:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1112:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1113:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1114:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1115:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1116:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1117:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1118:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1119:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1120:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1121:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1122:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1123:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1124:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1125:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1126:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1127:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1128:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1129:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1130:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1131:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1132:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1133:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1134:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1135:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1136:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1137:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1138:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1139:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1140:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1141:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1142:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1143:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1144:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1147:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1148:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1149:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1150:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1151:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1152:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1153:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1154:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1155:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1156:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1157:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1158:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1159:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1160:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1161:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1162:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1163:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22624 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
