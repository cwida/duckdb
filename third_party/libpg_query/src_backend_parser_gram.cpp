/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DAYS_P = 363,
     DEALLOCATE = 364,
     DEC = 365,
     DECIMAL_P = 366,
     DECLARE = 367,
     DEFAULT = 368,
     DEFAULTS = 369,
     DEFERRABLE = 370,
     DEFERRED = 371,
     DEFINER = 372,
     DELETE_P = 373,
     DELIMITER = 374,
     DELIMITERS = 375,
     DEPENDS = 376,
     DESC_P = 377,
     DESCRIBE = 378,
     DETACH = 379,
     DICTIONARY = 380,
     DISABLE_P = 381,
     DISCARD = 382,
     DISTINCT = 383,
     DO = 384,
     DOCUMENT_P = 385,
     DOMAIN_P = 386,
     DOUBLE_P = 387,
     DROP = 388,
     EACH = 389,
     ELSE = 390,
     ENABLE_P = 391,
     ENCODING = 392,
     ENCRYPTED = 393,
     END_P = 394,
     ENUM_P = 395,
     ESCAPE = 396,
     EVENT = 397,
     EXCEPT = 398,
     EXCLUDE = 399,
     EXCLUDING = 400,
     EXCLUSIVE = 401,
     EXECUTE = 402,
     EXISTS = 403,
     EXPLAIN = 404,
     EXPORT_P = 405,
     EXTENSION = 406,
     EXTERNAL = 407,
     EXTRACT = 408,
     FALSE_P = 409,
     FAMILY = 410,
     FETCH = 411,
     FILTER = 412,
     FIRST_P = 413,
     FLOAT_P = 414,
     FOLLOWING = 415,
     FOR = 416,
     FORCE = 417,
     FOREIGN = 418,
     FORWARD = 419,
     FREEZE = 420,
     FROM = 421,
     FULL = 422,
     FUNCTION = 423,
     FUNCTIONS = 424,
     GENERATED = 425,
     GLOB = 426,
     GLOBAL = 427,
     GRANT = 428,
     GRANTED = 429,
     GROUP_P = 430,
     GROUPING = 431,
     HANDLER = 432,
     HAVING = 433,
     HEADER_P = 434,
     HOLD = 435,
     HOUR_P = 436,
     HOURS_P = 437,
     IDENTITY_P = 438,
     IF_P = 439,
     ILIKE = 440,
     IMMEDIATE = 441,
     IMMUTABLE = 442,
     IMPLICIT_P = 443,
     IMPORT_P = 444,
     IN_P = 445,
     INCLUDING = 446,
     INCREMENT = 447,
     INDEX = 448,
     INDEXES = 449,
     INHERIT = 450,
     INHERITS = 451,
     INITIALLY = 452,
     INLINE_P = 453,
     INNER_P = 454,
     INOUT = 455,
     INPUT_P = 456,
     INSENSITIVE = 457,
     INSERT = 458,
     INSTEAD = 459,
     INT_P = 460,
     INTEGER = 461,
     INTERSECT = 462,
     INTERVAL = 463,
     INTO = 464,
     INVOKER = 465,
     IS = 466,
     ISNULL = 467,
     ISOLATION = 468,
     JOIN = 469,
     KEY = 470,
     LABEL = 471,
     LANGUAGE = 472,
     LARGE_P = 473,
     LAST_P = 474,
     LATERAL_P = 475,
     LEADING = 476,
     LEAKPROOF = 477,
     LEFT = 478,
     LEVEL = 479,
     LIKE = 480,
     LIMIT = 481,
     LISTEN = 482,
     LOAD = 483,
     LOCAL = 484,
     LOCALTIME = 485,
     LOCALTIMESTAMP = 486,
     LOCATION = 487,
     LOCK_P = 488,
     LOCKED = 489,
     LOGGED = 490,
     MACRO = 491,
     MAPPING = 492,
     MATCH = 493,
     MATERIALIZED = 494,
     MAXVALUE = 495,
     METHOD = 496,
     MINUTE_P = 497,
     MINUTES_P = 498,
     MINVALUE = 499,
     MODE = 500,
     MONTH_P = 501,
     MONTHS_P = 502,
     MOVE = 503,
     NAME_P = 504,
     NAMES = 505,
     NATIONAL = 506,
     NATURAL = 507,
     NCHAR = 508,
     NEW = 509,
     NEXT = 510,
     NO = 511,
     NONE = 512,
     NOT = 513,
     NOTHING = 514,
     NOTIFY = 515,
     NOTNULL = 516,
     NOWAIT = 517,
     NULL_P = 518,
     NULLIF = 519,
     NULLS_P = 520,
     NUMERIC = 521,
     OBJECT_P = 522,
     OF = 523,
     OFF = 524,
     OFFSET = 525,
     OIDS = 526,
     OLD = 527,
     ON = 528,
     ONLY = 529,
     OPERATOR = 530,
     OPTION = 531,
     OPTIONS = 532,
     OR = 533,
     ORDER = 534,
     ORDINALITY = 535,
     OUT_P = 536,
     OUTER_P = 537,
     OVER = 538,
     OVERLAPS = 539,
     OVERLAY = 540,
     OVERRIDING = 541,
     OWNED = 542,
     OWNER = 543,
     PARALLEL = 544,
     PARSER = 545,
     PARTIAL = 546,
     PARTITION = 547,
     PASSING = 548,
     PASSWORD = 549,
     PLACING = 550,
     PLANS = 551,
     POLICY = 552,
     POSITION = 553,
     PRAGMA_P = 554,
     PRECEDING = 555,
     PRECISION = 556,
     PREPARE = 557,
     PREPARED = 558,
     PRESERVE = 559,
     PRIMARY = 560,
     PRIOR = 561,
     PRIVILEGES = 562,
     PROCEDURAL = 563,
     PROCEDURE = 564,
     PROGRAM = 565,
     PUBLICATION = 566,
     QUOTE = 567,
     RANGE = 568,
     READ_P = 569,
     REAL = 570,
     REASSIGN = 571,
     RECHECK = 572,
     RECURSIVE = 573,
     REF = 574,
     REFERENCES = 575,
     REFERENCING = 576,
     REFRESH = 577,
     REINDEX = 578,
     RELATIVE_P = 579,
     RELEASE = 580,
     RENAME = 581,
     REPEATABLE = 582,
     REPLACE = 583,
     REPLICA = 584,
     RESET = 585,
     RESTART = 586,
     RESTRICT = 587,
     RETURNING = 588,
     RETURNS = 589,
     REVOKE = 590,
     RIGHT = 591,
     ROLE = 592,
     ROLLBACK = 593,
     ROLLUP = 594,
     ROW = 595,
     ROWS = 596,
     RULE = 597,
     SAVEPOINT = 598,
     SCHEMA = 599,
     SCHEMAS = 600,
     SCROLL = 601,
     SEARCH = 602,
     SECOND_P = 603,
     SECONDS_P = 604,
     SECURITY = 605,
     SELECT = 606,
     SEQUENCE = 607,
     SEQUENCES = 608,
     SERIALIZABLE = 609,
     SERVER = 610,
     SESSION = 611,
     SESSION_USER = 612,
     SET = 613,
     SETOF = 614,
     SETS = 615,
     SHARE = 616,
     SHOW = 617,
     SIMILAR = 618,
     SIMPLE = 619,
     SKIP = 620,
     SMALLINT = 621,
     SNAPSHOT = 622,
     SOME = 623,
     SQL_P = 624,
     STABLE = 625,
     STANDALONE_P = 626,
     START = 627,
     STATEMENT = 628,
     STATISTICS = 629,
     STDIN = 630,
     STDOUT = 631,
     STORAGE = 632,
     STRICT_P = 633,
     STRIP_P = 634,
     SUBSCRIPTION = 635,
     SUBSTRING = 636,
     SYMMETRIC = 637,
     SYSID = 638,
     SYSTEM_P = 639,
     TABLE = 640,
     TABLES = 641,
     TABLESAMPLE = 642,
     TABLESPACE = 643,
     TEMP = 644,
     TEMPLATE = 645,
     TEMPORARY = 646,
     TEXT_P = 647,
     THEN = 648,
     TIME = 649,
     TIMESTAMP = 650,
     TO = 651,
     TRAILING = 652,
     TRANSACTION = 653,
     TRANSFORM = 654,
     TREAT = 655,
     TRIGGER = 656,
     TRIM = 657,
     TRUE_P = 658,
     TRUNCATE = 659,
     TRUSTED = 660,
     TYPE_P = 661,
     TYPES_P = 662,
     UNBOUNDED = 663,
     UNCOMMITTED = 664,
     UNENCRYPTED = 665,
     UNION = 666,
     UNIQUE = 667,
     UNKNOWN = 668,
     UNLISTEN = 669,
     UNLOGGED = 670,
     UNTIL = 671,
     UPDATE = 672,
     USER = 673,
     USING = 674,
     VACUUM = 675,
     VALID = 676,
     VALIDATE = 677,
     VALIDATOR = 678,
     VALUE_P = 679,
     VALUES = 680,
     VARCHAR = 681,
     VARIADIC = 682,
     VARYING = 683,
     VERBOSE = 684,
     VERSION_P = 685,
     VIEW = 686,
     VIEWS = 687,
     VOLATILE = 688,
     WHEN = 689,
     WHERE = 690,
     WHITESPACE_P = 691,
     WINDOW = 692,
     WITH = 693,
     WITHIN = 694,
     WITHOUT = 695,
     WORK = 696,
     WRAPPER = 697,
     WRITE_P = 698,
     XML_P = 699,
     XMLATTRIBUTES = 700,
     XMLCONCAT = 701,
     XMLELEMENT = 702,
     XMLEXISTS = 703,
     XMLFOREST = 704,
     XMLNAMESPACES = 705,
     XMLPARSE = 706,
     XMLPI = 707,
     XMLROOT = 708,
     XMLSERIALIZE = 709,
     XMLTABLE = 710,
     YEAR_P = 711,
     YEARS_P = 712,
     YES_P = 713,
     ZONE = 714,
     NOT_LA = 715,
     NULLS_LA = 716,
     WITH_LA = 717,
     POSTFIXOP = 718,
     UMINUS = 719
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DAYS_P 363
#define DEALLOCATE 364
#define DEC 365
#define DECIMAL_P 366
#define DECLARE 367
#define DEFAULT 368
#define DEFAULTS 369
#define DEFERRABLE 370
#define DEFERRED 371
#define DEFINER 372
#define DELETE_P 373
#define DELIMITER 374
#define DELIMITERS 375
#define DEPENDS 376
#define DESC_P 377
#define DESCRIBE 378
#define DETACH 379
#define DICTIONARY 380
#define DISABLE_P 381
#define DISCARD 382
#define DISTINCT 383
#define DO 384
#define DOCUMENT_P 385
#define DOMAIN_P 386
#define DOUBLE_P 387
#define DROP 388
#define EACH 389
#define ELSE 390
#define ENABLE_P 391
#define ENCODING 392
#define ENCRYPTED 393
#define END_P 394
#define ENUM_P 395
#define ESCAPE 396
#define EVENT 397
#define EXCEPT 398
#define EXCLUDE 399
#define EXCLUDING 400
#define EXCLUSIVE 401
#define EXECUTE 402
#define EXISTS 403
#define EXPLAIN 404
#define EXPORT_P 405
#define EXTENSION 406
#define EXTERNAL 407
#define EXTRACT 408
#define FALSE_P 409
#define FAMILY 410
#define FETCH 411
#define FILTER 412
#define FIRST_P 413
#define FLOAT_P 414
#define FOLLOWING 415
#define FOR 416
#define FORCE 417
#define FOREIGN 418
#define FORWARD 419
#define FREEZE 420
#define FROM 421
#define FULL 422
#define FUNCTION 423
#define FUNCTIONS 424
#define GENERATED 425
#define GLOB 426
#define GLOBAL 427
#define GRANT 428
#define GRANTED 429
#define GROUP_P 430
#define GROUPING 431
#define HANDLER 432
#define HAVING 433
#define HEADER_P 434
#define HOLD 435
#define HOUR_P 436
#define HOURS_P 437
#define IDENTITY_P 438
#define IF_P 439
#define ILIKE 440
#define IMMEDIATE 441
#define IMMUTABLE 442
#define IMPLICIT_P 443
#define IMPORT_P 444
#define IN_P 445
#define INCLUDING 446
#define INCREMENT 447
#define INDEX 448
#define INDEXES 449
#define INHERIT 450
#define INHERITS 451
#define INITIALLY 452
#define INLINE_P 453
#define INNER_P 454
#define INOUT 455
#define INPUT_P 456
#define INSENSITIVE 457
#define INSERT 458
#define INSTEAD 459
#define INT_P 460
#define INTEGER 461
#define INTERSECT 462
#define INTERVAL 463
#define INTO 464
#define INVOKER 465
#define IS 466
#define ISNULL 467
#define ISOLATION 468
#define JOIN 469
#define KEY 470
#define LABEL 471
#define LANGUAGE 472
#define LARGE_P 473
#define LAST_P 474
#define LATERAL_P 475
#define LEADING 476
#define LEAKPROOF 477
#define LEFT 478
#define LEVEL 479
#define LIKE 480
#define LIMIT 481
#define LISTEN 482
#define LOAD 483
#define LOCAL 484
#define LOCALTIME 485
#define LOCALTIMESTAMP 486
#define LOCATION 487
#define LOCK_P 488
#define LOCKED 489
#define LOGGED 490
#define MACRO 491
#define MAPPING 492
#define MATCH 493
#define MATERIALIZED 494
#define MAXVALUE 495
#define METHOD 496
#define MINUTE_P 497
#define MINUTES_P 498
#define MINVALUE 499
#define MODE 500
#define MONTH_P 501
#define MONTHS_P 502
#define MOVE 503
#define NAME_P 504
#define NAMES 505
#define NATIONAL 506
#define NATURAL 507
#define NCHAR 508
#define NEW 509
#define NEXT 510
#define NO 511
#define NONE 512
#define NOT 513
#define NOTHING 514
#define NOTIFY 515
#define NOTNULL 516
#define NOWAIT 517
#define NULL_P 518
#define NULLIF 519
#define NULLS_P 520
#define NUMERIC 521
#define OBJECT_P 522
#define OF 523
#define OFF 524
#define OFFSET 525
#define OIDS 526
#define OLD 527
#define ON 528
#define ONLY 529
#define OPERATOR 530
#define OPTION 531
#define OPTIONS 532
#define OR 533
#define ORDER 534
#define ORDINALITY 535
#define OUT_P 536
#define OUTER_P 537
#define OVER 538
#define OVERLAPS 539
#define OVERLAY 540
#define OVERRIDING 541
#define OWNED 542
#define OWNER 543
#define PARALLEL 544
#define PARSER 545
#define PARTIAL 546
#define PARTITION 547
#define PASSING 548
#define PASSWORD 549
#define PLACING 550
#define PLANS 551
#define POLICY 552
#define POSITION 553
#define PRAGMA_P 554
#define PRECEDING 555
#define PRECISION 556
#define PREPARE 557
#define PREPARED 558
#define PRESERVE 559
#define PRIMARY 560
#define PRIOR 561
#define PRIVILEGES 562
#define PROCEDURAL 563
#define PROCEDURE 564
#define PROGRAM 565
#define PUBLICATION 566
#define QUOTE 567
#define RANGE 568
#define READ_P 569
#define REAL 570
#define REASSIGN 571
#define RECHECK 572
#define RECURSIVE 573
#define REF 574
#define REFERENCES 575
#define REFERENCING 576
#define REFRESH 577
#define REINDEX 578
#define RELATIVE_P 579
#define RELEASE 580
#define RENAME 581
#define REPEATABLE 582
#define REPLACE 583
#define REPLICA 584
#define RESET 585
#define RESTART 586
#define RESTRICT 587
#define RETURNING 588
#define RETURNS 589
#define REVOKE 590
#define RIGHT 591
#define ROLE 592
#define ROLLBACK 593
#define ROLLUP 594
#define ROW 595
#define ROWS 596
#define RULE 597
#define SAVEPOINT 598
#define SCHEMA 599
#define SCHEMAS 600
#define SCROLL 601
#define SEARCH 602
#define SECOND_P 603
#define SECONDS_P 604
#define SECURITY 605
#define SELECT 606
#define SEQUENCE 607
#define SEQUENCES 608
#define SERIALIZABLE 609
#define SERVER 610
#define SESSION 611
#define SESSION_USER 612
#define SET 613
#define SETOF 614
#define SETS 615
#define SHARE 616
#define SHOW 617
#define SIMILAR 618
#define SIMPLE 619
#define SKIP 620
#define SMALLINT 621
#define SNAPSHOT 622
#define SOME 623
#define SQL_P 624
#define STABLE 625
#define STANDALONE_P 626
#define START 627
#define STATEMENT 628
#define STATISTICS 629
#define STDIN 630
#define STDOUT 631
#define STORAGE 632
#define STRICT_P 633
#define STRIP_P 634
#define SUBSCRIPTION 635
#define SUBSTRING 636
#define SYMMETRIC 637
#define SYSID 638
#define SYSTEM_P 639
#define TABLE 640
#define TABLES 641
#define TABLESAMPLE 642
#define TABLESPACE 643
#define TEMP 644
#define TEMPLATE 645
#define TEMPORARY 646
#define TEXT_P 647
#define THEN 648
#define TIME 649
#define TIMESTAMP 650
#define TO 651
#define TRAILING 652
#define TRANSACTION 653
#define TRANSFORM 654
#define TREAT 655
#define TRIGGER 656
#define TRIM 657
#define TRUE_P 658
#define TRUNCATE 659
#define TRUSTED 660
#define TYPE_P 661
#define TYPES_P 662
#define UNBOUNDED 663
#define UNCOMMITTED 664
#define UNENCRYPTED 665
#define UNION 666
#define UNIQUE 667
#define UNKNOWN 668
#define UNLISTEN 669
#define UNLOGGED 670
#define UNTIL 671
#define UPDATE 672
#define USER 673
#define USING 674
#define VACUUM 675
#define VALID 676
#define VALIDATE 677
#define VALIDATOR 678
#define VALUE_P 679
#define VALUES 680
#define VARCHAR 681
#define VARIADIC 682
#define VARYING 683
#define VERBOSE 684
#define VERSION_P 685
#define VIEW 686
#define VIEWS 687
#define VOLATILE 688
#define WHEN 689
#define WHERE 690
#define WHITESPACE_P 691
#define WINDOW 692
#define WITH 693
#define WITHIN 694
#define WITHOUT 695
#define WORK 696
#define WRAPPER 697
#define WRITE_P 698
#define XML_P 699
#define XMLATTRIBUTES 700
#define XMLCONCAT 701
#define XMLELEMENT 702
#define XMLEXISTS 703
#define XMLFOREST 704
#define XMLNAMESPACES 705
#define XMLPARSE 706
#define XMLPI 707
#define XMLROOT 708
#define XMLSERIALIZE 709
#define XMLTABLE 710
#define YEAR_P 711
#define YEARS_P 712
#define YES_P 713
#define ZONE 714
#define NOT_LA 715
#define NULLS_LA 716
#define WITH_LA 717
#define POSTFIXOP 718
#define UMINUS 719




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1239 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1264 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  563
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   46382

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  483
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  352
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1590
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2639

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   719

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   471,     2,     2,
     476,   477,   469,   467,   480,   468,   478,   470,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   482,   479,
     463,   465,   464,   481,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   474,     2,   475,   472,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   466,   473
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1537,  1547,  1549,  1552,  1557,  1562,  1567,  1570,
    1573,  1577,  1579,  1583,  1590,  1593,  1594,  1598,  1602,  1607,
    1612,  1617,  1622,  1626,  1629,  1631,  1633,  1634,  1636,  1638,
    1639,  1641,  1647,  1649,  1650,  1652,  1653,  1657,  1659,  1663,
    1668,  1672,  1674,  1676,  1677,  1680,  1683,  1684,  1687,  1690,
    1692,  1694,  1696,  1697,  1700,  1705,  1711,  1716,  1719,  1723,
    1725,  1727,  1729,  1731,  1734,  1737,  1739,  1741,  1743,  1745,
    1747,  1749,  1753,  1754,  1756,  1760,  1762,  1764,  1767,  1770,
    1771,  1773,  1777,  1779,  1780,  1782,  1785,  1789,  1792,  1797,
    1800,  1804,  1807,  1808,  1810,  1813,  1814,  1819,  1825,  1828,
    1829,  1831,  1835,  1838,  1842,  1845,  1849,  1852,  1856,  1858,
    1863,  1867,  1872,  1878,  1883,  1889,  1894,  1900,  1903,  1908,
    1910,  1912,  1913,  1915,  1920,  1926,  1931,  1932,  1935,  1938,
    1941,  1943,  1945,  1946,  1951,  1954,  1956,  1959,  1962,  1967,
    1974,  1979,  1980,  1983,  1990,  1993,  1995,  1999,  2004,  2005,
    2008,  2009,  2012,  2013,  2015,  2019,  2023,  2026,  2027,  2030,
    2034,  2040,  2047,  2050,  2054,  2058,  2063,  2064,  2066,  2068,
    2070,  2072,  2074,  2077,  2082,  2084,  2086,  2088,  2090,  2093,
    2097,  2101,  2102,  2104,  2106,  2108,  2110,  2112,  2115,  2118,
    2121,  2124,  2127,  2129,  2133,  2134,  2136,  2138,  2140,  2142,
    2148,  2151,  2153,  2155,  2157,  2159,  2164,  2166,  2169,  2172,
    2174,  2178,  2182,  2185,  2187,  2188,  2194,  2197,  2203,  2206,
    2208,  2212,  2216,  2217,  2219,  2221,  2223,  2225,  2227,  2229,
    2231,  2233,  2235,  2237,  2239,  2241,  2243,  2245,  2247,  2249,
    2251,  2253,  2257,  2261,  2265,  2269,  2273,  2277,  2281,  2282,
    2284,  2289,  2291,  2295,  2299,  2305,  2308,  2311,  2315,  2319,
    2323,  2327,  2331,  2335,  2339,  2343,  2347,  2351,  2355,  2359,
    2363,  2366,  2369,  2373,  2377,  2380,  2383,  2387,  2391,  2397,
    2402,  2409,  2413,  2419,  2424,  2431,  2436,  2443,  2449,  2457,
    2461,  2464,  2469,  2473,  2476,  2480,  2484,  2489,  2493,  2498,
    2502,  2507,  2513,  2520,  2527,  2535,  2542,  2550,  2557,  2565,
    2569,  2574,  2579,  2586,  2588,  2590,  2594,  2597,  2600,  2604,
    2608,  2612,  2616,  2620,  2624,  2628,  2632,  2636,  2640,  2644,
    2648,  2652,  2655,  2658,  2664,  2671,  2678,  2686,  2688,  2690,
    2693,  2696,  2701,  2703,  2705,  2707,  2710,  2713,  2717,  2723,
    2730,  2739,  2746,  2753,  2758,  2763,  2765,  2767,  2769,  2775,
    2777,  2779,  2784,  2786,  2791,  2793,  2798,  2800,  2805,  2807,
    2809,  2811,  2813,  2815,  2817,  2824,  2829,  2834,  2839,  2844,
    2851,  2857,  2863,  2869,  2874,  2881,  2886,  2892,  2893,  2899,
    2900,  2903,  2904,  2906,  2910,  2914,  2917,  2920,  2921,  2928,
    2930,  2931,  2935,  2936,  2939,  2942,  2943,  2945,  2950,  2953,
    2956,  2959,  2962,  2965,  2970,  2974,  2980,  2982,  2984,  2986,
    2988,  2990,  2992,  2994,  2996,  2998,  3000,  3002,  3004,  3006,
    3008,  3010,  3012,  3014,  3016,  3021,  3023,  3028,  3030,  3035,
    3037,  3040,  3042,  3045,  3047,  3050,  3052,  3056,  3058,  3062,
    3064,  3068,  3070,  3074,  3078,  3080,  3084,  3088,  3089,  3091,
    3093,  3095,  3097,  3099,  3101,  3103,  3105,  3110,  3114,  3117,
    3121,  3122,  3126,  3130,  3133,  3136,  3138,  3139,  3142,  3145,
    3149,  3152,  3154,  3156,  3160,  3166,  3168,  3171,  3176,  3179,
    3180,  3182,  3183,  3185,  3188,  3191,  3194,  3198,  3204,  3206,
    3207,  3209,  3212,  3213,  3216,  3218,  3219,  3221,  3222,  3224,
    3228,  3232,  3235,  3237,  3239,  3241,  3245,  3247,  3250,  3252,
    3256,  3258,  3260,  3262,  3265,  3267,  3269,  3271,  3273,  3275,
    3278,  3285,  3288,  3294,  3298,  3302,  3304,  3306,  3308,  3310,
    3312,  3314,  3316,  3318,  3320,  3322,  3324,  3326,  3328,  3330,
    3333,  3336,  3340,  3344,  3345,  3347,  3349,  3351,  3353,  3355,
    3357,  3359,  3361,  3367,  3371,  3372,  3374,  3376,  3378,  3380,
    3385,  3393,  3396,  3397,  3399,  3401,  3403,  3405,  3419,  3436,
    3438,  3441,  3442,  3444,  3445,  3447,  3448,  3451,  3452,  3454,
    3455,  3462,  3471,  3478,  3487,  3494,  3503,  3505,  3510,  3514,
    3517,  3522,  3526,  3532,  3534,  3535,  3537,  3539,  3540,  3542,
    3544,  3546,  3548,  3550,  3552,  3554,  3556,  3558,  3560,  3562,
    3564,  3568,  3570,  3572,  3574,  3576,  3578,  3580,  3583,  3585,
    3587,  3590,  3594,  3598,  3600,  3604,  3608,  3611,  3615,  3619,
    3623,  3627,  3629,  3631,  3633,  3635,  3639,  3645,  3647,  3649,
    3651,  3653,  3657,  3660,  3662,  3667,  3673,  3679,  3684,  3691,
    3693,  3695,  3697,  3699,  3701,  3703,  3704,  3706,  3710,  3712,
    3713,  3721,  3723,  3726,  3730,  3733,  3734,  3737,  3738,  3741,
    3746,  3749,  3751,  3753,  3755,  3758,  3762,  3765,  3769,  3774,
    3777,  3779,  3781,  3783,  3787,  3790,  3800,  3812,  3825,  3840,
    3844,  3849,  3854,  3855,  3863,  3874,  3877,  3881,  3882,  3887,
    3889,  3891,  3893,  3895,  3897,  3899,  3901,  3903,  3905,  3907,
    3909,  3911,  3913,  3915,  3917,  3919,  3921,  3923,  3925,  3927,
    3929,  3931,  3933,  3935,  3937,  3939,  3941,  3943,  3945,  3947,
    3949,  3951,  3953,  3955,  3957,  3959,  3961,  3963,  3965,  3967,
    3969,  3971,  3973,  3975,  3977,  3979,  3981,  3983,  3985,  3987,
    3989,  3991,  3993,  3995,  3997,  3999,  4001,  4003,  4005,  4007,
    4009,  4011,  4013,  4015,  4017,  4019,  4021,  4023,  4025,  4027,
    4029,  4031,  4033,  4035,  4037,  4039,  4041,  4043,  4045,  4047,
    4049,  4051,  4053,  4055,  4057,  4059,  4061,  4063,  4065,  4067,
    4069,  4071,  4073,  4075,  4077,  4079,  4081,  4083,  4085,  4087,
    4089,  4091,  4093,  4095,  4097,  4099,  4101,  4103,  4105,  4107,
    4109,  4111,  4113,  4115,  4117,  4119,  4121,  4123,  4125,  4127,
    4129,  4131,  4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,
    4149,  4151,  4153,  4155,  4157,  4159,  4161,  4163,  4165,  4167,
    4169,  4171,  4173,  4175,  4177,  4179,  4181,  4183,  4185,  4187,
    4189,  4191,  4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,
    4209,  4211,  4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,
    4229,  4231,  4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,
    4249,  4251,  4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,
    4269,  4271,  4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,
    4289,  4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,
    4309,  4311,  4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,
    4329,  4331,  4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,
    4349,  4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,
    4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,
    4389,  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,
    4409,  4411,  4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,
    4429,  4431,  4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,
    4449,  4451,  4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,
    4469,  4471,  4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,
    4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,
    4509,  4511,  4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,
    4529,  4531,  4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,
    4549,  4551,  4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,
    4569,  4571,  4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,
    4589,  4591,  4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,
    4609,  4611,  4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,
    4629,  4631,  4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,
    4649,  4651,  4653,  4655,  4657,  4659,  4661,  4663,  4665,  4667,
    4669,  4671,  4673,  4675,  4677,  4679,  4681,  4683,  4685,  4687,
    4689,  4691,  4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,
    4709,  4711,  4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,
    4729,  4731,  4733,  4735,  4737,  4739,  4741,  4743,  4745,  4747,
    4749,  4751,  4753,  4755,  4757,  4759,  4761,  4763,  4765,  4767,
    4769
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     484,     0,    -1,   485,    -1,   485,   479,   486,    -1,   486,
      -1,   786,    -1,   524,    -1,   487,    -1,   818,    -1,   825,
      -1,   787,    -1,   589,    -1,   828,    -1,   585,    -1,   776,
      -1,   520,    -1,   533,    -1,   498,    -1,   814,    -1,   579,
      -1,   522,    -1,   790,    -1,   788,    -1,   789,    -1,   779,
      -1,   501,    -1,   807,    -1,   519,    -1,   773,    -1,   499,
      -1,   606,    -1,   531,    -1,   588,    -1,   809,    -1,   819,
      -1,   801,    -1,   822,    -1,   826,    -1,    -1,    28,   385,
     659,   495,    -1,    28,   385,   184,   148,   659,   495,    -1,
      28,   193,   756,   495,    -1,    28,   193,   184,   148,   756,
     495,    -1,    28,   352,   756,   495,    -1,    28,   352,   184,
     148,   756,   495,    -1,    28,   431,   756,   495,    -1,    28,
     431,   184,   148,   756,   495,    -1,   490,    -1,   488,   490,
      -1,   358,   113,   700,    -1,   133,   113,    -1,   331,    -1,
     331,   526,   527,    -1,   358,   528,    -1,   358,   170,   578,
      -1,   494,    -1,   491,   480,   494,    -1,    22,   558,    -1,
      22,   184,   258,   148,   558,    -1,    22,    74,   558,    -1,
      22,    74,   184,   258,   148,   558,    -1,    28,   500,   764,
     489,    -1,    28,   500,   764,   133,   258,   263,    -1,    28,
     500,   764,   358,   258,   263,    -1,    28,   500,   764,   358,
     374,   530,    -1,    28,   500,   764,   358,   546,    -1,    28,
     500,   764,   330,   546,    -1,    28,   500,   764,   358,   377,
     764,    -1,    28,   500,   764,    22,   170,   578,    35,   183,
     536,    -1,    28,   500,   764,   488,    -1,    28,   500,   764,
     133,   183,    -1,    28,   500,   764,   133,   183,   184,   148,
      -1,   133,   500,   184,   148,   764,   583,    -1,   133,   500,
     764,   583,    -1,    28,   500,   764,   497,   406,   671,   670,
     493,    -1,    28,   500,   764,   496,    -1,    22,   548,    -1,
      28,    84,   758,   534,    -1,   422,    84,   758,    -1,   133,
      84,   184,   148,   758,   583,    -1,   133,    84,   758,   583,
      -1,   358,   235,    -1,   358,   415,    -1,   358,   546,    -1,
     330,   546,    -1,   496,    -1,   419,   700,    -1,    -1,   541,
      -1,   358,   541,    -1,    22,   541,    -1,   133,   556,    -1,
     492,    -1,   495,   480,   492,    -1,   277,   476,   491,   477,
      -1,   358,   105,    -1,    -1,   109,   758,    -1,   109,   302,
     758,    -1,   109,    26,    -1,   109,   302,    26,    -1,    28,
     344,   758,   326,   396,   758,    -1,    28,   385,   659,   326,
     396,   758,    -1,    28,   385,   184,   148,   659,   326,   396,
     758,    -1,    28,   352,   756,   326,   396,   758,    -1,    28,
     352,   184,   148,   756,   326,   396,   758,    -1,    28,   431,
     756,   326,   396,   758,    -1,    28,   431,   184,   148,   756,
     326,   396,   758,    -1,    28,   193,   756,   326,   396,   758,
      -1,    28,   193,   184,   148,   756,   326,   396,   758,    -1,
      28,   385,   659,   326,   500,   758,   396,   758,    -1,    28,
     385,   184,   148,   659,   326,   500,   758,   396,   758,    -1,
      28,   385,   659,   326,    84,   758,   396,   758,    -1,    28,
     385,   184,   148,   659,   326,    84,   758,   396,   758,    -1,
      74,    -1,    -1,   505,   203,   209,   503,   502,   508,   510,
      -1,   606,    -1,   286,   511,   424,   606,    -1,   476,   515,
     477,   606,    -1,   476,   515,   477,   286,   511,   424,   606,
      -1,   113,   425,    -1,   756,    -1,   756,    35,   764,    -1,
     476,   517,   477,   667,    -1,   273,    84,   758,    -1,    -1,
     611,    -1,    -1,   764,   750,    -1,   518,   465,   700,    -1,
     476,   512,   477,   465,   700,    -1,   273,    82,   504,   129,
     417,   358,   516,   667,    -1,   273,    82,   504,   129,   259,
      -1,    -1,   764,   513,   514,   624,   625,    -1,   705,   513,
     514,   624,   625,    -1,   476,   700,   477,   513,   514,   624,
     625,    -1,   333,   753,    -1,    -1,   418,    -1,   384,    -1,
     518,    -1,   512,   480,   518,    -1,    72,   767,    -1,    -1,
     767,    -1,    -1,   506,    -1,   515,   480,   506,    -1,   507,
      -1,   516,   480,   507,    -1,   509,    -1,   517,   480,   509,
      -1,   764,   750,    -1,   299,   764,    -1,   299,   764,   465,
     806,    -1,   299,   764,   476,   728,   477,    -1,    91,   577,
     352,   756,   521,    -1,    91,   577,   352,   184,   258,   148,
     756,   521,    -1,   525,    -1,    -1,   147,   758,   523,    -1,
      91,   577,   385,   830,    35,   147,   758,   523,   829,    -1,
      91,   577,   385,   184,   258,   148,   830,    35,   147,   758,
     523,   829,    -1,   476,   727,   477,    -1,    -1,    28,   352,
     756,   525,    -1,    28,   352,   184,   148,   756,   525,    -1,
     528,    -1,   525,   528,    -1,   438,    -1,   462,    -1,    -1,
       4,    -1,   467,     4,    -1,   468,     4,    -1,   530,    -1,
      35,   673,    -1,    54,   527,    -1,   104,    -1,   256,   104,
      -1,   192,   529,   527,    -1,   240,   527,    -1,   244,   527,
      -1,   256,   240,    -1,   256,   244,    -1,   287,    53,   767,
      -1,   352,   249,   767,    -1,   372,   526,   527,    -1,   331,
      -1,   331,   526,   527,    -1,    53,    -1,    -1,   762,    -1,
     467,   762,    -1,   468,   762,    -1,    18,   532,    -1,    46,
     532,    -1,   372,   532,    -1,    78,   532,    -1,   139,   532,
      -1,   338,   532,    -1,   441,    -1,   398,    -1,    -1,    91,
     577,   385,   756,   476,   565,   477,   553,   545,    -1,    91,
     577,   385,   184,   258,   148,   756,   476,   565,   477,   553,
     545,    -1,    -1,   534,   557,    -1,   572,    -1,   834,    -1,
     724,    -1,   527,    -1,   763,    -1,   257,    -1,   476,   525,
     477,    -1,    -1,   763,    -1,   256,    21,    -1,   332,    -1,
      57,    -1,   358,   263,    -1,   358,   113,    -1,    84,   758,
     540,    -1,   540,    -1,   552,    -1,    72,   767,    -1,   258,
     263,    -1,   263,    -1,   412,   564,    -1,   305,   215,   564,
      -1,    66,   476,   700,   477,   547,    -1,   113,   701,    -1,
     170,   578,    35,   183,   536,    -1,   320,   756,   567,   575,
     543,    -1,   556,   537,    -1,   273,   417,   538,    -1,   542,
      -1,   569,    -1,   542,   569,    -1,   569,   542,    -1,    -1,
     277,   476,   559,   477,    -1,    -1,   273,    78,   133,    -1,
     273,    78,   118,   341,    -1,   273,    78,   304,   341,    -1,
      -1,   476,   550,   477,    -1,   256,   195,    -1,    -1,    84,
     758,   573,    -1,   573,    -1,    77,    -1,    85,    -1,   114,
      -1,   183,    -1,   194,    -1,   374,    -1,   377,    -1,    26,
      -1,   570,    -1,   550,   480,   570,    -1,   419,   193,   561,
      -1,   115,    -1,   258,   115,    -1,   197,   116,    -1,   197,
     186,    -1,   438,   546,    -1,   438,   271,    -1,   440,   271,
      -1,    -1,   476,   560,   477,    -1,   555,   191,   549,    -1,
     555,   145,   549,    -1,    -1,   771,    -1,   258,   115,    -1,
     115,    -1,   197,   186,    -1,   197,   116,    -1,   258,   421,
      -1,   256,   195,    -1,   764,   671,   544,   568,    -1,   541,
      -1,   559,   480,   541,    -1,   563,    -1,   560,   480,   563,
      -1,   764,    -1,   558,    -1,   576,    -1,   548,    -1,   771,
     465,   535,    -1,   771,    -1,   438,   554,    -1,    -1,   574,
      -1,    -1,   764,    -1,   476,   571,   477,    -1,    -1,   568,
     539,    -1,    -1,   273,   118,   538,    -1,   771,   465,   535,
      -1,   771,    -1,   771,   478,   771,   465,   535,    -1,   771,
     478,   771,    -1,   566,    -1,   571,   480,   566,    -1,   671,
      -1,   766,   768,   471,   406,    -1,   359,   766,   768,   471,
     406,    -1,    66,   476,   700,   477,   534,    -1,   412,   476,
     571,   477,   564,   534,    -1,   412,   551,   534,    -1,   305,
     215,   476,   571,   477,   564,   534,    -1,   305,   215,   551,
     534,    -1,   163,   215,   476,   571,   477,   320,   756,   567,
     575,   543,   534,    -1,   562,    -1,   574,   480,   562,    -1,
     238,   167,    -1,   238,   291,    -1,   238,   364,    -1,    -1,
     225,   756,   555,    -1,   391,    -1,   389,    -1,   229,   391,
      -1,   229,   389,    -1,   172,   391,    -1,   172,   389,    -1,
     415,    -1,    -1,    29,    -1,    53,   113,    -1,   133,   580,
     184,   148,   582,   583,    -1,   133,   580,   582,   583,    -1,
     133,   581,   184,   148,   757,   583,    -1,   133,   581,   757,
     583,    -1,   133,   584,   758,   273,   767,   583,    -1,   133,
     584,   184,   148,   758,   273,   767,   583,    -1,   385,    -1,
     352,    -1,   168,    -1,   236,    -1,   431,    -1,   239,   431,
      -1,   193,    -1,   163,   385,    -1,    73,    -1,    88,    -1,
     374,    -1,   392,   347,   290,    -1,   392,   347,   125,    -1,
     392,   347,   390,    -1,   392,   347,    81,    -1,    20,   241,
      -1,   142,   401,    -1,   151,    -1,   163,   105,   442,    -1,
     311,    -1,   344,    -1,   355,    -1,   767,    -1,   582,   480,
     767,    -1,    57,    -1,   332,    -1,    -1,   297,    -1,   342,
      -1,   401,    -1,    91,   586,   756,   587,    35,   700,    -1,
     168,    -1,   236,    -1,   476,   477,    -1,   476,   728,   477,
      -1,   505,   417,   815,   358,   516,   649,   816,   510,    -1,
      89,   601,   756,   567,   599,   590,   595,   604,   591,   526,
     596,    -1,    89,   476,   775,   477,   396,   595,   604,   526,
     596,    -1,   166,    -1,   396,    -1,   593,   120,   763,    -1,
      -1,   603,    -1,   592,   480,   603,    -1,   419,    -1,    -1,
      35,    -1,    -1,   310,    -1,    -1,   600,    -1,   476,   605,
     477,    -1,   798,    -1,   527,    -1,   469,    -1,   476,   592,
     477,    -1,    -1,   771,   597,    -1,   438,   271,    -1,    -1,
     600,   602,    -1,    -1,    49,    -1,    -1,    49,    -1,   271,
      -1,   165,    -1,   119,   594,   763,    -1,   263,   594,   763,
      -1,    93,    -1,   179,    -1,   312,   594,   763,    -1,   141,
     594,   763,    -1,   162,   312,   571,    -1,   162,   312,   469,
      -1,   162,   258,   263,   571,    -1,   162,   263,   571,    -1,
     137,   763,    -1,   798,    -1,   763,    -1,   375,    -1,   376,
      -1,   598,    -1,   605,   480,   598,    -1,   608,    -1,   607,
      -1,   476,   608,   477,    -1,   476,   607,   477,    -1,   610,
      -1,   609,   621,    -1,   609,   620,   641,   627,    -1,   609,
     620,   626,   642,    -1,   611,   609,    -1,   611,   609,   621,
      -1,   611,   609,   620,   641,   627,    -1,   611,   609,   620,
     626,   642,    -1,   610,    -1,   607,    -1,   351,   619,   752,
     614,   649,   667,   636,   640,   709,    -1,   351,   618,   753,
     614,   649,   667,   636,   640,   709,    -1,   648,    -1,   385,
     659,    -1,   609,   411,   617,   609,    -1,   609,   207,   617,
     609,    -1,   609,   143,   617,   609,    -1,   438,   612,    -1,
     462,   612,    -1,   438,   318,   612,    -1,   613,    -1,   612,
     480,   613,    -1,   758,   769,    35,   476,   775,   477,    -1,
     209,   615,    -1,    -1,   391,   616,   756,    -1,   389,   616,
     756,    -1,   229,   391,   616,   756,    -1,   229,   389,   616,
     756,    -1,   172,   391,   616,   756,    -1,   172,   389,   616,
     756,    -1,   415,   616,   756,    -1,   385,   756,    -1,   756,
      -1,   385,    -1,    -1,    26,    -1,   128,    -1,    -1,   128,
      -1,   128,   273,   476,   727,   477,    -1,    26,    -1,    -1,
     621,    -1,    -1,   279,    53,   622,    -1,   623,    -1,   622,
     480,   623,    -1,   700,   419,   724,   625,    -1,   700,   624,
     625,    -1,    36,    -1,   122,    -1,    -1,   461,   158,    -1,
     461,   219,    -1,    -1,   628,   629,    -1,   629,   628,    -1,
     628,    -1,   629,    -1,   626,    -1,    -1,   226,   630,    -1,
     226,   630,   480,   631,    -1,   156,   635,   632,   634,   274,
      -1,   156,   635,   634,   274,    -1,   270,   631,    -1,   270,
     632,   634,    -1,   700,    -1,    26,    -1,   700,    -1,   702,
      -1,   467,   633,    -1,   468,   633,    -1,   762,    -1,     4,
      -1,   340,    -1,   341,    -1,   158,    -1,   255,    -1,   175,
      53,   637,    -1,    -1,   638,    -1,   637,   480,   638,    -1,
     700,    -1,   639,    -1,   476,   477,    -1,   178,   700,    -1,
      -1,   643,    -1,   161,   314,   274,    -1,   641,    -1,    -1,
     644,    -1,   643,   644,    -1,   645,   646,   647,    -1,   161,
     417,    -1,   161,   256,   215,   417,    -1,   161,   361,    -1,
     161,   215,   361,    -1,   268,   755,    -1,    -1,   262,    -1,
     365,   234,    -1,    -1,   425,   476,   727,   477,    -1,   648,
     480,   476,   727,   477,    -1,   166,   650,    -1,    -1,   651,
      -1,   650,   480,   651,    -1,   659,   654,    -1,   659,   654,
     660,    -1,   662,   655,    -1,   220,   662,   655,    -1,   607,
     654,    -1,   220,   607,   654,    -1,   652,    -1,   476,   652,
     477,   653,    -1,   476,   652,   477,    -1,   651,    92,   214,
     651,    -1,   651,   656,   214,   651,   658,    -1,   651,   214,
     651,   658,    -1,   651,   252,   656,   214,   651,    -1,   651,
     252,   214,   651,    -1,    35,   764,   476,   757,   477,    -1,
      35,   765,    -1,   764,   476,   757,   477,    -1,   764,    -1,
     653,    -1,    -1,   653,    -1,    35,   476,   668,   477,    -1,
      35,   764,   476,   668,   477,    -1,   764,   476,   668,   477,
      -1,    -1,   167,   657,    -1,   223,   657,    -1,   336,   657,
      -1,   199,    -1,   282,    -1,    -1,   419,   476,   757,   477,
      -1,   273,   700,    -1,   756,    -1,   756,   469,    -1,   274,
     756,    -1,   274,   476,   756,   477,    -1,   387,   760,   476,
     727,   477,   661,    -1,   327,   476,   700,   477,    -1,    -1,
     705,   666,    -1,   341,   166,   476,   664,   477,   666,    -1,
     705,   665,    -1,   663,    -1,   664,   480,   663,    -1,    35,
     476,   668,   477,    -1,    -1,   462,   280,    -1,    -1,   435,
     700,    -1,    -1,   669,    -1,   668,   480,   669,    -1,   764,
     671,   670,    -1,    72,   767,    -1,    -1,   673,   672,    -1,
     359,   673,   672,    -1,   673,    34,   474,   762,   475,    -1,
     359,   673,    34,   474,   762,   475,    -1,   673,    34,    -1,
     359,   673,    34,    -1,   672,   474,   475,    -1,   672,   474,
     762,   475,    -1,    -1,   675,    -1,   677,    -1,   679,    -1,
     683,    -1,   689,    -1,   690,   698,    -1,   690,   476,   762,
     477,    -1,   677,    -1,   680,    -1,   684,    -1,   689,    -1,
     766,   676,    -1,   766,   768,   676,    -1,   476,   727,   477,
      -1,    -1,   205,    -1,   206,    -1,   366,    -1,    48,    -1,
     315,    -1,   159,   678,    -1,   132,   301,    -1,   111,   676,
      -1,   110,   676,    -1,   266,   676,    -1,    51,    -1,   476,
     762,   477,    -1,    -1,   681,    -1,   682,    -1,   681,    -1,
     682,    -1,    50,   688,   476,   727,   477,    -1,    50,   688,
      -1,   685,    -1,   686,    -1,   685,    -1,   686,    -1,   687,
     476,   762,   477,    -1,   687,    -1,    64,   688,    -1,    63,
     688,    -1,   426,    -1,   251,    64,   688,    -1,   251,    63,
     688,    -1,   253,   688,    -1,   428,    -1,    -1,   395,   476,
     762,   477,   691,    -1,   395,   691,    -1,   394,   476,   762,
     477,   691,    -1,   394,   691,    -1,   208,    -1,   462,   394,
     459,    -1,   440,   394,   459,    -1,    -1,   456,    -1,   457,
      -1,   246,    -1,   247,    -1,   107,    -1,   108,    -1,   181,
      -1,   182,    -1,   242,    -1,   243,    -1,   348,    -1,   349,
      -1,   692,    -1,   693,    -1,   694,    -1,   695,    -1,   696,
      -1,   699,    -1,   692,   396,   693,    -1,   694,   396,   695,
      -1,   694,   396,   696,    -1,   694,   396,   699,    -1,   695,
     396,   696,    -1,   695,   396,   699,    -1,   696,   396,   699,
      -1,    -1,   697,    -1,   697,   476,   762,   477,    -1,   702,
      -1,   700,    11,   671,    -1,   700,    72,   767,    -1,   700,
      40,   394,   459,   700,    -1,   467,   700,    -1,   468,   700,
      -1,   700,   467,   700,    -1,   700,   468,   700,    -1,   700,
     469,   700,    -1,   700,   470,   700,    -1,   700,   471,   700,
      -1,   700,   472,   700,    -1,   700,   463,   700,    -1,   700,
     464,   700,    -1,   700,   465,   700,    -1,   700,    15,   700,
      -1,   700,    16,   700,    -1,   700,    17,   700,    -1,   700,
     723,   700,    -1,   723,   700,    -1,   700,   723,    -1,   700,
      32,   700,    -1,   700,   278,   700,    -1,   258,   700,    -1,
     460,   700,    -1,   700,   171,   700,    -1,   700,   225,   700,
      -1,   700,   225,   700,   141,   700,    -1,   700,   460,   225,
     700,    -1,   700,   460,   225,   700,   141,   700,    -1,   700,
     185,   700,    -1,   700,   185,   700,   141,   700,    -1,   700,
     460,   185,   700,    -1,   700,   460,   185,   700,   141,   700,
      -1,   700,   363,   396,   700,    -1,   700,   363,   396,   700,
     141,   700,    -1,   700,   460,   363,   396,   700,    -1,   700,
     460,   363,   396,   700,   141,   700,    -1,   700,   211,   263,
      -1,   700,   212,    -1,   700,   211,   258,   263,    -1,   700,
     258,   263,    -1,   700,   261,    -1,   719,   284,   719,    -1,
     700,   211,   403,    -1,   700,   211,   258,   403,    -1,   700,
     211,   154,    -1,   700,   211,   258,   154,    -1,   700,   211,
     413,    -1,   700,   211,   258,   413,    -1,   700,   211,   128,
     166,   700,    -1,   700,   211,   258,   128,   166,   700,    -1,
     700,   211,   268,   476,   730,   477,    -1,   700,   211,   258,
     268,   476,   730,   477,    -1,   700,    47,   751,   701,    32,
     700,    -1,   700,   460,    47,   751,   701,    32,   700,    -1,
     700,    47,   382,   701,    32,   700,    -1,   700,   460,    47,
     382,   701,    32,   700,    -1,   700,   190,   740,    -1,   700,
     460,   190,   740,    -1,   700,   725,   720,   607,    -1,   700,
     725,   720,   476,   700,   477,    -1,   113,    -1,   702,    -1,
     701,    11,   671,    -1,   467,   701,    -1,   468,   701,    -1,
     701,   467,   701,    -1,   701,   468,   701,    -1,   701,   469,
     701,    -1,   701,   470,   701,    -1,   701,   471,   701,    -1,
     701,   472,   701,    -1,   701,   463,   701,    -1,   701,   464,
     701,    -1,   701,   465,   701,    -1,   701,    15,   701,    -1,
     701,    16,   701,    -1,   701,    17,   701,    -1,   701,   723,
     701,    -1,   723,   701,    -1,   701,   723,    -1,   701,   211,
     128,   166,   701,    -1,   701,   211,   258,   128,   166,   701,
      -1,   701,   211,   268,   476,   730,   477,    -1,   701,   211,
     258,   268,   476,   730,   477,    -1,   746,    -1,   761,    -1,
     481,   750,    -1,    10,   750,    -1,   476,   700,   477,   750,
      -1,   741,    -1,   704,    -1,   607,    -1,   607,   749,    -1,
     148,   607,    -1,   760,   476,   477,    -1,   760,   476,   728,
     620,   477,    -1,   760,   476,   427,   729,   620,   477,    -1,
     760,   476,   728,   480,   427,   729,   620,   477,    -1,   760,
     476,    26,   728,   620,   477,    -1,   760,   476,   128,   728,
     620,   477,    -1,   760,   476,   469,   477,    -1,   703,   707,
     708,   712,    -1,   706,    -1,   703,    -1,   706,    -1,    73,
     161,   476,   700,   477,    -1,    97,    -1,   100,    -1,   100,
     476,   762,   477,    -1,   101,    -1,   101,   476,   762,   477,
      -1,   230,    -1,   230,   476,   762,   477,    -1,   231,    -1,
     231,   476,   762,   477,    -1,    98,    -1,   102,    -1,   357,
      -1,   418,    -1,    96,    -1,    99,    -1,    60,   476,   700,
      35,   671,   477,    -1,   153,   476,   731,   477,    -1,   285,
     476,   733,   477,    -1,   298,   476,   735,   477,    -1,   381,
     476,   736,   477,    -1,   400,   476,   700,    35,   671,   477,
      -1,   402,   476,    52,   739,   477,    -1,   402,   476,   221,
     739,   477,    -1,   402,   476,   397,   739,   477,    -1,   402,
     476,   739,   477,    -1,   264,   476,   700,   480,   700,   477,
      -1,    71,   476,   727,   477,    -1,   439,   175,   476,   621,
     477,    -1,    -1,   157,   476,   435,   700,   477,    -1,    -1,
     437,   710,    -1,    -1,   711,    -1,   710,   480,   711,    -1,
     764,    35,   713,    -1,   283,   713,    -1,   283,   764,    -1,
      -1,   476,   714,   715,   620,   716,   477,    -1,   764,    -1,
      -1,   292,    53,   727,    -1,    -1,   313,   717,    -1,   341,
     717,    -1,    -1,   718,    -1,    47,   718,    32,   718,    -1,
     408,   300,    -1,   408,   160,    -1,    95,   340,    -1,   700,
     300,    -1,   700,   160,    -1,   340,   476,   727,   477,    -1,
     340,   476,   477,    -1,   476,   727,   480,   700,   477,    -1,
      33,    -1,   368,    -1,    26,    -1,     8,    -1,   722,    -1,
     467,    -1,   468,    -1,   469,    -1,   470,    -1,   471,    -1,
     472,    -1,   463,    -1,   464,    -1,   465,    -1,    15,    -1,
      16,    -1,    17,    -1,     8,    -1,   275,   476,   726,   477,
      -1,   721,    -1,   275,   476,   726,   477,    -1,   721,    -1,
     275,   476,   726,   477,    -1,   225,    -1,   460,   225,    -1,
     171,    -1,   460,   171,    -1,   185,    -1,   460,   185,    -1,
     721,    -1,   764,   478,   726,    -1,   700,    -1,   727,   480,
     700,    -1,   729,    -1,   728,   480,   729,    -1,   700,    -1,
     770,    13,   700,    -1,   770,    14,   700,    -1,   671,    -1,
     730,   480,   671,    -1,   732,   166,   700,    -1,    -1,     3,
      -1,   692,    -1,   693,    -1,   694,    -1,   695,    -1,   696,
      -1,   697,    -1,   763,    -1,   700,   734,   737,   738,    -1,
     700,   734,   737,    -1,   295,   700,    -1,   701,   190,   701,
      -1,    -1,   700,   737,   738,    -1,   700,   738,   737,    -1,
     700,   737,    -1,   700,   738,    -1,   727,    -1,    -1,   166,
     700,    -1,   161,   700,    -1,   700,   166,   727,    -1,   166,
     727,    -1,   727,    -1,   607,    -1,   476,   727,   477,    -1,
      59,   745,   742,   744,   139,    -1,   743,    -1,   742,   743,
      -1,   434,   700,   393,   700,    -1,   135,   700,    -1,    -1,
     700,    -1,    -1,   764,    -1,   764,   749,    -1,   478,   759,
      -1,   478,   469,    -1,   474,   700,   475,    -1,   474,   748,
     482,   748,   475,    -1,   700,    -1,    -1,   747,    -1,   749,
     747,    -1,    -1,   750,   747,    -1,    39,    -1,    -1,   753,
      -1,    -1,   754,    -1,   753,   480,   754,    -1,   700,    35,
     772,    -1,   700,     3,    -1,   700,    -1,   469,    -1,   756,
      -1,   755,   480,   756,    -1,   764,    -1,   764,   749,    -1,
     758,    -1,   757,   480,   758,    -1,   764,    -1,   771,    -1,
     766,    -1,   764,   749,    -1,   762,    -1,     4,    -1,   763,
      -1,     6,    -1,     7,    -1,   760,   763,    -1,   760,   476,
     728,   620,   477,   763,    -1,   674,   763,    -1,   690,   476,
     700,   477,   698,    -1,   690,   762,   698,    -1,   690,   763,
     698,    -1,   403,    -1,   154,    -1,   263,    -1,     9,    -1,
       5,    -1,     3,    -1,   831,    -1,   832,    -1,   764,    -1,
       5,    -1,     3,    -1,   831,    -1,   833,    -1,   764,    -1,
     764,   768,    -1,   478,   759,    -1,   768,   478,   759,    -1,
     476,   757,   477,    -1,    -1,   766,    -1,     3,    -1,   831,
      -1,   832,    -1,   833,    -1,   834,    -1,   771,    -1,     5,
      -1,   302,   758,   774,    35,   775,    -1,   476,   730,   477,
      -1,    -1,   606,    -1,   501,    -1,   588,    -1,   814,    -1,
      91,   344,   764,   777,    -1,    91,   344,   184,   258,   148,
     764,   777,    -1,   777,   778,    -1,    -1,   533,    -1,   779,
      -1,   520,    -1,   826,    -1,    91,   785,   193,   782,   783,
     273,   756,   781,   476,   517,   477,   784,   667,    -1,    91,
     785,   193,   782,   184,   258,   148,   561,   273,   756,   781,
     476,   517,   477,   784,   667,    -1,   764,    -1,   419,   780,
      -1,    -1,    80,    -1,    -1,   561,    -1,    -1,   438,   546,
      -1,    -1,   412,    -1,    -1,    28,   385,   659,   358,   344,
     758,    -1,    28,   385,   184,   148,   659,   358,   344,   758,
      -1,    28,   352,   756,   358,   344,   758,    -1,    28,   352,
     184,   148,   756,   358,   344,   758,    -1,    28,   431,   756,
     358,   344,   758,    -1,    28,   431,   184,   148,   756,   358,
     344,   758,    -1,    67,    -1,   150,   106,   763,   596,    -1,
     189,   106,   763,    -1,   149,   793,    -1,   149,   797,   791,
     793,    -1,   149,   429,   793,    -1,   149,   476,   796,   477,
     793,    -1,   429,    -1,    -1,   798,    -1,   527,    -1,    -1,
     606,    -1,   501,    -1,   588,    -1,   814,    -1,   828,    -1,
       3,    -1,   831,    -1,   832,    -1,   833,    -1,   794,    -1,
     763,    -1,   799,    -1,   796,   480,   799,    -1,    31,    -1,
      30,    -1,   403,    -1,   154,    -1,   273,    -1,   795,    -1,
     800,   792,    -1,   794,    -1,   797,    -1,   358,   802,    -1,
     358,   229,   802,    -1,   358,   356,   802,    -1,   803,    -1,
     824,   166,    95,    -1,   394,   459,   805,    -1,   344,   763,
      -1,   824,   396,   806,    -1,   824,   465,   806,    -1,   824,
     396,   113,    -1,   824,   465,   113,    -1,   798,    -1,   527,
      -1,   763,    -1,     3,    -1,   690,   763,   698,    -1,   690,
     476,   762,   477,   763,    -1,   527,    -1,   113,    -1,   229,
      -1,   804,    -1,   806,   480,   804,    -1,   228,   808,    -1,
     763,    -1,   420,   811,   813,   791,    -1,   420,   811,   813,
     791,   756,    -1,   420,   811,   813,   791,   818,    -1,   420,
     476,   812,   477,    -1,   420,   476,   812,   477,   756,   769,
      -1,   797,    -1,   429,    -1,   165,    -1,   167,    -1,     3,
      -1,   167,    -1,    -1,   810,    -1,   812,   480,   810,    -1,
     165,    -1,    -1,   505,   118,   166,   815,   817,   816,   510,
      -1,   659,    -1,   659,   764,    -1,   659,    35,   764,    -1,
     435,   700,    -1,    -1,   419,   650,    -1,    -1,   797,   791,
      -1,   797,   791,   756,   769,    -1,   330,   821,    -1,   824,
      -1,    26,    -1,   820,    -1,   394,   459,    -1,   398,   213,
     224,    -1,   823,   824,    -1,   823,   394,   459,    -1,   823,
     398,   213,   224,    -1,   823,    26,    -1,   362,    -1,   123,
      -1,   764,    -1,   824,   478,   764,    -1,    55,   703,    -1,
      91,   577,   431,   756,   567,   784,    35,   606,   827,    -1,
      91,   278,   328,   577,   431,   756,   567,   784,    35,   606,
     827,    -1,    91,   577,   318,   431,   756,   476,   571,   477,
     784,    35,   606,   827,    -1,    91,   278,   328,   577,   318,
     431,   756,   476,   571,   477,   784,    35,   606,   827,    -1,
     438,    66,   276,    -1,   438,    58,    66,   276,    -1,   438,
     229,    66,   276,    -1,    -1,    91,   577,   385,   830,    35,
     606,   829,    -1,    91,   577,   385,   184,   258,   148,   830,
      35,   606,   829,    -1,   438,   105,    -1,   438,   256,   105,
      -1,    -1,   756,   567,   553,   545,    -1,    18,    -1,    19,
      -1,    20,    -1,    21,    -1,    22,    -1,    23,    -1,    24,
      -1,    25,    -1,    27,    -1,    28,    -1,    29,    -1,    37,
      -1,    38,    -1,    40,    -1,    41,    -1,    42,    -1,    44,
      -1,    45,    -1,    46,    -1,    53,    -1,    54,    -1,    55,
      -1,    56,    -1,    57,    -1,    58,    -1,    61,    -1,    62,
      -1,    65,    -1,    67,    -1,    68,    -1,    69,    -1,    70,
      -1,    75,    -1,    76,    -1,    77,    -1,    78,    -1,    79,
      -1,    81,    -1,    82,    -1,    83,    -1,    85,    -1,    86,
      -1,    87,    -1,    88,    -1,    89,    -1,    90,    -1,    93,
      -1,    94,    -1,    95,    -1,   103,    -1,   104,    -1,   105,
      -1,   106,    -1,   107,    -1,   108,    -1,   109,    -1,   112,
      -1,   114,    -1,   116,    -1,   117,    -1,   118,    -1,   119,
      -1,   120,    -1,   121,    -1,   123,    -1,   124,    -1,   125,
      -1,   126,    -1,   127,    -1,   130,    -1,   131,    -1,   132,
      -1,   133,    -1,   134,    -1,   136,    -1,   137,    -1,   138,
      -1,   140,    -1,   141,    -1,   142,    -1,   144,    -1,   145,
      -1,   146,    -1,   147,    -1,   149,    -1,   150,    -1,   151,
      -1,   152,    -1,   155,    -1,   157,    -1,   158,    -1,   160,
      -1,   162,    -1,   164,    -1,   168,    -1,   169,    -1,   170,
      -1,   172,    -1,   174,    -1,   177,    -1,   179,    -1,   180,
      -1,   181,    -1,   182,    -1,   183,    -1,   184,    -1,   186,
      -1,   187,    -1,   188,    -1,   189,    -1,   191,    -1,   192,
      -1,   193,    -1,   194,    -1,   195,    -1,   196,    -1,   198,
      -1,   201,    -1,   202,    -1,   203,    -1,   204,    -1,   210,
      -1,   213,    -1,   215,    -1,   216,    -1,   217,    -1,   218,
      -1,   219,    -1,   222,    -1,   224,    -1,   227,    -1,   228,
      -1,   229,    -1,   232,    -1,   233,    -1,   234,    -1,   235,
      -1,   236,    -1,   237,    -1,   238,    -1,   239,    -1,   240,
      -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,   245,
      -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,   250,
      -1,   254,    -1,   255,    -1,   256,    -1,   259,    -1,   260,
      -1,   262,    -1,   265,    -1,   267,    -1,   268,    -1,   269,
      -1,   271,    -1,   272,    -1,   275,    -1,   276,    -1,   277,
      -1,   280,    -1,   283,    -1,   286,    -1,   287,    -1,   288,
      -1,   289,    -1,   290,    -1,   291,    -1,   292,    -1,   293,
      -1,   294,    -1,   296,    -1,   297,    -1,   299,    -1,   300,
      -1,   302,    -1,   303,    -1,   304,    -1,   306,    -1,   307,
      -1,   308,    -1,   309,    -1,   310,    -1,   311,    -1,   312,
      -1,   313,    -1,   314,    -1,   316,    -1,   317,    -1,   318,
      -1,   319,    -1,   321,    -1,   322,    -1,   323,    -1,   324,
      -1,   325,    -1,   326,    -1,   327,    -1,   328,    -1,   329,
      -1,   330,    -1,   331,    -1,   332,    -1,   334,    -1,   335,
      -1,   337,    -1,   338,    -1,   339,    -1,   341,    -1,   342,
      -1,   343,    -1,   344,    -1,   345,    -1,   346,    -1,   347,
      -1,   348,    -1,   349,    -1,   350,    -1,   352,    -1,   353,
      -1,   354,    -1,   355,    -1,   356,    -1,   358,    -1,   360,
      -1,   361,    -1,   362,    -1,   364,    -1,   365,    -1,   367,
      -1,   369,    -1,   370,    -1,   371,    -1,   372,    -1,   373,
      -1,   374,    -1,   375,    -1,   376,    -1,   377,    -1,   378,
      -1,   379,    -1,   380,    -1,   383,    -1,   384,    -1,   386,
      -1,   388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,
      -1,   398,    -1,   399,    -1,   401,    -1,   404,    -1,   405,
      -1,   406,    -1,   407,    -1,   408,    -1,   409,    -1,   410,
      -1,   413,    -1,   414,    -1,   415,    -1,   416,    -1,   417,
      -1,   420,    -1,   421,    -1,   422,    -1,   423,    -1,   424,
      -1,   428,    -1,   430,    -1,   431,    -1,   432,    -1,   433,
      -1,   436,    -1,   439,    -1,   440,    -1,   441,    -1,   442,
      -1,   443,    -1,   444,    -1,   456,    -1,   457,    -1,   458,
      -1,   459,    -1,    47,    -1,    48,    -1,    50,    -1,    51,
      -1,    63,    -1,    64,    -1,    71,    -1,   110,    -1,   111,
      -1,   148,    -1,   153,    -1,   159,    -1,   176,    -1,   200,
      -1,   205,    -1,   206,    -1,   208,    -1,   251,    -1,   253,
      -1,   257,    -1,   264,    -1,   266,    -1,   281,    -1,   285,
      -1,   298,    -1,   301,    -1,   315,    -1,   340,    -1,   359,
      -1,   366,    -1,   381,    -1,   394,    -1,   395,    -1,   400,
      -1,   402,    -1,   425,    -1,   426,    -1,   445,    -1,   446,
      -1,   447,    -1,   448,    -1,   449,    -1,   450,    -1,   451,
      -1,   452,    -1,   453,    -1,   454,    -1,   455,    -1,    43,
      -1,    49,    -1,    73,    -1,    80,    -1,    92,    -1,    99,
      -1,   165,    -1,   167,    -1,   171,    -1,   185,    -1,   199,
      -1,   211,    -1,   212,    -1,   214,    -1,   223,    -1,   225,
      -1,   252,    -1,   261,    -1,   282,    -1,   284,    -1,   336,
      -1,   363,    -1,   387,    -1,   429,    -1,    26,    -1,    30,
      -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,    35,
      -1,    36,    -1,    39,    -1,    52,    -1,    59,    -1,    60,
      -1,    66,    -1,    72,    -1,    74,    -1,    84,    -1,    91,
      -1,    96,    -1,    97,    -1,    98,    -1,   100,    -1,   101,
      -1,   102,    -1,   113,    -1,   115,    -1,   122,    -1,   128,
      -1,   129,    -1,   135,    -1,   139,    -1,   143,    -1,   154,
      -1,   156,    -1,   161,    -1,   163,    -1,   166,    -1,   173,
      -1,   175,    -1,   178,    -1,   190,    -1,   197,    -1,   207,
      -1,   209,    -1,   220,    -1,   221,    -1,   226,    -1,   230,
      -1,   231,    -1,   258,    -1,   263,    -1,   270,    -1,   273,
      -1,   274,    -1,   278,    -1,   279,    -1,   295,    -1,   305,
      -1,   320,    -1,   333,    -1,   351,    -1,   357,    -1,   368,
      -1,   382,    -1,   385,    -1,   393,    -1,   396,    -1,   397,
      -1,   403,    -1,   411,    -1,   412,    -1,   418,    -1,   419,
      -1,   427,    -1,   434,    -1,   435,    -1,   437,    -1,   438,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   453,   453,   469,   481,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   524,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   169,   184,   185,   204,   208,   212,   229,   236,
     243,   253,   254,   257,   269,   280,   288,   293,   298,   303,
     308,   316,   324,   329,   334,   341,   342,   346,   347,   348,
     355,   356,   360,   361,   365,   366,   370,   374,   375,   378,
     387,   398,   399,   400,   403,   404,   405,   409,   410,   411,
     412,   416,   417,   421,   423,   439,   441,   446,   449,   454,
     455,   463,   483,   484,   486,   491,   492,   496,   497,   500,
     501,   526,   527,   531,   532,   536,   537,   541,   554,   555,
     559,   560,   564,   565,   569,   570,   574,   585,   586,   587,
     588,   592,   593,   598,   599,   600,   609,   615,   633,   634,
     638,   639,   645,   650,   658,   665,   673,   708,   733,   737,
     763,   767,   780,   794,   809,   821,   837,   843,   848,   854,
     861,   862,   870,   874,   878,   884,   891,   896,   897,   898,
     899,   903,   904,   916,   917,   922,   929,   936,   943,   966,
     979,   980,   995,  1005,  1017,  1022,  1023,  1026,  1027,  1030,
    1031,  1036,  1037,  1042,  1046,  1052,  1073,  1081,  1093,  1098,
    1105,  1110,  1116,  1121,  1130,  1132,  1135,  1139,  1140,  1141,
    1142,  1143,  1144,  1149,  1169,  1170,  1171,  1172,  1183,  1189,
    1197,  1198,  1204,  1209,  1214,  1219,  1224,  1229,  1234,  1239,
    1245,  1251,  1257,  1264,  1286,  1295,  1299,  1307,  1311,  1319,
    1331,  1352,  1356,  1362,  1366,  1379,  1387,  1397,  1399,  1401,
    1403,  1405,  1407,  1412,  1413,  1420,  1429,  1437,  1446,  1457,
    1465,  1466,  1467,  1471,  1471,  1474,  1474,  1477,  1477,  1480,
    1480,  1483,  1483,  1486,  1486,  1489,  1491,  1493,  1495,  1497,
    1499,  1501,  1506,  1511,  1517,  1525,  1530,  1537,  1544,  1548,
    1552,  1588,  1589,  1591,  1599,  1614,  1616,  1618,  1620,  1622,
    1624,  1626,  1628,  1630,  1632,  1634,  1636,  1638,  1640,  1643,
    1645,  1647,  1650,  1652,  1654,  1656,  1659,  1664,  1669,  1676,
    1681,  1688,  1693,  1701,  1706,  1715,  1723,  1731,  1739,  1757,
    1765,  1773,  1781,  1789,  1797,  1813,  1821,  1829,  1837,  1845,
    1853,  1861,  1865,  1869,  1873,  1877,  1885,  1893,  1901,  1909,
    1929,  1951,  1962,  1969,  1994,  1996,  1998,  2000,  2002,  2004,
    2006,  2008,  2010,  2012,  2014,  2016,  2018,  2020,  2022,  2024,
    2026,  2028,  2030,  2032,  2036,  2040,  2044,  2058,  2059,  2060,
    2072,  2087,  2099,  2101,  2103,  2114,  2138,  2151,  2155,  2161,
    2168,  2175,  2185,  2192,  2220,  2255,  2266,  2267,  2274,  2280,
    2284,  2288,  2292,  2296,  2300,  2304,  2308,  2312,  2316,  2320,
    2324,  2328,  2332,  2336,  2340,  2342,  2346,  2355,  2360,  2367,
    2382,  2389,  2393,  2397,  2401,  2405,  2419,  2420,  2424,  2425,
    2433,  2434,  2438,  2439,  2444,  2452,  2454,  2468,  2471,  2498,
    2499,  2502,  2503,  2514,  2532,  2539,  2548,  2565,  2610,  2618,
    2626,  2634,  2642,  2663,  2664,  2665,  2668,  2669,  2670,  2673,
    2674,  2677,  2678,  2679,  2680,  2681,  2682,  2683,  2684,  2685,
    2686,  2687,  2688,  2691,  2693,  2698,  2700,  2705,  2707,  2709,
    2711,  2713,  2715,  2717,  2719,  2733,  2735,  2739,  2743,  2750,
    2754,  2760,  2764,  2773,  2784,  2785,  2789,  2793,  2800,  2801,
    2802,  2803,  2804,  2805,  2806,  2807,  2817,  2821,  2828,  2835,
    2836,  2852,  2856,  2861,  2865,  2880,  2885,  2889,  2892,  2895,
    2896,  2897,  2900,  2907,  2917,  2931,  2932,  2936,  2947,  2948,
    2951,  2952,  2955,  2959,  2966,  2970,  2974,  2982,  2993,  2994,
    2998,  2999,  3003,  3004,  3007,  3008,  3018,  3019,  3023,  3024,
    3027,  3043,  3051,  3059,  3081,  3082,  3093,  3097,  3124,  3126,
    3131,  3133,  3143,  3145,  3156,  3160,  3164,  3168,  3172,  3181,
    3188,  3220,  3224,  3228,  3232,  3236,  3240,  3244,  3250,  3251,
    3267,  3268,  3269,  3272,  3273,  3278,  3279,  3280,  3283,  3284,
    3287,  3289,  3294,  3295,  3298,  3306,  3307,  3308,  3309,  3310,
    3313,  3314,     7,    18,    19,    23,    24,    25,    26,     7,
      16,    34,    41,    46,    47,    48,    49,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       7,    16,    25,    34,    43,    52,     5,     7,    20,     9,
      16,    26,    33,    44,    45,    50,    51,    52,    57,    58,
      59,    60,    61,    65,    66,    67,    68,    73,    74,    79,
      83,    91,    92,    97,    98,    99,   105,   110,   118,   119,
      10,    16,    22,    32,    33,    41,    52,    64,    72,    80,
      87,    97,    99,   105,   109,   113,   128,   135,   136,   137,
     141,   142,     7,    16,     8,    22,    36,    48,    56,    70,
      71,    72,    73,    74,    87,    88,    93,    94,    98,    99,
       7,    21,    25,    32,    43,    44,    50,    51,     9,    19,
       2,     7,    14,    24,    25,    32,     3,     9,    15,    21,
      29,    29,    31,    32,     6,     8,    21,    34,    52,    74,
      75,    76,    77,    11,    24,    41,    42,    43,    48,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MINUTE_P", "MINUTES_P",
  "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES",
  "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT",
  "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P",
  "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON",
  "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY",
  "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED",
  "OWNER", "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING",
  "PASSWORD", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM_P",
  "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P",
  "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "opt_interval", "interval_second", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "window_clause", "window_definition_list", "window_definition",
  "over_clause", "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,    60,    62,    61,   718,    43,    45,    42,
      47,    37,    94,   719,    91,    93,    40,    41,    46,    59,
      44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   483,   484,   485,   485,   486,   486,   486,   486,   486,
     486,   486,   486,   486,   486,   486,   486,   486,   486,   486,
     486,   486,   486,   486,   486,   486,   486,   486,   486,   486,
     486,   486,   486,   486,   486,   486,   486,   486,   486,   487,
     487,   487,   487,   487,   487,   487,   487,   488,   488,   489,
     489,   490,   490,   490,   490,   491,   491,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   493,   493,   494,   494,
     494,   494,   495,   495,   496,   497,   497,   498,   498,   498,
     498,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   500,   500,   501,   502,   502,   502,
     502,   502,   503,   503,   504,   504,   504,   505,   505,   506,
     507,   507,   508,   508,   508,   509,   509,   509,   510,   510,
     511,   511,   512,   512,   513,   513,   514,   514,   515,   515,
     516,   516,   517,   517,   518,   519,   519,   519,   520,   520,
     521,   521,   522,   522,   522,   523,   523,   524,   524,   525,
     525,   526,   526,   526,   527,   527,   527,   527,   528,   528,
     528,   528,   528,   528,   528,   528,   528,   528,   528,   528,
     528,   528,   529,   529,   530,   530,   530,   531,   531,   531,
     531,   531,   531,   532,   532,   532,   533,   533,   534,   534,
     535,   535,   535,   535,   535,   535,   536,   536,   537,   538,
     538,   538,   538,   538,   539,   539,   539,   539,   540,   540,
     540,   540,   540,   540,   540,   540,   541,   542,   543,   543,
     543,   543,   543,   544,   544,   545,   545,   545,   545,   546,
     547,   547,   548,   548,   549,   549,   549,   549,   549,   549,
     549,   549,   550,   550,   551,   552,   552,   552,   552,   553,
     553,   553,   553,   554,   555,   555,   555,   556,   557,   557,
     557,   557,   557,   557,   558,   559,   559,   560,   560,   561,
     562,   562,   562,   563,   563,   564,   564,   565,   565,   566,
     567,   567,   568,   568,   569,   570,   570,   570,   570,   571,
     571,   572,   572,   572,   573,   573,   573,   573,   573,   573,
     574,   574,   575,   575,   575,   575,   576,   577,   577,   577,
     577,   577,   577,   577,   577,   578,   578,   579,   579,   579,
     579,   579,   579,   580,   580,   580,   580,   580,   580,   580,
     580,   580,   580,   580,   580,   580,   580,   580,   581,   581,
     581,   581,   581,   581,   581,   582,   582,   583,   583,   583,
     584,   584,   584,   585,   586,   586,   587,   587,   588,   589,
     589,   590,   590,   591,   591,   592,   592,   593,   593,   594,
     594,   595,   595,   596,   596,   597,   597,   597,   597,   597,
     598,   599,   599,   600,   600,   601,   601,   602,   602,   602,
     602,   602,   602,   602,   602,   602,   602,   602,   602,   602,
     602,   603,   604,   604,   604,   605,   605,   606,   606,   607,
     607,   608,   608,   608,   608,   608,   608,   608,   608,   609,
     609,   610,   610,   610,   610,   610,   610,   610,   611,   611,
     611,   612,   612,   613,   614,   614,   615,   615,   615,   615,
     615,   615,   615,   615,   615,   616,   616,   617,   617,   617,
     618,   618,   619,   619,   620,   620,   621,   622,   622,   623,
     623,   624,   624,   624,   625,   625,   625,   626,   626,   626,
     626,   627,   627,   628,   628,   628,   628,   629,   629,   630,
     630,   631,   632,   632,   632,   633,   633,   634,   634,   635,
     635,   636,   636,   637,   637,   638,   638,   639,   640,   640,
     641,   641,   642,   642,   643,   643,   644,   645,   645,   645,
     645,   646,   646,   647,   647,   647,   648,   648,   649,   649,
     650,   650,   651,   651,   651,   651,   651,   651,   651,   651,
     652,   652,   652,   652,   652,   652,   653,   653,   653,   653,
     654,   654,   655,   655,   655,   655,   655,   656,   656,   656,
     656,   657,   657,   658,   658,   659,   659,   659,   659,   660,
     661,   661,   662,   662,   663,   664,   664,   665,   665,   666,
     666,   667,   667,   668,   668,   669,   670,   670,   671,   671,
     671,   671,   671,   671,   672,   672,   672,   673,   673,   673,
     673,   673,   673,   673,   674,   674,   674,   674,   675,   675,
     676,   676,   677,   677,   677,   677,   677,   677,   677,   677,
     677,   677,   677,   678,   678,   679,   679,   680,   680,   681,
     682,   683,   683,   684,   684,   685,   686,   687,   687,   687,
     687,   687,   687,   688,   688,   689,   689,   689,   689,   690,
     691,   691,   691,   692,   692,   693,   693,   694,   694,   695,
     695,   696,   696,   697,   697,   698,   698,   698,   698,   698,
     698,   698,   698,   698,   698,   698,   698,   698,   698,   699,
     699,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,   700,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   701,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   701,   701,   701,   701,   702,   702,   702,
     702,   702,   702,   702,   702,   702,   702,   703,   703,   703,
     703,   703,   703,   703,   704,   704,   705,   705,   706,   706,
     706,   706,   706,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   706,   706,   706,   706,   706,   706,   706,
     706,   706,   706,   706,   706,   706,   707,   707,   708,   708,
     709,   709,   710,   710,   711,   712,   712,   712,   713,   714,
     714,   715,   715,   716,   716,   716,   717,   717,   718,   718,
     718,   718,   718,   719,   719,   719,   720,   720,   720,   721,
     721,   722,   722,   722,   722,   722,   722,   722,   722,   722,
     722,   722,   722,   723,   723,   724,   724,   725,   725,   725,
     725,   725,   725,   725,   725,   726,   726,   727,   727,   728,
     728,   729,   729,   729,   730,   730,   731,   731,   732,   732,
     732,   732,   732,   732,   732,   732,   733,   733,   734,   735,
     735,   736,   736,   736,   736,   736,   736,   737,   738,   739,
     739,   739,   740,   740,   741,   742,   742,   743,   744,   744,
     745,   745,   746,   746,   747,   747,   747,   747,   748,   748,
     749,   749,   750,   750,   751,   751,   752,   752,   753,   753,
     754,   754,   754,   754,   755,   755,   756,   756,   757,   757,
     758,   759,   760,   760,   761,   761,   761,   761,   761,   761,
     761,   761,   761,   761,   761,   761,   761,   761,   762,   763,
     764,   764,   764,   765,   765,   766,   766,   766,   767,   767,
     768,   768,   769,   769,   770,   771,   771,   771,   771,   771,
     772,   772,   773,   774,   774,   775,   775,   775,   775,   776,
     776,   777,   777,   778,   778,   778,   778,   779,   779,   780,
     781,   781,   782,   782,   783,   783,   784,   784,   785,   785,
     786,   786,   786,   786,   786,   786,   787,   788,   789,   790,
     790,   790,   790,   791,   791,   792,   792,   792,   793,   793,
     793,   793,   793,   794,   794,   794,   794,   795,   795,   796,
     796,   797,   797,   798,   798,   798,   798,   799,   800,   800,
     801,   801,   801,   802,   802,   802,   802,   803,   803,   803,
     803,   804,   804,   805,   805,   805,   805,   805,   805,   805,
     806,   806,   807,   808,   809,   809,   809,   809,   809,   810,
     810,   810,   810,   810,   811,   811,   812,   812,   813,   813,
     814,   815,   815,   815,   816,   816,   817,   817,   818,   818,
     819,   820,   820,   821,   821,   821,   822,   822,   822,   822,
     823,   823,   824,   824,   825,   826,   826,   826,   826,   827,
     827,   827,   827,   828,   828,   829,   829,   829,   830,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   832,   832,   832,   832,   832,   832,   832,   832,
     832,   832,   832,   832,   832,   832,   832,   832,   832,   832,
     832,   832,   832,   832,   832,   832,   832,   832,   832,   832,
     832,   832,   832,   832,   832,   832,   832,   832,   832,   832,
     832,   832,   832,   832,   832,   832,   832,   832,   832,   832,
     833,   833,   833,   833,   833,   833,   833,   833,   833,   833,
     833,   833,   833,   833,   833,   833,   833,   833,   833,   833,
     833,   833,   833,   833,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834,   834,   834,   834,   834,   834,   834,   834,   834,   834,
     834
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,     9,     9,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     3,     0,     1,     3,     1,     1,     2,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     1,     2,     0,     4,     5,     2,     0,
       1,     3,     2,     3,     2,     3,     2,     3,     1,     4,
       3,     4,     5,     4,     5,     4,     5,     2,     4,     1,
       1,     0,     1,     4,     5,     4,     0,     2,     2,     2,
       1,     1,     0,     4,     2,     1,     2,     2,     4,     6,
       4,     0,     2,     6,     2,     1,     3,     4,     0,     2,
       0,     2,     0,     1,     3,     3,     2,     0,     2,     3,
       5,     6,     2,     3,     3,     4,     0,     1,     1,     1,
       1,     1,     2,     4,     1,     1,     1,     1,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     3,     3,     3,     3,     0,     1,
       4,     1,     3,     3,     5,     2,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     2,     3,     3,     2,     2,     3,     3,     5,     4,
       6,     3,     5,     4,     6,     4,     6,     5,     7,     3,
       2,     4,     3,     2,     3,     3,     4,     3,     4,     3,
       4,     5,     6,     6,     7,     6,     7,     6,     7,     3,
       4,     4,     6,     1,     1,     3,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     2,     5,     6,     6,     7,     1,     1,     2,
       2,     4,     1,     1,     1,     2,     2,     3,     5,     6,
       8,     6,     6,     4,     4,     1,     1,     1,     5,     1,
       1,     4,     1,     4,     1,     4,     1,     4,     1,     1,
       1,     1,     1,     1,     6,     4,     4,     4,     4,     6,
       5,     5,     5,     4,     6,     4,     5,     0,     5,     0,
       2,     0,     1,     3,     3,     2,     2,     0,     6,     1,
       0,     3,     0,     2,     2,     0,     1,     4,     2,     2,
       2,     2,     2,     4,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     1,     4,     1,     4,     1,
       2,     1,     2,     1,     2,     1,     3,     1,     3,     1,
       3,     1,     3,     3,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     3,     2,     3,
       0,     3,     3,     2,     2,     1,     0,     2,     2,     3,
       2,     1,     1,     3,     5,     1,     2,     4,     2,     0,
       1,     0,     1,     2,     2,     2,     3,     5,     1,     0,
       1,     2,     0,     2,     1,     0,     1,     0,     1,     3,
       3,     2,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       6,     2,     5,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     5,     3,     0,     1,     1,     1,     1,     4,
       7,     2,     0,     1,     1,     1,     1,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       6,     8,     6,     8,     6,     8,     1,     4,     3,     2,
       4,     3,     5,     1,     0,     1,     1,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     3,     3,     1,     3,     3,     2,     3,     3,     3,
       3,     1,     1,     1,     1,     3,     5,     1,     1,     1,
       1,     3,     2,     1,     4,     5,     5,     4,     6,     1,
       1,     1,     1,     1,     1,     0,     1,     3,     1,     0,
       7,     1,     2,     3,     2,     0,     2,     0,     2,     4,
       2,     1,     1,     1,     2,     3,     2,     3,     4,     2,
       1,     1,     1,     3,     2,     9,    11,    12,    14,     3,
       4,     4,     0,     7,    10,     2,     3,     0,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1062,  1061,   205,     0,  1036,   205,   406,
     334,     0,  1131,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,   205,   473,     0,  1130,   205,     0,  1105,
       0,     0,     0,     0,     0,     2,     4,     7,    17,    29,
      25,     0,    27,    15,    20,     6,    31,    16,    19,    13,
      32,    11,    30,   440,   427,   475,   439,   127,   443,    28,
      14,    24,     5,    10,    22,    23,    21,  1044,    35,    26,
      33,    18,     8,    34,    36,     0,     9,    37,    12,   204,
     203,   197,     0,     0,     0,     0,     0,   198,   980,  1149,
    1150,  1151,  1152,  1153,  1154,  1155,  1156,  1157,  1158,  1159,
    1160,  1161,  1162,  1163,  1164,  1490,  1165,  1166,  1167,  1442,
    1443,  1491,  1444,  1445,  1168,  1169,  1170,  1171,  1172,  1173,
    1174,  1175,  1446,  1447,  1176,  1177,  1178,  1179,  1180,  1448,
    1492,  1181,  1182,  1183,  1184,  1185,  1493,  1186,  1187,  1188,
    1189,  1190,  1191,  1192,  1193,  1194,  1494,  1195,  1196,  1197,
    1495,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1449,  1450,
    1205,  1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,
    1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,
    1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,  1451,  1233,
    1234,  1235,  1236,  1452,  1237,  1238,  1239,  1453,  1240,  1241,
    1242,  1496,  1497,  1243,  1244,  1245,  1498,  1246,  1247,  1454,
    1248,  1249,  1250,  1251,  1252,  1253,  1254,  1499,  1255,  1256,
    1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,  1500,
    1455,  1266,  1267,  1268,  1269,  1456,  1457,  1458,  1270,  1501,
    1502,  1271,  1503,  1272,  1273,  1274,  1275,  1276,  1277,  1504,
    1278,  1505,  1279,  1280,  1281,  1282,  1283,  1284,  1285,  1286,
    1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,  1295,  1296,
    1297,  1298,  1299,  1300,  1459,  1506,  1460,  1301,  1302,  1303,
    1461,  1304,  1305,  1507,  1306,  1462,  1307,  1463,  1308,  1309,
    1310,  1311,  1312,  1313,  1314,  1315,  1316,  1464,  1508,  1317,
    1509,  1465,  1318,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
    1326,  1327,  1328,  1466,  1329,  1330,  1467,  1331,  1332,  1333,
    1334,  1335,  1336,  1337,  1338,  1339,  1340,  1341,  1342,  1468,
    1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,  1352,
    1353,  1354,  1355,  1356,  1357,  1358,  1359,  1360,  1510,  1361,
    1362,  1363,  1469,  1364,  1365,  1366,  1367,  1368,  1369,  1370,
    1371,  1372,  1373,  1374,  1375,  1376,  1377,  1378,  1379,  1470,
    1380,  1381,  1382,  1511,  1383,  1384,  1471,  1385,  1386,  1387,
    1388,  1389,  1390,  1391,  1392,  1393,  1394,  1395,  1396,  1397,
    1472,  1398,  1399,  1400,  1512,  1401,  1402,  1403,  1404,  1405,
    1473,  1474,  1406,  1407,  1475,  1408,  1476,  1409,  1410,  1411,
    1412,  1413,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1424,  1425,  1477,  1478,  1426,  1513,  1427,  1428,
    1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1437,  1479,
    1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,
    1438,  1439,  1440,  1441,  1134,     0,     0,   962,   981,   982,
     987,   200,   405,   128,     0,   374,     0,     0,   375,     0,
       0,   328,   327,  1028,   333,     0,     0,     0,   980,    99,
    1331,    97,   960,   981,     0,   351,   352,     0,   360,     0,
     345,   349,   346,     0,   370,   362,   371,   363,   344,   364,
     353,   343,     0,   372,   347,     0,     0,     0,   201,   166,
     334,   128,     0,  1049,  1050,  1048,  1039,  1044,  1051,  1052,
       0,     0,   979,  1093,  1092,   155,  1004,  1122,  1473,  1406,
    1132,  1123,  1120,  1121,   202,   472,   470,     0,   947,  1281,
    1367,  1378,  1473,  1070,  1073,     0,   199,     0,   444,   575,
     956,  1104,     0,  1109,     0,  1345,   448,   451,   993,   449,
     440,     0,     0,     1,   128,     0,     0,     0,   469,   469,
       0,   469,     0,   432,   440,   435,   439,     0,  1043,  1118,
    1129,  1473,  1406,  1126,  1254,     0,     0,  1254,     0,  1254,
       0,  1254,     0,     0,   939,     0,   940,   963,  1006,  1007,
    1005,     0,  1008,   301,   332,   331,   330,   329,   334,  1254,
    1012,     0,     0,     0,     0,     0,  1023,   100,    98,   358,
     359,     0,   350,   348,     0,  1254,   369,   988,   365,  1254,
     369,   958,  1254,     0,     0,   162,     0,  1041,  1053,  1477,
    1068,     0,  1069,  1059,  1047,  1054,  1055,  1056,   128,   404,
    1038,     0,     0,     0,     0,  1124,     0,     0,     0,   965,
     967,   968,   873,   978,   942,  1443,  1444,  1445,   931,     0,
    1446,  1447,  1448,  1492,   812,   799,   808,   813,   800,   802,
     809,  1449,  1450,   753,  1220,  1451,  1452,   976,  1453,  1456,
    1457,  1458,   804,   806,  1459,  1460,     0,   977,  1462,  1463,
    1313,  1465,  1466,  1468,  1469,   810,  1471,  1472,  1473,  1474,
    1475,  1476,   975,   811,  1478,     0,     0,     0,   953,     0,
     942,   784,     0,   614,   615,   637,   638,   616,   643,   644,
     646,   617,     0,   952,   691,   827,   783,   795,     0,     0,
     782,   777,   455,   948,     0,   778,   964,   966,   932,   455,
     946,  1071,  1076,  1072,     0,     0,     0,     0,     0,   577,
     576,   957,  1103,  1101,  1102,  1100,  1099,  1106,     0,  1108,
    1044,   887,     0,   450,     0,     0,     0,   430,   429,     3,
       0,     0,  1111,     0,   467,   468,     0,     0,     0,     0,
       0,     0,     0,     0,   523,   489,   490,   492,   520,   524,
     532,     0,   436,     0,   993,  1127,     0,     0,     0,   115,
     115,     0,     0,     0,     0,     0,    92,    41,    85,     0,
       0,     0,     0,   180,   193,     0,     0,     0,     0,     0,
     190,     0,     0,   173,    43,   167,   169,     0,   115,     0,
      39,     0,     0,     0,    45,     0,     0,     0,     0,   787,
     891,   475,   889,   962,     0,   938,     0,   995,  1514,  1515,
    1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,
    1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,  1590,   935,   934,   961,   996,   997,
     998,   999,   941,     0,     0,   402,     0,     0,  1009,     0,
    1254,   161,  1254,   301,     0,   301,     0,     0,  1022,  1025,
     361,   357,   355,   354,   356,     0,   367,   368,     0,   338,
       0,   989,     0,     0,   340,     0,     0,     0,     0,   128,
       0,   174,  1064,  1065,  1063,     0,     0,  1046,   177,   194,
    1058,  1067,  1057,  1066,  1045,  1040,     0,  1037,   393,  1082,
    1081,  1090,   156,     0,   985,   625,   654,   632,   654,   654,
     621,   621,   634,   622,   623,   659,     0,   654,   621,   626,
       0,   624,   662,   662,   649,   894,   606,   607,   608,   609,
     635,   636,   610,   641,   642,   611,   688,     0,   621,   986,
     128,  1125,  1133,     0,   780,   653,   640,   930,     0,     0,
     648,   647,     0,     0,     0,     0,     0,   630,   629,   628,
     786,   897,     0,   627,     0,     0,   654,   654,   652,   714,
       0,   631,     0,     0,   910,     0,   916,     0,     0,     0,
     658,     0,   656,     0,     0,   715,   695,   696,   784,   887,
       0,   779,   785,   971,     0,     0,   688,   688,   951,   873,
       0,   870,   871,   872,     0,     0,     0,   945,     0,   881,
     883,     0,     0,   730,   879,     0,   733,     0,     0,     0,
       0,   867,   868,   869,   861,   862,   863,   864,   865,   866,
     877,   860,   711,     0,     0,   829,     0,   710,     0,     0,
     539,     0,   969,   933,   539,  1084,  1088,  1089,  1087,     0,
    1083,  1075,  1074,  1079,  1077,  1080,  1078,     0,  1097,     0,
    1094,   536,     0,   452,     0,     0,  1117,     0,   122,     0,
    1112,     0,   447,   446,   476,   477,   483,   445,   509,   510,
       0,     0,     0,     0,   529,   527,   500,   493,   499,     0,
       0,   497,     0,   501,   691,   522,   434,   487,   488,   491,
     433,     0,   525,     0,   535,   523,   492,     0,  1119,  1128,
       0,     0,     0,     0,     0,  1254,     0,     0,    76,    57,
     253,     0,   114,     0,     0,     0,     0,     0,     0,     0,
      84,    81,    82,    83,     0,     0,     0,     0,   178,   179,
     192,     0,   183,   184,   181,   185,   186,     0,     0,   171,
     172,     0,     0,     0,     0,   170,     0,     0,     0,     0,
       0,     0,     0,     0,   475,   475,   475,   793,     0,     0,
     474,     0,     0,   936,   939,   392,   309,     0,   299,     0,
       0,     0,     0,     0,   334,  1015,  1013,  1011,  1014,  1016,
       0,     0,   158,   160,     0,   298,   272,     0,  1027,   376,
       0,     0,  1254,  1024,   289,     0,   369,   366,   990,     0,
     369,   959,     0,   369,   165,  1254,   301,     0,  1042,  1060,
     175,   195,   176,   196,   425,     0,   399,   407,   412,   390,
       0,   390,     0,   409,   413,   390,   408,   390,   403,     0,
     157,     0,   606,   602,   598,   667,   668,   669,   670,   671,
     672,   665,   666,   673,   674,   663,   664,     0,   675,   676,
     677,   678,   679,   689,   612,   680,  1003,     0,   618,   621,
    1002,     0,   943,     0,     0,   929,   925,     0,     0,     0,
       0,     0,     0,   898,   899,   900,   901,   902,   903,   904,
       0,     0,   905,     0,     0,     0,   651,   650,     0,   859,
     870,   871,   872,   867,   868,   869,   861,   862,   863,   864,
     865,   866,   885,     0,     0,     0,     0,     0,     0,     0,
       0,   754,     0,     0,   854,     0,   887,   915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   887,   921,
       0,   942,     0,     0,     0,   973,   974,   692,   706,   707,
     708,   712,  1001,  1000,   950,     0,   944,     0,     0,   693,
     716,   721,     0,   922,   749,     0,   737,     0,   729,     0,
     735,   739,   717,   732,     0,   713,     0,   945,   882,   884,
       0,   880,     0,   703,   704,   705,   697,   698,   699,   700,
     701,   702,   709,   858,   856,   857,     0,     0,     0,   837,
       0,     0,   734,  1246,  1281,     0,   466,   466,   466,   454,
     464,   949,     0,   592,   475,   592,     0,   688,   578,   993,
    1107,  1095,  1096,   888,   992,   128,     0,  1115,     0,     0,
       0,   134,   117,     0,  1113,     0,   150,   539,     0,   942,
       0,   481,   482,     0,   486,  1469,  1364,     0,     0,     0,
       0,   502,   530,     0,   521,     0,   965,   503,   964,   504,
     507,   508,   498,   531,   954,   533,     0,   526,   438,   437,
     537,     0,    42,     0,  1254,    59,     0,     0,     0,     0,
       0,     0,   208,   244,   208,    96,  1254,   369,  1254,   369,
    1153,  1221,  1379,     0,    55,    88,     0,   277,   108,     0,
     262,   306,    78,    93,   101,     0,     0,    44,   168,   182,
     187,   104,   191,   188,  1032,   189,   115,     0,    40,     0,
     102,     0,  1030,     0,     0,    46,   106,  1034,     0,     0,
       0,     0,   890,   788,   892,   893,   938,     0,   391,     0,
     300,     0,   401,   381,   382,   392,     0,   301,  1012,     0,
       0,     0,     0,     0,   292,   290,   320,     0,   297,   291,
     299,     0,     0,   248,     0,  1147,     0,     0,   377,   373,
       0,     0,   337,   991,   339,     0,   341,     0,     0,   394,
       0,   397,     0,   396,   400,   395,   389,     0,   420,     0,
       0,     0,     0,     0,     0,  1091,   603,   599,     0,     0,
       0,     0,     0,     0,     0,     0,   895,   619,   471,     0,
       0,     0,   926,     0,     0,   825,     0,   801,   803,   620,
     815,     0,   633,   805,   807,     0,   874,     0,     0,     0,
     816,   756,   757,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     772,   771,   817,   853,     0,     0,   913,   914,   818,   661,
     660,   662,   662,     0,     0,   920,     0,     0,     0,   823,
     781,   888,   645,   688,     0,     0,     0,     0,     0,     0,
       0,   738,   731,     0,   736,   740,     0,     0,     0,   725,
       0,     0,   723,   750,   719,     0,     0,   751,     0,     0,
       0,   794,   466,   466,   466,   466,   463,   465,     0,     0,
       0,     0,  1364,     0,   561,   538,   540,   548,   561,   566,
     796,   590,   797,   956,     0,   512,     0,   512,     0,  1085,
    1098,     0,  1116,     0,   139,   121,   141,   140,     0,   148,
       0,   942,     0,   139,   123,     0,   142,     0,  1115,     0,
     154,   478,     0,   875,   486,     0,   480,   506,   505,     0,
     496,   528,   494,     0,   534,     0,     0,     0,   252,     0,
       0,     0,   208,     0,     0,   316,     0,   303,    77,     0,
       0,     0,    51,     0,    69,    61,    47,    75,     0,     0,
      80,     0,    73,    90,    91,    89,    94,     0,   236,   218,
     249,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   791,   792,   789,   475,   937,   423,
     424,   173,   422,   310,     0,     0,  1027,  1010,     0,     0,
     161,   301,     0,   276,   272,     0,   270,   269,   271,     0,
    1148,   166,     0,  1143,  1026,     0,     0,  1021,   369,     0,
     426,     0,   385,   421,   410,   415,     0,   419,   417,   416,
     411,   414,     0,     0,   604,     0,   613,   681,   682,   683,
     684,   685,   686,   687,     0,   639,     0,   928,   924,     0,
     798,   896,     0,   886,   908,   907,   755,   767,   768,   769,
     909,     0,     0,     0,   764,   765,   766,   758,   759,   760,
     761,   762,   763,   770,   918,   917,   911,   912,   657,   655,
       0,   820,   821,   822,   919,   855,   972,   694,     0,     0,
     722,   923,   741,     0,     0,     0,   718,   874,     0,     0,
       0,     0,     0,   727,     0,     0,     0,   840,   835,   836,
       0,     0,     0,     0,   457,   456,   462,   561,   566,     0,
     440,     0,   548,     0,   560,   546,   559,     0,     0,   572,
     570,     0,   572,     0,   572,     0,   542,     0,   562,   544,
     559,     0,   582,   957,   591,     0,   519,   788,   519,     0,
     453,  1114,     0,  1110,     0,     0,     0,   129,   126,   116,
       0,     0,   151,   139,   130,     0,   479,   484,   485,   495,
     955,   109,   208,     0,     0,    58,     0,   318,   264,   296,
     279,     0,     0,     0,   209,     0,   284,     0,    50,    70,
       0,    66,     0,    95,     0,     0,     0,     0,     0,    53,
      65,     0,    48,     0,   369,   369,    56,   263,   215,  1313,
       0,   861,   862,   213,   305,   210,   311,   212,   214,   621,
     211,   308,   105,  1033,     0,   103,     0,  1031,   112,   110,
     107,  1035,     0,   404,   384,     0,     0,  1254,     0,  1027,
     159,   298,     0,   326,   248,   321,     0,  1147,  1145,     0,
    1142,     0,     0,     0,   342,     0,   398,     0,   418,     0,
     600,   605,   690,   927,   814,   824,   906,     0,     0,     0,
       0,   819,   747,   745,   742,     0,   743,   726,     0,     0,
     724,   720,     0,   752,   826,     0,   842,   839,   461,   460,
     459,   458,   547,   545,     0,   550,   984,   983,   557,     0,
     541,     0,   571,   567,     0,   568,     0,     0,   569,     0,
       0,   543,     0,   983,     0,   589,     0,     0,   831,   970,
     831,  1086,   138,   118,     0,   119,   149,     0,     0,     0,
       0,   143,   378,     0,   314,    60,     0,   296,     0,   208,
     281,   280,   283,   278,   282,   285,     0,     0,     0,     0,
       0,   265,     0,     0,     0,   229,     0,     0,   296,   302,
     225,   226,   335,     0,     0,     0,    62,    52,    49,    54,
      63,     0,     0,    64,    67,   597,    79,    72,   621,   621,
       0,     0,     0,   790,   380,   387,   173,     0,     0,     0,
       0,   298,     0,     0,     0,  1147,     0,     0,   206,     0,
     245,     0,   163,  1146,     0,  1135,     0,  1019,  1020,     0,
       0,   386,   601,   773,     0,     0,     0,   744,   748,   746,
     728,   828,     0,   475,   585,     0,   588,   549,     0,     0,
     551,     0,     0,   553,   555,     0,     0,     0,     0,   593,
       0,     0,     0,   960,     0,   511,   513,   516,   515,   518,
       0,   442,   441,     0,     0,     0,   152,     0,   145,   145,
       0,   131,   876,     0,   208,     0,   295,   315,   243,     0,
       0,   227,     0,   233,     0,   267,   268,   266,   228,   296,
     301,   230,   336,     0,    71,     0,    87,   621,     0,   307,
     113,   111,   404,     0,  1027,  1142,     0,     0,   272,   166,
    1144,   261,   254,   255,   256,   257,   258,   259,   260,   275,
     274,   246,   247,     0,     0,     0,  1021,     0,   774,     0,
     775,     0,   845,   590,     0,     0,   584,     0,   558,   574,
       0,   554,   552,     0,   563,     0,   597,     0,   565,   517,
       0,   830,   832,     0,     0,   125,     0,   592,     0,     0,
     147,   147,   133,     0,   301,   317,     0,   287,   294,   286,
       0,     0,   224,     0,   231,   325,   217,   596,     0,    74,
       0,   312,   379,   383,     0,  1136,     0,  1142,   248,  1147,
       0,  1139,     0,     0,  1027,   776,   841,     0,     0,     0,
     583,   586,     0,   556,     0,     0,   594,   595,   564,   514,
       0,     0,   120,   145,   124,   153,   144,   483,   146,   483,
       0,   325,   273,     0,     0,   251,   217,     0,   242,     0,
      68,    86,   313,     0,   298,  1137,   207,   164,  1140,  1141,
       0,   592,  1442,  1197,  1413,     0,   843,   846,   844,   838,
       0,   573,   581,   833,   834,   147,   486,   486,   592,   242,
     288,   293,     0,   232,   234,   322,   323,   324,     0,   238,
     235,   239,     0,  1142,     0,  1017,     0,   850,   849,   848,
     852,   851,   587,     0,   579,   483,   136,   135,   132,   208,
     250,     0,     0,     0,   240,     0,   241,   216,  1138,  1027,
       0,     0,   486,   319,   221,     0,   220,     0,   304,   237,
     592,   847,     0,   137,   219,   223,   222,  1018,   580
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1884,  1885,  1886,  1593,   816,
    2499,  1594,   817,   818,  1888,    38,    39,  1224,   513,  1531,
    1167,  2259,    41,  1839,  1536,  1843,  2386,  2083,  1838,  1845,
    2480,  2537,  1840,  1537,  2387,  1538,    42,    43,  1292,    44,
     635,    45,  1293,  1251,   999,   836,  1241,   988,    46,    81,
      47,  1875,  2144,  2550,  1898,  2628,  2289,  2290,  1595,  2589,
    2590,  1877,  1940,  1233,  2583,  1654,  2439,  1599,  1582,  2291,
    1663,  2396,  2173,  1596,  2114,  1655,  2276,  2486,  1303,  1656,
    2487,  2269,  1657,  1276,  1296,  2116,  2591,  1600,  1277,  2145,
    1220,  1658,  2548,  1659,   475,  2294,    48,   505,   506,   626,
     969,   507,    49,   476,   957,   514,    51,  1645,  2316,  1951,
    2317,  1687,  1639,   997,  1684,  1324,  1280,   998,   464,  1338,
    1952,  1921,  1325,   515,   721,    54,    55,    56,   562,   556,
     557,  1140,  1509,  1808,   786,   537,   538,   572,  1270,  1174,
    1175,  1544,  1856,  1199,  1200,   795,   796,  1187,  1191,  1192,
    1557,  1550,  1180,  2076,  2375,  2376,  2377,  2248,  1195,  1196,
     798,   799,   800,  1204,  1567,    58,  1513,  1815,  1816,  1817,
    2054,  2055,  2069,  2065,  2233,  2363,  1818,  2241,  2604,  1819,
    2354,  2355,  2456,  2072,  1825,  2368,  2369,  2416,  1025,  1344,
    1026,   722,  1027,  1368,   723,  1063,  1029,   724,   725,   726,
    1032,   727,   728,   729,   730,  1046,   731,   732,  1080,  1358,
    1359,  1360,  1361,  1362,  1363,  1364,  1365,   771,  1420,   734,
     735,   736,  1821,   737,  1135,  1499,  2381,  2471,  2472,  1801,
    2038,  2216,  2353,  2519,  2566,  2567,   738,  1496,  1130,  1131,
     739,  2147,  1133,  1413,  1439,   851,   852,  1037,  1390,  1391,
    1416,  1729,  1423,  1428,  1756,  1757,  1440,  1464,   740,  1375,
    1376,  1713,  1048,   741,   596,   856,   597,  1044,  1458,   749,
     742,   743,  1563,   549,  2359,   631,   936,   744,   745,   746,
     747,   748,  2228,   457,  2538,   971,   776,   854,  1597,  1454,
      59,   654,   601,    60,   948,  1287,    61,  2338,  2183,   959,
    1305,  1667,   477,    62,    63,    64,    65,    66,   579,   991,
     516,   992,   993,   641,    67,  1000,   643,   644,    68,   543,
     544,  1001,  1151,  1002,    69,   524,    70,   767,   553,   768,
     770,   518,   783,  1834,  1527,    72,    73,   531,   532,    74,
      75,   545,    76,    77,  2335,   519,  1943,   954,   483,   459,
     460,   941
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2286
static const int yypact[] =
{
    3999,   218,   576, -2286, -2286,   218, 29486, -2286,   218,    44,
    1986, 31314, -2286,  4987,   218, 35884,   763,   157,   166,   276,
   35884, 35884, 31771,   218,   196, 36341, -2286,   218, 32228,   -25,
    -131, 36798, 35884,   541,   391,   -49, -2286, -2286, -2286, -2286,
   -2286,    42, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286,   135, -2286,    49,   153,   -35,    43, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286,   179, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, 32685, -2286, -2286, -2286, -2286,
   -2286, -2286, 37255, 35884, 37712, 33142, 38169, -2286,    74, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286,   167,  -194, -2286,    78, -2286,
   -2286, -2286, -2286,   541, 35884, -2286,   246,   446, -2286,   289,
   38626, -2286, -2286, -2286, -2286,   676, 35884,   467, -2286, -2286,
   33599, -2286, -2286, -2286,   442, -2286, -2286,   311, -2286,    53,
   -2286, -2286, -2286,   297, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286,   385, -2286, -2286, 39083, 39540, 39997, -2286,   272,
     443,   522, 18233, -2286, -2286, -2286, -2286,   179, -2286, -2286,
     276,   276, -2286, -2286, -2286,   -67,   284, -2286,   321,   557,
   -2286, -2286, -2286,   320, -2286, -2286,   551,  7358,  7358, 40454,
     276, 40454,   384, -2286, -2286,   229, -2286, 19612, -2286,   382,
    -194, -2286,    86,   705, 10232, 35884,   410, -2286,   419,   410,
     433,   444,   -35, -2286,  3999,   699,   716, 32228,   596,   596,
     884,   596,   670,   778, -2286,  1114, -2286,   456, -2286, 35884,
   -2286,   523,   728,   320,   839,   920,   673,   865, 22716,   887,
     953,   897,   955,  5442, 10232, 23134, -2286,  -194, -2286, -2286,
   -2286,   553, -2286,   566, -2286, -2286, -2286, -2286,   443,   791,
   -2286,   623, 40911, 41368, 35884,   589,  1004, -2286, -2286, -2286,
   -2286,   637, -2286, -2286,    52,   952,    48,   628, -2286,   963,
      55, -2286,   976,   857, 10232, -2286,   762, -2286, -2286,  -131,
   -2286,   389, -2286, -2286, 24962, -2286, -2286, -2286,   522,   690,
   -2286, 24962, 10232, 45481,  1141, -2286,   957, 35884,   735, -2286,
   -2286, -2286, -2286, -2286, -2286,  1180,   101,  1211, 10232,   746,
     101,   101,   771,  1072, -2286, -2286, -2286,    85,   777,   800,
   -2286,   114,   114, -2286,   979,   818,   822, -2286,   116,  1295,
    1300,    98,   830,   831,   481,   101, 10232, -2286,   836,   114,
     860,   869,   874,  1318,   878, -2286,  1336,   889,    79,   106,
     896,   904, -2286, -2286,   120, 10232, 10232, 10232, -2286,  6400,
   -2286,  -194,   276, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
     909, -2286,   104,  4963, -2286,   824, -2286, -2286,  1071, 10232,
   -2286, -2286,   -47, -2286,   122, -2286, -2286, -2286,  -194,  1161,
     898, -2286, -2286, -2286,   152,  1292, 24048, 24505, 35884, -2286,
   -2286,  -194, -2286, -2286, -2286, -2286, -2286, -2286,   409, -2286,
     179, 26037,   434,   410, 35884, 35884,  1359, -2286, -2286, -2286,
   32228, 35884, 41825,  1046, -2286, -2286,   -35,   -35, 10232,   -35,
     294,   -10,  7837, 10711,  1254,  1148,    93,   448,  1264, -2286,
    1165,   670,   778, 10232,   419, -2286,  1218, 35884, 29943,   215,
     618,   959,  1050,   972,    20,  1369, -2286,   975, -2286,  1073,
   35884, 45923,   139, -2286,  1421,   139,   139,   156,  1431,  1096,
     219,  1239,   -59,   279,   975,  2610, -2286, 32228,    95,   421,
     975, 35884,  1103,   494,   975, 10232, 10232, 10232,  1024, -2286,
   26037,   -86, -2286,   663,   805, 22676,  1023, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286,  1117, 35884,  1076,  -101,  1362,  1420, 35884,
    1257,  2610,  1260,  1040,  1486,   566,  8316,  1487, -2286, 42282,
   -2286, -2286, -2286, -2286, -2286, 35884, -2286, -2286, 35884, -2286,
   27201,  1049, 35884, 35884, -2286, 35884, 35884,   477, 42739,   522,
   29029, -2286, -2286, -2286, -2286,   726,   736, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, 27201, -2286,  3701, -2286,
   -2286, -2286,  1048,   482, -2286, -2286,  1101, -2286,  1101,  1101,
    1054,  1054,  1055, -2286, -2286, -2286,   481,  1101,  1054, -2286,
   45923, -2286,   209,   380, -2286, -2286,  1498, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286,  1618,   516,   495, -2286,
     541, -2286, -2286, 10232,  -194, -2286,  1057, 26037,  1102, 10232,
   -2286, -2286, 10232,  1062,  1532,  1532, 10232, -2286, -2286, -2286,
   -2286,  1240,  1532, -2286,  1532,  1532,  1101,  1101, -2286, 26089,
   10232, -2286, 21450, 10232, 13106,  8795, 10232,  1150,  1151,  1532,
   -2286,  1532, -2286, 10232,  6879, 26089,  1543,  1543,  2249,  4094,
    1079,  -194,  -194, -2286,  1532, 10232,  1467,  1467, -2286,   133,
   45481, 10232, 10232, 10232, 10232, 26744,  1166,    87, 35884, 10232,
   10232,  1086,   565, -2286, 10232,  1302, -2286,  1090, 10232,  1173,
     263, 10232, 10232, 10232, 10232, 10232, 10232, 10232, 10232, 10232,
   -2286, -2286, 15011,   141,  1395,  1415,  -121,   198, 34056,  7358,
    1407,  5442, -2286,   119,  1407, -2286, -2286, -2286, -2286,   123,
   -2286, -2286, -2286, -2286,  1048, -2286,  1048,  1099, 35884,    86,
   30857, -2286, 10232, -2286,   532,  1104,  1159,   863,  1544, 35884,
   -2286, 20071,  1374, -2286,  1107, -2286, 25416,  1374, -2286, -2286,
   13574,  1222,  1378,  1316, -2286, -2286, -2286,  1116, 26037, 11190,
   11190, -2286,   534, 26037,   560, -2286, -2286, -2286, -2286, -2286,
   -2286,   507, -2286, 35884,   -32,  1254,   448,   547, -2286, -2286,
    1177,  1119, 43196, 35884,  1382,  1342,  1386,  -162, -2286, -2286,
   -2286, 45481, -2286, 35884, 35884, 43653, 44110, 27658, 35884, 27201,
   -2286, -2286, -2286, -2286, 35884,   324, 35884, 25763, -2286, -2286,
   -2286,   139, -2286, -2286, -2286, -2286, -2286, 35884, 35884, -2286,
   -2286,   139, 35884, 35884,   139, -2286,  1536, 35884, 35884, 35884,
   35884,  1549, 35884, 35884,   -83,   -83,  1323, -2286,  9274,  1126,
   -2286, 10232, 10232, -2286, 10232,  1294, -2286,   559, -2286,  1337,
       5,  1178, 35884, 35884,  1273, -2286, -2286, -2286, -2286, -2286,
    1135,  1465, -2286,  2610,  1469, 30400,   653,   493,  1181, -2286,
     685, 10232,  1363, -2286, -2286,  1347,    48, -2286, -2286, 27201,
      55, -2286,  1349,    90, -2286,  1365,   566,  1589, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286,   698, 17774, -2286, -2286,  1592,
     276,  1592,    37, -2286, -2286,  1592, -2286,  1592, -2286, 24962,
   -2286, 10232,  1594,  1155,  1158, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286,  1532,  1237, -2286,
    1238,  1241,  1243,  1160, -2286, -2286, -2286, 45481, -2286,   664,
   -2286,   700, -2286, 10232, 10232,    11, -2286, 25494,   709, 10232,
    1167,  1168,   713, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
    1170,  1476, -2286,  1174,  1176,  1179, -2286, -2286,  4806, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286,  1182,  1157, 25545,  1183, 13106, 13106,  6400,
    2668, -2286, 13106,  1186, -2286,   714, 25434,  1163,  1188,  1196,
    1198,  1190,  1191, 25821,  9753, 10232,  9753,  9753, 25902,  1163,
    1194, -2286, 10232,  1195, 21915, -2286, -2286, -2286, 26151, 26151,
   26151, 26089, -2286, -2286, -2286,  1199, -2286, 13106, 13106, -2286,
    2289,  2700,  6400, -2286, -2286,  1507, -2286,   631, -2286,  1202,
   -2286, -2286,  4474, -2286, 21450,  4255, 10232,   110, -2286, 10232,
    1086, 10232,  1284, 26151, 26151, 26151,   342,   342,   162,   162,
     162,   237,   198, -2286, -2286, -2286,  1205,  1213,  1215,  1404,
     878, 10232, -2286,   766,   821, 35884,  2687,  4192,  4431, -2286,
   -2286, -2286, 16397,  1259,   -86,  1259,  1532,  1467, -2286,   419,
   -2286, -2286, -2286, 26037, -2286,   541, 16397,  1263,  1268,   234,
   18693,  1426, -2286, 35884, -2286, 35884, -2286,   -37,  1236, -2286,
   10232, -2286, -2286,  2899,  1242,  1428,  1430,   767,   767,   534,
    1432, -2286, -2286,  1290, -2286, 10232,   718, -2286,   810, -2286,
   -2286, -2286, -2286,  1247, -2286, -2286,  1482, -2286, -2286, -2286,
   -2286,  1321,   975, 10232,  1462, -2286,    38,  1276,  1575,  -140,
    1541, 35884, -2286,  1477, -2286,   109,  1605,    90,  1608,    90,
   27201, 27201, 27201,   747, -2286, -2286,   276, -2286, -2286,   757,
   -2286,    65, -2286, -2286, -2286,  1364,   614,   975,  2610, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286,   115,   687,   975,  1371,
   -2286,  1376, -2286,  1380,   938,   975, -2286, -2286,  1281,  1282,
    1297, 10232, -2286, -2286, 26037, 26037, 26037,  1286, -2286,   129,
   -2286, 35884, -2286, -2286, -2286,  1294, 35884,   566, -2286,   846,
   35884, 35884, 35884, 35884, -2286, -2286, -2286,  1301,  1299, -2286,
   45481,   -88,  1506,  1513, 35884,  1353,   972,  1752, -2286, 26037,
    1645, 35884, -2286, -2286, -2286, 35884, -2286,  1646,   541, -2286,
   27201, -2286, 28572, -2286, -2286, -2286, -2286,   276, -2286,   276,
    1533, 35884, 23591,   276,   276, -2286,  1327,  1158,  1532,   128,
    1332,   779,  1115,   640,   812,  1532, -2286, -2286, -2286,   758,
   26019, 10232, -2286,  1656, 45481, -2286, 21933, -2286, -2286, -2286,
   -2286, 10232, -2286, -2286, -2286, 10232, -2286, 21450, 10232,  1637,
   -2286,  1800,  1800,  4094, 45481, 13106, 13106, 13106, 13106,   533,
     860, 13106, 13106, 13106, 13106, 13106, 13106, 13106, 13106, 13106,
   14053,   337, -2286, -2286, 10232, 10232,  1651,  1637, -2286, -2286,
   -2286,  -174,  -174, 45481,  1340,  1163,  1344,  1346, 10232, -2286,
    -194, 21967, -2286,  1467, 10232,  1599,  2534, 10232,   764, 10232,
    1653, -2286, -2286,  1352, -2286, -2286, 45481, 10232,  1348,  4823,
   13106, 13106, 22471, -2286, 26178, 10232,  6400, -2286,  1323,  1394,
   20530, -2286,  1445,  1445,  1445,  1445, -2286, -2286, 35884, 35884,
   35884, 16856,  1665, 15937, 34513,  1356,  1427, -2286, 34513, 34970,
   -2286,  1370, -2286,  -194, 10232,  1658,  1360,  1658,  1372, -2286,
   -2286,  1373,  1356, 10232,  1514, -2286, -2286, -2286,  1416, -2286,
     774, -2286,  1772,  1514, -2286,   787, -2286, 20071,  1263, 10232,
    -194, -2286,  1383, -2286,  1242,    82, -2286, -2286, -2286,  1597,
   -2286, -2286, -2286, 35884, -2286, 35884, 21985,  1715, -2286, 35884,
   35884, 35884, -2286, 35884,   792,   680,  1392, -2286,   680,  1702,
     134,   972,   219,  4064,   -45, -2286, -2286, -2286,  1470, 35884,
   -2286, 35884, -2286, -2286, -2286, -2286, -2286, 27658, -2286, -2286,
   -2286, 27201, 20992, 27201, 35884, 35884, 35884, 35884, 35884, 35884,
   35884, 35884, 35884, 35884, -2286, -2286, -2286,  1323, -2286, -2286,
   -2286,   279, -2286, -2286,   129,  1397,  1181,  1420, 44567,   842,
    2610,  1401,  1843, -2286,   653, 30400, -2286, -2286, -2286,  1805,
   -2286,   272,   105, -2286, -2286,   541, 35884,  1471,    90, 35884,
   -2286,   847, -2286, -2286, -2286, -2286, 35884,  1406, -2286,  1406,
   -2286, -2286,  1532,  1414, -2286,  1417, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286,  1422, -2286, 10232, 26037, -2286,  1423,
   -2286, 26037, 22027, -2286, 26037,  1651, -2286,  4624,  4624,  4624,
    3202,  1732,   145,  1425,  4624,  4624,  4624,   285,   285,    84,
      84,    84,  1800,   337, 26037, 26037, -2286, -2286, -2286, -2286,
    1433, -2286, -2286, -2286,  1163, -2286, -2286,   239, 10232, 10232,
    2289, -2286, 26131, 10232, 45481,   849,  2289,   154, 10232,  2680,
    3080, 10232, 10232, 26288, 22045,  1438, 10232, 45024, -2286, -2286,
   35884, 35884, 35884, 35884, -2286, -2286, -2286, 34513, 34970,  1429,
   15477,  1427,  1440, 35427, -2286, -2286,  1442, 16397,  1688,  1621,
   -2286, 16397,  1621,    92,  1621,  1690,  1521, 19153, -2286, -2286,
    1444,  1629, -2286,   665, 26037,  1868,  1747,   276,  1747,   276,
   -2286, 26037,  7358, -2286,   541,  1326, 35884,  -194,   -87, -2286,
    1463, 35884, -2286,  1514, 26037, 21450, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286, 35884,   851, -2286,   866,   680, -2286,  1489,
   -2286,   146,  1734,    35, -2286, 27201,  2145,   708, -2286,  1749,
    1668, -2286,   139, -2286, 10232,   708,  1674,   143, 35884, -2286,
   -2286,  2595, -2286, 45481,    90,    90, -2286, -2286, -2286,  1383,
   45923,   726,   736, -2286, -2286, -2286, -2286, -2286, -2286,   495,
   -2286,  1473, -2286, -2286,  1548, -2286,  1550, -2286, -2286, -2286,
   -2286, -2286,  1472,   690,    94, 35884,  1904,  1682,  1474,  1181,
   -2286, 30400,   720,   457,  1513, -2286,    80,  1353, -2286,  1846,
    1510,  1679, 35884,  1479, -2286,  1918, -2286, 28572,  1406,  1485,
   -2286, -2286, -2286, 26037, -2286, -2286, -2286, 13106,  1795,  1488,
   45481, -2286,  2289,  2289, 26131,   872, -2286,  2289, 10232, 10232,
    2289,  2289, 10232, -2286, -2286, 22317,  1671, -2286, -2286, -2286,
   -2286, -2286, -2286, -2286, 28115, 34513, -2286,  1492, -2286, 35884,
    1427, 16397, -2286, -2286,  1583, -2286, 16397,  1755, -2286, 16397,
   29486, -2286, 35884,  1497, 35884, -2286, 11669, 10232,  1537, -2286,
    1537, -2286,   898, -2286,   234, -2286, -2286,  1891, 17315,  1849,
   10232, -2286, -2286,  1502,   680, -2286,  1660,  1489,  1505, -2286,
   -2286, -2286, -2286, -2286, -2286, -2286,   882,  1508, 35884, 35884,
   13106, -2286,   708,   148,    91, -2286,  1767, 35884,  1489, -2286,
   -2286, -2286, -2286,  1870,  1951,  1842, -2286, -2286, 26037, -2286,
   -2286,  1532,  1532, -2286, -2286,  1919, -2286, -2286,   495,   296,
   20992, 35884, 35884, -2286, -2286, -2286,   279,  1872,   883,   541,
    1845, 30400,  1959,  1518, 35884,  1353,   144,   144, -2286,  1655,
   -2286,  1657, -2286, -2286,   177, -2286, 35884, -2286, -2286, 17315,
     541, -2286, -2286,  3252, 13106, 45481,   894, -2286,  2289,  2289,
    2289, -2286,  1944,  1323, -2286,   902,  1964, -2286, 35884,   921,
   -2286, 10232,  1524, -2286, -2286, 16397,  1583,  1525,   922, -2286,
   45481, 35884,   928, 45481,  5921,  1523, -2286, -2286, 26037, 26037,
   35884, -2286, -2286,  1580, 35884, 10232, -2286,   940,  1936,    24,
     -34, 26037, -2286, 35884, -2286, 27201, -2286,   680, -2286, 27201,
   10232, -2286,   997,  3202,  1974, -2286, -2286, -2286, -2286,  1489,
     566, -2286, -2286,  1827, -2286, 35884,  1596,   562,  1610, -2286,
   -2286, -2286,   690,   276,  1181,  1510, 35884,   541,   653,   272,
   -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286, -2286,
   -2286, -2286, -2286,  1945,  1743,  1954,  1471,   946,  3252,   964,
   -2286, 10232,   -15,  1370, 28115,  1545, -2286,   985, -2286, 26037,
   35884, -2286, -2286, 10232, -2286, 35884,  1919,   991, -2286, -2286,
   11669,  1547, -2286,  1988,   541, -2286, 22453,  1259, 17315, 35884,
   35884, 35884, -2286,  1666,   566,   680,   999, -2286,  1563, -2286,
   22515,  1766, -2286,  1848, -2286,  1797,  1557, -2286, 10232, -2286,
    1630, -2286, -2286, -2286,  2003, -2286,  1566,  1510,  1513,  1353,
    1770, -2286,  1773,  1567,  1181, -2286,  1163, 12148, 12148,  1571,
   -2286, -2286, 35884, -2286,  1000,  1001, -2286, -2286, -2286, -2286,
   35884,  1574, -2286,  1936, -2286, -2286, -2286,   200, -2286,   200,
   20071,  1797, -2286, 27201, 20992,  1796,  1557,   372,  1780,  2610,
   -2286, 26037, -2286,   541, 30400, -2286, -2286, -2286, -2286, -2286,
   17315,  1259, 14532,  1714,   132, 25476, -2286, -2286, -2286, -2286,
    1016, -2286,  1729, -2286, -2286, 35884,  1242,  1242,  -168,  1780,
   -2286, -2286,  1862, -2286, -2286, -2286, -2286, -2286,   121,  1785,
   -2286,  1787,   962,  1510,  1017, -2286,  2041, -2286, -2286, -2286,
   -2286, -2286, -2286,  1601, -2286,   200, -2286, -2286, -2286, -2286,
   -2286,    73,    73,  1960, -2286,  1662, -2286, -2286, -2286,  1181,
   12627, 10232,  1242,   680, -2286,  2060, -2286,    72, -2286, -2286,
    1259, -2286, 22549, -2286, -2286, -2286, -2286, -2286, -2286
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2286, -2286, -2286,  1520, -2286, -2286, -2286,   201, -2286,   855,
   -2286,   185,  -514,   501, -2286, -2286, -2286,  -769,    15, -2286,
   -2286, -2286, -2286,     7,   244, -2286,  -383, -1678,  -156, -2286,
   -2148, -2244, -2286,  -441, -2167, -1467, -2286,  -921,   170, -2286,
   -1860, -2286,  -587,  -808,  -610,  -827, -2286,   -24, -2286,   879,
    -916, -1549, -2142,  -444, -2286,  -508, -2286,  -297, -1537,  -485,
    -472, -2286, -2029,  -749, -2286,  1303,  -219, -2286,   531, -2286,
   -1862, -2286, -2286,   524, -2286,  -785, -2286, -2286, -1649,   181,
    -429, -2006, -2061,   478,  -596, -2286,  -469,   220, -1459, -2286,
     546, -2286,  -418, -2286,  -468, -1925, -2286, -2286, -2286,  1164,
    -579, -2286, -2286, -2286, -2286,    17, -2286, -2286, -2286, -2286,
   -2286,  -386,   479, -1999, -2286,   450, -2286, -2286, -2286, -2286,
     -61,   204, -2286,    12,  1258,   -30,     3,    13,    36,    39,
    1357,  1387, -2286,  -782,   671, -2286, -2286,  -561,   -51, -2286,
     598, -2285, -1793,  -397,   933,  1345,  1350, -2286,   587,   967,
   -1090, -1072, -2286,   316, -2286,  -326, -2286,    81,  -390,   947,
   -2286,  1366, -2286, -2286, -2286, -2286, -1047,   635, -1736,   349,
   -1711, -1623,   118,   100,  -803,  -199,    16, -2286, -2286,   357,
    -281, -2286, -2286,  -277, -1486, -2093,  -288,  -286,  -946,   843,
    -802, -2286, -2286,  -671,   784, -2286, -2286, -2286,   987,  1092,
   -2286, -2286,  1185,  1448, -2286,  -187,  1774,   251,  -679,  1125,
   -1013,  1127, -1005, -1002,  1128, -1030,  -843,  2857, -1372,  2035,
      56, -2286, -1353,  -848, -2286, -2286,   -72, -2286,  -343, -2286,
    -341, -2286, -2286, -2286,  -325, -2279,  1063, -2286, -1054, -2286,
    2758,   657, -2286, -1420,  -516,  -577,  -804, -1706, -2286, -2286,
   -2286, -2286, -2286, -2286, -1102, -1536,  -266,   721, -2286, -2286,
     829, -2286, -2286, -2286,  -534,   935,  -537,  -689,   730, -2286,
    -532,  1074, -2286,   388,  -501,   912,  -855,    31, -2286,  -618,
     159,  1375, -2286,   -68,  -503, -1018,  -757, -2286,  -571, -2286,
   -2286, -2286,  -958, -2286,   571, -2286,  -909, -2286,  -236, -2286,
   -2286, -1861, -2286, -2286, -2286, -2286, -2286, -2286,  -354, -2286,
    -417,  -410, -2286, -2286,     0,  -635,  1234, -2286, -2286,   748,
   -2286,   881, -2286,   447, -2286, -2286, -2286,  1064, -2286, -2286,
   -2286,    22,  1441,   376, -2286,  1066, -2286, -2286, -2286, -2286,
   -2286,   283, -2286,  -908, -2231,    57, -2054,  -957,    -6,  -463,
    -454, -1829
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1496
static const yytype_int16 yytable[] =
{
     458,   835,   628,   561,   573,   630,   750,   945,  1255,   994,
    1057,  1058,    52,   761,   801,    40,   517,    50,  1412,  1238,
    1369,  1317,    71,  1219,   937,  1254,   989,  1285,  1071,  1827,
    1082,  1091,  1286,   989,   987,  1878,    57,   455,   772,  1288,
    1289,  1226,   636,  1266,   548,  1731,  1732,  1208,  1385,   646,
    1751,   974,    57,  1893,  1788,  1895,  1387,    78,   647,  1388,
     575,  2096,   454,   942,  1230,  2166,  1445,  1446,  1846,  1259,
     576,   559,  2174,  2150,   834,  1003,   840,  2051,   844,  -985,
    2025,  2177,  1370,  -986,  -662,  1775,  1776,  -985,  -985,   762,
   -1495,  -986,  -986,   462,   637,  1734,  2479,  1515, -1495, -1495,
    1559,   590,   640,  -659,  1211,   966,  -654,  -659,  2068,   522,
    2323,  -662,   966,   663,  1096,  1308,     3,     4,   977,  -621,
    1562,  -634,  1874,  2332,  -963,  -649,  1456,   522,   522,  1512,
    2624,  1879,   939,   961,   522,  -428,   989,   663,   989,   989,
     946,   940,   551,   981,  1148,  2328,  1711,   966,   663,  1456,
    2273,  2372,   663,  -431,  1447,  1145,   981,   522,   621,  -859,
     565,   663,  1138,   648,  2314,  2089,  -859,  1493,  2419,  1222,
    2431,  1643,  2447,  1100,  1494,   794,  1231,   962,   523,  1257,
    -878,   646,   797,  1936,  1092,  2635,  2257,  -878,   646,  1222,
     647,  1929,   568,   570,  2505,  2066,   570,   647,  2329,  1906,
    2299,  1214,  1106,  1090,   989,  1181,  2407,   989,   989,  1100,
    2178,  1143,  1239,  2330,  -388,  1242,  1243,  1281,  1342,  1500,
    2006,  2432,   535,  -173,  2108,  2482,  -428,   942,  -173,  2433,
    1565,   995,  1957,  1959,  1108,  2443,  1541,  2539,  1106,  2611,
    2097,  2481,  1880,  2444,  -431,   566,  1182,  2118,  1100,   790,
    1100,   763,  2576,   764,  2577,  1231,   569,  1580,  2434,  2059,
    1244,  2394,  2270,   520,  2405,  1146,  1077,  1824,  1264,  1265,
    1108,  2430,   521,  2198,  1164,  1583,  2555,  1106,  2467,  1580,
     594,   522,  2411,  2596,   595,  1253,  1882,  1207,  1078,  1222,
    1269,  2060,  2598,   646,   646,  1690,  1734,  2181,  2517,  1223,
    1691,  2098,   647,   647,  1183,   533,  2236,  1983,  2322,  1108,
    1477,  1108,  1847,  2131,  1581,  2062,    24,  2119,  2205,   792,
    2622,  2230,  1542,  2107,   536,  2234,  2518,  2435,   570,  2625,
    1282,  2605,  2271,  1566,  2406,  2636,  1871,  2068,  2436,  1057,
    1058,  2631,   963,  1216,  1082,   554,   808,  1071,  1734,  1692,
      28,  1184,   809,  1100,  2408,  1501,  1232,  2404,   583,  1298,
    1015,  2179,  2618,  1987,  1988,  1989,  1990,  1321,  1323,  1994,
    1995,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,  1300,
     967,  1147,  1106,  2483,  2331,  2575,   811,   967,  1229,  2258,
      30,   563,  2120,  2594,  1268,   755,  1245,  1341,   651,   937,
    1246,  1644,  2581,  2494,  1205,  2626,  2445,  1185,  -428,   652,
    2104,  1206,  2106,  2199,  1108,  2262,  1160,  1229,  2029,  2030,
    1412,  1706,   967,  2502,  2222,  1326,  -431,  1575,  2064,  2570,
     564,  2627,  2599,  1139,  1478,  1232,  1380,  1381,   622,  1881,
    1882,    33,   964,  1847,  1393,  1374,  1394,  1395,  1479,  2196,
    1217,   552,  1178,  1480,  1673,  2557,  2274,   810,  1559,   567,
     571,  1431,   628,  1432,  1632,  1307,  1255,  1883,  -428,  1457,
     585,  1310,   588,  1313,   592,   600,  1443,  1859,   598,  2556,
     599,  2150,   561,  1050,  1051,   602,  -431,  1829,  1481,  1853,
    1848,  1258,  1790,  2323,  2346,  2360,  1229,  2188,   594,    57,
    2364,  -859,   595,  2366,  1919,  1920,   645,   939,  1068,  1495,
    1372,  1907,   642,  2315,  2357,   765,   940,   646,  2437,  1077,
     463,  2438,  -878,   577,   802,   853,   647,  1371,   968,  1045,
    1902,   458,   458,   939,  1453,   973,  1378,  1632,  2612,  2585,
    1382,  1078,   940,  1903,  1066,  1067,  1077,    57,   458,  1179,
    -985,  1092,   766,  2264,  -986,  1079,  1749,  1372,   942,  1425,
    1427, -1495,  1318,  2504,  1514,   575,  2508,  1831,  1078,  2509,
     640,  1558,  1558,  -428,  -659,   576,    52,  -654,  2275,    40,
    1095,    50,  1081,   782,   853,  1038,    71,   458,   458,   938,
    1056,  -431,  1062,   594,   773,  -963,  -649,   595,  1141,  1516,
      57,   811,  2326,  1964,   790,  1459,   985,   986,   578,   942,
    2301,  2302,  -428,   510,  -428,   466,    79,   608,  1836,   985,
     986,    78,   784,   989,  2261,   756,  1482,  1985,   458,  2461,
    -431,  1609,  -431,   989,  1129,   604,   989,   605,   645,  2449,
    1664,  1612,   939,   593,  1615,   645,   458,  1039,  2327,  1077,
    1608,   940,  1837,  2561,   813,  2007,  1231,  1249,  1601,    80,
     616,  1991,   458,  2586,  1822,  1124,  1125,  1126,  1127,  1128,
    1129,  1078,   467,  1412,   792,  2263,  -994,  -994,  1822,   649,
     650,  1250,   814,   619,    57,  1079,  -173,  -173,  1967,   561,
     458,  1685,  1222,  1465,   757,  1932,  1572,  1968,  1707,   752,
    1969,  1971,  1225,  1628,  1629,  1630,  2318,   657,   989,   458,
     458,   458,   620,   458,  1583,  2150,  1683,  1249,   793,  1466,
    2397,   989,  1181,  1607,   785,  1809,  1810,  1672,   623,  1231,
    1320,  1674,   624,   458,  1676,   663,  2587,  2292,   937,  1700,
    1322,  1250,  1618,  2016,  1610,   663,   815,  1625,   634,  1613,
     645,   645,  1770,  1038,  1746,  1747,  1748,  1749,  2630,  1780,
     653,  2293,  1830,  1182,   939,  1260,   939,  2418,  1979,    82,
     656,  1857,  1056,   940,  1309,   940,   663,   853,   853,   853,
     655,  1255,   458,  2606,  2607,  1781,   458,   458,  1986,  1172,
    1173,  1992,  1177,     3,     4,  2110,   782,   458,   657,   576,
     576,  1993,   576,   990,  1744,  1745,  1746,  1747,  1748,  1749,
     990,  1126,  1127,  1128,  1129,  1039,  1649,  2010,  1271,  1272,
    1077,  1050,  1051,  1467,   658,  2343,   790,  1917,  1468,  2633,
    1068,   791,   471,  1469,   472,   606,  1232,   607,  1263,   458,
     458,   458,  1078,   754,    24,  2485,   939,  1908,  1853,  1231,
    1850,   760,   603,  1256,   510,   940,  1081,  1709,   474,  1970,
    1972,  1973,  2489,   646,   615,   780,   979,  2324,  1184,   980,
     769,  2356,   647,    24,  1560,  1561,   646,  2111,    28,  1396,
    1397,  1093,  1349,  1350,    87,   647,  1158,   461,   853,  1159,
     774,  1097,    24,   508,  1782,   775,   792,  1229,  1828,  1783,
    -502,  -502,   534,  1142,  1036,  2388,   546,    28,  2403,  1232,
     777,  1161,  1937,  1150,  1162,   990,   990,  1944,    30,  1765,
      83,   778,  1231,   481,  1185,   781,    28,   509,    84,  1858,
    1858,    31,   803,   526,  -474,   759,  2112,   788,  2113,  -474,
     793,   806,   808,   558,   558,  1689,  1778,    30,   809,  1693,
     458,  1694,  1038,  1826,  1314,    32,  2146,  1162,  1905,  1340,
      31,    85,  1341,  1822,   938,  1822,    30,   804,  1470,    33,
    1229,  1056,  2448,   970,   645,   808,  1528,   808,  1471,    31,
     642,   809,   805,   809,    32,  1090,  2388,   807,  1353,  1354,
     938,  2534,  2185,  1366,   611,   586,  1367,   821,    33,   819,
     951,   953,   955,    32,  -474,  1149,  1285,    86,  1890,  1524,
    1892,  1286,   973,   820,  1039,    57,   822,    33,  1288,  1289,
    2040,  2041,  2042,  2043,  1570,  1351,  1352,  1162,   612,  1232,
     943,  1909,  1038,  2500,  1784,   837,  1640,   458,  1056,  1641,
    1309,  1412,   944,   458,  1785,   841,   458,  1953,  -474,   947,
     458,  1926,   600,   810,   949,   598,  2129,   599,  -506,  -506,
    2623,   613,   602,  2277,   458,   956,   823,   458,   458,   458,
     458,    24,  1036,   853,  2122,  2595,    57,   458,   458,   960,
    1963,  1965,  2008,  2009,   958,  2105,   810,  1974,   810,   458,
    1229,  1661,  2608,  1662,  1039,   458,   458,   458,   458,   938,
     965,  2356,  1232,   458,   458,    28,   970,   614,   458,  1326,
    2280,   972,   458,  2163,    24,   458,   458,   458,   458,   458,
     458,   458,   458,   458,   975,  2388,   458,   939,   939,   939,
     976,  2309,  2121,   458,  2130,   458,   940,   940,   940,   594,
    1056,  -963,  1309,   595,  2637,    30,  1157,   978,    28,  1529,
    -505,  -505,  2087,  1038,   824,  1802,   458,  1803,    31,   766,
    1353,  1354,  1668,  1229,   611,  1341,   996,  2282,  1764,  1168,
    1766,  1767,  1948,  1231,   458,  1679,  1040,  1708,  1680,  1532,
    1162,  1041,    32,   458,   458,  -625,  1715,  2305,    30,  1162,
    1719,  1753,   511,  1162,  1162,  1210,    33,   811,   612,   808,
     853,    31,   825,  1154,  1156,   809,   826,  2388,  1237,  1822,
    1804,  1043,  1805,  1822,    24,  1039,  -632,   939,   827,   646,
    1392,   938,  1049,   938,  1896,    32,   940,  1897,   647,  1261,
     811,  1928,   811,  1053,  1900,  1975,  1372,  1901,  1162,   512,
     787,  2021,   789,  1383,  1162,   522,   812,  1052,    28,   828,
     813,  2085,  2014,  1054,  2086,  2491,  1853,   568,    53,  2235,
    2285,  2238,   458,  1134,  2090,   458,   458,  2091,   458,  2109,
    -475,  1036,  1641,   853,    53,  -475,  1055,   614,   814,   838,
    1059,   842,  1913,   813,   989,   813,  2073,   751,    30,   753,
    2417,   560,  2143,   830,    33,   458,  1347,  1348,  1061,  1038,
    -622,    31,  2286,   938,  2129,  -623,  1064,  1065,  1517,  1665,
     810,   839,  1070,   843,   831,   574,  1372,  2287,  2265,  2169,
     645,   569,  1641,  -626,  2186,    32,  2206,  2187,  2266,  1367,
    1601,  1641,  2151,   645,   833,   458,  1072,  1290,  1342,  1530,
    -475,  -624,   815,  2267,  2189,  1073,  1641,  1345,  1346,  2347,
    1074,  1036,  1367,  1232,  1075,  1136,  2162,  1349,  1350,  2398,
    2424,  1039,  2399,  1641,  2146,  1076,  1316,   458,   458,  2184,
    1138,  2450,  1083,   458,  1367,   815,  1822,   815,  1139,  2453,
    1084,   456,  2454,  1822,  -475,  1094,   482,  1152,  1822,   561,
     482,  1822,   618,   570,  1165,   525,   482,   530,  2458,  2464,
     530,   973,  2465,   550,  1171,  2468,   482,   482,  2465,  2288,
    1822,   458,   458,   458,  1229,   791,   458,  2477,   793,   633,
    2478,  1347,  1348,  2514,  2466,  1201,  2478,  2466,   458,   458,
     458,   458,   561,  1203,   939,  1227,   458,  1028,   939,  2617,
     939,  2515,  1209,   940,  1367,   466,  1228,   940,  1229,   940,
     530,   458,   458,  1234,   811,  1235,   458,   550,   482,   550,
     550,   550,  2523,  1353,  1354,   973, -1029,   558,  2528,  1236,
     458,  2465,  1036,   458,  1240,   458,  2542,  2571,  2572,  2543,
     973,  1162,  1349,  1350,  1247,   990,  1351,  1352,  1252,  1688,
    1853,  1822,  1248,  2602,  2619,   458,  2465,  2478,   990,  1262,
     561,  1267,   467,  1571,   989,  1274,   458,   813,  2422,   989,
    1283,  1284,  2297,  1275,  1279,  1291,  1295,  1822,  1294,  2058,
     458,  1297,  1301,  1321,  1323,   571,  1510,  1309,  1339,  1045,
    1056,  1062,  1343,  1373,   458,   814,  1374,   600,  1379,   942,
     598,   663,   599,   455,  1429,  1430,  1519,   602,  1521,   458,
    2252,   469,  1953,  1372,  1100,  2306,  2307,   455,   808,  1442,
    1455,    57,  1462,   853,   809,  1473,  1474,   458,  1820,  1476,
    1497,   808,  1498,  1512,  1345,  1346,  1518,   809,  1526,  1533,
    1525,   569,  1820,  1552,   938,   938,   938,  1540,  1353,  1354,
    1554,  1564,  1038,  1553,  2059,  1573,  1555,  1577,  2146,   815,
    1578,  1579,   570,  1633,  1638,  1028,  1822,   662,  1642,  1646,
    1734,  1650,  2254,  1651,  1735,  1736,  1737,  1652,  1036,  1666,
    1671,  1670,  1675,  1677,  1678,   458,  2060,  1686,  1696,  1698,
    1822,  2018,  1699,  1701,  1702,  1727,  1705,  1703,  1707,  1704,
    1030,  2061,  1721,  1162,  1717,  1718,  1038,  1720,  1347,  1348,
    2062,  1722,   939,  1723,  1039,  1759,  1724,  1760,  1774,  1726,
    1730,   940,   471,  1752,   472,  1758,  1038,  1761,  1762,   810,
    1647,  1769,  1772,  1779,   938,  2058,   645,    24,  1786,  2063,
    1795,  1796,   810,  1321,  1323,   473,   558,  1800,   474,  1798,
    1665,  1799,   989,  1835,  1824,  1038,  1355,  1356,  1833,  1842,
    2143,  1849,  -507,  1855,  -508,   458,  1860,  1861,  1039,  1349,
    1350,    28,  1822,  1351,  1352,   458,  1864,  1865,  1038,   458,
    1867,    53,   458,  1870,   646,  1345,  1346,  1863,  1039,   458,
     458,   458,   458,   647,  1873,   458,   458,   458,   458,   458,
     458,   458,   458,   458,   458,  1031,  1707,  2035,   458,   458,
    2059,    30,  1869,  1889,  1876,  1899,  1891,  1039,  1914,  1915,
    1904,  1918,   458,  2064,    31,  1255,   561,  1910,   458,    53,
     560,   458,  1911,   458,  1916,  2401,  1912,  1938,  1934,  1935,
    1039,   458,  2060,   561,   458,   458,  1939,  1945,    32,   458,
     458,  1942,  2452,  1946,  1949,  1978,  1956,  2061,  1922,  1347,
    1348,  1962,    33,  1755,  1028,   458,  2062,   458,  1030,  1966,
    1739,  1734,  1754,   811,  2495,  1353,  1354,  2011,   458,  2023,
     574,  2012,    53,  2013,  2488,  2027,   811,   458,  2024,  2036,
    1807,  2049,  2071,  2075,  2149,  2063,  2057,  2077,  1033,   550,
    2084,   990,   455,   458,   455,   610,  1954,  2082,  1955,  2079,
    2080,   550,  1960,  1961,  2088,   482,  2361,  2457,  1090,  2095,
    1349,  1350,  1616,  2103,  1351,  1352,   813,  1820,  2115,  1820,
    2457,  2099,  2117,  2165,  1740,  1623,  2133,  2171,  2172,   813,
     627,   482,   482,  2176,  1028,  1311,  1641,  1312,  2541,  2190,
    2182,   938,  2191,  1806,  1617,   938,  1039,   938,  2197,  2192,
    2194,  2200,  2231,  2232,  2239,  2224,    53,  1624,  2240,  2245,
    2201,  1036,  2497,  1031,   530,  2214,   530,  2225,  2229,  2064,
    2244,  2246,   550,  1355,  1356,  2247,   989,  2268,  2260,  2272,
     482,  2296,   939,  2295,  2143,  2516,   939,  2300,  2310,  2319,
    2320,   940,   550,  1060,  2311,   940,  2312,  2525,  2334,  2313,
    2321,  2333,  2336,  2340,   550,  2339,  1038,  2180,   815,  2524,
    2342,  2344,  2592,  2352,  2345,  1036,  1353,  1354,  2358,  2365,
     458,   815,  2488,  2371,  2380,  2384,  2536,  1088,  2390,  2392,
    2393,  2395,  2409,  2412,  2400,  1036,  2413,   550,   550,   550,
    2414,  2415,  2423,  2426,  2427,  2428,  2441,  2451,  2442,  2455,
    2460,  2463,  2362,  2470,  2474,  1028,  1033,  1030,  2479,  2493,
    2496,  2510,   458,   458,  1036,  2498,  2501,   458,  1039,  2511,
    2512,  2522,   458,  2531,  2540,   458,   458,  2530,  2544,  2408,
     458,  2546,  1042,  2549,  1925,  2547,  2552,  1036,  2553,  1930,
    1931,  1933,  2554,  2560,   574,   574,  2558,   574,  2569,  2559,
    2037,   458,  2582,  2588,  2597,   458,  2603,  2610,  2613,  1947,
    2615,  2148,  1741,  1742,  1743,  1038,  1744,  1745,  1746,  1747,
    1748,  1749,  2308,  2620,  1355,  1356,   458,  2621,  2611,  2612,
     939,  2634,  2136,  1922,   779,  2132,  1887,  1030,   455,   940,
    1603,  2092,   455,  2256,  1357,  2535,  2253,  2255,  2383,  2578,
    2170,  1034,  2584,  2303,  2629,  2492,  2616,  2609,  2440,   938,
    1872,  1218,  1031,  1820,  2580,  1894,  2175,  1820,   458,  1923,
    2614,  2137,  1868,  2579,  1924,  1576,  2341,  1039,  2164,  1306,
    1950,  1163,  1038,   550,  1039,  1584,  1144,  1587,  1851,  1569,
    1598,  1198,  1862,  2078,  2529,  1197,  1602,  1549,  1604,   482,
     482,  1028,  1568,  1036,   465,   550,   550,  1170,   466,  2250,
    1611,  1832,  2052,  2237,  1202,  1614,  2223,  2462,  2048,  1619,
    1620,  1621,  1622,  2521,  1626,  1627,  2520,  2526,  2382, -1029,
    2527,   645,   550,  1221,  2325,  1697,  1384,  2573,  1386,  1389,
    2574,   458,  1031,  2568,  1039,   550,  2044,  2045,  2046,  1502,
    1854,  1793,   458,   458,  1712,  1033,   458,  1791,  1030,  1637,
    2513,  2277,   550,  1511,  1319,   467,   550,  2278,   458,  1927,
    1695,  1166,   468,  1520,  2093,   458,  1522,     0,     0,  2279,
     458,     0,     0,   458,   458,     0,  2249,    53,  2251,     0,
     458,   458,  2149,     0,     0,     0,     0,     0,     0,     0,
       0,  2100,   458,     0,   458,   455,     0,     0,  2280,     0,
    2281,     0,   455,     0,   469,     0,     0,   455,     0,  1034,
     455,  2367,     0,     0,   458,  1036,     0,  1038,     0,     0,
    1820,     0,     0,     0,     0,  1033,     0,  1820,     0,   455,
       0,     0,  1820,     0,     0,  1820,     0,  1099,    53,     0,
    1100,     0,  1038,     0,  1039,  1038,     0,     0,     0,     0,
       0,     0,     0,  1031,  1820,  2282,  2168,     0,     0,  1278,
       0,     0,     0,     0,   550,     0,     0,     0,     0,  1106,
     470,  2425,     0,   458,  1304,     0, -1496,  1316,   458,  1039,
     627,     0,  2283,   627,   561,     0,   990,   482,   482,     0,
     482,   627,  2325,   550,  1030,   458,     0,     0,     0,   458,
       0,  1108,     0,     0,  1039,     0,     0,  1039,   458,  1463,
     455,     0,     0,     0,     0,   471,     0,   472,     0,   458,
       0,     0,     0,     0,  1036,     0,     0,     0,     0,   938,
       0,  1036,  -440,   938,   458,  1820,   455,     0,   473,     0,
       0,   474,     0,  2284,     0,  -440,  1033,     0,  2285,     0,
    -440,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1820,     0,     0,     0,    53,     0,  1035,  2218,  2219,
    2220,  2221,     0,     0,     0,     0,     0,     0,     0,  2507,
       0,     0,     0,     0,  1028,   458,     0,  1414,   458,     0,
    2286,  1036,     0,     0,     0,     0,  -440,   458,     0,  1031,
   -1496,     0,     0,     0,   458,  2287,     0,     0,  1034,  2148,
       0,     0,   458,     0, -1496,  -440,  2149,     0,     0, -1496,
       0,     0,     0,   627,     0,   455,  2532,     0,     0,     0,
       0,     0,   458,     0,     0,     0,     0,     0,  1028,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   455,
    1820,   458,   458,   550, -1496,     0,     0,     0,  1028,  -440,
       0,     0,     0,     0,     0,     0,     0,     0,  -440,     0,
       0,     0,     0,   550,  1820,   550,     0,   938,  1039,     0,
       0,     0,   662,     0,  1534,  1734,  1539,  1028,  1034,  1735,
    1736,  1737,  1033,     0,   458,    53,   458,  2288,     0,     0,
       0,  1036,     0,     0,  1117,  2593,  2019,     0,     0,     0,
    1028,     0,     0,     0,     0,     0,  1941,     0,   550,     0,
       0,     0,  2503,     0,     0,     0,     0,  1221,   482,     0,
       0,   455,     0,     0,     0,  1035,  1036,     0,   482,  1585,
     482,  1589,     0,   482,     0,     0,     0,     0,     0,   482,
       0,   482,     0,     0,   458,   458,  1820,     0,     0,     0,
       0,  1036,   627,   482,  1036,     0,     0,   627,   482,     0,
     821,     0,   482,   482,   482,   482,     0,   482,   482,     0,
       0,     0,     0,     0,     0,   821,     0,  1030,     0,   822,
       0,     0, -1496,     0,     0,     0,     0,   550,  1648,     0,
    -440,     0,     0,     0,   822,     0,     0,     0,     0,  1034,
    1660,     0,     0,     0,     0,  2410,   662,  1088,     0,  1734,
       0,     0,     0,  1735,  1736,  1737,  1028, -1402,   662,     0,
       0,  1734,     0,     0,     0,  1735,  1736,  1737,     0,   823,
       0,  1030,     0,  2148,     0,     0,     0,     0,  1099,     0,
       0,  1100,  2208,     0,   823,     0,     0,     0,     0,     0,
    1088,  1030,     0,   594,  2446,     0,   777,   595,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1463,     0,
    1106,     0,     0,     0,     0,  1739,     0, -1496,     0, -1496,
    1030,     0,  1031,     0,  1797,     0,  1124,  1125,  1126,  1127,
    1128,  1129,     0,     0,     0,  2125,     0,     0,     0,     0,
    1814,     0,  1108,  1030,     0,     0,     0,  2101, -1402,     0,
       0,  2484,     0,    53,  1814,     0,     0,   824,   560,     0,
       0,     0,     0,     0,  1035,  1036,     0,     0,     0,     0,
       0,  2134,   824,     0,     0,     0,  1031,     0,  1028,  1740,
       0,     0,     0,     0,  2506,  1034,  2152,  2153,  2154,  2155,
    2156,  2157,  2158,  2159,  2160,  2161,  1031,     0,  1194,     0,
   -1402,     0,     0,     0,     0,   825,     0,     0,     0,   826,
       0,  1777,     0, -1402,     0,  1033,     0,     0, -1402,  1414,
     825,   827,     0, -1402,   826,  1031,     0,     0,  1738,     0,
       0,     0, -1402,     0,     0, -1402,   827,     0,     0,     0,
       0, -1496,     0,     0,  1035,     0,     0,     0,  1031,  1739,
     550,     0,   828,     0,     0, -1496,     0,  1823,     0,  1030,
   -1496,  1739,     0,     0, -1402,     0,     0,   828,     0,  1033,
       0,  1823,     0,     0,     0,  1841,     0,  1399,  1844,     0,
    1539,     0,     0, -1402,  1400,  1401,  1402,  1028,     0,  1033,
       0,     0,     0,     0,  1028, -1496,   830,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    53,     0,     0,     0,
       0,   830,     0,  1740,     0,     0,     0,   831,  1033,     0,
       0,     0,     0,     0,     0,  1740,  1278, -1402,     0,     0,
   -1402,     0,   831,     0,     0,     0, -1402,   833,     0,     0,
       0,  1033,     0,     0,     0,  1117,     0,     0,     0,     0,
       0,     0,   833,     0,  1028,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1031,  1035,     0,  1741,  1742,  1743,
       0,  1744,  1745,  1746,  1747,  1748,  1749,     0,     0,     0,
       0,  1030,     0,     0,     0,     0,  1278,     0,     0,     0,
   -1402,   550,     0,     0,     0,  1278,   550,   550,   550,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   482,
       0,     0,     0,     0,     0,     0,   550,     0,     0,     0,
     627,     0,     0,     0,  1088,     0,     0,     0,     0,     0,
       0,     0,     0, -1496,     0,     0,  1278,  1278,     0,  2047,
       0,  2050,  1807,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,   662,     0,
       0,  1734,     0,     0,  1028,  1735,  1736,  1737, -1402,     0,
       0,     0,  1414,     0,     0,     0,     0,     0,  1034,  1421,
       0,     0,  2209,     0,     0,     0,  1031,     0,     0,     0,
    1030,     0, -1402,     0, -1402, -1402,     0,  1030,     0,  1028,
       0,  1741,  1742,  1743,     0,  1744,  1745,  1746,  1747,  1748,
    1749,  1035,     0,  1741,  1742,  1743,     0,  1744,  1745,  1746,
    1747,  1748,  1749,     0,  1028,     0,     0,  1028,     0,     0,
   -1496, -1402,  1034,     0, -1402, -1402, -1402,  1124,  1125,  1126,
    1127,  1128,  1129,     0,  1852,  2039,     0,     0,     0,     0,
       0,     0,  1034,   550,   550,   550,   456,  1030,  1823,  2056,
       0,  2402,     0,  2056,  2070,     0,     0,     0,     0,     0,
       0,     0,     0,    53,     0,     0,     0,     0,     0,  1033,
     662,  1034,     0,  1734,     0,  1551,     0,  1735,  1736,  1737,
       0,     0,  1539,  2420,  2421,  1031,     0,     0,     0,     0,
       0,     0,  1031,     0,  1034,     0,  2429,     0,   550,     0,
     482,     0,     0,     0,  1278,  1221,  1278,     0,  1304,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     662,     0,     0,  1734,   482,     0,  2135,  1735,  1736,  1737,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   482,
     482,   482,   482,   482,   482,   482,   482,   482,   482,     0,
       0,  1739,  1031,     0,     0,     0,  2475,  1030,     0,     0,
       0,     0,     0,   550,     0,     0,     0,     0,     0,     0,
    1221,     0,     0,     0,     0,  1814,     0,     0,  1033,  1814,
       0,  1304,     0,     0,   550,  1033,     0,     0,  1028,     0,
       0,  1278,  1030,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    53,    53,     0,     0,     0,     0,     0,     0,
    1034,     0,     0,     0,     0,  1740,     0,  1030,     0,     0,
    1030,     0,  1403,  1404,  1405,     0,  1406,  1407,  1408,  1409,
    1410,  1411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1033,     0,     0,     0,     0,
       0,     0,     0,     0,   733,   733,     0,     0,     0,     0,
       0,     0,  1031,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2217,  1739,     0,   550,   550,   550,   550,     0,
       0,     0,  2056,  2070,     0,  2056,     0,     0,  2227,     0,
      53,     0,  1823,     0,  1035,     0,  1823,  1031,     0,     0,
       0,     0,  2243,     0,     0,     0,     0,     0,     0,     0,
     850,   855,  1421,  1421,     0,     0,     0,  1421,     0,     0,
       0,  1841,  1031, -1496,     0,  1031,  1539,     0,     0,     0,
    1414,     0,  1034,     0,     0,     0,     0,  1740,  1221,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1035,  1814,
       0,  1132,  1421,  1421,  1814,  1033,     0,  1814,     0,     0,
       0,     0,     0,  2304,     0,     0,     0,     0,  1035,   850,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1047,     0,  1740,     0,  1132,
    1033,  1030,     0,     0,     0,     0,     0,  1035,     0,     0,
    1278,     0,     0,  1741,  1742,  1743,  1660,  1744,  1745,  1746,
    1747,  1748,  1749,  1069,     0,  1033,     0,  2337,  1033,     0,
    1035,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1085,  1086,  1087,     0,  1089,    53,     0,     0,
       0,  1034,     0,     0,     0,     0,     0,     0,  1034,     0,
       0,     0,     0,     0,     0,     0,  1137,     0,    53,   456,
    2056,     0,     0,     0,   482,     0,  1823,     0,  1132,     0,
       0,  1823,     0,  1132,  1823,   456,     0,  2370,     0,  2373,
       0,     0,     0,  1814,     0,     0,     0,     0,     0,     0,
       0,     0,  1088,  2389,     0,     0,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,  1176,     0,     0,  1034,  1188,
    1193,     0,     0,   627,   482,     0,     0,     0,     0,     0,
       0,     0,   550,     0,     0,  1741,  1742,  1743,     0,  1744,
    1745,  1746,  1747,  1748,  1749,     0,  1035,     0,     0,     0,
       0,     0,     0,     0,     0,    53,   482,   482,     0,     0,
       0,     0,     0,     0,     0,     0,  1221,     0,     0,   482,
       0,     0,   850,   850,   850,     0,     0,     0,     0,     0,
       0,   550,     0,     0,  2389,  1741,  1742,  1743,     0,  1744,
    1745,  1746,  1747,  1748,  1749,     0,     0,     0,     0,  1033,
       0,     0,    53,   482,     0,     0,     0,     0,     0,     0,
    1823,     0,     0,     0,     0,     0,  2373,     0,     0,     0,
    1327,     0,     0,     0,     0,  2473,     0,     0,  1034,   482,
       0,     0,     0,     0,     0,     0,     0,     0,   550,     0,
    1421,  1421,  1421,  1421,     0,     0,  1421,  1421,  1421,  1421,
    1421,  1421,  1421,  1421,  1421,  1421,     0,     0,     0,     0,
     627,     0,     0,  1034,  1328,     0,     0,     0,  1035,     0,
       0,   550,     0,     0,     0,  1132,     0,     0,     0,     0,
       0,    53,     0,   850,     0,     0,     0,     0,  1034,     0,
    1329,  1034,     0,     0,     0,  1421,  1421,  1132,     0,   456,
       0,     0,  1422,     0,     0,   482,     0,     0,  1330,     0,
    2370,     0,  1331,  1132,  1132,  1132,     0,  1132,     0,     0,
       0,     0,     0,  2389,   627,   627,   627,     0,     0,     0,
       0,     0,     0,  1332,     0,     0,  1333,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,  2370,     0,     0,
       0,     0,     0,     0,     0,  2473,  1377,  1035,     0,     0,
       0,     0,     0,     0,  1035,  1539,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1398,     0,  1221,
    1415,     0,     0,  1426,  1132,  2389,     0,     0,     0,     0,
    1433,  1438,     0,     0,     0,     0,  1132,     0,     0,     0,
     627,  1132,  1444,     0,     0,     0,     0,     0,  1448,  1449,
    1450,  1451,     0,     0,  1335,     0,  1460,  1461,     0,     0,
       0,  1472,  1336,     0,  1035,  1475,     0,     0,  1483,  1484,
    1485,  1486,  1487,  1488,  1489,  1490,  1491,     0,     0,  1492,
       0,     0,  1034,     0,     0,     0,   733,     0,   850,   -38,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,     0,     1,     0,  1523,
       0,     0,     0,     0,     0,     0,     0,     2,     0,     3,
       4,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     5,  1086,  1087,     0,     0,
       0,     0,     0,     0,     6,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     8,     0,     0,
       0,     0,     0,     0,  1035,     0,     0,     0,     9,     0,
      10,     0,     0,     0,     0,     0,     0,     0,     0,   821,
       0,     0,  1099,     0,     0,  1100,     0,     0,    11,  1101,
    1102,  1103,     0,     0,     0,     0,     0,     0,   822,  1035,
       0,     0,    12,     0,     0,   850,  1104,     0,  1634,  1635,
       0,  1636,    13,     0,  1106,  1132,     0,     0,    14,     0,
       0,  1107,     0,     0,  1035,     0,    15,  1035,    16,    17,
       0,     0,     0,     0,     0,     0,  1132,     0,  1669,     0,
       0,     0,     0,     0,     0,     0,  1108,     0,   823,  2123,
       0,     0,     0,  1132,     0,  1422,  1422,  2124,  1750,     0,
    1422,     0,     0,     0,  1132,     0,     0,     0,    18,     0,
       0,  1132, -1404,     0,     0,     0,  1132,     0,   850,     0,
       0,     0,  1132,     0,     0,     0,  1132,  1132,  1132,  1132,
       0,     0,     0,     0,     0,  1422,  1422,     0,  1132,  1132,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
    1132,  1710,  1421,  1132,  2125,     0,  1716,     0,     0,     0,
       0,  1132,  1132,  1132,  1132,  1132,  1132,  1132,  1132,  1132,
    1132,     0,     0,     0,     0,     0,   824,     0,     0,     0,
       0,     0,     0,  1099,     0,  1109,  1100,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,  1733,     0,     0,  1110,
       0,  1132,     0, -1404,  1111,     0,     0,  1104,     0,     0,
       0,  1438,     0,  1438,  1438,  1106,     0,     0,    20,  1771,
       0,    21,  1107,     0,   825,  1112,  1113,     0,   826,     0,
       0,     0,     0,     0,     0,  1421,     0,     0,  1035,  1114,
     827,     0,  2126,     0,     0,     0,     0,  1108,     0,    22,
       0,     0,     0,  1789,     0, -1404,  1792,    23,  1794,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1404,     0,
      24,   828,  1115, -1404,     0,  1116,     0,    25, -1404,     0,
       0,    26,     0,     0,     0,     0,     0, -1404,     0,  1117,
   -1404,    27,  1118,     0,     0,     0,     0,     0,     0,  1421,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
       0,     0,  1132,  1132,  1132,   830,     0,  1176,     0, -1404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1193,     0,     0,     0,   831,     0, -1404,    29,
       0,     0,     0,     0,    30,     0,  1109,  1132,     0,     0,
    1866, -1418,     0,     0,     0,     0,   833,    31,  2127,     0,
    1110,  2128,     0,     0,     0,  1111,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
       0,    32, -1404,     0,     0, -1404,  1112,  1113,  1132,     0,
       0, -1404,     0,     0,  1132,    33,     0,     0,   -38,     0,
    1114,     0,  1099,     0,     0,  1100,     0,     0,   850,  1750,
    1750,  1132,     0,  1422,  1422,  1422,  1422,     0,     0,  1422,
    1422,  1422,  1422,  1422,  1422,  1422,  1422,  1422,  1422,  1750,
       0,     0,     0,  1115,  1106,     0,  1116,     0,     0,     0,
       0, -1496, -1418,     0,     0, -1404,     0,     0,     0,  1132,
    1117,     0,     0,  1750,  1750,     0,     0,     0,     0,     0,
    1229,     0,     0,     0,     0,     0,  1108,  1132,  1422,  1422,
    1132,     0,  1132,     0,  1120,     0,     0,  1121,  1122,  1123,
       0,  1124,  1125,  1126,  1127,  1128,  1129,     0,  1977,     0,
       0,  1441,     0,     0, -1418,     0,     0,  1807,  1981,     0,
       0,     0,  1982,     0,     0,  1984,     0, -1418,     0,     0,
       0,     0, -1418,     0,     0,     0,     0, -1418,     0,     0,
       0,     0,     0, -1404,     0,     0, -1418,     0,     0, -1418,
       0,  2004,  2005,     0,     0,  1787,     0,     0,  1119,     0,
       0,     0,     0,     0,  1132,     0,     0, -1404,     0, -1404,
   -1404,  2017,   662,     0,  2020,  1734,  2022,     0, -1418, -1496,
   -1496, -1496,     0,     0,  2026, -1496,     0,     0,     0,     0,
       0,     0,  2033,  2034,     0,     0,     0, -1418,     0, -1496,
       0,     0,     0,     0, -1496,     0, -1404,     0,     0, -1404,
   -1404, -1404,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2074,     0,     0,     0,     0,     0,     0,     0,     0,
    2081,     0,     0,     0,     0,     0,     0,     0,     0, -1496,
       0, -1418,     0,     0, -1418,     0,  2094,     0,     0,     0,
   -1418,     0,     0,     0,     0,  1120,     0,     0,  1121,  1122,
    1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,     0,     0,  1132,
    1132,     0,  1132,     0,     0,  1750,  1750,  1750,  1750,  1117,
       0,     0,  1750,  1750,  1750,  1750,  1750,  1750,  1750,  1750,
    1750,  1750,  1132,  1132, -1418,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,     0,  1132,     0,
    1132,     0,     0,     0,  1132,     0,     0,  1750,  1750,     0,
       0,  1132,  1132,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1099,     0,  1807,  1100,     0,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,     0,     0,
       0,  1099,  1132,  2193,  1100,     0,     0, -1496,  1104,  1132,
       0,     0, -1418,     0,     0,     0,  1106,     0,     0,     0,
       0,     0,  1132,  1107,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1106,     0,     0, -1418,     0, -1418, -1418,
   -1496,     0,     0,     0,     0,  2202,  2203,     0,  1108,     0,
    2204,     0,     0,     0,     0,  2207,     0,     0,  2210,  2211,
       0,     0,     0,  2215,     0,  1108,     0,     0,     0,  1740,
       0,     0,     0,     0,     0, -1418,     0,     0, -1418, -1418,
   -1418,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1496,     0,     0,     0,     0,   733,
       0,  1124,  1125,  1126,  1127,  1128,  1129,     0,     0,     0,
       0,  1132,     0,     0,     0,  1422,     0,     0,     0,     0,
    1132,  1132,  1132,     0,  2028,  1132,  1098,     0,  1132,  1132,
       0,  1099,     0,  1132,  1100,     0,     0,  1109,  1101,  1102,
    1103,  2298,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1110,     0,     0, -1496,  1104,  1111,     0,  1105,     0,
       0,     0,     0,  1106,     0,     0,     0,   484, -1496,     0,
    1107,     0,     0, -1496,     0,     0,     0,  1112,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1114,     0,     0,     0,  1108,     0,     0,  1422,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1496,     0,
       0,     0,     0,     0,     0,     0,  1132,     0,     0,     0,
     485,     0,     0,     0,  1115,  2348,  2349,  1116,     0,  2350,
       0,     0,     0,     0,     0,   486,     0,     0,     0,     0,
       0,  1117,     0,     0,  1118,     0,     0, -1496, -1496, -1496,
       0,  1744,  1745,  1746,  1747,  1748,  1749,     0,  1117,     0,
       0,  1750,  1422,  2378,  2379,     0,  1132,  1132,  1132,     0,
       0,     0,     0,     0,     0,     0,     0,  2391,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   487,
       0,     0,     0,     0,  1109,     0,  1132,  1132,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1110,  1132,
     489,     0,     0,  1111,     0,   490,     0,     0,     0,     0,
       0,  1750,     0,     0,     0,     0,     0,     0,     0,  1119,
       0,     0,     0,     0,  1112,  1113,     0,     0,     0,     0,
     491,     0,     0,     0,     0,     0, -1496,     0,  1114,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1750,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1132,  2459,     0,
       0,  1115,     0,   492,  1116,     0,   493,     0,     0,     0,
       0,  1089,     0,     0,  1132,     0,     0,     0,  1117,     0,
       0,  1118,  2476,     0,     0,     0,     0,     0,  1132,     0,
       0,     0,     0,     0,     0,     0,     0,  2490,     0,     0,
       0,     0,     0,     0,     0,     0,  1120,     0,     0,  1121,
    1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,
       0,     0,     0, -1496,   494,     0,  1725,     0,     0,     0,
    1124,  1125,  1126,  1127,  1128,  1129,     0,     0,   495,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1132,     0,     0,  1119,  2378,     0,   496,
       0,   497,     0,     0,     0,     0,     0,     0,     0,   498,
       0,     0,   499,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2551,     0,     0,     0,     0,
       0,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   501,     0,  2565,  2565,     0,     0,     0,   502,
       0,     0,     0,     0,     0,     0,     0,     0,   503,     0,
    1132,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   504,  2565,
       0,     0,     0,  1120,     0,     0,  1121,  1122,  1123,     0,
    1124,  1125,  1126,  1127,  1128,  1129,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    88,   659,   522,   660,   661,
     662,   663,   664,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,   845,    97,
      98,    99,     0,     0,     0,     0,     0,  2565,  2632,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     665,   111,   666,   667,     0,   114,   115,   116,   117,   118,
     119,   668,   669,   120,   121,   670,   671,   124,     0,   125,
     126,   127,   128,   672,     0,   673,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   674,   675,
     676,   677,   678,   679,   680,   151,   152,   153,   154,   155,
     156,   157,   681,   682,   160,   683,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
     846,     0,   173,   174,   684,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     685,   189,   190,   191,   192,   686,   687,   194,     0,   195,
     196,   688,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   689,   690,     0,
     691,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   692,   693,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   694,   275,   695,   277,   278,   279,   280,
     696,   281,   282,   283,   284,   697,   698,   286,   699,   288,
     289,   290,     0,   291,   292,     0,     0,   700,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   701,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     702,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   703,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   704,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,   705,
     368,   369,   370,   371,   372,   373,   374,   375,   706,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   707,     0,   391,   392,     0,   393,   394,
     395,   396,   397,   398,   399,     0,   708,   709,     0,     0,
     402,   403,   710,   405,   711,   712,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
     713,     0,   419,   420,   421,   422,   423,   424,   714,   847,
     426,   427,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   715,     0,     0,     0,     0,     0,     0,   716,
     717,   848,     0,     0,     0,     0,     0,     0,   719,   849,
       0,     0,     0,   720,    88,   659,   522,   660,   661,   662,
     663,   664,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   665,
     111,   666,   667,     0,   114,   115,   116,   117,   118,   119,
     668,   669,   120,   121,   670,   671,   124,     0,   125,   126,
     127,   128,   672,     0,   673,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   674,   675,   676,
     677,   678,   679,   680,   151,   152,   153,   154,   155,   156,
     157,   681,   682,   160,   683,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   684,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   685,
     189,   190,   191,   192,   686,   687,   194,     0,   195,   196,
     688,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   689,   690,     0,   691,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   692,   693,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   694,   275,   695,   277,   278,   279,   280,   696,
     281,   282,   283,   284,   697,   698,   286,   699,   288,   289,
     290,     0,   291,   292,     0,     0,   700,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   701,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   702,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   703,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   704,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,    24,   363,   364,   365,   366,   367,   705,   368,
     369,   370,   371,   372,   373,   374,   375,   706,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   707,     0,   391,   392,    28,   393,   394,   395,
     396,   397,   398,   399,     0,   708,   709,     0,     0,   402,
     403,   710,   405,   711,   712,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,   713,
       0,   419,   420,   421,   422,   423,   639,   714,     0,   426,
     427,   428,   429,   430,   431,     0,     0,   432,     0,    31,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   715,     0,    32,     0,     0,     0,     0,   716,   717,
       0,     0,     0,     0,     0,     0,     0,   719,  2469,     0,
       0,     0,   720,    88,   659,   522,   660,   661,   662,   663,
     664,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   665,   111,
     666,   667,     0,   114,   115,   116,   117,   118,   119,   668,
     669,   120,   121,   670,   671,   124,     0,   125,   126,   127,
     128,   672,     0,   673,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   674,   675,   676,   677,
     678,   679,   680,   151,   152,   153,   154,   155,   156,   157,
     681,   682,   160,   683,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   684,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   685,   189,
     190,   191,   192,   686,   687,   194,     0,   195,   196,   688,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   689,   690,     0,   691,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     692,   693,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   694,   275,   695,   277,   278,   279,   280,   696,   281,
     282,   283,   284,   697,   698,   286,   699,   288,   289,   290,
       0,   291,   292,     0,     0,   700,   294,   295,     0,     0,
     296,   297,   298,   299,   300,   701,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   702,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   703,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     704,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    24,   363,   364,   365,   366,   367,   705,   368,   369,
     370,   371,   372,   373,   374,   375,   706,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   707,     0,   391,   392,    28,   393,   394,   395,   396,
     397,   398,   399,     0,   708,   709,     0,     0,   402,   403,
     710,   405,   711,   712,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,   713,     0,
     419,   420,   421,   422,   423,   639,   714,     0,   426,   427,
     428,   429,   430,   431,     0,     0,   432,     0,    31,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     715,     0,    32,     0,     0,     0,     0,   716,   717,     0,
       0,     0,     0,     0,     0,     0,   719,     0,     0,     0,
       0,   720,    88,   659,   522,   660,   661,   662,   663,   664,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   665,   111,   666,
     667,  1434,   114,   115,   116,   117,   118,   119,   668,   669,
     120,   121,   670,   671,   124,     0,   125,   126,   127,   128,
     672,     0,   673,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   674,   675,   676,   677,   678,
     679,   680,   151,   152,   153,   154,   155,   156,   157,   681,
     682,   160,   683,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   684,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   685,   189,   190,
     191,   192,   686,   687,   194,     0,   195,   196,   688,   198,
       0,   199,     0,   200,   201,  1435,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   689,   690,     0,   691,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
    1436,   248,   249,   250,   251,     0,   252,   253,   254,   692,
     693,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     694,   275,   695,   277,   278,   279,   280,   696,   281,   282,
     283,   284,   697,   698,   286,   699,   288,   289,   290,     0,
     291,   292,     0,     0,   700,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   701,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   702,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   703,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   704,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,   705,   368,   369,   370,
     371,   372,   373,   374,   375,   706,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     707,     0,   391,   392,     0,   393,   394,   395,   396,   397,
     398,   399,     0,   708,   709,     0,  1437,   402,   403,   710,
     405,   711,   712,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,   713,     0,   419,
     420,   421,   422,   423,   424,   714,     0,   426,   427,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   715,
       0,     0,     0,     0,     0,     0,   716,   717,     0,     0,
       0,     0,     0,     0,     0,   719,     0,     0,     0,     0,
     720,    88,   659,   522,   660,   661,   662,   663,   664,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   665,   111,   666,   667,
       0,   114,   115,   116,   117,   118,   119,   668,   669,   120,
     121,   670,   671,   124,     0,   125,   126,   127,   128,   672,
       0,   673,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   674,   675,   676,   677,   678,   679,
     680,   151,   152,   153,   154,   155,   156,   157,   681,   682,
     160,   683,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     684,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   685,   189,   190,   191,
     192,   686,   687,   194,     0,   195,   196,   688,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   689,   690,     0,   691,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   692,   693,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   694,
     275,   695,   277,   278,   279,   280,   696,   281,   282,   283,
     284,   697,   698,   286,   699,   288,   289,   290,     0,   291,
     292,     0,     0,   700,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   701,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   702,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   703,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   704,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,   705,   368,   369,   370,   371,
     372,   373,   374,   375,   706,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   707,
       0,   391,   392,     0,   393,   394,   395,   396,   397,   398,
     399,     0,   708,   709,     0,     0,   402,   403,   710,   405,
     711,   712,   407,   408,   409,   410,   411,   412,   413,     0,
       0,   414,   415,   416,   417,   418,   713,     0,   419,   420,
     421,   422,   423,   424,   714,     0,   426,   427,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   715,     0,
       0,     0,     0,     0,     0,   716,   717,   718,     0,     0,
       0,     0,     0,     0,   719,     0,     0,     0,     0,   720,
      88,   659,   522,   660,   661,   662,   663,   664,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,  1186,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   665,   111,   666,   667,     0,
     114,   115,   116,   117,   118,   119,   668,   669,   120,   121,
     670,   671,   124,     0,   125,   126,   127,   128,   672,     0,
     673,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   674,   675,   676,   677,   678,   679,   680,
     151,   152,   153,   154,   155,   156,   157,   681,   682,   160,
     683,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   684,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   685,   189,   190,   191,   192,
     686,   687,   194,     0,   195,   196,   688,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   689,   690,     0,   691,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   692,   693,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   694,   275,
     695,   277,   278,   279,   280,   696,   281,   282,   283,   284,
     697,   698,   286,   699,   288,   289,   290,     0,   291,   292,
       0,     0,   700,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   701,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   702,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   703,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   704,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   705,   368,   369,   370,   371,   372,
     373,   374,   375,   706,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   707,     0,
     391,   392,     0,   393,   394,   395,   396,   397,   398,   399,
       0,   708,   709,     0,     0,   402,   403,   710,   405,   711,
     712,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,   713,     0,   419,   420,   421,
     422,   423,   424,   714,     0,   426,   427,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   715,     0,     0,
       0,     0,     0,     0,   716,   717,     0,     0,     0,     0,
       0,     0,     0,   719,     0,     0,     0,     0,   720,    88,
     659,   522,   660,   661,   662,   663,   664,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   665,   111,   666,   667,     0,   114,
     115,   116,   117,   118,   119,   668,   669,   120,   121,   670,
     671,   124,     0,   125,   126,   127,   128,   672,     0,   673,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   674,   675,   676,   677,   678,   679,   680,   151,
     152,   153,   154,   155,   156,   157,   681,   682,   160,   683,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   684,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   685,   189,   190,   191,   192,   686,
     687,   194,     0,   195,   196,   688,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   689,   690,     0,   691,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   692,   693,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   694,   275,   695,
     277,   278,   279,   280,   696,   281,   282,   283,   284,   697,
     698,   286,   699,   288,   289,   290,     0,   291,   292,     0,
       0,   700,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   701,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   702,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   703,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   704,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   705,   368,   369,   370,   371,   372,   373,
     374,   375,   706,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   707,     0,   391,
     392,     0,   393,   394,   395,   396,   397,   398,   399,     0,
     708,   709,     0,     0,   402,   403,   710,   405,   711,   712,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,   713,     0,   419,   420,   421,   422,
     423,   424,   714,     0,   426,   427,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   715,     0,     0,     0,
       0,     0,     0,   716,   717,     0,     0,     0,     0,     0,
       0,     0,   719,  1299,     0,     0,     0,   720,    88,   659,
     522,   660,   661,   662,   663,   664,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   665,   111,   666,   667,     0,   114,   115,
     116,   117,   118,   119,   668,   669,   120,   121,   670,   671,
     124,     0,   125,   126,   127,   128,   672,     0,   673,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   674,   675,   676,   677,   678,   679,   680,   151,   152,
     153,   154,   155,   156,   157,   681,   682,   160,   683,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   684,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   685,   189,   190,   191,   192,   686,   687,
     194,     0,   195,   196,   688,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     689,   690,     0,   691,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   692,   693,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   694,   275,   695,   277,
     278,   279,   280,   696,   281,   282,   283,   284,   697,   698,
     286,   699,   288,   289,   290,     0,   291,   292,     0,     0,
     700,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     701,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   702,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     703,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   704,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   705,   368,   369,   370,   371,   372,   373,   374,
     375,   706,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   707,     0,   391,   392,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   708,
     709,     0,     0,   402,   403,   710,   405,   711,   712,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,   713,     0,   419,   420,   421,   422,   423,
     424,   714,     0,   426,   427,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   715,     0,     0,     0,     0,
       0,     0,   716,   717,     0,     0,     0,     0,     0,     0,
       0,   719,  1424,     0,     0,     0,   720,    88,   659,   522,
     660,   661,   662,   663,   664,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   665,   111,   666,   667,     0,   114,   115,   116,
     117,   118,   119,   668,   669,   120,   121,   670,   671,   124,
       0,   125,   126,   127,   128,   672,     0,   673,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     674,   675,   676,   677,   678,   679,   680,   151,   152,   153,
     154,   155,   156,   157,   681,   682,   160,   683,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   684,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   685,   189,   190,   191,   192,   686,   687,   194,
       0,   195,   196,   688,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   689,
     690,     0,   691,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   692,   693,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   694,   275,   695,   277,   278,
     279,   280,   696,   281,   282,   283,   284,   697,   698,   286,
     699,   288,   289,   290,     0,   291,   292,     0,     0,   700,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   701,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   702,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   703,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   704,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,   705,   368,   369,   370,   371,   372,   373,   374,   375,
     706,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   707,     0,   391,   392,     0,
     393,   394,   395,   396,   397,   398,   399,     0,   708,   709,
       0,     0,   402,   403,   710,   405,   711,   712,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,   713,     0,   419,   420,   421,   422,   423,   424,
     714,  1631,   426,   427,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   715,     0,     0,     0,     0,     0,
       0,   716,   717,     0,     0,     0,     0,     0,     0,     0,
     719,     0,     0,     0,     0,   720,    88,   659,   522,   660,
     661,   662,   663,   664,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   665,   111,   666,   667,     0,   114,   115,   116,   117,
     118,   119,   668,   669,   120,   121,   670,   671,   124,     0,
     125,   126,   127,   128,   672,     0,   673,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   674,
     675,   676,   677,   678,   679,   680,   151,   152,   153,   154,
     155,   156,   157,   681,   682,   160,   683,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   684,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   685,   189,   190,   191,   192,   686,   687,   194,     0,
     195,   196,   688,   198,     0,   199,     0,   200,   201,  1435,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   689,   690,
       0,   691,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   692,   693,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   694,   275,   695,   277,   278,   279,
     280,   696,   281,   282,   283,   284,   697,   698,   286,   699,
     288,   289,   290,     0,   291,   292,     0,     0,   700,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   701,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   702,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   703,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   704,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
     705,   368,   369,   370,   371,   372,   373,   374,   375,   706,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   707,     0,   391,   392,     0,   393,
     394,   395,   396,   397,   398,   399,     0,   708,   709,     0,
       0,   402,   403,   710,   405,   711,   712,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,   713,     0,   419,   420,   421,   422,   423,   424,   714,
       0,   426,   427,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   715,     0,     0,     0,     0,     0,     0,
     716,   717,     0,     0,     0,     0,     0,     0,     0,   719,
       0,     0,     0,     0,   720,    88,   659,   522,   660,   661,
     662,   663,   664,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     665,   111,   666,   667,     0,   114,   115,   116,   117,   118,
     119,   668,   669,   120,   121,   670,   671,   124,     0,   125,
     126,   127,   128,   672,     0,   673,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   674,   675,
     676,   677,   678,   679,   680,   151,   152,   153,   154,   155,
     156,   157,   681,   682,   160,   683,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   684,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     685,   189,   190,   191,   192,   686,   687,   194,     0,   195,
     196,   688,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   689,   690,     0,
     691,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   692,   693,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   694,   275,   695,   277,   278,   279,   280,
     696,   281,   282,   283,   284,   697,   698,   286,   699,   288,
     289,   290,     0,   291,   292,     0,     0,   700,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   701,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     702,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   703,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   704,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,   705,
     368,   369,   370,   371,   372,   373,   374,   375,   706,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   707,     0,   391,   392,     0,   393,   394,
     395,   396,   397,   398,   399,     0,   708,   709,     0,     0,
     402,   403,   710,   405,   711,   712,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
     713,     0,   419,   420,   421,   422,   423,   424,   714,     0,
     426,   427,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   715,     0,     0,     0,     0,     0,     0,   716,
     717,     0,     0,     0,     0,     0,     0,     0,   719,     0,
       0,     0,     0,   720,    88,   659,   522,   660,   661,   662,
     663,   664,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   665,
     111,   666,   667,     0,   114,   115,   116,   117,   118,   119,
     668,   669,   120,   121,   670,   671,   124,     0,   125,   126,
     127,   128,   672,     0,   673,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   674,   675,   676,
     677,   678,   679,   680,   151,   152,   153,   154,   155,   156,
     157,   681,   682,   160,   683,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   684,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   685,
     189,   190,   191,   192,   686,   687,   194,     0,   195,   196,
     688,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   689,   690,     0,   691,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   692,   693,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   694,   275,   695,   277,   278,   279,   280,   696,
     281,   282,   283,   284,   697,   698,   286,   699,   288,   289,
     290,     0,   291,   292,     0,     0,   700,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   701,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   702,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   703,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   704,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,   705,   368,
     369,   370,   371,   372,   373,   374,   375,   706,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   707,     0,   391,   392,     0,   393,   394,   395,
     396,   397,   398,   399,     0,   708,   709,     0,     0,   402,
     403,   710,   405,   711,   712,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,   713,
       0,   419,   420,   421,   422,   423,   424,   714,     0,   426,
     427,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   715,     0,     0,     0,     0,     0,     0,  1189,  1190,
       0,     0,     0,     0,     0,     0,     0,   719,     0,     0,
       0,     0,   720,    88,  1556,   522,   660,   661,   662,   663,
     664,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   665,   111,
     666,   667,     0,   114,   115,   116,   117,   118,   119,   668,
     669,   120,   121,   670,   671,   124,     0,   125,   126,   127,
     128,   672,     0,   673,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   674,   675,   676,   677,
     678,   679,   680,   151,   152,   153,   154,   155,   156,   157,
     681,   682,   160,   683,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   684,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   685,   189,
     190,   191,   192,   686,   687,   194,     0,   195,   196,   688,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   689,   690,     0,   691,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     692,   693,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   694,   275,   695,   277,   278,   279,   280,   696,   281,
     282,   283,   284,   697,   698,   286,   699,   288,   289,   290,
       0,   291,   292,     0,     0,   700,   294,   295,     0,     0,
     296,   297,   298,   299,   300,   701,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   702,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   703,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,   348,   349,   350,   351,
     704,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,   705,   368,   369,
     370,   371,   372,   373,   374,   375,   706,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   707,     0,   391,   392,     0,   393,   394,   395,   396,
     397,   398,   399,     0,   708,   709,     0,     0,   402,   403,
     710,   405,   711,   712,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,   713,     0,
     419,   420,   421,   422,   423,   424,   714,     0,   426,   427,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     715,     0,     0,     0,     0,     0,     0,   716,   717,     0,
       0,     0,     0,     0,     0,     0,   719,     0,     0,     0,
       0,   720,    88,   659,   522,   660,   661,   662,   663,   664,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   665,   111,   666,
     667,     0,   114,   115,   116,   117,   118,   119,   668,   669,
     120,   121,   670,   671,   124,     0,   125,   126,   127,   128,
     672,     0,   673,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   674,   675,   676,   677,   678,
     679,   680,   151,   152,   153,   154,   155,   156,   157,   681,
     682,   160,   683,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   684,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   685,   189,   190,
     191,   192,   686,   687,   194,     0,   195,   196,   688,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   689,   690,     0,   691,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   692,
     693,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     694,   275,   695,   277,   278,   279,   280,   696,   281,   282,
     283,   284,   697,   698,   286,   699,   288,   289,   290,     0,
     291,   292,     0,     0,   700,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   701,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   702,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   703,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   704,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,   705,   368,   369,   370,
     371,   372,   373,   374,   375,   706,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     707,     0,   391,   392,     0,   393,   394,   395,   396,   397,
     398,   399,     0,   708,   709,     0,     0,   402,   403,   710,
     405,   711,   712,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,   713,     0,   419,
     420,   421,   422,   423,   424,   714,     0,   426,   427,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   715,
       0,     0,     0,     0,     0,     0,   716,   717,     0,     0,
       0,     0,     0,     0,     0,  2374,     0,     0,     0,     0,
     720,    88,   659,   522,   660,   661,   662,   663,   664,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,  2562,   665,   111,   666,   667,
       0,   114,   115,   116,   117,   118,   119,   668,   669,   120,
     121,   670,   671,   124,     0,   125,   126,   127,   128,   672,
       0,   673,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,  2563,   674,   675,   676,   677,   678,   679,
     680,   151,   152,   153,   154,   155,   156,   157,   681,   682,
     160,   683,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     684,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   685,   189,   190,   191,
     192,   686,   687,   194,     0,   195,   196,   688,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   689,   690,     0,   691,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   692,   693,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   694,
     275,   695,   277,   278,   279,   280,   696,   281,   282,   283,
     284,   697,   698,   286,   699,   288,   289,   290,     0,   291,
     292,     0,     0,   700,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   701,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   702,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   703,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   704,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,   705,   368,   369,   370,   371,
     372,   373,   374,   375,   706,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   707,
       0,   391,   392,     0,   393,   394,   395,   396,   397,   398,
     399,     0,   708,   709,     0,     0,   402,   403,   710,   405,
     711,   712,   407,   408,   409,   410,  2564,   412,   413,     0,
       0,   414,   415,   416,   417,   418,   713,     0,   419,   420,
     421,   422,   423,   424,   714,     0,   426,   427,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   715,     0,
       0,     0,     0,     0,     0,   716,   717,     0,     0,     0,
       0,     0,     0,     0,   719,     0,     0,     0,     0,   720,
      88,   659,   522,   660,   661,   662,   663,   664,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   665,   111,   666,   667,     0,
     114,   115,   116,   117,   118,   119,   668,   669,   120,   121,
     670,   671,   124,     0,   125,   126,   127,   128,   672,     0,
     673,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,  2563,   674,   675,   676,   677,   678,   679,   680,
     151,   152,   153,   154,   155,   156,   157,   681,   682,   160,
     683,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   684,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   685,   189,   190,   191,   192,
     686,   687,   194,     0,   195,   196,   688,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   689,   690,     0,   691,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   692,   693,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   694,   275,
     695,   277,   278,   279,   280,   696,   281,   282,   283,   284,
     697,   698,   286,   699,   288,   289,   290,     0,   291,   292,
       0,     0,   700,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   701,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   702,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   703,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   704,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   705,   368,   369,   370,   371,   372,
     373,   374,   375,   706,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   707,     0,
     391,   392,     0,   393,   394,   395,   396,   397,   398,   399,
       0,   708,   709,     0,     0,   402,   403,   710,   405,   711,
     712,   407,   408,   409,   410,  2564,   412,   413,     0,     0,
     414,   415,   416,   417,   418,   713,     0,   419,   420,   421,
     422,   423,   424,   714,     0,   426,   427,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   715,     0,     0,
       0,     0,     0,     0,   716,   717,     0,     0,     0,     0,
       0,     0,     0,   719,     0,     0,     0,     0,   720,    88,
     659,   522,   660,   661,   662,   663,   664,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   665,   111,   666,   667,     0,   114,
     115,   116,   117,   118,   119,   668,   669,   120,   121,   670,
     671,   124,     0,   125,   126,   127,   128,   672,     0,   673,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   674,   675,   676,   677,   678,   679,   680,   151,
     152,   153,   154,   155,   156,   157,   681,   682,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   684,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   685,   189,   190,   191,   192,   686,
     687,   194,     0,   195,   196,   688,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   689,   690,     0,   691,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   692,   693,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   694,   275,   695,
     277,   278,   279,   280,     0,   281,   282,   283,   284,   697,
     698,   286,   699,   288,   289,   290,     0,   291,   292,     0,
       0,   700,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   701,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   702,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   703,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   705,   368,   369,   370,   371,   372,   373,
     374,   375,   706,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   707,     0,   391,
     392,     0,   393,   394,   395,   396,   397,   398,   399,     0,
     708,   709,     0,     0,   402,   403,   710,   405,   711,   712,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,   713,     0,   419,   420,   421,   422,
     423,   424,   714,     0,   426,   427,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,     0,     0,     0,     0,
       0,     0,     0,  1417,  1418,     0,     0,    88,   659,   522,
     660,   661,  1419,   663,   664,     0,     0,   720,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   665,   111,   666,   667,     0,   114,   115,   116,
     117,   118,   119,   668,   669,   120,   121,   670,   671,   124,
       0,   125,   126,   127,   128,   672,     0,   673,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     674,   675,   676,   677,   678,   679,   680,   151,   152,   153,
     154,   155,   156,   157,   681,   682,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   684,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   685,   189,   190,   191,   192,   686,   687,   194,
       0,   195,   196,   688,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   689,
     690,     0,   691,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   692,   693,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   694,   275,   695,   277,   278,
     279,   280,     0,   281,   282,   283,   284,   697,   698,   286,
     699,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   701,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   702,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   703,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,  1545,  1546,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,   705,   368,   369,   370,   371,   372,   373,   374,   375,
     706,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   707,     0,   391,   392,     0,
     393,   394,   395,   396,   397,   398,   399,     0,   708,   709,
       0,     0,   402,   403,   710,   405,   711,   712,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,   713,     0,   419,   420,   421,   422,   423,   424,
     714,     0,   426,   427,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,     0,     0,     0,     0,     0,     0,
       0,  1547,  1548,     0,     0,     0,     0,     0,     0,     0,
    1419,     0,     0,     0,     0,   720,    88,   659,   522,   660,
     661,   662,   663,   664,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   665,   111,   666,   667,     0,   114,   115,   116,   117,
     118,   119,   668,   669,   120,   121,   670,   671,   124,     0,
     125,   126,   127,   128,   672,     0,   673,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   674,
     675,   676,   677,   678,   679,   680,   151,   152,   153,   154,
     155,   156,   157,   681,   682,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   684,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   685,   189,   190,   191,   192,   686,   687,   194,     0,
     195,   196,   688,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   689,   690,
       0,   691,     0,   238,     0,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   692,   693,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   694,   275,   695,   277,   278,   279,
     280,     0,   281,   282,   283,   284,   697,   698,   286,   699,
     288,   289,   290,     0,   291,   292,     0,     0,   700,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   701,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   702,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   703,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
     705,   368,   369,   370,   371,   372,   373,   374,   375,   706,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   707,     0,   391,   392,     0,   393,
     394,   395,   396,   397,   398,   399,     0,   708,   709,     0,
       0,   402,   403,   710,   405,   711,   712,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,   713,     0,   419,   420,   421,   422,   423,   424,   714,
       0,   426,   427,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,     0,     0,     0,     0,     0,     0,     0,
    1417,  1418,     0,     0,     0,     0,     0,     0,     0,  1419,
       0,     0,     0,     0,   720,    88,   659,   522,   660,   661,
     662,   663,   664,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108, -1496,
     665,   111,   666,   667,     0,   114,   115,   116,   117,   118,
     119,   668,   669,   120,   121,   670,   671,   124,     0,   125,
     126,   127,   128,   672,     0,   673,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,  2563,   674,   675,
     676,   677,   678,   679,   680,   151,   152,   153,   154,   155,
     156,   157,   681,   682,   160,   683,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   684,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     685,   189,   190,   191,   192,   686,   687,   194,     0,   195,
     196,   688,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205, -1496,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216, -1496,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   689,   690,     0,
     691,     0,   238,     0,     0,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250, -1496,     0,   252,
     253,   254,   692,   693,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   694,   275,   695,   277,   278,   279,   280,
       0,   281,   282,     0,   284,   697,   698,   286,   699,   288,
     289,   290,     0,   291,   292,     0,     0,   700,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   701,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     702,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   703,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   704,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,   705,
     368,   369,   370,   371,   372, -1496,   374,   375,   706,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   707,     0,   391,   392,     0,   393,   394,
     395,   396,   397,   398,   399,     0,   708,   709,     0,     0,
     402,   403,   710,   405,   711,   712,   407,   408,   409,   410,
    2564,   412,   413,     0,     0,   414,   415,   416,   417,   418,
     713,     0,   419,   420,   421,   422,   423,   424,   714,     0,
     426,   427,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453, -1496,     0,     0,     0,     0,     0,     0,   716,
     717,     0,     0,     0,     0,     0,     0,     0,   719,     0,
       0,     0,     0,   720,    88,   659,   522,   660,   661,   662,
     663,   664,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,     0,   665,
     111,   666,   667,     0,   114,   115,   116,   117,   118,   119,
     668,   669,   120,   121,   670,   671,   124,     0,   125,   126,
     127,   128,   672,     0,   673,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   674,   675,   676,
     677,   678,   679,   680,   151,   152,   153,   154,   155,   156,
     157,   681,   682,   160,   683,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   684,   176,   177,     0,   178,   179,   180,
       0,   181,     0,   183,     0,   184,   185,   186,   187,   685,
     189,   190,   191,   192,   686,   687,   194,     0,   195,   196,
     688,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   689,   690,     0,   691,
       0,   238,     0,     0,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,     0,     0,   252,   253,
     254,   692,   693,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   694,   275,   695,   277,   278,   279,   280,     0,
     281,   282,     0,   284,   697,   698,   286,   699,   288,   289,
     290,     0,   291,   292,     0,     0,   700,   294,   295,     0,
       0,   296,   297,   298,   299,   300,   701,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   702,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   703,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,   704,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,   705,   368,
     369,   370,   371,   372,     0,   374,   375,   706,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   707,     0,   391,   392,     0,   393,   394,   395,
     396,   397,   398,   399,     0,   708,   709,     0,     0,   402,
     403,   710,   405,   711,   712,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,   713,
       0,   419,   420,   421,   422,   423,   424,   714,     0,   426,
     427,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,     0,     0,     0,     0,     0,     0,     0,   716,   717,
     478,     0,     0,     0,     0,     0,     0,   719,     0,     0,
       0,     0,   720,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,  2053,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,  -561,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,  -561,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,  -561,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,  -561,   243,   244,   245,   246,   247,     0,     0,   248,
    -561,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,  -561,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,  -561,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   371,   372,
       0,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,     0,   393,     0,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   404,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,     0,     0,     0,
      88,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   777,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,   669,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   672,     0,
     673,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   674,   675,   676,   677,   678,   679,   680,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     686,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,  1811,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   692,   693,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   281,   282,   283,   284,
       0,   698,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   547,   293,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   701,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   702,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,  1812,   354,
     355,   356,   357,   358,   359,   360,   361,   362,    24,   363,
     364,   365,   366,   367,   705,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   707,     0,
     391,   392,    28,   393,   394,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   710,   405,   711,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,   713,     0,   419,   420,   421,
     422,   423,   639,   425,     0,   426,   427,   428,   429,   430,
     431,     0,     0,   432,     0,    31,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,     0,     0,    32,
      88,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1813,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,   669,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   672,     0,
     673,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   674,   675,   676,   677,   678,   679,   680,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     686,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,  1811,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   692,   693,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   281,   282,   283,   284,
       0,   698,   286,   287,   288,   289,   290,     0,   291,   292,
       0,   547,   293,   294,   295,     0,     0,   296,   297,   298,
     299,   300,   701,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   702,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,   348,   349,   350,   351,   352,  1812,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   705,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   707,     0,
     391,   392,     0,   393,   394,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   710,   405,   711,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,   713,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,   427,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,     0,     0,    88,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1813,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,   669,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   672,     0,   673,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   674,   675,   676,   677,   678,   679,   680,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   686,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   692,   693,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   281,   282,   283,   284,     0,
     698,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   701,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   702,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,  1812,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   705,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   707,     0,   391,
     392,     0,   393,   394,   395,   396,   397,   398,   399,     0,
     400,   401,     0,     0,   402,   403,   710,   405,   711,     0,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,   713,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   426,   427,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,     0,     0,    88,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,   669,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   672,     0,   673,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   674,   675,   676,   677,   678,   679,   680,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   686,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   692,   693,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   281,   282,   283,   284,     0,   698,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     701,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   702,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   705,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   707,     0,   391,   392,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   400,
     401,     0,     0,   402,   403,   710,   405,   711,     0,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,   713,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,   427,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   638,   981,   522,
       0,     0,     0,   663,     0,     0,     0,     0,     0,     0,
       0,  2385,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,   130,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
       0,     0,     0,   150,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   982,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,   983,     0,   293,
     294,   295,     0,     0,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,     0,
     393,   394,   395,   396,   397,   398,   399,     0,   400,   401,
       0,     0,   402,   403,   404,   405,   406,   984,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   426,   427,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,     0,     0,   638,     0,     0,     0,
       0,   985,   986,  1681,     0,     0,     0,     0,     0,     0,
    1682,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     3,     4,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    24,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,    28,   393,
     394,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   639,   425,
       0,   426,   427,   428,   429,   430,   431,     0,     0,   432,
       0,    31,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,     0,     0,    32,   478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    24,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,    28,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   639,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,    31,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,     0,     0,    32,   478,     0,  2226,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,     0,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2242,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,     0,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,     0,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,     0,     0,   478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   758,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   371,   372,     0,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,     0,   393,     0,   395,
     396,   397,   398,   399,     0,   400,   401,     0,     0,   402,
     403,   404,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1535,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
       0,     0,     0,     0,     0,  1004,   981,   522,     0,     0,
    1399,   663,     0,     0,     0,     0,  2037,  1400,  1401,  1402,
      89,    90,    91,    92,    93,    94,    95,    96,   858,    97,
      98,    99,   859,   860,   861,   862,   863,   864,   865,   100,
     101,   866,   102,   103,   104,   105,   106,   107,   108,     0,
    1005,   111,  1006,  1007,   867,   114,   115,   116,   117,   118,
     119,   868,   869,   120,   121,  1008,  1009,   124,   870,   125,
     126,   127,   128,     0,   871,   130,   872,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   873,   140,   141,   142,
     143,   144,   145,   874,   146,   147,   148,   149,   875,   876,
     877,   150,   878,   879,   880,   151,   152,   153,   154,   155,
     156,   157,  1010,  1011,   160,   881,   161,   882,   162,   163,
     164,   165,   166,   167,   883,   168,   169,   170,   171,   172,
     884,   885,   173,   174,   684,   176,   177,   886,   178,   179,
     180,   887,   181,   182,   183,   888,   184,   185,   186,   187,
       0,   189,   190,   191,   192,     0,   889,   194,   890,   195,
     196,  1012,   198,   891,   199,   892,   200,   201,   893,   202,
     203,   204,   205,   206,   207,   894,   208,   895,     0,   210,
     896,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   897,   222,   223,   224,   225,   226,   227,   898,
     228,   229,     0,   231,   232,   233,   234,  1013,  1014,   899,
    1015,   900,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   901,   902,   248,   249,   250,   251,   903,   252,
     253,   254,   904,   905,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,  1016,   275,  1017,   277,   278,   279,  2138,
     906,   281,   282,   283,   284,   907,     0,   286,  1018,   288,
     289,   290,   908,   291,   292,   909,   910,  2139,   294,   295,
     911,   912,   296,     0,   298,   299,   300,     0,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   913,   311,   312,
       0,   314,   315,     0,   317,   318,   319,   914,   320,   321,
     322,   323,   324,   325,   326,   327,   328,  1019,   330,   331,
     332,   333,   915,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   916,   346,   347,   348,   349,
     350,   351,     0,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   917,   363,   364,   365,   366,   367,   918,
     368,  2140,   370,   371,   372,   373,   374,   375,  1021,   377,
     919,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   920,   391,   392,   921,   393,   394,
     395,   396,   397,   398,   399,   922,  1022,  1023,   923,   924,
     402,   403,     0,   405,     0,   925,   407,   408,   409,   410,
     411,   412,   413,   926,   927,   414,   415,   416,   417,   418,
     928,   929,   419,   420,   421,   422,   423,     0,  1024,   930,
     426,   427,   428,   429,   430,   431,   931,   932,   432,   933,
     934,   433,   434,   435,   436,   437,   438,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   450,   451,
     452,   453,     0,   478,     0,  1403,  1404,  1405,  1399,  2141,
    2142,  1408,  1409,  1410,  1411,  1400,  1401,  1402,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
       0,     0,     0,  1403,  1404,  1405,     0,  1406,  1407,  1408,
    1409,  1410,  1411,  1099,     0,     0,  1100,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,     0,     0,     0,     0,
       0,  1099,     0,     0,  1100,     0,     0,  1104,  1101,  1102,
    1103,     0,     0,     0,     0,  1106,     0,     0,     0,     0,
       0,     0,  1107,     0,     0,  1104,     0,     0,     0,     0,
       0,     0,     0,  1106,     0,  1099,     0,     0,  1100,     0,
    1107,     0,  1101,  1102,  1103,     0,     0,  1108,     0,     0,
       0,     0,     0,  1099,     0,     0,  1100,     0,     0,  1104,
    1101,  1102,  1103,     0,     0,  1108,     0,  1106,     0,     0,
       0,     0,     0,     0,  1107,     0,     0,  1104,     0,     0,
       0,     0,     0,     0,     0,  1106,     0,     0,     0,     0,
       0,     0,  1107,     0,     0,  1099,     0,     0,  1100,  1108,
       0,     0,  1101,  1102,  1103,     0,     0,     0,     0,     0,
       0,     0,     0,  1099,     0,     0,  1100,  1108,     0,  1104,
    1101,  1102,  1103,     0,     0,     0,     0,  1106,     0,     0,
       0,     0,     0,     0,  1107,     0,     0,  1104,     0,     0,
       0,     0,     0,     0,     0,  1106,  1109,     0,     0,     0,
       0,     0,  1107,     0,     0,     0,     0,     0,     0,  1108,
    1110,     0,     0,     0,  1109,  1111,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1108,  1110,     0,
       0,     0,     0,  1111,     0,     0,  1112,  1113,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1109,     0,
    1114,     0,     0,     0,  1112,  1113,     0,     0,     0,     0,
       0,     0,  1110,     0,     0,     0,  1109,  1111,  1114,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1110,     0,     0,  1115,     0,  1111,  1116,     0,  1112,  1113,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,  1115,  1114,  1118,  1116,     0,  1112,  1113,  1109,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
    1114,  1118,  1110,     0,     0,     0,  1109,  1111,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,  1116,     0,
    1110,     0,     0,     0,     0,  1111,     0,     0,  1112,  1113,
       0,     0,  1117,  1115,     0,  1118,  1116,     0,     0,     0,
       0,     0,  1114,     0,     0,     0,  1112,  1113,     0,     0,
    1117,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
    1114,     0,     0,     0,     0,     0,     0,     0,  1119,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,  1116,     0,
       0,     0,     0,     0,     0,     0,  1119,     0,     0,     0,
       0,     0,  1117,  1115,     0,  1118,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,     0,     0,  1118,     0,  1099,     0,     0,  1100,     0,
    1119,     0,  1101,  1102,  1103,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1119,  1104,
       0,     0,     0,     0,     0,     0,     0,  1106,     0,     0,
       0,     0,     0,     0,  1107,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1120,     0,     0,  1121,  1122,
    1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,  1108,
    1119,     0,  1773,  1120,     0,     0,  1121,  1122,  1123,     0,
    1124,  1125,  1126,  1127,  1128,  1129,     0,     0,  1119,     0,
    1980,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1120,     0,     0,
    1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,
       0,     0,     0,     0,  2015,  1120,     0,     0,  1121,  1122,
    1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,     0,
       0,  1099,  2102,     0,  1100,     0,     0,     0,  1101,  1102,
    1103,     0,     0,     0,     0,     0,     0,     0,     0,  1099,
       0,     0,  1100,     0,     0,  1104,     0,  1120,  1109,     0,
    1121,  1122,  1123,  1106,  1124,  1125,  1126,  1127,  1128,  1129,
    1107,     0,  1110,     0,  2195,  1120,     0,  1111,  1121,  1122,
    1123,  1106,  1124,  1125,  1126,  1127,  1128,  1129, -1496,     0,
       0,     0,  2213,  1099,     0,  1108,  1100,     0,  1112,  1113,
    1101,  1102,  1103,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1114,  1108,     0,     0,     0,  1104,     0,     0,
       0,     0,     0,     0,     0,  1106,     0,  1099,     0,     0,
    1100,     0,  1107,     0,  1101,  1102,  1103,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,  1116,     0,
       0,  1104,     0,     0,     0,     0,     0,  1108,     0,  1106,
       0,     0,  1117,     0,     0,  1118,  1107,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2031,     0,     0,     0,     0,     0,     0,     0,
       0,  1108,     0,     0,  1109,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1110,     0,
       0,     0, -1496,  1111,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1496,     0,     0,     0,
       0, -1496,     0,     0,  1112,  1113,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1114,     0,
    1119,     0,     0,     0,  1099,     0,  1109,  1100,     0,     0,
       0,  1101,  1102,  1103,     0,     0, -1496,     0,     0,     0,
    1110,     0,     0,     0,     0,  1111,     0,     0,  1104,     0,
       0,  1115,     0,     0,  1116,     0,  1106,     0,     0,     0,
    1109,     0,     0,  1107,     0,     0,  1112,  1113,  1117,     0,
       0,  1118,     0,     0,  1110,     0,     0,     0,   808,  1111,
    1114,     0,     0,     0,   809,     0,  1117,     0,  1108,     0,
       0,   821,     0,     0,     0,     0,     0,     0,     0,     0,
    1112,  1113,     0,     0,     0,     0,     0,     0,     0,     0,
     822,     0,     0,  1115,  1114,     0,  1116,  1120,     0,     0,
    1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,
    1117,     0,     0,  1118,  2351,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1115,     0,     0,
    1116,     0,     0,     0,     0,     0,  1119,     0,     0,     0,
     823,     0,     0,     0,  1117,     0,     0,  1118,     0,     0,
       0,     0,     0,     0, -1496,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1109,     0,   810,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1110,     0,     0,     0,     0,  1111,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1119,     0,
       0,     0,     0,     0,     0,     0,     0,  1112,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1114,     0,     0,     0,     0,     0,     0,   824,     0,
       0,     0,  1119,  1120,     0,     0,  1121,  1122,  1123,     0,
    1124,  1125,  1126,  1127,  1128,  1129,     0,     0,     0,     0,
    2533, -1496,     0,     0,  1115,     0,     0,  1116,  1124,  1125,
    1126,  1127,  1128,  1129,     0,     0,     0,     0,     0,     0,
       0,  1117,     0,     0,  1118,     0,   825,     0,     0,     0,
     826,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   827,     0,     0,  1120,     0,     0,  1121,  1122,
    1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,     0,
       0,     0,  2545,   811,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   828,     0,     0,     0,     0,     0,  1120,
       0,     0,  1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,
    1128,  1129,     0,     0,     0,     0,  2638,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1119,
       0,     0,   829,     0,     0,     0,   813,   830,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   831,     0,
       0,     0,     0,     0,   832,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   833,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1120,   857,   815,  1121,
    1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,
       0,  1273,    89,    90,    91,    92,    93,    94,    95,    96,
     858,    97,    98,    99,   859,   860,   861,   862,   863,   864,
     865,   100,   101,   866,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   867,   114,   115,   116,
     117,   118,   119,   868,   869,   120,   121,   122,   123,   124,
     870,   125,   126,   127,   128,   129,   871,   130,   872,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   873,   140,
     141,   142,   143,   144,   145,   874,   146,   147,   148,   149,
     875,   876,   877,   150,   878,   879,   880,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   881,   161,   882,
     162,   163,   164,   165,   166,   167,   883,   168,   169,   170,
     171,   172,   884,   885,   173,   174,   175,   176,   177,   886,
     178,   179,   180,   887,   181,   182,   183,   888,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   889,   194,
     890,   195,   196,   197,   198,   891,   199,   892,   200,   201,
     893,   202,   203,   204,   205,   206,   207,   894,   208,   895,
     209,   210,   896,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   897,   222,   223,   224,   225,   226,
     227,   898,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   899,   237,   900,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   901,   902,   248,   249,   250,   251,
     903,   252,   253,   254,   904,   905,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   906,   281,   282,   283,   284,   907,   285,   286,
     287,   288,   289,   290,   908,   291,   292,   909,   910,   293,
     294,   295,   911,   912,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   913,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   914,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   915,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   916,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   917,   363,   364,   365,   366,
     367,   918,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   919,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   920,   391,   392,   921,
     393,   394,   395,   396,   397,   398,   399,   922,   400,   401,
     923,   924,   402,   403,   404,   405,   406,   925,   407,   408,
     409,   410,   411,   412,   413,   926,   927,   414,   415,   416,
     417,   418,   928,   929,   419,   420,   421,   422,   423,   424,
     425,   930,   426,   427,   428,   429,   430,   431,   931,   932,
     432,   933,   934,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   478,     0,     0,     0,     0,     0,
       0,     0,     0,   935,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   371,   372,     0,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,     0,   393,     0,   395,
     396,   397,   398,   399,     0,   400,   401,     0,     0,   402,
     403,   404,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   638,   981,   522,     0,     0,     0,   663,     0,     0,
    1958,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,   130,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,     0,     0,     0,   150,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,  1153,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   982,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   281,   282,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,   983,     0,   293,   294,   295,     0,     0,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,     0,   393,   394,   395,   396,   397,   398,
     399,     0,   400,   401,     0,     0,   402,   403,   404,   405,
     406,   984,   407,   408,   409,   410,   411,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,     0,   426,   427,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   638,   981,
     522,     0,     0,     0,   663,   985,   986,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,   130,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,     0,     0,     0,   150,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,  1155,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   982,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   281,   282,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,   983,     0,
     293,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   400,
     401,     0,     0,   402,   403,   404,   405,   406,   984,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,   427,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   638,   981,   522,     0,     0,
       0,   663,   985,   986,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,   130,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,     0,     0,
       0,   150,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   982,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   281,   282,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   983,     0,   293,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,   394,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,   984,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,   427,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,     0,     0,  1099,     0,     0,  1100,     0,   985,
     986,  1101,  1102,  1103,     0,     0,     0,     0,     0,     0,
       0,     0,  1099,     0,     0,  1100,     0,     0,  1104,  1101,
    1102,  1103,  1541,     0,     0,     0,  1106,     0,     0,     0,
       0,     0,     0,  1107,     0,     0,  1104,     0,     0,     0,
       0,     0,     0,     0,  1106,     0,     0,     0,     0,     0,
       0,  1107,     0,     0,  1099,     0,     0,  1100,  1108,     0,
       0,  1101,  1102,  1103,     0,     0,     0,     0,     0,     0,
       0,     0,  1099,     0,     0,  1100,  1108,     0,  1104,  1101,
    1102,  1103,     0,     0,     0,     0,  1106,     0,     0,     0,
       0,     0,     0,  1107,     0,     0,  1104,     0,     0,  1714,
       0,     0,     0,     0,  1106,     0,     0,     0,  1542,     0,
       0,  1107,     0,     0,     0,     0,     0,     0,  1108,     0,
       0,     0,     0,  1099,     0,     0,  1100,     0,     0,     0,
    1101,  1102,  1103,     0,     0,     0,  1108,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1104,     0,     0,
       0,     0,     0,     0,     0,  1106,     0,  1109,     0,     0,
       0,     0,  1107,     0,     0,  1754,     0,     0,     0,     0,
    1755,  1110,     0,     0,     0,  1109,  1111,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1108,     0,  1110,
       0,     0,     0,     0,  1111,     0,     0,  1112,  1113,     0,
       0,     0,     0,     0,     0,     0,  2600,     0,     0,     0,
       0,  1114,     0,     0,     0,  1112,  1113,  1109,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1114,
       0,  1110,     0,     0,     0,  1109,  1111,     0,     0,     0,
       0,     0,     0,     0,  1115,     0,     0,  1116,     0,  1110,
       0,     0,     0,     0,  1111,     0,     0,  1112,  1113,     0,
       0,  1117,  1115,     0,  1118,  1116,     0,     0,     0,     0,
       0,  1114,     0,     0,     0,  1112,  1113,     0,     0,  1117,
       0,     0,  1118,     0,     0,     0,  1109,     0,     0,  1114,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1110,     0,     0,     0,  1115,  1111,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1117,  1115,     0,  1118,  1116,  1112,  1113,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1117,
    1114,     0,  1118,     0,     0,     0,  2601,     0,     0,  1119,
       0,     0,     0,     0,     0,   808,     0,     0,     0,     0,
       0,   809,     0,     0,     0,     0,     0,  1119,   821,     0,
       0,     0,     0,  1115,     0,     0,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   822,     0,     0,
    1117,     0,     0,  1118,     0,     0,     0,     0,     0,  1099,
       0,     0,  1100,     0,     0,  1543,  1101,  1102,  1103,  1119,
    1728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1104,     0,     0,  1763,  1119,     0,     0,
       0,  1106,     0,     0,     0,     0,     0,   823,  1107,     0,
       0,     0,     0,     0,     0,     0,  1120,     0,     0,  1121,
    1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,     0,
       0,     0,     0,  1108,  1120,     0,   810,  1121,  1122,  1123,
       0,  1124,  1125,  1126,  1127,  1128,  1129,     0,  1119,     0,
    1099,     0,     0,  1100,     0,     0,     0,  1101,  1102,  1103,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1104,     0,  1120,     0,     0,  1121,
    1122,  1123,  1106,  1124,  1125,  1126,  1127,  1128,  1129,  1107,
       0,     0,     0,     0,  1120,   824,     0,  1121,  1122,  1123,
       0,  1124,  1125,  1126,  1127,  1128,  1129,     0,     0,     0,
       0,     0,     0,     0,  1108,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1109,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   825,     0,  1120,  1110,   826,  1121,  1122,
    1123,  1111,  1124,  1125,  1126,  1127,  1128,  1129,     0,   827,
       0,     0,     0,     0,     0,     0,     0,  1099,     0,     0,
    1100,     0,  1112,  1113,  1101,  1102,  1103,     0,     0,     0,
     811,     0,     0,     0,     0,  1099,  1114,     0,  1100,     0,
     828,  1104,  1101,  1102,  1103,     0,     0,     0,     0,  1106,
       0,     0,     0,     0,     0,     0,  1107,     0,  1768,  1104,
       0,     0,     0,  1109,     0,     0,     0,  1106,     0,  1115,
       0,     0,  1116,     0,  1107,     0,     0,  1110,     0,  1605,
       0,  1108,  1111,   813,   830,     0,  1117,  1099,     0,  1118,
    1100,     0,     0,     0,  1101,  1102,  1103,     0,     0,  1108,
       0,     0,     0,  1112,  1113,   831,     0,     0,     0,     0,
       0,  1606,     0,     0,     0,     0,     0,  1114,     0,  1106,
       0,     0,     0,     0,     0,   833,  1107,     0,     0,  1099,
       0,     0,  1100,     0,     0,     0,  1101,  1102,  1103,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1099,
    1115,  1108,  1100,  1116,     0,     0, -1496, -1496, -1496,     0,
       0,  1106,     0,     0,     0,     0,     0,  1117,  1107,     0,
    1118,     0,     0,     0,  1119,   815,  1099,     0,     0,  1100,
    1109,  1106,     0,     0,     0,     0,     0,     0,  1107,     0,
       0,     0,     0,  1108,  1110,     0,     0,     0,  1109,  1111,
       0,     0,     0,     0,     0,     0,     0,     0,  1106,     0,
       0,     0,  1110,  1108,     0, -1496,     0,  1111,     0,     0,
    1112,  1113,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1114,     0,     0,     0,  1112,  1113,
    1108,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1109,     0,  1114,     0,     0,  1119,     0,     0,     0,     0,
       0,     0,     0,     0,  1110,     0,     0,  1115,     0,  1111,
    1116,  1120,     0,     0,  1121,  1122,  1123,     0,  1124,  1125,
    1126,  1127,  1128,  1129,  1117,  1115,  1099,  1118,  1116,  1100,
    1112,  1113,  1109,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1117,     0,  1114,  1118,  1110,     0,     0,  2032,
       0,  1111,  1109,     0,     0,     0,     0,     0,  1106,     0,
       0,     0,     0,     0,     0, -1496,  1110,     0,     0,     0,
       0,  1111, -1496, -1496,     0,     0,     0,  1115,     0, -1496,
    1116,     0,     0,     0,     0,     0,  1114,     0,     0,     0,
    1108,     0,  1120, -1496,  1117,  1121,  1122,  1123, -1496,  1124,
    1125,  1126,  1127,  1128,  1129,     0,  1114,     0,     0,     0,
       0,     0,  1119,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1496,     0,     0,     0,     0,     0,     0,     0,
    1119,     0,     0, -1496,     0,     0,  1117,     0,     0,     0,
       0,     0,  1976,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,     0,     0,  2212,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1119,  1117,     0,     0,     0,     0,     0, -1496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1496,     0,     0,     0,     0, -1496,  1120,
       0,     0,  1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,
    1128,  1129,     0,     0,  1119,     0,     0,  1120,     0,     0,
    1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,  1128,  1129,
       0,     0,     0, -1496,  1119,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1496,     0,     0,     0,     0,     0,     0,     0,  1120,
       0,     0,  1121,  1122,  1123,     0,  1124,  1125,  1126,  1127,
    1128,  1129,     0,  1117,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1120,     0,     0,  1121,  1122,  1123,     0,  1124,  1125,
    1126,  1127,  1128,  1129,     0,     0,     0,     0,     0,     0,
       0,  1120,     0,     0, -1496, -1496, -1496,     0,  1124,  1125,
    1126,  1127,  1128,  1129,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1496,     0,
       0,     0,     0,     0,     0,  1124,  1125,  1126,  1127,  1128,
    1129, -1496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   857, -1496,  1452,
       0,     0,     0,     0,     0,  1124,  1125,  1126,  1127,  1128,
    1129,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     858,    97,    98,    99,   859,   860,   861,   862,   863,   864,
     865,   100,   101,   866,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   867,   114,   115,   116,
     117,   118,   119,   868,   869,   120,   121,   122,   123,   124,
     870,   125,   126,   127,   128,   129,   871,   130,   872,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   873,   140,
     141,   142,   143,   144,   145,   874,   146,   147,   148,   149,
     875,   876,   877,   150,   878,   879,   880,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   881,   161,   882,
     162,   163,   164,   165,   166,   167,   883,   168,   169,   170,
     171,   172,   884,   885,   173,   174,   175,   176,   177,   886,
     178,   179,   180,   887,   181,   182,   183,   888,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   889,   194,
     890,   195,   196,   197,   198,   891,   199,   892,   200,   201,
     893,   202,   203,   204,   205,   206,   207,   894,   208,   895,
     209,   210,   896,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   897,   222,   223,   224,   225,   226,
     227,   898,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   899,   237,   900,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   901,   902,   248,   249,   250,   251,
     903,   252,   253,   254,   904,   905,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   906,   281,   282,   283,   284,   907,   285,   286,
     287,   288,   289,   290,   908,   291,   292,   909,   910,   293,
     294,   295,   911,   912,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   913,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   914,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   915,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   916,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   917,   363,   364,   365,   366,
     367,   918,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   919,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   920,   391,   392,   921,
     393,   394,   395,   396,   397,   398,   399,   922,   400,   401,
     923,   924,   402,   403,   404,   405,   406,   925,   407,   408,
     409,   410,   411,   412,   413,   926,   927,   414,   415,   416,
     417,   418,   928,   929,   419,   420,   421,   422,   423,   424,
     425,   930,   426,   427,   428,   429,   430,   431,   931,   932,
     432,   933,   934,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   857,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,   858,    97,    98,
      99,   859,   860,   861,   862,   863,   864,   865,   100,   101,
     866,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   867,   114,   115,   116,   117,   118,   119,
     868,   869,   120,   121,   122,   123,   124,   870,   125,   126,
     127,   128,   129,   871,   130,   872,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   873,   140,   141,   142,   143,
     144,   145,   874,   146,   147,   148,   149,   875,   876,   877,
     150,   878,   879,   880,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   881,   161,   882,   162,   163,   164,
     165,   166,   167,   883,   168,   169,   170,   171,   172,   884,
     885,   173,   174,   175,   176,   177,   886,   178,   179,   180,
     887,   181,   182,   183,   888,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   889,   194,   890,   195,   196,
     197,   198,   891,   199,   892,   200,   201,   893,   202,   203,
     204,   205,   206,   207,   894,   208,   895,   209,   210,   896,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   897,   222,   223,   224,   225,   226,   227,   898,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   899,   237,
     900,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   901,   902,   248,   249,   250,   251,   903,   252,   253,
     254,   904,   905,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   906,
     281,   282,   283,   284,   907,   285,   286,   287,   288,   289,
     290,   908,   291,   292,   909,   910,   293,   294,   295,   911,
     912,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   913,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   914,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   915,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   916,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   917,   363,   364,   365,   366,   367,   918,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   919,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   920,   391,   392,   921,   393,   394,   395,
     396,   397,   398,   399,   922,   400,   401,   923,   924,   402,
     403,   404,   405,   406,   925,   407,   408,   409,   410,   411,
     412,   413,   926,   927,   414,   415,   416,   417,   418,   928,
     929,   419,   420,   421,   422,   423,   424,   425,   930,   426,
     427,   428,   429,   430,   431,   931,   932,   432,   933,   934,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   857,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
    1590,    94,    95,    96,   858,    97,    98,    99,   859,   860,
     861,   862,   863,   864,   865,   100,   101,   866,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     867,   114,   115,   116,   117,   118,   119,   868,   869,   120,
     121,   122,   123,   124,   870,   125,   126,   127,   128,   129,
     871,   130,   872,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   873,   140,   141,   142,   143,   144,   145,   874,
     146,   147,   148,   149,   875,   876,   877,   150,   878,   879,
     880,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   881,   161,   882,   162,   163,   164,   165,   166,   167,
     883,   168,   169,   170,   171,   172,   884,   885,   173,   174,
     175,  1591,   177,   886,   178,   179,   180,   887,   181,   182,
     183,   888,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   889,   194,   890,   195,   196,   197,   198,   891,
     199,   892,   200,   201,   893,   202,   203,   204,   205,   206,
     207,   894,   208,   895,   209,   210,   896,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   897,   222,
     223,   224,   225,   226,   227,   898,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   899,   237,   900,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   901,   902,
     248,   249,   250,   251,   903,   252,   253,   254,   904,   905,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   906,   281,   282,   283,
     284,   907,   285,   286,   287,   288,   289,   290,   908,   291,
     292,   909,   910,   293,   294,   295,   911,   912,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   913,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   914,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   915,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   916,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   917,
     363,   364,   365,   366,   367,   918,  1592,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   919,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     920,   391,   392,   921,   393,   394,   395,   396,   397,   398,
     399,   922,   400,   401,   923,   924,   402,   403,   404,   405,
     406,   925,   407,   408,   409,   410,   411,   412,   413,   926,
     927,   414,   415,   416,   417,   418,   928,   929,   419,   420,
     421,   422,   423,   424,   425,   930,   426,   427,   428,   429,
     430,   431,   931,   932,   432,   933,   934,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,    88,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,   669,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   672,     0,   673,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   674,   675,   676,   677,   678,   679,   680,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   686,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   692,   693,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   281,   282,   283,   284,     0,   698,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,   298,   299,   300,
     701,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   702,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   705,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   707,     0,   391,   392,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   400,
     401,     0,     0,   402,   403,   710,   405,   711,     0,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,   713,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,   427,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   638,     0,   522,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,   130,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,     0,     0,
       0,   150,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   982,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   281,   282,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,   983,     0,   293,   294,   295,
       0,     0,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,   394,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,   984,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,   427,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   638,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     3,
       4,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,   130,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,     0,     0,     0,   150,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   281,   282,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,     0,   393,   394,   395,   396,   397,
     398,   399,     0,   400,   401,     0,     0,   402,   403,   404,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,     0,   426,   427,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,    88,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   281,   282,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,     0,   393,   394,   395,   396,   397,   398,   399,     0,
     400,   401,     0,     0,   402,   403,   404,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   426,   427,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,  1211,
     125,   126,   127,   128,   129,     0,     0,  1212,   131,   132,
     133,   134,   135,     0,   137,   138,   139,  1213,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,  1214,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1215,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,  1216,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,     0,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,  1217,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,  1211,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,  1213,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,  1214,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,  1653,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,  1216,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,  1217,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     3,     4,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   371,   372,
       0,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,     0,   393,     0,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   404,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     479,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   480,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   371,   372,     0,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,     0,
     393,     0,   395,   396,   397,   398,   399,     0,   400,   401,
       0,     0,   402,   403,   404,   405,   406,     0,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,   527,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   371,   372,     0,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,     0,   393,     0,   395,
     396,   397,   398,   399,     0,   528,   401,     0,     0,   529,
     403,   404,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,   547,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   371,
     372,     0,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,     0,   393,     0,   395,   396,   397,   398,
     399,     0,   400,   401,     0,     0,   402,   403,   404,   405,
     406,     0,   407,   408,   409,   410,   411,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,   580,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   371,   372,     0,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
       0,   393,     0,   395,   396,   397,   398,   399,     0,   581,
     401,     0,     0,   582,   403,   404,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   589,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,   547,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,     0,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,     0,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   478,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,   617,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     371,   372,     0,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,     0,   393,     0,   395,   396,   397,
     398,   399,     0,   400,   401,     0,     0,   402,   403,   404,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   478,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,  1503,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,  1504,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   371,   372,     0,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,  1505,   393,     0,   395,  1506,   397,  1507,   399,     0,
     400,   401,     0,     0,   402,   403,   404,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,  1508,   417,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,  2053,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,     0,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,  2067,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     478,     0,  2226,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   371,   372,
       0,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,     0,   393,     0,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   404,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   371,   372,     0,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,     0,
     393,     0,   395,   396,   397,   398,   399,     0,   400,   401,
       0,     0,   402,   403,   404,   405,   406,     0,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     539,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,   355,   540,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   541,     0,   368,
     369,   370,   371,   372,     0,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,     0,   393,     0,   395,
     396,   397,   398,   399,     0,   542,   401,     0,     0,   402,
     403,   404,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   555,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   371,
     372,     0,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,     0,   393,     0,   395,   396,   397,   398,
     399,     0,   400,   401,     0,     0,   402,   403,   404,   405,
     406,     0,   407,   408,   409,   410,   411,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   584,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   371,   372,     0,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
       0,   393,     0,   395,   396,   397,   398,   399,     0,   400,
     401,     0,     0,   402,   403,   404,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   587,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,     0,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,     0,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   478,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   591,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     371,   372,     0,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,     0,   393,     0,   395,   396,   397,
     398,   399,     0,   400,   401,     0,     0,   402,   403,   404,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   478,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     609,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   371,   372,     0,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,     0,   393,     0,   395,   396,   397,   398,   399,     0,
     400,   401,     0,     0,   402,   403,   404,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   625,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,     0,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   629,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   632,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   371,   372,
       0,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,     0,   393,     0,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   404,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
       0,   349,   350,   351,   352,   353,   354,   355,   540,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   371,   372,     0,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,     0,
     393,     0,   395,   396,   397,   398,   399,     0,   542,   401,
       0,     0,   402,   403,   404,   405,   406,     0,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   478,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   950,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   284,     0,   285,   286,   287,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,   297,     0,   299,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   371,   372,     0,   374,   375,   376,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,     0,   393,     0,   395,
     396,   397,   398,   399,     0,   400,   401,     0,     0,   402,
     403,   404,   405,   406,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   478,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   952,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
       0,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     284,     0,   285,   286,   287,   288,   289,   290,     0,   291,
     292,     0,     0,   293,   294,   295,     0,     0,   296,   297,
       0,   299,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,     0,   346,   347,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   371,
     372,     0,   374,   375,   376,   377,     0,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,     0,   393,     0,   395,   396,   397,   398,
     399,     0,   400,   401,     0,     0,   402,   403,   404,   405,
     406,     0,   407,   408,   409,   410,   411,   412,   413,     0,
       0,   414,   415,   416,   417,   418,     0,     0,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   428,   429,
     430,   431,     0,     0,   432,     0,     0,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   478,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
    1169,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,     0,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   284,     0,   285,
     286,   287,   288,   289,   290,     0,   291,   292,     0,     0,
     293,   294,   295,     0,     0,   296,   297,     0,   299,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
       0,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,     0,   346,
     347,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,     0,     0,   369,   370,   371,   372,     0,   374,
     375,   376,   377,     0,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
       0,   393,     0,   395,   396,   397,   398,   399,     0,   400,
     401,     0,     0,   402,   403,   404,   405,   406,     0,   407,
     408,   409,   410,   411,   412,   413,     0,     0,   414,   415,
     416,   417,   418,     0,     0,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   428,   429,   430,   431,     0,
       0,   432,     0,     0,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   478,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1302,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,     0,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   284,     0,   285,   286,   287,   288,
     289,   290,     0,   291,   292,     0,     0,   293,   294,   295,
       0,     0,   296,   297,     0,   299,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,     0,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   346,   347,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
       0,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,     0,   393,     0,
     395,   396,   397,   398,   399,     0,   400,   401,     0,     0,
     402,   403,   404,   405,   406,     0,   407,   408,   409,   410,
     411,   412,   413,     0,     0,   414,   415,   416,   417,   418,
       0,     0,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   428,   429,   430,   431,     0,     0,   432,     0,
       0,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   478,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,  1315,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,     0,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   284,     0,   285,   286,   287,   288,   289,   290,     0,
     291,   292,     0,     0,   293,   294,   295,     0,     0,   296,
     297,     0,   299,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,     0,   346,   347,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     371,   372,     0,   374,   375,   376,   377,     0,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,     0,   393,     0,   395,   396,   397,
     398,   399,     0,   400,   401,     0,     0,   402,   403,   404,
     405,   406,     0,   407,   408,   409,   410,   411,   412,   413,
       0,     0,   414,   415,   416,   417,   418,     0,     0,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   428,
     429,   430,   431,     0,     0,   432,     0,     0,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   478,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
    1574,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,     0,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   284,     0,
     285,   286,   287,   288,   289,   290,     0,   291,   292,     0,
       0,   293,   294,   295,     0,     0,   296,   297,     0,   299,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,     0,
     346,   347,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   371,   372,     0,
     374,   375,   376,   377,     0,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,     0,   393,     0,   395,   396,   397,   398,   399,     0,
     400,   401,     0,     0,   402,   403,   404,   405,   406,     0,
     407,   408,   409,   410,   411,   412,   413,     0,     0,   414,
     415,   416,   417,   418,     0,     0,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   428,   429,   430,   431,
       0,     0,   432,     0,     0,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   478,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1586,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,     0,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   284,     0,   285,   286,   287,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,   297,     0,   299,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   371,   372,     0,   374,   375,   376,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,     0,   393,
       0,   395,   396,   397,   398,   399,     0,   400,   401,     0,
       0,   402,   403,   404,   405,   406,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   478,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,  1588,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,     0,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   284,     0,   285,   286,   287,   288,   289,   290,
       0,   291,   292,     0,     0,   293,   294,   295,     0,     0,
     296,   297,     0,   299,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,     0,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,     0,   346,   347,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,     0,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,     0,   393,     0,   395,   396,
     397,   398,   399,     0,   400,   401,     0,     0,   402,   403,
     404,   405,   406,     0,   407,   408,   409,   410,   411,   412,
     413,     0,     0,   414,   415,   416,   417,   418,     0,     0,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     428,   429,   430,   431,     0,     0,   432,     0,     0,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     478,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,  2167,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,     0,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   284,
       0,   285,   286,   287,   288,   289,   290,     0,   291,   292,
       0,     0,   293,   294,   295,     0,     0,   296,   297,     0,
     299,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,     0,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
       0,   346,   347,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   371,   372,
       0,   374,   375,   376,   377,     0,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,     0,   393,     0,   395,   396,   397,   398,   399,
       0,   400,   401,     0,     0,   402,   403,   404,   405,   406,
       0,   407,   408,   409,   410,   411,   412,   413,     0,     0,
     414,   415,   416,   417,   418,     0,     0,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   428,   429,   430,
     431,     0,     0,   432,     0,     0,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   478,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   284,     0,   285,   286,
     287,   288,   289,   290,     0,   291,   292,     0,     0,   293,
     294,   295,     0,     0,   296,   297,     0,   299,     0,   301,
     302,   303,   304,   305,   306,   307,     0,   309,   310,     0,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,     0,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,     0,   346,   347,
       0,   349,   350,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   371,   372,     0,   374,   375,
     376,   377,     0,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,     0,
     393,     0,   395,   396,   397,   398,   399,     0,   400,   401,
       0,     0,   402,   403,   404,   405,   406,     0,   407,   408,
     409,   410,   411,   412,   413,     0,     0,   414,   415,   416,
     417,   418,     0,     0,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   428,   429,   430,   431,     0,     0,
     432,     0,     0,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,     0,  1005,
     111,  1006,  1007,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,  1008,  1009,   124,     0,   125,   126,
     127,   128,     0,     0,   130,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,     0,     0,     0,
     150,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,  1010,  1011,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   684,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,     0,
     189,   190,   191,   192,     0,     0,   194,     0,   195,   196,
    1012,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,     0,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,     0,   231,   232,   233,   234,  1013,  1014,     0,  1015,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,  1016,   275,  1017,   277,   278,   279,     0,     0,
     281,   282,   283,   284,     0,     0,   286,  1018,   288,   289,
     290,     0,   291,   292,     0,     0,   293,   294,   295,     0,
       0,   296,     0,   298,   299,   300,     0,   302,   303,   304,
     305,   306,   307,   308,   309,   310,     0,   311,   312,     0,
     314,   315,     0,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,  1019,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,     0,   346,   347,   348,   349,   350,
     351,     0,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,     0,   368,
    1020,   370,   371,   372,   373,   374,   375,  1021,   377,     0,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,     0,   391,   392,     0,   393,   394,   395,
     396,   397,   398,   399,     0,  1022,  1023,     0,     0,   402,
     403,     0,   405,     0,     0,   407,   408,   409,   410,   411,
     412,   413,     0,     0,   414,   415,   416,   417,   418,     0,
       0,   419,   420,   421,   422,   423,     0,  1024,     0,   426,
     427,   428,   429,   430,   431,     0,     0,   432,     0,     0,
     433,   434,   435,   436,   437,   438,  1004,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   450,   451,   452,
     453,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
       0,  1005,   111,  1006,  1007,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,  1008,  1009,   124,     0,
     125,   126,   127,   128,     0,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,  1010,  1011,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   684,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,     0,   189,   190,   191,   192,     0,     0,   194,     0,
     195,   196,  1012,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,     0,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,     0,   231,   232,   233,   234,  1013,  1014,
       0,  1015,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,  1016,   275,  1017,   277,   278,   279,
       0,     0,   281,   282,   283,   284,     0,     0,   286,  1018,
     288,   289,   290,     0,   291,   292,     0,     0,   293,   294,
     295,     0,     0,   296,     0,   298,   299,   300,     0,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,     0,   314,   315,     0,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,  1019,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,     0,   346,   347,   348,
     349,   350,   351,     0,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
       0,   368,     0,   370,   371,   372,   373,   374,   375,  1021,
     377,     0,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,     0,   391,   392,     0,   393,
     394,   395,   396,   397,   398,   399,     0,  1022,  1023,     0,
       0,   402,   403,     0,   405,     0,     0,   407,   408,   409,
     410,   411,   412,   413,     0,     0,   414,   415,   416,   417,
     418,     0,     0,   419,   420,   421,   422,   423,     0,  1024,
       0,   426,   427,   428,   429,   430,   431,     0,     0,   432,
       0,     0,   433,   434,   435,   436,   437,   438,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   450,
     451,   452,   453
};

static const yytype_int16 yycheck[] =
{
       6,   588,   505,    33,    55,   506,   538,   603,   835,   644,
     681,   682,     0,   550,   575,     0,    16,     0,  1072,   821,
    1038,   978,     0,   808,   595,   833,   644,   948,   699,  1515,
     709,   720,   948,   651,   644,  1584,     0,     6,   554,   948,
     948,   810,   510,   847,    28,  1417,  1418,   804,  1061,   512,
    1422,   630,    16,  1590,  1474,  1592,  1061,     0,   512,  1061,
      57,  1854,     6,   597,   813,  1926,  1096,  1097,  1535,   838,
      57,    32,  1934,  1902,   588,   652,   590,  1813,   592,     5,
    1786,  1941,  1040,     5,     5,  1457,  1458,    13,    14,     3,
       5,    13,    14,    49,   511,    11,    72,  1144,    13,    14,
    1190,    85,   512,     5,    66,    57,     5,     9,  1819,     5,
    2171,     5,    57,     9,   732,   970,    30,    31,   634,     5,
    1192,     5,  1581,  2177,     5,     5,    39,     5,     5,   166,
      57,    22,   595,    81,     5,     0,   754,     9,   756,   757,
     608,   595,   167,     4,   754,  2174,   135,    57,     9,    39,
     115,  2244,     9,     0,  1100,     3,     4,     5,   105,    26,
     118,     9,   209,   517,  2163,  1843,    33,    26,  2310,    74,
      26,   166,  2339,    11,    33,   572,   235,   125,    19,    84,
      26,   644,   572,   271,   721,   113,   273,    33,   651,    74,
     644,  1650,   143,   279,  2425,  1818,   279,   651,   118,    84,
    2125,   163,    40,   719,   822,   215,   115,   825,   826,    11,
     105,   748,   822,   133,   120,   825,   826,   318,  1020,   340,
    1756,    77,    26,     4,  1873,   259,    91,   761,     9,    85,
     262,   648,  1691,  1692,    72,    58,    36,  2481,    40,   118,
     158,  2389,   133,    66,    91,   203,   256,   113,    11,   156,
      11,   165,  2537,   167,  2539,   235,   207,   419,   114,   167,
     104,  2267,   116,   106,   116,   113,   440,   435,   845,   846,
      72,  2325,   106,   128,   775,  1221,  2507,    40,  2371,   419,
     474,     5,  2288,  2562,   478,   344,   331,   803,   462,    74,
     851,   199,   160,   756,   757,   258,    11,  1946,   313,    84,
     263,   219,   756,   757,   314,    22,   214,  1727,  2169,    72,
      47,    72,   480,   358,   476,   223,   351,   183,  2024,   226,
    2605,  2057,   122,  1872,   128,  2061,   341,   183,   279,   256,
     431,  2575,   186,   365,   186,   263,   476,  2048,   194,  1010,
    1011,  2620,   290,   305,  1023,   476,    22,  1018,    11,   312,
     385,   361,    28,    11,   263,   476,   415,  2282,    75,   955,
     208,   256,  2593,  1735,  1736,  1737,  1738,   985,   986,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,   956,
     332,   229,    40,   417,   304,  2533,   277,   332,   476,   476,
     425,     0,   258,  2560,   480,   166,   240,   480,   465,   970,
     244,   396,  2544,  2409,   801,   332,   229,   417,   273,   476,
    1869,   801,  1871,   268,    72,  2093,   770,   476,  1790,  1791,
    1474,  1367,   332,  2422,  2047,   996,   273,  1212,   336,  2522,
     479,   358,   300,   480,   171,   415,  1054,  1055,   385,   330,
     331,   476,   390,   480,  1062,   434,  1064,  1065,   185,  1985,
     412,   476,   158,   190,  1309,  2509,   421,   133,  1548,   417,
     411,  1079,   965,  1081,  1268,   968,  1293,   358,   333,   382,
      82,   972,    84,   976,    86,   463,  1094,  1549,   463,  2508,
     463,  2310,   512,   670,   671,   463,   333,  1517,   225,  1543,
    1537,   396,   382,  2554,  2200,  2231,   476,  1956,   474,   463,
    2236,   368,   478,  2239,   375,   376,   512,   970,   695,   368,
    1044,   396,   512,   419,  2225,   429,   970,   980,   374,   440,
     476,   377,   368,   480,   575,   593,   980,  1043,   480,   428,
     465,   537,   538,   996,  1105,   480,  1052,  1341,   417,   167,
    1056,   462,   996,   478,    63,    64,   440,   511,   554,   255,
     476,  1088,   552,  2102,   476,   476,   472,  1091,  1092,  1075,
    1076,   476,   979,  2424,  1141,   562,  2428,  1525,   462,  2429,
     980,  1189,  1190,   438,   476,   562,   564,   476,  2115,   564,
     476,   564,   476,   567,   652,   653,   564,   593,   594,   595,
     476,   438,   476,   474,   555,   476,   476,   478,   476,   476,
     564,   277,   145,   475,   156,  1108,   467,   468,   429,  1143,
     467,   468,   477,    91,   479,   172,   398,   328,   384,   467,
     468,   564,    26,  1241,  2091,   396,   363,  1729,   634,  2365,
     477,  1241,   479,  1251,   472,   389,  1254,   391,   644,  2345,
     147,  1251,  1105,   476,  1254,   651,   652,   653,   191,   440,
    1237,  1105,   418,  2514,   330,  1757,   235,   438,  1229,   441,
     193,   128,   668,   291,  1512,   467,   468,   469,   470,   471,
     472,   462,   229,  1727,   226,  2095,    13,    14,  1526,   520,
     521,   462,   358,   241,   648,   476,   467,   468,  1701,   719,
     696,  1326,    74,   128,   465,  1652,  1210,  1702,  1369,   540,
    1702,  1703,    84,  1264,  1265,  1266,  2165,   478,  1326,   715,
     716,   717,   401,   719,  1660,  2544,  1326,   438,   270,   154,
    2269,  1339,   215,  1237,   128,  1507,  1508,  1306,   431,   235,
       4,  1310,   347,   739,  1313,     9,   364,    29,  1309,  1357,
       4,   462,  1256,  1773,  1247,     9,   422,  1261,   476,  1252,
     756,   757,  1441,   821,   469,   470,   471,   472,  2619,   128,
     476,    53,  1519,   256,  1227,   344,  1229,   471,  1714,   193,
     213,     4,   476,  1227,   478,  1229,     9,   845,   846,   847,
     459,  1608,   788,  2576,  2577,   154,   792,   793,  1734,   786,
     787,   258,   789,    30,    31,   115,   780,   803,   478,   786,
     787,   268,   789,   644,   467,   468,   469,   470,   471,   472,
     651,   469,   470,   471,   472,   821,  1284,  1763,    13,    14,
     440,  1008,  1009,   258,   273,  2197,   156,  1631,   263,  2622,
    1017,   161,   389,   268,   391,   389,   415,   391,   344,   845,
     846,   847,   462,   459,   351,  2394,  1309,  1616,  1902,   235,
    1539,   469,   464,   837,    91,  1309,   476,  1373,   415,  1702,
    1703,  1704,  2399,  1326,   476,   166,   477,   147,   361,   480,
     165,  2224,  1326,   351,   340,   341,  1339,   197,   385,  1066,
    1067,   722,   242,   243,     5,  1339,   477,     8,   956,   480,
     480,   732,   351,    14,   263,   476,   226,   476,  1516,   268,
     340,   341,    23,   744,   653,  2258,    27,   385,  2280,   415,
     477,   477,  1661,   754,   480,   756,   757,  1666,   425,  1435,
     344,   477,   235,    11,   417,   209,   385,    15,   352,  1547,
    1548,   438,   476,    21,   156,   547,   256,    53,   258,   161,
     270,   213,    22,    31,    32,  1331,  1462,   425,    28,  1335,
     956,  1337,  1020,  1514,   477,   462,  1902,   480,   344,   477,
     438,   385,   480,  1811,   970,  1813,   425,   579,   403,   476,
     476,   476,  2344,   478,   980,    22,   113,    22,   413,   438,
     980,    28,   459,    28,   462,  1501,  2339,   148,   348,   349,
     996,  2477,  1949,   477,   318,    83,   480,    35,   476,   326,
     612,   613,   614,   462,   226,   754,  1927,   431,  1587,   477,
    1589,  1927,   480,   148,  1020,   979,    54,   476,  1927,  1927,
    1802,  1803,  1804,  1805,   477,   246,   247,   480,   352,   415,
     477,   344,  1100,   471,   403,   148,   477,  1043,   476,   480,
     478,  2095,   476,  1049,   413,   148,  1052,  1682,   270,   258,
    1056,  1647,  1040,   133,   431,  1040,  1883,  1040,   340,   341,
    2609,   385,  1040,    66,  1070,   476,   104,  1073,  1074,  1075,
    1076,   351,   821,  1141,  1882,  2561,  1040,  1083,  1084,   442,
    1698,  1699,  1761,  1762,    80,  1870,   133,  1705,   133,  1095,
     476,   438,  2578,   440,  1100,  1101,  1102,  1103,  1104,  1105,
     148,  2454,   415,  1109,  1110,   385,   478,   431,  1114,  1680,
     113,   148,  1118,  1921,   351,  1121,  1122,  1123,  1124,  1125,
    1126,  1127,  1128,  1129,   148,  2478,  1132,  1590,  1591,  1592,
     273,  2149,  1881,  1139,  1883,  1141,  1590,  1591,  1592,   474,
     476,   476,   478,   478,  2630,   425,   758,   385,   385,   286,
     340,   341,  1841,  1221,   192,   389,  1162,   391,   438,  1159,
     348,   349,   477,   476,   318,   480,   476,   170,  1434,   781,
    1436,  1437,  1675,   235,  1180,   477,    35,   477,   480,  1167,
     480,   224,   462,  1189,  1190,     5,   477,  2133,   425,   480,
     477,   477,   429,   480,   480,   807,   476,   277,   352,    22,
    1268,   438,   240,   756,   757,    28,   244,  2560,   820,  2057,
     389,   476,   391,  2061,   351,  1221,     5,  1680,   256,  1682,
    1061,  1227,   476,  1229,   477,   462,  1680,   480,  1682,   841,
     277,   385,   277,   161,   477,   477,  1770,   480,   480,   476,
     569,   477,   571,     3,   480,     5,   326,   476,   385,   287,
     330,   477,  1768,   476,   480,   258,  2310,   143,     0,  2062,
     263,  2064,  1268,   439,   477,  1271,  1272,   480,  1274,   477,
     156,  1020,   480,  1341,    16,   161,   476,   431,   358,   326,
     301,   326,   344,   330,  1902,   330,  1823,   539,   425,   541,
    2308,    33,  1902,   331,   476,  1301,   181,   182,   476,  1367,
       5,   438,   305,  1309,  2131,     5,   476,   476,  1149,  1297,
     133,   358,   476,   358,   352,    57,  1850,   320,  2103,   477,
    1326,   207,   480,     5,   477,   462,   477,   480,   477,   480,
    1901,   480,  1903,  1339,   372,  1341,   476,   949,  2140,   476,
     226,     5,   422,   477,  1962,   476,   480,   107,   108,   477,
     476,  1100,   480,   415,   476,   284,  1917,   242,   243,   477,
     477,  1367,   480,   480,  2310,   476,   978,  1373,  1374,  1948,
     209,   477,   476,  1379,   480,   422,  2224,   422,   480,   477,
     476,     6,   480,  2231,   270,   476,    11,    95,  2236,  1419,
      15,  2239,   480,   279,    35,    20,    21,    22,   477,   477,
      25,   480,   480,    28,   358,   477,    31,    32,   480,   412,
    2258,  1417,  1418,  1419,   476,   161,  1422,   477,   270,   507,
     480,   181,   182,   477,  2370,   161,   480,  2373,  1434,  1435,
    1436,  1437,  1462,   268,  1897,   476,  1442,   653,  1901,   477,
    1903,   477,   224,  1897,   480,   172,   396,  1901,   476,  1903,
      75,  1457,  1458,    84,   277,   480,  1462,    82,    83,    84,
      85,    86,   477,   348,   349,   480,   193,   555,   477,   396,
    1476,   480,  1221,  1479,    53,  1481,   477,   477,   477,   480,
     480,   480,   242,   243,    53,  1326,   246,   247,   249,  1330,
    2544,  2339,   396,   477,   477,  1501,   480,   480,  1339,   396,
    1530,   477,   229,   326,  2122,   482,  1512,   330,  2316,  2127,
     148,    91,  2122,   396,   438,   258,   476,  2365,   258,    92,
    1526,    35,    35,  2141,  2142,   411,  1138,   478,   480,   428,
     476,   476,    34,   476,  1540,   358,   434,  1525,   476,  2073,
    1525,     9,  1525,  1512,   394,   394,  1158,  1525,  1160,  1555,
    2082,   278,  2187,  2087,    11,  2134,  2135,  1526,    22,   480,
     394,  1525,   476,  1631,    28,   263,   476,  1573,  1512,   396,
     175,    22,   157,   166,   107,   108,   477,    28,   419,    35,
     476,   207,  1526,   361,  1590,  1591,  1592,   480,   348,   349,
     274,  1203,  1660,   215,   167,   476,   480,   215,  2544,   422,
     258,   215,   279,   477,   310,   821,  2454,     8,   271,   431,
      11,   476,   286,   148,    15,    16,    17,   148,  1367,   438,
     273,   258,   273,   258,    35,  1631,   199,    35,    34,   474,
    2478,    32,   474,   396,   396,   478,   476,   396,  2309,   396,
     653,   214,   166,   480,   477,   477,  1714,   477,   181,   182,
     223,   477,  2115,   477,  1660,   459,   477,   459,   459,   477,
     477,  2115,   389,   477,   391,   477,  1734,   477,   477,   133,
    1282,   477,   477,   166,  1680,    92,  1682,   351,   476,   252,
     396,   476,   133,  2301,  2302,   412,   774,   283,   415,   476,
    1678,   476,  2310,   425,   435,  1763,   456,   457,   435,   273,
    2310,   465,   274,   461,   274,  1711,   274,   417,  1714,   242,
     243,   385,  2560,   246,   247,  1721,   234,   396,  1786,  1725,
     258,   463,  1728,   148,  2187,   107,   108,   480,  1734,  1735,
    1736,  1737,  1738,  2187,   193,  1741,  1742,  1743,  1744,  1745,
    1746,  1747,  1748,  1749,  1750,   653,  2417,  1798,  1754,  1755,
     167,   425,   476,   148,   277,  1596,   148,  1763,   477,   477,
     396,   475,  1768,   336,   438,  2592,  1796,   396,  1774,   511,
     512,  1777,   396,  1779,   477,  2278,   396,   271,   477,   480,
    1786,  1787,   199,  1813,  1790,  1791,   273,    35,   462,  1795,
    1796,   438,  2353,   148,   148,   139,   263,   214,  1639,   181,
     182,   474,   476,   166,  1020,  1811,   223,  1813,   821,   477,
     211,    11,   161,   277,  2410,   348,   349,   477,  1824,   166,
     562,   477,   564,   477,  2395,   477,   277,  1833,   476,   435,
     385,   166,   462,   175,  1902,   252,   480,   477,   653,   464,
     424,  1682,  1811,  1849,  1813,   470,  1687,   333,  1689,   477,
     477,   476,  1693,  1694,    82,   480,   273,  2358,  2374,   476,
     242,   243,   326,   148,   246,   247,   330,  1811,   476,  1813,
    2371,   274,   170,   476,   275,   326,   406,   476,    35,   330,
     505,   506,   507,    78,  1100,   973,   480,   975,  2484,   475,
     419,  1897,   475,  1505,   358,  1901,  1902,  1903,   166,   477,
     477,   476,   214,   282,   214,   476,   648,   358,   387,   280,
     477,  1660,  2415,   821,   539,   477,   541,   477,   476,   336,
     476,    53,   547,   456,   457,   178,  2544,   438,   465,   195,
     555,   263,  2395,   184,  2544,  2451,  2399,   263,   465,    35,
     258,  2395,   567,   685,   396,  2399,   396,  2463,   438,   477,
     476,   105,   273,    35,   579,   476,  2024,  1945,   422,  2460,
     475,   166,  2549,   292,   476,  1714,   348,   349,   476,   214,
    1976,   422,  2543,   476,   437,    84,  2479,   719,   129,   477,
     320,   476,   215,   113,   476,  1734,    35,   612,   613,   614,
     148,    72,   120,   148,    35,   477,   341,    53,   341,    35,
     476,   476,   419,   480,   424,  1221,   821,  1020,    72,    35,
     183,    66,  2018,  2019,  1763,   419,   406,  2023,  2024,   276,
      66,   476,  2028,    35,   358,  2031,  2032,   480,   465,   263,
    2036,   183,   657,   476,  1646,   238,   406,  1786,    35,  1651,
    1652,  1653,   476,   476,   786,   787,   276,   789,   477,   276,
     476,  2057,   256,   273,   340,  2061,   327,   195,   273,  1671,
     273,  1902,   463,   464,   465,  2133,   467,   468,   469,   470,
     471,   472,  2140,    32,   456,   457,  2082,   476,   118,   417,
    2543,    21,  1897,  1924,   564,  1884,  1585,  1100,  2057,  2543,
    1235,  1847,  2061,  2086,   476,  2478,  2084,  2085,  2254,  2540,
    1930,   653,  2546,  2127,  2612,  2402,  2591,  2579,  2327,  2115,
    1579,   808,  1020,  2057,  2543,  1591,  1935,  2061,  2124,  1641,
    2589,  1901,  1576,  2541,  1645,  1213,  2187,  2133,  1924,   965,
    1680,   774,  2200,   758,  2140,  1223,   749,  1225,  1540,  1206,
    1228,   796,  1555,  1827,  2470,   795,  1234,  1180,  1236,   774,
     775,  1367,  1205,  1902,   168,   780,   781,   782,   172,  2078,
    1248,  1526,  1813,  2063,   798,  1253,  2048,  2366,  1811,  1257,
    1258,  1259,  1260,  2454,  1262,  1263,  2453,  2465,  2250,   193,
    2466,  2187,   807,   808,  2172,  1342,  1061,  2530,  1061,  1061,
    2531,  2197,  1100,  2518,  2200,   820,  1808,  1809,  1810,  1136,
    1543,  1480,  2208,  2209,  1375,  1020,  2212,  1477,  1221,  1274,
    2446,    66,   837,  1139,   980,   229,   841,    72,  2224,  1648,
    1339,   780,   236,  1159,  1848,  2231,  1160,    -1,    -1,    84,
    2236,    -1,    -1,  2239,  2240,    -1,  2077,   979,  2079,    -1,
    2246,  2247,  2310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1863,  2258,    -1,  2260,  2224,    -1,    -1,   113,    -1,
     115,    -1,  2231,    -1,   278,    -1,    -1,  2236,    -1,   821,
    2239,  2240,    -1,    -1,  2280,  2024,    -1,  2345,    -1,    -1,
    2224,    -1,    -1,    -1,    -1,  1100,    -1,  2231,    -1,  2258,
      -1,    -1,  2236,    -1,    -1,  2239,    -1,     8,  1040,    -1,
      11,    -1,  2370,    -1,  2310,  2373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1221,  2258,   170,  1928,    -1,    -1,   944,
      -1,    -1,    -1,    -1,   949,    -1,    -1,    -1,    -1,    40,
     344,  2319,    -1,  2339,   959,    -1,    47,  1949,  2344,  2345,
     965,    -1,   197,   968,  2374,    -1,  2187,   972,   973,    -1,
     975,   976,  2340,   978,  1367,  2361,    -1,    -1,    -1,  2365,
      -1,    72,    -1,    -1,  2370,    -1,    -1,  2373,  2374,  1111,
    2339,    -1,    -1,    -1,    -1,   389,    -1,   391,    -1,  2385,
      -1,    -1,    -1,    -1,  2133,    -1,    -1,    -1,    -1,  2395,
      -1,  2140,   143,  2399,  2400,  2339,  2365,    -1,   412,    -1,
      -1,   415,    -1,   258,    -1,   156,  1221,    -1,   263,    -1,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2365,    -1,    -1,    -1,  1167,    -1,   653,  2040,  2041,
    2042,  2043,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2427,
      -1,    -1,    -1,    -1,  1660,  2451,    -1,  1072,  2454,    -1,
     305,  2200,    -1,    -1,    -1,    -1,   207,  2463,    -1,  1367,
     171,    -1,    -1,    -1,  2470,   320,    -1,    -1,  1020,  2310,
      -1,    -1,  2478,    -1,   185,   226,  2544,    -1,    -1,   190,
      -1,    -1,    -1,  1108,    -1,  2454,  2474,    -1,    -1,    -1,
      -1,    -1,  2498,    -1,    -1,    -1,    -1,    -1,  1714,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2478,
    2454,  2517,  2518,  1138,   225,    -1,    -1,    -1,  1734,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,    -1,    -1,  1158,  2478,  1160,    -1,  2543,  2544,    -1,
      -1,    -1,     8,    -1,  1169,    11,  1171,  1763,  1100,    15,
      16,    17,  1367,    -1,  2560,  1297,  2562,   412,    -1,    -1,
      -1,  2310,    -1,    -1,   275,  2553,    32,    -1,    -1,    -1,
    1786,    -1,    -1,    -1,    -1,    -1,  1664,    -1,  1203,    -1,
      -1,    -1,  2423,    -1,    -1,    -1,    -1,  1212,  1213,    -1,
      -1,  2560,    -1,    -1,    -1,   821,  2345,    -1,  1223,  1224,
    1225,  1226,    -1,  1228,    -1,    -1,    -1,    -1,    -1,  1234,
      -1,  1236,    -1,    -1,  2620,  2621,  2560,    -1,    -1,    -1,
      -1,  2370,  1247,  1248,  2373,    -1,    -1,  1252,  1253,    -1,
      35,    -1,  1257,  1258,  1259,  1260,    -1,  1262,  1263,    -1,
      -1,    -1,    -1,    -1,    -1,    35,    -1,  1660,    -1,    54,
      -1,    -1,   363,    -1,    -1,    -1,    -1,  1282,  1283,    -1,
     411,    -1,    -1,    -1,    54,    -1,    -1,    -1,    -1,  1221,
    1295,    -1,    -1,    -1,    -1,  2287,     8,  1419,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,  1902,     0,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,   104,
      -1,  1714,    -1,  2544,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    32,    -1,   104,    -1,    -1,    -1,    -1,    -1,
    1462,  1734,    -1,   474,  2336,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1480,    -1,
      40,    -1,    -1,    -1,    -1,   211,    -1,    47,    -1,   460,
    1763,    -1,  1660,    -1,  1496,    -1,   467,   468,   469,   470,
     471,   472,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
    1512,    -1,    72,  1786,    -1,    -1,    -1,  1865,    91,    -1,
      -1,  2393,    -1,  1525,  1526,    -1,    -1,   192,  1530,    -1,
      -1,    -1,    -1,    -1,  1020,  2544,    -1,    -1,    -1,    -1,
      -1,  1889,   192,    -1,    -1,    -1,  1714,    -1,  2024,   275,
      -1,    -1,    -1,    -1,  2426,  1367,  1904,  1905,  1906,  1907,
    1908,  1909,  1910,  1911,  1912,  1913,  1734,    -1,   793,    -1,
     143,    -1,    -1,    -1,    -1,   240,    -1,    -1,    -1,   244,
      -1,   141,    -1,   156,    -1,  1660,    -1,    -1,   161,  1474,
     240,   256,    -1,   166,   244,  1763,    -1,    -1,   190,    -1,
      -1,    -1,   175,    -1,    -1,   178,   256,    -1,    -1,    -1,
      -1,   171,    -1,    -1,  1100,    -1,    -1,    -1,  1786,   211,
    1505,    -1,   287,    -1,    -1,   185,    -1,  1512,    -1,  1902,
     190,   211,    -1,    -1,   207,    -1,    -1,   287,    -1,  1714,
      -1,  1526,    -1,    -1,    -1,  1530,    -1,     8,  1533,    -1,
    1535,    -1,    -1,   226,    15,    16,    17,  2133,    -1,  1734,
      -1,    -1,    -1,    -1,  2140,   225,   331,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1678,    -1,    -1,    -1,
      -1,   331,    -1,   275,    -1,    -1,    -1,   352,  1763,    -1,
      -1,    -1,    -1,    -1,    -1,   275,  1581,   270,    -1,    -1,
     273,    -1,   352,    -1,    -1,    -1,   279,   372,    -1,    -1,
      -1,  1786,    -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,
      -1,    -1,   372,    -1,  2200,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1902,  1221,    -1,   463,   464,   465,
      -1,   467,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,  2024,    -1,    -1,    -1,    -1,  1641,    -1,    -1,    -1,
     333,  1646,    -1,    -1,    -1,  1650,  1651,  1652,  1653,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1664,
      -1,    -1,    -1,    -1,    -1,    -1,  1671,    -1,    -1,    -1,
    1675,    -1,    -1,    -1,  1796,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   363,    -1,    -1,  1691,  1692,    -1,  1811,
      -1,  1813,   385,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1902,     8,    -1,
      -1,    11,    -1,    -1,  2310,    15,    16,    17,   411,    -1,
      -1,    -1,  1727,    -1,    -1,    -1,    -1,    -1,  1660,  1074,
      -1,    -1,    32,    -1,    -1,    -1,  2024,    -1,    -1,    -1,
    2133,    -1,   435,    -1,   437,   438,    -1,  2140,    -1,  2345,
      -1,   463,   464,   465,    -1,   467,   468,   469,   470,   471,
     472,  1367,    -1,   463,   464,   465,    -1,   467,   468,   469,
     470,   471,   472,    -1,  2370,    -1,    -1,  2373,    -1,    -1,
     460,   474,  1714,    -1,   477,   478,   479,   467,   468,   469,
     470,   471,   472,    -1,   275,  1800,    -1,    -1,    -1,    -1,
      -1,    -1,  1734,  1808,  1809,  1810,  1811,  2200,  1813,  1814,
      -1,  2279,    -1,  1818,  1819,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1945,    -1,    -1,    -1,    -1,    -1,  2024,
       8,  1763,    -1,    11,    -1,  1180,    -1,    15,    16,    17,
      -1,    -1,  1847,  2311,  2312,  2133,    -1,    -1,    -1,    -1,
      -1,    -1,  2140,    -1,  1786,    -1,  2324,    -1,  1863,    -1,
    1865,    -1,    -1,    -1,  1869,  1870,  1871,    -1,  1873,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,  1889,    -1,  1891,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1904,
    1905,  1906,  1907,  1908,  1909,  1910,  1911,  1912,  1913,    -1,
      -1,   211,  2200,    -1,    -1,    -1,  2384,  2310,    -1,    -1,
      -1,    -1,    -1,  1928,    -1,    -1,    -1,    -1,    -1,    -1,
    1935,    -1,    -1,    -1,    -1,  2057,    -1,    -1,  2133,  2061,
      -1,  1946,    -1,    -1,  1949,  2140,    -1,    -1,  2544,    -1,
      -1,  1956,  2345,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2084,  2085,    -1,    -1,    -1,    -1,    -1,    -1,
    1902,    -1,    -1,    -1,    -1,   275,    -1,  2370,    -1,    -1,
    2373,    -1,   463,   464,   465,    -1,   467,   468,   469,   470,
     471,   472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2200,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   537,   538,    -1,    -1,    -1,    -1,
      -1,    -1,  2310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2037,   211,    -1,  2040,  2041,  2042,  2043,    -1,
      -1,    -1,  2047,  2048,    -1,  2050,    -1,    -1,  2053,    -1,
    2172,    -1,  2057,    -1,  1660,    -1,  2061,  2345,    -1,    -1,
      -1,    -1,  2067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     593,   594,  1417,  1418,    -1,    -1,    -1,  1422,    -1,    -1,
      -1,  2086,  2370,   211,    -1,  2373,  2091,    -1,    -1,    -1,
    2095,    -1,  2024,    -1,    -1,    -1,    -1,   275,  2103,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1714,  2231,
      -1,   733,  1457,  1458,  2236,  2310,    -1,  2239,    -1,    -1,
      -1,    -1,    -1,  2128,    -1,    -1,    -1,    -1,  1734,   652,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,    -1,   275,    -1,   771,
    2345,  2544,    -1,    -1,    -1,    -1,    -1,  1763,    -1,    -1,
    2165,    -1,    -1,   463,   464,   465,  2171,   467,   468,   469,
     470,   471,   472,   696,    -1,  2370,    -1,  2182,  2373,    -1,
    1786,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   715,   716,   717,    -1,   719,  2319,    -1,    -1,
      -1,  2133,    -1,    -1,    -1,    -1,    -1,    -1,  2140,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   739,    -1,  2340,  2224,
    2225,    -1,    -1,    -1,  2229,    -1,  2231,    -1,   850,    -1,
      -1,  2236,    -1,   855,  2239,  2240,    -1,  2242,    -1,  2244,
      -1,    -1,    -1,  2365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2374,  2258,    -1,    -1,  2544,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,  2200,   792,
     793,    -1,    -1,  2278,  2279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2287,    -1,    -1,   463,   464,   465,    -1,   467,
     468,   469,   470,   471,   472,    -1,  1902,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2427,  2311,  2312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2321,    -1,    -1,  2324,
      -1,    -1,   845,   846,   847,    -1,    -1,    -1,    -1,    -1,
      -1,  2336,    -1,    -1,  2339,   463,   464,   465,    -1,   467,
     468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,  2544,
      -1,    -1,  2474,  2358,    -1,    -1,    -1,    -1,    -1,    -1,
    2365,    -1,    -1,    -1,    -1,    -1,  2371,    -1,    -1,    -1,
      49,    -1,    -1,    -1,    -1,  2380,    -1,    -1,  2310,  2384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2393,    -1,
    1735,  1736,  1737,  1738,    -1,    -1,  1741,  1742,  1743,  1744,
    1745,  1746,  1747,  1748,  1749,  1750,    -1,    -1,    -1,    -1,
    2415,    -1,    -1,  2345,    93,    -1,    -1,    -1,  2024,    -1,
      -1,  2426,    -1,    -1,    -1,  1047,    -1,    -1,    -1,    -1,
      -1,  2553,    -1,   956,    -1,    -1,    -1,    -1,  2370,    -1,
     119,  2373,    -1,    -1,    -1,  1790,  1791,  1069,    -1,  2454,
      -1,    -1,  1074,    -1,    -1,  2460,    -1,    -1,   137,    -1,
    2465,    -1,   141,  1085,  1086,  1087,    -1,  1089,    -1,    -1,
      -1,    -1,    -1,  2478,  2479,  2480,  2481,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,    -1,   165,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1137,    -1,  2522,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2530,  1049,  2133,    -1,    -1,
      -1,    -1,    -1,    -1,  2140,  2540,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1070,    -1,  2554,
    1073,    -1,    -1,  1076,  1176,  2560,    -1,    -1,    -1,    -1,
    1083,  1084,    -1,    -1,    -1,    -1,  1188,    -1,    -1,    -1,
    2575,  1193,  1095,    -1,    -1,    -1,    -1,    -1,  1101,  1102,
    1103,  1104,    -1,    -1,   263,    -1,  1109,  1110,    -1,    -1,
      -1,  1114,   271,    -1,  2200,  1118,    -1,    -1,  1121,  1122,
    1123,  1124,  1125,  1126,  1127,  1128,  1129,    -1,    -1,  1132,
      -1,    -1,  2544,    -1,    -1,    -1,  1139,    -1,  1141,     0,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   312,    -1,    -1,    -1,    18,    -1,  1162,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    46,  1189,  1190,    -1,    -1,
      -1,    -1,    -1,    -1,    55,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    67,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    78,    -1,    -1,
      -1,    -1,    -1,    -1,  2310,    -1,    -1,    -1,    89,    -1,
      91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,   109,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    54,  2345,
      -1,    -1,   123,    -1,    -1,  1268,    32,    -1,  1271,  1272,
      -1,  1274,   133,    -1,    40,  1377,    -1,    -1,   139,    -1,
      -1,    47,    -1,    -1,  2370,    -1,   147,  2373,   149,   150,
      -1,    -1,    -1,    -1,    -1,    -1,  1398,    -1,  1301,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,   104,   105,
      -1,    -1,    -1,  1415,    -1,  1417,  1418,   113,  1420,    -1,
    1422,    -1,    -1,    -1,  1426,    -1,    -1,    -1,   189,    -1,
      -1,  1433,     0,    -1,    -1,    -1,  1438,    -1,  1341,    -1,
      -1,    -1,  1444,    -1,    -1,    -1,  1448,  1449,  1450,  1451,
      -1,    -1,    -1,    -1,    -1,  1457,  1458,    -1,  1460,  1461,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,    -1,    -1,
    1472,  1374,  2197,  1475,   170,    -1,  1379,    -1,    -1,    -1,
      -1,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,
    1492,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,   171,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,  1419,    -1,    -1,   185,
      -1,  1523,    -1,    91,   190,    -1,    -1,    32,    -1,    -1,
      -1,  1434,    -1,  1436,  1437,    40,    -1,    -1,   299,  1442,
      -1,   302,    47,    -1,   240,   211,   212,    -1,   244,    -1,
      -1,    -1,    -1,    -1,    -1,  2280,    -1,    -1,  2544,   225,
     256,    -1,   258,    -1,    -1,    -1,    -1,    72,    -1,   330,
      -1,    -1,    -1,  1476,    -1,   143,  1479,   338,  1481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,
     351,   287,   258,   161,    -1,   261,    -1,   358,   166,    -1,
      -1,   362,    -1,    -1,    -1,    -1,    -1,   175,    -1,   275,
     178,   372,   278,    -1,    -1,    -1,    -1,    -1,    -1,  2344,
      -1,    -1,    -1,    -1,   385,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1634,  1635,  1636,   331,    -1,  1540,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1555,    -1,    -1,    -1,   352,    -1,   226,   420,
      -1,    -1,    -1,    -1,   425,    -1,   171,  1669,    -1,    -1,
    1573,     0,    -1,    -1,    -1,    -1,   372,   438,   374,    -1,
     185,   377,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,    -1,    -1,
      -1,   462,   270,    -1,    -1,   273,   211,   212,  1710,    -1,
      -1,   279,    -1,    -1,  1716,   476,    -1,    -1,   479,    -1,
     225,    -1,     8,    -1,    -1,    11,    -1,    -1,  1631,  1731,
    1732,  1733,    -1,  1735,  1736,  1737,  1738,    -1,    -1,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,
      -1,    -1,    -1,   258,    40,    -1,   261,    -1,    -1,    -1,
      -1,    47,    91,    -1,    -1,   333,    -1,    -1,    -1,  1771,
     275,    -1,    -1,  1775,  1776,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,    -1,    -1,    -1,    72,  1789,  1790,  1791,
    1792,    -1,  1794,    -1,   460,    -1,    -1,   463,   464,   465,
      -1,   467,   468,   469,   470,   471,   472,    -1,  1711,    -1,
      -1,   477,    -1,    -1,   143,    -1,    -1,   385,  1721,    -1,
      -1,    -1,  1725,    -1,    -1,  1728,    -1,   156,    -1,    -1,
      -1,    -1,   161,    -1,    -1,    -1,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   411,    -1,    -1,   175,    -1,    -1,   178,
      -1,  1754,  1755,    -1,    -1,   141,    -1,    -1,   363,    -1,
      -1,    -1,    -1,    -1,  1866,    -1,    -1,   435,    -1,   437,
     438,  1774,     8,    -1,  1777,    11,  1779,    -1,   207,    15,
      16,    17,    -1,    -1,  1787,   171,    -1,    -1,    -1,    -1,
      -1,    -1,  1795,  1796,    -1,    -1,    -1,   226,    -1,   185,
      -1,    -1,    -1,    -1,   190,    -1,   474,    -1,    -1,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1824,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1833,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,   270,    -1,    -1,   273,    -1,  1849,    -1,    -1,    -1,
     279,    -1,    -1,    -1,    -1,   460,    -1,    -1,   463,   464,
     465,    -1,   467,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1977,    -1,    -1,    -1,  1981,
    1982,    -1,  1984,    -1,    -1,  1987,  1988,  1989,  1990,   275,
      -1,    -1,  1994,  1995,  1996,  1997,  1998,  1999,  2000,  2001,
    2002,  2003,  2004,  2005,   333,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2017,    -1,    -1,  2020,    -1,
    2022,    -1,    -1,    -1,  2026,    -1,    -1,  2029,  2030,    -1,
      -1,  2033,  2034,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,   385,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,  2074,  1976,    11,    -1,    -1,   363,    32,  2081,
      -1,    -1,   411,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,  2094,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,   435,    -1,   437,   438,
      47,    -1,    -1,    -1,    -1,  2018,  2019,    -1,    72,    -1,
    2023,    -1,    -1,    -1,    -1,  2028,    -1,    -1,  2031,  2032,
      -1,    -1,    -1,  2036,    -1,    72,    -1,    -1,    -1,   275,
      -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   460,    -1,    -1,    -1,    -1,  2082,
      -1,   467,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,  2193,    -1,    -1,    -1,  2197,    -1,    -1,    -1,    -1,
    2202,  2203,  2204,    -1,   141,  2207,     3,    -1,  2210,  2211,
      -1,     8,    -1,  2215,    11,    -1,    -1,   171,    15,    16,
      17,  2124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   185,    -1,    -1,   171,    32,   190,    -1,    35,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    20,   185,    -1,
      47,    -1,    -1,   190,    -1,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,    72,    -1,    -1,  2280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2298,    -1,    -1,    -1,
      73,    -1,    -1,    -1,   258,  2208,  2209,   261,    -1,  2212,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,   275,    -1,    -1,   278,    -1,    -1,   463,   464,   465,
      -1,   467,   468,   469,   470,   471,   472,    -1,   275,    -1,
      -1,  2343,  2344,  2246,  2247,    -1,  2348,  2349,  2350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,   171,    -1,  2378,  2379,   151,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,  2391,
     163,    -1,    -1,   190,    -1,   168,    -1,    -1,    -1,    -1,
      -1,  2403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,
      -1,    -1,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,    -1,    -1,   363,    -1,   225,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2448,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2459,  2361,    -1,
      -1,   258,    -1,   236,   261,    -1,   239,    -1,    -1,    -1,
      -1,  2374,    -1,    -1,  2476,    -1,    -1,    -1,   275,    -1,
      -1,   278,  2385,    -1,    -1,    -1,    -1,    -1,  2490,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   460,    -1,    -1,   463,
     464,   465,    -1,   467,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,   460,   297,    -1,   480,    -1,    -1,    -1,
     467,   468,   469,   470,   471,   472,    -1,    -1,   311,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2551,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2565,    -1,    -1,   363,  2470,    -1,   342,
      -1,   344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   352,
      -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2498,    -1,    -1,    -1,    -1,
      -1,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   385,    -1,  2517,  2518,    -1,    -1,    -1,   392,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,
    2632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   431,  2562,
      -1,    -1,    -1,   460,    -1,    -1,   463,   464,   465,    -1,
     467,   468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,  2620,  2621,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
     128,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,
      -1,    -1,    -1,   481,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,    -1,    -1,   436,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,    -1,   462,    -1,    -1,    -1,    -1,   467,   468,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,    -1,
      -1,    -1,   481,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,   431,   432,   433,    -1,    -1,   436,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,    -1,   462,    -1,    -1,    -1,    -1,   467,   468,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,
      -1,   481,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,   166,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
     221,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,
     481,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,   481,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,   481,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,    -1,    -1,    -1,
      -1,    -1,    -1,   467,   468,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   476,   477,    -1,    -1,    -1,   481,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   476,   477,    -1,    -1,    -1,   481,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,    -1,    -1,    -1,    -1,    -1,
      -1,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,    -1,    -1,   481,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,   166,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,
     467,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    -1,    -1,    -1,   481,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,
      -1,    -1,    -1,   481,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,   468,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
      -1,    -1,   481,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,   429,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,    -1,    -1,    -1,    -1,    -1,    -1,   467,   468,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,
      -1,   481,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,    -1,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,   418,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
      -1,    -1,    -1,    -1,    -1,    -1,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,
     481,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,    -1,
      -1,    -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,   481,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,    -1,    -1,
      -1,    -1,    -1,    -1,   467,   468,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    -1,    -1,    -1,   481,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,   468,    -1,    -1,     3,     4,     5,
       6,     7,   476,     9,    10,    -1,    -1,   481,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    -1,    -1,    -1,    -1,   481,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    -1,    -1,    -1,   481,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,   467,
     468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,
      -1,    -1,    -1,   481,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,    -1,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,   468,
       3,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,    -1,
      -1,    -1,   481,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    35,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,   167,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,    -1,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,    -1,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   477,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,    -1,    -1,   436,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,   462,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,   275,   276,   277,    -1,    -1,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   476,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   476,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,    -1,     3,     4,     5,
      -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   476,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,   273,    -1,   275,
     276,   277,    -1,    -1,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    -1,    -1,     3,    -1,    -1,    -1,
      -1,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
     476,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,   429,   430,   431,   432,   433,    -1,    -1,   436,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,   462,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,   462,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,    -1,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,    -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,    -1,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,   476,    15,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
      -1,   149,   150,   151,   152,    -1,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,    -1,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,    -1,   282,   283,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,    -1,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   456,   457,
     458,   459,    -1,     3,    -1,   463,   464,   465,     8,   467,
     468,   469,   470,   471,   472,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,    -1,    -1,   463,   464,   465,    -1,   467,   468,   469,
     470,   471,   472,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,
      17,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,     8,    -1,    -1,    11,    -1,
      47,    -1,    15,    16,    17,    -1,    -1,    72,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,
      15,    16,    17,    -1,    -1,    72,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,     8,    -1,    -1,    11,    72,
      -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    72,    -1,    32,
      15,    16,    17,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,   171,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    72,
     185,    -1,    -1,    -1,   171,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,   185,    -1,
      -1,    -1,    -1,   190,    -1,    -1,   211,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,
     225,    -1,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,   171,   190,   225,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     185,    -1,    -1,   258,    -1,   190,   261,    -1,   211,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,   258,   225,   278,   261,    -1,   211,   212,   171,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,
     225,   278,   185,    -1,    -1,    -1,   171,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,   261,    -1,
     185,    -1,    -1,    -1,    -1,   190,    -1,    -1,   211,   212,
      -1,    -1,   275,   258,    -1,   278,   261,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,    -1,   211,   212,    -1,    -1,
     275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,
     225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,   261,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   363,    -1,    -1,    -1,
      -1,    -1,   275,   258,    -1,   278,   261,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,    -1,    -1,   278,    -1,     8,    -1,    -1,    11,    -1,
     363,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   460,    -1,    -1,   463,   464,
     465,    -1,   467,   468,   469,   470,   471,   472,    -1,    72,
     363,    -1,   477,   460,    -1,    -1,   463,   464,   465,    -1,
     467,   468,   469,   470,   471,   472,    -1,    -1,   363,    -1,
     477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   460,    -1,    -1,
     463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
      -1,    -1,    -1,    -1,   477,   460,    -1,    -1,   463,   464,
     465,    -1,   467,   468,   469,   470,   471,   472,    -1,    -1,
      -1,     8,   477,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    32,    -1,   460,   171,    -1,
     463,   464,   465,    40,   467,   468,   469,   470,   471,   472,
      47,    -1,   185,    -1,   477,   460,    -1,   190,   463,   464,
     465,    40,   467,   468,   469,   470,   471,   472,    47,    -1,
      -1,    -1,   477,     8,    -1,    72,    11,    -1,   211,   212,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    72,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,    -1,
      11,    -1,    47,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,   261,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    72,    -1,    40,
      -1,    -1,   275,    -1,    -1,   278,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    -1,   171,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,
      -1,    -1,   171,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,   190,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
     363,    -1,    -1,    -1,     8,    -1,   171,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,   225,    -1,    -1,    -1,
     185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    32,    -1,
      -1,   258,    -1,    -1,   261,    -1,    40,    -1,    -1,    -1,
     171,    -1,    -1,    47,    -1,    -1,   211,   212,   275,    -1,
      -1,   278,    -1,    -1,   185,    -1,    -1,    -1,    22,   190,
     225,    -1,    -1,    -1,    28,    -1,   275,    -1,    72,    -1,
      -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      54,    -1,    -1,   258,   225,    -1,   261,   460,    -1,    -1,
     463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
     275,    -1,    -1,   278,   477,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,
     261,    -1,    -1,    -1,    -1,    -1,   363,    -1,    -1,    -1,
     104,    -1,    -1,    -1,   275,    -1,    -1,   278,    -1,    -1,
      -1,    -1,    -1,    -1,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,   133,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,    -1,   363,   460,    -1,    -1,   463,   464,   465,    -1,
     467,   468,   469,   470,   471,   472,    -1,    -1,    -1,    -1,
     477,   460,    -1,    -1,   258,    -1,    -1,   261,   467,   468,
     469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   275,    -1,    -1,   278,    -1,   240,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   256,    -1,    -1,   460,    -1,    -1,   463,   464,
     465,    -1,   467,   468,   469,   470,   471,   472,    -1,    -1,
      -1,    -1,   477,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,   460,
      -1,    -1,   463,   464,   465,    -1,   467,   468,   469,   470,
     471,   472,    -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   363,
      -1,    -1,   326,    -1,    -1,    -1,   330,   331,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   352,    -1,
      -1,    -1,    -1,    -1,   358,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   460,     3,   422,   463,
     464,   465,    -1,   467,   468,   469,   470,   471,   472,    -1,
      -1,   475,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,    -1,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
     469,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,    -1,   275,   276,   277,    -1,    -1,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     3,     4,
       5,    -1,    -1,    -1,     9,   467,   468,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     3,     4,     5,    -1,    -1,
      -1,     9,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    -1,    -1,     8,    -1,    -1,    11,    -1,   467,
     468,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,
      16,    17,    36,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,     8,    -1,    -1,    11,    72,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    72,    -1,    32,    15,
      16,    17,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    35,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,   122,    -1,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,    -1,    -1,    72,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,   171,    -1,    -1,
      -1,    -1,    47,    -1,    -1,   161,    -1,    -1,    -1,    -1,
     166,   185,    -1,    -1,    -1,   171,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,   185,
      -1,    -1,    -1,    -1,   190,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   160,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,   211,   212,   171,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,   185,    -1,    -1,    -1,   171,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   258,    -1,    -1,   261,    -1,   185,
      -1,    -1,    -1,    -1,   190,    -1,    -1,   211,   212,    -1,
      -1,   275,   258,    -1,   278,   261,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,   211,   212,    -1,    -1,   275,
      -1,    -1,   278,    -1,    -1,    -1,   171,    -1,    -1,   225,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     185,    -1,    -1,    -1,   258,   190,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   275,   258,    -1,   278,   261,   211,   212,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,
     225,    -1,   278,    -1,    -1,    -1,   300,    -1,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    22,    -1,    -1,    -1,    -1,
      -1,    28,    -1,    -1,    -1,    -1,    -1,   363,    35,    -1,
      -1,    -1,    -1,   258,    -1,    -1,   261,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    54,    -1,    -1,
     275,    -1,    -1,   278,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,   419,    15,    16,    17,   363,
     295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    35,   363,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,   104,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   460,    -1,    -1,   463,
     464,   465,    -1,   467,   468,   469,   470,   471,   472,    -1,
      -1,    -1,    -1,    72,   460,    -1,   133,   463,   464,   465,
      -1,   467,   468,   469,   470,   471,   472,    -1,   363,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,   460,    -1,    -1,   463,
     464,   465,    40,   467,   468,   469,   470,   471,   472,    47,
      -1,    -1,    -1,    -1,   460,   192,    -1,   463,   464,   465,
      -1,   467,   468,   469,   470,   471,   472,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   240,    -1,   460,   185,   244,   463,   464,
     465,   190,   467,   468,   469,   470,   471,   472,    -1,   256,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,   211,   212,    15,    16,    17,    -1,    -1,    -1,
     277,    -1,    -1,    -1,    -1,     8,   225,    -1,    11,    -1,
     287,    32,    15,    16,    17,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,   166,    32,
      -1,    -1,    -1,   171,    -1,    -1,    -1,    40,    -1,   258,
      -1,    -1,   261,    -1,    47,    -1,    -1,   185,    -1,   326,
      -1,    72,   190,   330,   331,    -1,   275,     8,    -1,   278,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    72,
      -1,    -1,    -1,   211,   212,   352,    -1,    -1,    -1,    -1,
      -1,   358,    -1,    -1,    -1,    -1,    -1,   225,    -1,    40,
      -1,    -1,    -1,    -1,    -1,   372,    47,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
     258,    72,    11,   261,    -1,    -1,    15,    16,    17,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,   275,    47,    -1,
     278,    -1,    -1,    -1,   363,   422,     8,    -1,    -1,    11,
     171,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    72,   185,    -1,    -1,    -1,   171,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,   185,    72,    -1,    47,    -1,   190,    -1,    -1,
     211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,   211,   212,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     171,    -1,   225,    -1,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   185,    -1,    -1,   258,    -1,   190,
     261,   460,    -1,    -1,   463,   464,   465,    -1,   467,   468,
     469,   470,   471,   472,   275,   258,     8,   278,   261,    11,
     211,   212,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   275,    -1,   225,   278,   185,    -1,    -1,   141,
      -1,   190,   171,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,   185,    -1,    -1,    -1,
      -1,   190,   211,   212,    -1,    -1,    -1,   258,    -1,   171,
     261,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,
      72,    -1,   460,   185,   275,   463,   464,   465,   190,   467,
     468,   469,   470,   471,   472,    -1,   225,    -1,    -1,    -1,
      -1,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     363,    -1,    -1,   225,    -1,    -1,   275,    -1,    -1,    -1,
      -1,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,    -1,   141,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   363,   275,    -1,    -1,    -1,    -1,    -1,   171,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,   190,   460,
      -1,    -1,   463,   464,   465,    -1,   467,   468,   469,   470,
     471,   472,    -1,    -1,   363,    -1,    -1,   460,    -1,    -1,
     463,   464,   465,    -1,   467,   468,   469,   470,   471,   472,
      -1,    -1,    -1,   225,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   460,
      -1,    -1,   463,   464,   465,    -1,   467,   468,   469,   470,
     471,   472,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   460,    -1,    -1,   463,   464,   465,    -1,   467,   468,
     469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   460,    -1,    -1,   463,   464,   465,    -1,   467,   468,
     469,   470,   471,   472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   460,    -1,
      -1,    -1,    -1,    -1,    -1,   467,   468,   469,   470,   471,
     472,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,   460,     5,
      -1,    -1,    -1,    -1,    -1,   467,   468,   469,   470,   471,
     472,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,    -1,   275,   276,   277,
      -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,   429,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,   429,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    -1,    -1,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,   225,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,    -1,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,    -1,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,    -1,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,    -1,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,    -1,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,    -1,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,    -1,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,    -1,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,    -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,    -1,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,    -1,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,   385,   386,    -1,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,    -1,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,    -1,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,    -1,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,    -1,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,    -1,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,    -1,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,    -1,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,    -1,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,    -1,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,    -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,    -1,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,    -1,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,    -1,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,    -1,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,    -1,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
      -1,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,    -1,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,    -1,   253,   254,   255,   256,   257,    -1,
     259,   260,    -1,   262,    -1,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,   281,    -1,   283,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,    -1,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,    -1,   386,    -1,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,   426,    -1,   428,
      -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
      -1,   253,   254,   255,   256,   257,    -1,   259,   260,    -1,
     262,    -1,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,
      -1,   283,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,    -1,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,    -1,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,    -1,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,    -1,   386,    -1,   388,   389,   390,   391,
     392,    -1,   394,   395,    -1,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,    -1,   430,   431,
     432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,    -1,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,    -1,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,    -1,
     275,   276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
      -1,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,    -1,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,    -1,   334,
     335,    -1,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,    -1,    -1,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,    -1,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
      -1,   386,    -1,   388,   389,   390,   391,   392,    -1,   394,
     395,    -1,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,    -1,   430,   431,   432,   433,    -1,
      -1,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,    -1,   253,   254,   255,   256,   257,
      -1,   259,   260,    -1,   262,    -1,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,    -1,   275,   276,   277,
      -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,    -1,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,    -1,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
      -1,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,    -1,   386,    -1,
     388,   389,   390,   391,   392,    -1,   394,   395,    -1,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,   426,    -1,
     428,    -1,   430,   431,   432,   433,    -1,    -1,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,    -1,   253,   254,   255,   256,   257,    -1,   259,   260,
      -1,   262,    -1,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,   280,
     281,    -1,   283,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,    -1,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,    -1,   334,   335,    -1,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,    -1,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,    -1,   386,    -1,   388,   389,   390,
     391,   392,    -1,   394,   395,    -1,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,   426,    -1,   428,    -1,   430,
     431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,    -1,   253,
     254,   255,   256,   257,    -1,   259,   260,    -1,   262,    -1,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
      -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,   283,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,    -1,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,    -1,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,    -1,
     334,   335,    -1,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,    -1,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,    -1,   386,    -1,   388,   389,   390,   391,   392,    -1,
     394,   395,    -1,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,    -1,   430,   431,   432,   433,
      -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,    -1,   253,   254,   255,   256,
     257,    -1,   259,   260,    -1,   262,    -1,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,    -1,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,    -1,   386,
      -1,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,   426,
      -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,    -1,   253,   254,   255,   256,   257,    -1,   259,
     260,    -1,   262,    -1,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,    -1,
     280,   281,    -1,   283,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,    -1,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
      -1,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,    -1,   334,   335,    -1,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,    -1,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,    -1,   386,    -1,   388,   389,
     390,   391,   392,    -1,   394,   395,    -1,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,   426,    -1,   428,    -1,
     430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,    -1,
     253,   254,   255,   256,   257,    -1,   259,   260,    -1,   262,
      -1,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,    -1,   275,   276,   277,    -1,    -1,   280,   281,    -1,
     283,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
      -1,   334,   335,    -1,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,    -1,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,    -1,   386,    -1,   388,   389,   390,   391,   392,
      -1,   394,   395,    -1,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,    -1,   430,   431,   432,
     433,    -1,    -1,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,    -1,   253,   254,   255,
     256,   257,    -1,   259,   260,    -1,   262,    -1,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,    -1,   275,
     276,   277,    -1,    -1,   280,   281,    -1,   283,    -1,   285,
     286,   287,   288,   289,   290,   291,    -1,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,    -1,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,    -1,   334,   335,
      -1,   337,   338,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,    -1,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,    -1,
     386,    -1,   388,   389,   390,   391,   392,    -1,   394,   395,
      -1,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,    -1,   430,   431,   432,   433,    -1,    -1,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    -1,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      99,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,    -1,
     149,   150,   151,   152,    -1,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,    -1,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,    -1,
     259,   260,   261,   262,    -1,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,    -1,   275,   276,   277,    -1,
      -1,   280,    -1,   282,   283,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,    -1,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,    -1,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,    -1,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,    -1,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,    -1,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,    -1,   394,   395,    -1,    -1,   398,
     399,    -1,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,   426,    -1,   428,
     429,   430,   431,   432,   433,    -1,    -1,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   456,   457,   458,
     459,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    -1,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,    -1,   149,   150,   151,   152,    -1,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,    -1,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,    -1,   259,   260,   261,   262,    -1,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,    -1,   275,   276,
     277,    -1,    -1,   280,    -1,   282,   283,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,    -1,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,    -1,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,    -1,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
      -1,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,    -1,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,    -1,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,    -1,   394,   395,    -1,
      -1,   398,   399,    -1,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
      -1,   428,   429,   430,   431,   432,   433,    -1,    -1,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   456,
     457,   458,   459
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   109,   123,   133,   139,   147,   149,   150,   189,   228,
     299,   302,   330,   338,   351,   358,   362,   372,   385,   420,
     425,   438,   462,   476,   484,   485,   486,   487,   498,   499,
     501,   505,   519,   520,   522,   524,   531,   533,   579,   585,
     588,   589,   606,   607,   608,   609,   610,   611,   648,   773,
     776,   779,   786,   787,   788,   789,   790,   797,   801,   807,
     809,   814,   818,   819,   822,   823,   825,   826,   828,   398,
     441,   532,   193,   344,   352,   385,   431,   532,     3,    18,
      19,    20,    21,    22,    23,    24,    25,    27,    28,    29,
      37,    38,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    53,    54,    55,    56,    57,    58,
      61,    62,    63,    64,    65,    67,    68,    69,    70,    71,
      73,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      85,    86,    87,    88,    89,    90,    92,    93,    94,    95,
      99,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   114,   116,   117,   118,   119,   120,   121,   123,   124,
     125,   126,   127,   130,   131,   132,   133,   134,   136,   137,
     138,   140,   141,   142,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   155,   157,   158,   159,   160,   162,
     164,   165,   167,   168,   169,   170,   171,   172,   174,   176,
     177,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   191,   192,   193,   194,   195,   196,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   208,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   222,   223,
     224,   225,   227,   228,   229,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   259,   260,   261,   262,   264,   265,   266,   267,   268,
     269,   271,   272,   275,   276,   277,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   352,   353,   354,   355,   356,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   383,   384,   386,   387,   388,   389,   390,   391,   392,
     394,   395,   398,   399,   400,   401,   402,   404,   405,   406,
     407,   408,   409,   410,   413,   414,   415,   416,   417,   420,
     421,   422,   423,   424,   425,   426,   428,   429,   430,   431,
     432,   433,   436,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   703,   760,   764,   766,   831,   832,
     833,   532,    49,   476,   601,   168,   172,   229,   236,   278,
     344,   389,   391,   412,   415,   577,   586,   785,     3,    26,
     302,   758,   764,   831,    20,    73,    88,   142,   151,   163,
     168,   193,   236,   239,   297,   311,   342,   344,   352,   355,
     374,   385,   392,   401,   431,   580,   581,   584,   532,   758,
      91,   429,   476,   501,   588,   606,   793,   797,   814,   828,
     106,   106,     5,   763,   808,   764,   758,    26,   394,   398,
     764,   820,   821,   824,   532,    26,   128,   618,   619,   229,
     344,   356,   394,   802,   803,   824,   532,   274,   659,   756,
     764,   167,   476,   811,   476,   318,   612,   613,   758,   612,
     607,   608,   611,     0,   479,   118,   203,   417,   143,   207,
     279,   411,   620,   621,   607,   609,   610,   480,   429,   791,
      26,   394,   398,   824,   184,   756,   758,   184,   756,   184,
     659,   184,   756,   476,   474,   478,   747,   749,   501,   588,
     606,   775,   814,   756,   389,   391,   389,   391,   328,   184,
     764,   318,   352,   385,   431,   756,   193,    26,   758,   241,
     401,   105,   385,   431,   347,   184,   582,   764,   767,   184,
     757,   758,   184,   758,   476,   523,   577,   793,     3,   425,
     794,   796,   797,   799,   800,   831,   832,   833,   791,   763,
     763,   465,   476,   476,   774,   459,   213,   478,   273,     4,
       6,     7,     8,     9,    10,    48,    50,    51,    59,    60,
      63,    64,    71,    73,    96,    97,    98,    99,   100,   101,
     102,   110,   111,   113,   132,   148,   153,   154,   159,   205,
     206,   208,   230,   231,   251,   253,   258,   263,   264,   266,
     275,   285,   298,   315,   340,   357,   366,   381,   394,   395,
     400,   402,   403,   418,   426,   460,   467,   468,   469,   476,
     481,   607,   674,   677,   680,   681,   682,   684,   685,   686,
     687,   689,   690,   700,   702,   703,   704,   706,   719,   723,
     741,   746,   753,   754,   760,   761,   762,   763,   764,   752,
     753,   802,   763,   802,   459,   166,   396,   465,   476,   756,
     469,   749,     3,   165,   167,   429,   797,   810,   812,   165,
     813,   700,   727,   612,   480,   476,   769,   477,   477,   486,
     166,   209,   659,   815,    26,   128,   617,   617,    53,   617,
     156,   161,   226,   270,   626,   628,   629,   641,   643,   644,
     645,   620,   621,   476,   756,   459,   213,   148,    22,    28,
     133,   277,   326,   330,   358,   422,   492,   495,   496,   326,
     148,    35,    54,   104,   192,   240,   244,   256,   287,   326,
     331,   352,   358,   372,   495,   525,   528,   148,   326,   358,
     495,   148,   326,   358,   495,    26,   128,   427,   469,   477,
     700,   728,   729,   766,   770,   700,   748,     3,    26,    30,
      31,    32,    33,    34,    35,    36,    39,    52,    59,    60,
      66,    72,    74,    84,    91,    96,    97,    98,   100,   101,
     102,   113,   115,   122,   128,   129,   135,   139,   143,   154,
     156,   161,   163,   166,   173,   175,   178,   190,   197,   207,
     209,   220,   221,   226,   230,   231,   258,   263,   270,   273,
     274,   278,   279,   295,   305,   320,   333,   351,   357,   368,
     382,   385,   393,   396,   397,   403,   411,   412,   418,   419,
     427,   434,   435,   437,   438,   469,   759,   771,   831,   832,
     833,   834,   747,   477,   476,   567,   577,   258,   777,   431,
     184,   756,   184,   756,   830,   756,   476,   587,    80,   782,
     442,    81,   125,   290,   390,   148,    57,   332,   480,   583,
     478,   768,   148,   480,   583,   148,   273,   727,   385,   477,
     480,     4,   154,   273,   403,   467,   468,   527,   530,   762,
     763,   792,   794,   795,   798,   793,   476,   596,   600,   527,
     798,   804,   806,   728,     3,    48,    50,    51,    63,    64,
     110,   111,   159,   205,   206,   208,   251,   253,   266,   315,
     359,   366,   394,   395,   426,   671,   673,   675,   677,   679,
     681,   682,   683,   685,   686,   689,   690,   730,   766,   831,
      35,   224,   764,   476,   750,   428,   688,   700,   745,   476,
     688,   688,   476,   161,   476,   476,   476,   676,   676,   301,
     607,   476,   476,   678,   476,   476,    63,    64,   688,   700,
     476,   676,   476,   476,   476,   476,   476,   440,   462,   476,
     691,   476,   691,   476,   476,   700,   700,   700,   607,   700,
     727,   750,   749,   763,   476,   476,   762,   763,     3,     8,
      11,    15,    16,    17,    32,    35,    40,    47,    72,   171,
     185,   190,   211,   212,   225,   258,   261,   275,   278,   363,
     460,   463,   464,   465,   467,   468,   469,   470,   471,   472,
     721,   722,   723,   725,   439,   707,   284,   700,   209,   480,
     614,   476,   763,   749,   614,     3,   113,   229,   527,   690,
     763,   805,    95,   113,   806,   113,   806,   756,   477,   480,
     791,   477,   480,   613,   757,    35,   815,   503,   756,    35,
     764,   358,   609,   609,   622,   623,   700,   609,   158,   255,
     635,   215,   256,   314,   361,   417,    26,   630,   700,   467,
     468,   631,   632,   700,   702,   641,   642,   629,   628,   626,
     627,   161,   644,   268,   646,   626,   641,   727,   769,   224,
     756,    66,    74,    84,   163,   184,   305,   412,   548,   558,
     573,   764,    74,    84,   500,    84,   500,   476,   396,   476,
     546,   235,   415,   546,    84,   480,   396,   756,   673,   527,
      53,   529,   527,   527,   104,   240,   244,    53,   396,   438,
     462,   526,   249,   344,   526,   528,   659,    84,   396,   500,
     344,   756,   396,   344,   728,   728,   729,   477,   480,   620,
     621,    13,    14,   475,   482,   396,   566,   571,   764,   438,
     599,   318,   431,   148,    91,   520,   533,   778,   779,   826,
     756,   258,   521,   525,   258,   476,   567,    35,   567,   477,
     728,    35,   184,   561,   764,   783,   582,   767,   759,   478,
     757,   758,   758,   767,   477,   184,   756,   830,   793,   799,
       4,   762,     4,   762,   598,   605,   771,    49,    93,   119,
     137,   141,   162,   165,   179,   263,   271,   312,   602,   480,
     477,   480,   673,    34,   672,   107,   108,   181,   182,   242,
     243,   246,   247,   348,   349,   456,   457,   476,   692,   693,
     694,   695,   696,   697,   698,   699,   477,   480,   676,   768,
     775,   727,   747,   476,   434,   742,   743,   700,   727,   476,
     762,   762,   727,     3,   692,   693,   694,   695,   696,   697,
     731,   732,   763,   762,   762,   762,   688,   688,   700,     8,
      15,    16,    17,   463,   464,   465,   467,   468,   469,   470,
     471,   472,   721,   726,   764,   700,   733,   467,   468,   476,
     701,   702,   723,   735,   477,   727,   700,   727,   736,   394,
     394,   762,   762,   700,    52,   166,   221,   397,   700,   727,
     739,   477,   480,   762,   700,   698,   698,   671,   700,   700,
     700,   700,     5,   771,   772,   394,    39,   382,   751,   767,
     700,   700,   476,   607,   740,   128,   154,   258,   263,   268,
     403,   413,   700,   263,   476,   700,   396,    47,   171,   185,
     190,   225,   363,   700,   700,   700,   700,   700,   700,   700,
     700,   700,   700,    26,    33,   368,   720,   175,   157,   708,
     340,   476,   719,   172,   229,   385,   389,   391,   415,   615,
     756,   754,   166,   649,   728,   649,   476,   763,   477,   756,
     810,   756,   818,   700,   477,   476,   419,   817,   113,   286,
     476,   502,   606,    35,   764,   476,   507,   516,   518,   764,
     480,    36,   122,   419,   624,   340,   341,   467,   468,   632,
     634,   702,   361,   215,   274,   480,     4,   633,   762,   633,
     340,   341,   634,   755,   756,   262,   365,   647,   642,   627,
     477,   326,   495,   476,   184,   558,   758,   215,   258,   215,
     419,   476,   551,   671,   758,   764,   184,   758,   184,   764,
      22,   133,   358,   491,   494,   541,   556,   771,   758,   550,
     570,   771,   758,   492,   758,   326,   358,   495,   525,   527,
     767,   758,   527,   767,   758,   527,   326,   358,   495,   758,
     758,   758,   758,   326,   358,   495,   758,   758,   620,   620,
     620,   427,   729,   477,   700,   700,   700,   748,   310,   595,
     477,   480,   271,   166,   396,   590,   431,   756,   764,   577,
     476,   148,   148,   225,   548,   558,   562,   565,   574,   576,
     764,   438,   440,   553,   147,   606,   438,   784,   477,   700,
     258,   273,   583,   759,   583,   273,   583,   258,    35,   477,
     480,   469,   476,   527,   597,   798,    35,   594,   763,   594,
     258,   263,   312,   594,   594,   804,    34,   672,   474,   474,
     762,   396,   396,   396,   396,   476,   671,   676,   477,   727,
     700,   135,   743,   744,    35,   477,   700,   477,   477,   477,
     477,   166,   477,   477,   477,   480,   477,   478,   295,   734,
     477,   701,   701,   700,    11,    15,    16,    17,   190,   211,
     275,   463,   464,   465,   467,   468,   469,   470,   471,   472,
     723,   701,   477,   477,   161,   166,   737,   738,   477,   459,
     459,   477,   477,    35,   739,   727,   739,   739,   166,   477,
     750,   700,   477,   477,   459,   701,   701,   141,   727,   166,
     128,   154,   263,   268,   403,   413,   476,   141,   726,   700,
     382,   751,   700,   740,   700,   396,   476,   607,   476,   476,
     283,   712,   389,   391,   389,   391,   756,   385,   616,   616,
     616,   220,   341,   476,   607,   650,   651,   652,   659,   662,
     703,   705,   706,   764,   435,   667,   620,   667,   762,   698,
     769,   775,   650,   435,   816,   425,   384,   418,   511,   506,
     515,   764,   273,   508,   764,   512,   518,   480,   649,   465,
     750,   623,   275,   721,   724,   461,   625,     4,   762,   634,
     274,   417,   631,   480,   234,   396,   700,   258,   573,   476,
     148,   476,   551,   193,   571,   534,   277,   544,   534,    22,
     133,   330,   331,   358,   488,   489,   490,   496,   497,   148,
     583,   148,   583,   541,   556,   541,   477,   480,   537,   763,
     477,   480,   465,   478,   396,   344,    84,   396,   500,   344,
     396,   396,   396,   344,   477,   477,   477,   729,   475,   375,
     376,   604,   763,   566,   595,   756,   567,   777,   385,   571,
     756,   756,   830,   756,   477,   480,   271,   546,   271,   273,
     545,   758,   438,   829,   546,    35,   148,   756,   767,   148,
     598,   592,   603,   798,   763,   763,   263,   571,   469,   571,
     763,   763,   474,   762,   475,   762,   477,   693,   695,   696,
     699,   696,   699,   699,   762,   477,   393,   700,   139,   671,
     477,   700,   700,   726,   700,   737,   671,   701,   701,   701,
     701,   128,   258,   268,   701,   701,   701,   701,   701,   701,
     701,   701,   701,   701,   700,   700,   738,   737,   691,   691,
     671,   477,   477,   477,   727,   477,   698,   700,    32,    32,
     700,   477,   700,   166,   476,   730,   700,   477,   141,   701,
     701,   141,   141,   700,   700,   621,   435,   476,   713,   764,
     616,   616,   616,   616,   756,   756,   756,   607,   662,   166,
     607,   651,   652,    35,   653,   654,   764,   480,    92,   167,
     199,   214,   223,   252,   336,   656,   654,    35,   653,   655,
     764,   462,   666,   749,   700,   175,   636,   477,   636,   477,
     477,   700,   333,   510,   424,   477,   480,   750,    82,   510,
     477,   480,   507,   816,   700,   476,   625,   158,   219,   274,
     756,   758,   477,   148,   571,   558,   571,   534,   561,   477,
     115,   197,   256,   258,   557,   476,   568,   170,   113,   183,
     258,   546,   526,   105,   113,   170,   258,   374,   377,   528,
     546,   358,   490,   406,   758,   764,   494,   570,   257,   275,
     359,   467,   468,   527,   535,   572,   671,   724,   763,   766,
     834,   771,   758,   758,   758,   758,   758,   758,   758,   758,
     758,   758,   620,   526,   604,   476,   784,   184,   756,   477,
     521,   476,    35,   555,   553,   562,    78,   523,   105,   256,
     606,   561,   419,   781,   583,   830,   477,   480,   571,   762,
     475,   475,   477,   700,   477,   477,   738,   166,   128,   268,
     476,   477,   700,   700,   700,   730,   477,   700,    32,    32,
     700,   700,   141,   477,   477,   700,   714,   764,   756,   756,
     756,   756,   654,   655,   476,   477,     5,   764,   765,   476,
     651,   214,   282,   657,   651,   657,   214,   656,   657,   214,
     387,   660,   476,   764,   476,   280,    53,   178,   640,   763,
     640,   763,   753,   606,   286,   606,   506,   273,   476,   504,
     465,   518,   510,   726,   534,   558,   477,   477,   438,   564,
     116,   186,   195,   115,   421,   541,   559,    66,    72,    84,
     113,   115,   170,   197,   258,   263,   305,   320,   412,   539,
     540,   552,    29,    53,   578,   184,   263,   527,   700,   578,
     263,   467,   468,   530,   764,   671,   583,   583,   766,   768,
     465,   396,   396,   477,   596,   419,   591,   593,   571,    35,
     258,   476,   784,   565,   147,   606,   145,   191,   545,   118,
     133,   304,   829,   105,   438,   827,   273,   764,   780,   476,
      35,   603,   475,   701,   166,   476,   730,   477,   700,   700,
     700,   477,   292,   715,   663,   664,   705,   653,   476,   757,
     651,   273,   419,   658,   651,   214,   651,   760,   668,   669,
     764,   476,   668,   764,   476,   637,   638,   639,   700,   700,
     437,   709,   709,   511,    84,   476,   509,   517,   705,   764,
     129,   700,   477,   320,   564,   476,   554,   534,   477,   480,
     476,   767,   758,   701,   578,   116,   186,   115,   263,   215,
     756,   564,   113,    35,   148,    72,   670,   768,   471,   535,
     758,   758,   526,   120,   477,   606,   148,    35,   477,   758,
     829,    26,    77,    85,   114,   183,   194,   374,   377,   549,
     549,   341,   341,    58,    66,   229,   756,   517,   701,   730,
     477,    53,   620,   477,   480,    35,   665,   757,   477,   700,
     476,   651,   658,   476,   477,   480,   671,   668,   477,   477,
     480,   710,   711,   764,   424,   758,   700,   477,   480,    72,
     513,   513,   259,   417,   756,   534,   560,   563,   771,   541,
     700,   258,   540,    35,   564,   567,   183,   767,   419,   493,
     471,   406,   596,   763,   784,   827,   756,   606,   553,   523,
      66,   276,    66,   781,   477,   477,   727,   313,   341,   716,
     666,   663,   476,   477,   757,   727,   669,   670,   477,   638,
     480,    35,   606,   477,   667,   509,   767,   514,   767,   514,
     358,   567,   477,   480,   465,   477,   183,   238,   575,   476,
     536,   700,   406,    35,   476,   827,   545,   829,   276,   276,
     476,   784,    47,    95,   408,   700,   717,   718,   717,   477,
     668,   477,   477,   711,   713,   513,   624,   624,   516,   575,
     563,   535,   256,   547,   536,   167,   291,   364,   273,   542,
     543,   569,   525,   606,   517,   667,   718,   340,   160,   300,
     160,   300,   477,   327,   661,   514,   625,   625,   667,   543,
     195,   118,   417,   273,   569,   273,   542,   477,   827,   477,
      32,   476,   624,   534,    57,   256,   332,   358,   538,   538,
     784,   718,   700,   625,    21,   113,   263,   667,   477
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 454 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 470 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 482 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 524 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 500:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 501:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 502:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 503:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 504:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 505:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 506:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 507:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 508:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 509:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 510:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 511:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 512:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 513:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 514:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 515:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 516:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 517:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 518:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 519:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 520:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 521:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 522:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 523:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 524:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 525:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 526:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 527:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 530:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 531:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 532:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 533:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 534:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 535:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 536:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 538:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 539:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 540:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 541:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 542:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 543:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 544:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 545:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 547:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 548:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 549:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 550:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 551:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 552:
#line 781 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 553:
#line 795 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 554:
#line 810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 555:
#line 822 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 556:
#line 838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 557:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 558:
#line 849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 559:
#line 855 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 560:
#line 861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 561:
#line 862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 562:
#line 871 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 563:
#line 875 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 564:
#line 879 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 565:
#line 885 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 566:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 567:
#line 896 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 568:
#line 897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 569:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 570:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 571:
#line 903 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 572:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 573:
#line 916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 574:
#line 917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 575:
#line 923 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 576:
#line 930 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 578:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 579:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 580:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 581:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 996 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 583:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 584:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 585:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 586:
#line 1023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 587:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 588:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 589:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 590:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 591:
#line 1036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 592:
#line 1037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 593:
#line 1043 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 594:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 595:
#line 1053 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 596:
#line 1074 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 597:
#line 1081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 598:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 599:
#line 1099 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 600:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 601:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 602:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 603:
#line 1122 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 604:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 605:
#line 1133 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 606:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 607:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 609:
#line 1141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 610:
#line 1142 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 611:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 613:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 614:
#line 1169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 615:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 616:
#line 1171 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 617:
#line 1172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 618:
#line 1184 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 1190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 620:
#line 1197 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 621:
#line 1198 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 622:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 623:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 624:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 625:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 626:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 627:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 628:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 629:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 630:
#line 1246 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 631:
#line 1252 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 632:
#line 1258 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 633:
#line 1265 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 634:
#line 1286 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 635:
#line 1296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 636:
#line 1300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 637:
#line 1308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 638:
#line 1312 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 639:
#line 1320 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 640:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 641:
#line 1353 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 642:
#line 1357 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 643:
#line 1363 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 644:
#line 1367 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 645:
#line 1380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 646:
#line 1388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 648:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 649:
#line 1402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 650:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 651:
#line 1406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 652:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 653:
#line 1412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 654:
#line 1413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 655:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 656:
#line 1430 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 657:
#line 1438 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 658:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 659:
#line 1458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 660:
#line 1465 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 661:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 662:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 675:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 676:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 677:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 678:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 679:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 680:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 681:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 682:
#line 1507 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 683:
#line 1512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 684:
#line 1518 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 685:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 686:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 687:
#line 1538 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 688:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 689:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 690:
#line 1553 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 691:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 692:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 693:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 694:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 695:
#line 1615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 696:
#line 1617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 697:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 698:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 699:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 700:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 701:
#line 1627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 702:
#line 1629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 703:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 704:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 705:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 706:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 707:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 708:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 709:
#line 1644 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 710:
#line 1646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 711:
#line 1648 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 712:
#line 1651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 713:
#line 1653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 714:
#line 1655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 715:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 716:
#line 1660 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 717:
#line 1665 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 718:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 719:
#line 1677 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 720:
#line 1682 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 721:
#line 1689 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 722:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 723:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 724:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 725:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 726:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 727:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 728:
#line 1740 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 729:
#line 1758 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 730:
#line 1766 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 731:
#line 1774 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 732:
#line 1782 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 733:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 734:
#line 1798 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 735:
#line 1814 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 736:
#line 1822 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 737:
#line 1830 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 738:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 739:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 740:
#line 1854 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 741:
#line 1862 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 742:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 743:
#line 1870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 744:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 745:
#line 1878 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 746:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 747:
#line 1894 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 748:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 749:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 750:
#line 1930 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 751:
#line 1952 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 752:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 753:
#line 1970 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 755:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 756:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 757:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 758:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 759:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 760:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 761:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 762:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 763:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 764:
#line 2015 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 765:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 766:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 767:
#line 2021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 768:
#line 2023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 769:
#line 2025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 770:
#line 2027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 772:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 773:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 774:
#line 2037 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 775:
#line 2041 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 776:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 777:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 778:
#line 2059 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 779:
#line 2061 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 780:
#line 2073 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 781:
#line 2088 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 782:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 783:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 784:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 785:
#line 2115 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 786:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 787:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 788:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 789:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 790:
#line 2169 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 791:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 792:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 793:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 794:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 795:
#line 2256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 796:
#line 2266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 797:
#line 2267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 798:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 799:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 800:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 801:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 802:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 803:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 804:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 805:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 806:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 807:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 808:
#line 2317 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 809:
#line 2321 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 810:
#line 2325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 811:
#line 2329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 812:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 813:
#line 2337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 814:
#line 2341 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 815:
#line 2343 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 816:
#line 2347 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 817:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 818:
#line 2361 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 819:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 820:
#line 2383 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 821:
#line 2390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 822:
#line 2394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 823:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 824:
#line 2402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 825:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 826:
#line 2419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 827:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 828:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 829:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 830:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 831:
#line 2434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 832:
#line 2438 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 833:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 834:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 835:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 836:
#line 2455 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 837:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 838:
#line 2473 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 839:
#line 2498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 840:
#line 2499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 841:
#line 2502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 842:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 843:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 844:
#line 2533 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 845:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 846:
#line 2549 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 847:
#line 2566 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 848:
#line 2611 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 849:
#line 2619 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 850:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 851:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 852:
#line 2643 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 853:
#line 2663 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 854:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 855:
#line 2665 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 856:
#line 2668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 857:
#line 2669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 858:
#line 2670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 859:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 860:
#line 2674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 861:
#line 2677 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 862:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 863:
#line 2679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 864:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 865:
#line 2681 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 866:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 867:
#line 2683 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 868:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 869:
#line 2685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 870:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 871:
#line 2687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 872:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 873:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 874:
#line 2694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 875:
#line 2699 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 876:
#line 2701 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 877:
#line 2706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 878:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 879:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 880:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 881:
#line 2714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 882:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 883:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 884:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 885:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 886:
#line 2736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 887:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 888:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 889:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 890:
#line 2755 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 891:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 892:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 893:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 894:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 895:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 896:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 897:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 898:
#line 2800 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 899:
#line 2801 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 900:
#line 2802 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 901:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 902:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 903:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 904:
#line 2806 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 905:
#line 2807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 906:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 907:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 908:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 909:
#line 2835 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 910:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 911:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 912:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 913:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 914:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 915:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 916:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 917:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 918:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 919:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 920:
#line 2896 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 921:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 922:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 923:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 924:
#line 2918 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 925:
#line 2931 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 926:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 927:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 928:
#line 2947 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 929:
#line 2948 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 930:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 931:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 932:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 933:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 934:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 935:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 936:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 937:
#line 2983 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 938:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 939:
#line 2994 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 940:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 941:
#line 2999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 942:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 943:
#line 3004 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 946:
#line 3018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 947:
#line 3019 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 948:
#line 3023 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 949:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 950:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 951:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 952:
#line 3052 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 953:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 954:
#line 3081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 955:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 956:
#line 3094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 957:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 958:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 959:
#line 3127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 960:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 962:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 963:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 964:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 965:
#line 3161 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 966:
#line 3165 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 967:
#line 3169 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 968:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 969:
#line 3182 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 970:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 971:
#line 3221 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 972:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 973:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 974:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 975:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 976:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 977:
#line 3245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 978:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 979:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 980:
#line 3267 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 981:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 982:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 983:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 984:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 985:
#line 3278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 986:
#line 3279 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 987:
#line 3280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 988:
#line 3283 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 989:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 990:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 991:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 992:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 993:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 995:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 996:
#line 3307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 997:
#line 3308 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 998:
#line 3309 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 999:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1000:
#line 3313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1001:
#line 3314 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1002:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1003:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1004:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1009:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1010:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1012:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1017:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1018:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1019:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1020:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1021:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1022:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1023:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1024:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1025:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1026:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1027:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1028:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1029:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1030:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1031:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1032:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1033:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1034:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1035:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1036:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1037:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1038:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1039:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1040:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1041:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1042:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1043:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1044:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1045:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1046:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1047:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1053:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1054:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1055:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1056:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1057:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1058:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1059:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1060:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1061:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1062:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1063:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1064:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1065:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1066:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1067:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1068:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1069:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1070:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1071:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1072:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1073:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1074:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1075:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1076:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1077:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1078:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1079:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1080:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1081:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1082:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1083:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1084:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1085:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1086:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1087:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1088:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1089:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1090:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1091:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1092:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1093:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1094:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1095:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1096:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1097:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1100:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1101:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1102:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1103:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1104:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1105:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1106:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1107:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1108:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1109:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1110:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1111:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1112:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1113:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1114:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1115:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1116:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1117:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1118:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1119:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1120:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1121:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1122:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1123:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1124:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1125:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1126:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1127:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1128:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1129:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1132:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1133:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1134:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1135:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1136:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1137:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1138:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1139:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1140:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1141:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1142:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1143:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1144:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1145:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1146:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1147:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1148:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22421 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
