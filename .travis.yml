language: cpp
script: make unit
dist: trusty

env:
  global:
    - CIBW_BUILD='cp37-*'
    - CIBW_SKIP='*-manylinux1_i686 *-win32'
    - CIBW_TEST_REQUIRES='pytest'
    - CIBW_BEFORE_BUILD='pip install "numpy>=1.16" && pip install "pandas>=0.24" && pip install "pytest>=4.3" && pip install cmake'
    - CIBW_TEST_COMMAND='python -m pytest {project}/tests'

matrix:
  include:

    - os: osx
      name: Xcode 6.4
      osx_image: xcode9.1


    - os: osx
      name: Xcode 10.2
      osx_image: xcode10.2


    - os: linux
      name: Clang 6
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    - os: linux
      name: GCC 4.9
      addons:
         apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9 binutils-2.26
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      dist: xenial
      name: GCC 8

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      dist: xenial
      name: All Unit Tests

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      script:
        - make opt
        - build/release/test/unittest "*"

    - os: linux
      dist: xenial
      name: Code Coverage

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

      before_install: pip install --user cpp-coveralls

      script: 
        - mkdir -p build/coverage
        - (cd build/coverage && cmake -E env CXXFLAGS="--coverage" cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make)
        - build/coverage/test/unittest

      after_success:
        - coveralls -b build/coverage --exclude tools --exclude benchmark --exclude examples --exclude third_party --exclude test --gcov-options '\-lp'

    - os: windows
      name: VS 2017
      filter_secrets: false

      language: c

      script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_GENERATOR_PLATFORM=x64
        - cmake --build . --target unittest
        - test/Debug/unittest.exe


    # - os: linux
    #   name: Python Package

    #   dist: xenial
    #   language: python
    #   python: 3.7

    #   before_script:
    #     - pip3 install "numpy>=1.16" && pip install "pandas>=0.24" && pip install "pytest>=4.3"
    #     - cd tools/pythonpkg

    #   script:
    #     - python3 setup.py install
    #     - python3 -m pytest tests


    # - os: osx
    #   name: Python Package
    #   osx_image: xcode10.1

    #   language: c
    #   #python: 3.7

    #   before_script:
    #     - pip3 install --user "numpy>=1.16" "pandas>=0.24" "pytest>=4.3"
    #     - cd tools/pythonpkg

    #   script:
    #     - python3 setup.py install
    #     - python3 -m pytest tests


    # - os: windows
    #   name: Python Package

    #   language: cpp

    #   before_install: 
    #     - choco install python --version 3.7.3
    #     - c:/python37/python.exe -m pip install --upgrade pip
    #     - c:/python37/python.exe -m pip install "numpy>=1.16" "pandas>=0.24" "pytest>=4.3"

    #   script:
    #     - cd tools/pythonpkg
    #     - c:/python37/python.exe setup.py install
    #     - c:/python37/python.exe -m pytest tests


    - os: linux
      name: R Package

      dist: xenial
      language: r
      r: devel

      before_install:
        - pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./build-tarball.sh
        -  R CMD INSTALL duckdb_*.tar.gz

      script:
        - (cd tests && R -f testthat.R)
        - python ../upload-s3.py rstats duckdb_*.tar.gz

    - os: osx
      osx_image: xcode10.1
      name: R Package

      language: r
      #r: devel

      before_install:
        - pip install --user boto3
        - cd tools/rpkg
        - R -f dependencies.R

      install:
        - ./build-tarball.sh
        - R CMD INSTALL --build duckdb_*.tar.gz
        - R CMD INSTALL duckdb_*.tgz

      script:
        - (cd tests && R -f testthat.R)
        - python ../upload-s3.py rstats duckdb_*.tgz

    - os: windows
      name: R Package
      filter_secrets: false

      language: cpp

      before_script:
        - choco install r.project -y --version 3.6.0
        - wget "https://github.com/hannesmuehleisen/choco-rtools/raw/master/rtools.3.5.0.nupkg"
        - choco install rtools -s rtools.3.5.0.nupkg -f -y
        - choco install python3 --version 3.7.3 -y --params "/InstallDir:C:\Python37-x64"
        - C:/Python37-x64/python.exe -m pip install boto3

      script:
        - export "PATH=/c/Rtools/bin:$PATH"
        - cd tools/rpkg
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -f dependencies.R
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe CMD INSTALL --no-multiarch .
        - cd tests
        - C:/Program\ Files/R/R-3.6.0/bin/R.exe -f testthat.R

    - os: linux
      name: Python Package

      dist: xenial
      language: python
      python: 3.7

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl tools/pythonpkg/dist/duckdb-*.tar.gz

    - os: osx
      name: Python Package
      language: generic
      osx_image: xcode10.2

      script:
        - pip install cibuildwheel==0.10.2 boto3
        - cd tools/pythonpkg
        - python setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - cibuildwheel --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        python tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl

    - os: windows
      name: Python Package
      language: cpp
      filter_secrets: false

      before_install:
        - choco install python3 --version 3.7.3 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python37"
        - choco install python3 --version 3.7.3 --sidebyside -y --force --params "/InstallDir:C:\Python37-x64"
#        - choco install python3 --version 3.6.8 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python36"
#        - choco install python3 --version 3.6.8 --sidebyside -y --force --params "/InstallDir:C:\Python36-x64"
        - choco install python2 --version 2.7.16 --sidebyside -y --forcex86 --force --params "/InstallDir:C:\Python27"
        - choco install python2 --version 2.7.16 --sidebyside -y --force --params "/InstallDir:C:\Python27-x64"

        - C:/Python37-x64/python.exe -m pip install --upgrade pip
        - C:/Python37-x64/python.exe -m pip install "cibuildwheel==0.10.2" boto3
        - C:/Python37-x64/python.exe -m pip install "numpy>=1.16" "pandas>=0.24" "pytest>=4.3"

      script:
        - cd tools/pythonpkg
        - C:/Python37-x64/python.exe  setup.py sdist
        - mkdir duckdb_tarball && tar xvf dist/duckdb-*.tar.gz --strip-components=1 -C duckdb_tarball
        - C:/Python37-x64/python.exe -m cibuildwheel --platform windows --output-dir wheelhouse duckdb_tarball
        - cd ../..
      after_success:
        C:/Python37-x64/python.exe tools/upload-s3.py python tools/pythonpkg/wheelhouse/*.whl

before_install:
  - eval "${MATRIX_EVAL}"
