on: [push]

jobs:
  win-debug:
    name: Windows Debug
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Build
      shell: bash
      run: |
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_GENERATOR_PLATFORM=x64 -DISABLE_UNITY=1 -DBUILD_ICU_EXTENSION=1 -DBUILD_PARQUET_EXTENSION=1 -DBUILD_TPCH_EXTENSION=1 -DBUILD_REST=1 -DJDBC_DRIVER=1
        cmake --build . --target unittest --config Debug

    - name: Test
      shell: bash
      run: test/Debug/unittest.exe


  win-release:
    name: Windows Release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7'
      
    - name: Build
      shell: bash
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 -DBUILD_ICU_EXTENSION=1 -DBUILD_PARQUET_EXTENSION=1 -DBUILD_TPCH_EXTENSION=1 -DBUILD_REST=1 -DJDBC_DRIVER=1
        cmake --build . --target duckdb --config Release
        cmake --build . --target unittest --config Release
        cmake --build . --target shell --config Release
        cmake --build . --target jdbc --config Release

    - name: Test
      shell: bash
      run: test/Release/unittest.exe

    - name: Tools Test
      shell: bash
      run: |
        python tools/shell/shell-test.py Release/duckdb.exe
        java -cp tools/jdbc/duckdb_jdbc.jar org.duckdb.test.TestDuckDBJDBC

    - name: Packaging and Upload
      shell: bash
      run: |
        zip -j duckdb_cli-windows-amd64.zip Release/duckdb.exe
        zip -j libduckdb-windows-amd64.zip src/Release/duckdb.dll src/amalgamation/duckdb.hpp src/include/duckdb.h

     
  xcode-release:
    name: OSX Release
    runs-on: macos-latest
    
    env:
      BUILD_ICU_EXTENSION: 1
      BUILD_TPCH_EXTENSION: 1
      BUILD_REST: 1
      JDBC_DRIVER: 1

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Build
      shell: bash
      run: make

    - name: Unit Test
      shell: bash
      run: make allunit

    - name: Tools Tests
      shell: bash
      run: |
        python tools/shell/shell-test.py build/release/duckdb
        python tools/rest/test_the_rest.py build/release/tools/rest
        java -cp build/release/tools/jdbc/duckdb_jdbc.jar org.duckdb.test.TestDuckDBJDBC

    - name: Examples
      shell: bash
      run: |
        (cd examples/embedded-c; make)
        (cd examples/embedded-c++; make)
        (cd examples/jdbc; make; make maven)

    - name: Packaging and Upload
      shell: bash
      run: |
        zip -j duckdb_cli-osx-amd64.zip build/release/duckdb
        zip -j libduckdb-osx-amd64.zip build/release/src/libduckdb*.dylib src/amalgamation/duckdb.hpp src/include/duckdb.h

  xcode-debug:
    name: OSX Debug
    runs-on: macos-latest
    
    env:
      TREAT_WARNINGS_AS_ERRORS: 1
      DISABLE_UNITY: 1

    steps:
    - uses: actions/checkout@v2
  
    - name: Build
      shell: bash
      run: make debug

    - name: Test
      shell: bash
      run: make unit
      

  gcc-release:
    name: GCC10 Release
    runs-on: ubuntu-latest
    
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
      BUILD_ICU_EXTENSION: 1
      BUILD_TPCH_EXTENSION: 1
      BUILD_REST: 1
      JDBC_DRIVER: 1

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    
    - name: Install
      shell: bash
      run: sudo apt-get install ninja-build

    - name: Build
      shell: bash
      run: make

    - name: Test
      shell: bash
      run: make allunit

    - name: Tools Tests
      shell: bash
      run: |
        python tools/shell/shell-test.py build/release/duckdb
        python tools/rest/test_the_rest.py build/release/tools/rest
        java -cp build/release/tools/jdbc/duckdb_jdbc.jar org.duckdb.test.TestDuckDBJDBC

    - name: Examples
      shell: bash
      run: |
        (cd examples/embedded-c; make)
        (cd examples/embedded-c++; make)
        (cd examples/jdbc; make; make maven)

    - name: Packaging and Upload
      shell: bash
      run: |
        zip -j duckdb_cli-linux-amd64.zip build/release/duckdb
        zip -j libduckdb-linux-amd64.zip build/release/src/libduckdb*.so src/amalgamation/duckdb.hpp src/include/duckdb.h
        zip -j libduckdb-src.zip src/amalgamation/duckdb.hpp src/amalgamation/duckdb.cpp src/include/duckdb.h

      
  gcc-debug:
    name: GCC10 Debug
    runs-on: ubuntu-latest
    
    env:
      CC: gcc-10
      CXX: g++-10
      TREAT_WARNINGS_AS_ERRORS: 1
      DISABLE_UNITY: 1
      GEN: ninja

    steps:
    - uses: actions/checkout@v2
    
    - name: Install
      shell: bash
      run: sudo apt-get install ninja-build

    - name: Build
      shell: bash
      run: make debug

    - name: Test
      shell: bash
      run: make unit



  valgrind:
    name: Valgrind
    runs-on: ubuntu-latest
    
    env:
      CC: gcc-10
      CXX: g++-10
      DISABLE_SANITIZER: 1
      GEN: ninja

    steps:
    - uses: actions/checkout@v2
    
    - name: Install
      shell: bash
      run: sudo apt-get install ninja-build valgrind

    - name: Build
      shell: bash
      run: |
        make debug
        valgrind ./build/debug/test/unittest -s "Test TPC-H SF0.01"


  vector-sizes:
    name: Vector Sizes
    runs-on: ubuntu-latest
    
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Test
      shell: bash
      run: python scripts/test_vector_sizes.py


  sqllogic:
    name: Sqllogic tests
    runs-on: ubuntu-latest
    
    env:
      CC: gcc-10
      CXX: g++-10

    steps:
    - uses: actions/checkout@v2

    - name: Test
      shell: bash
      run: make sqlite




